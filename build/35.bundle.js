(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[35],{

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js ***!
  \***************************************************************************************************************/
/*! exports provided: TextEdit, Range, getCSSLanguageService, getSCSSLanguageService, getLESSLanguageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCSSLanguageService\", function() { return getCSSLanguageService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSCSSLanguageService\", function() { return getSCSSLanguageService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLESSLanguageService\", function() { return getLESSLanguageService; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"]; });\n\n/* harmony import */ var _parser_cssParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/cssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _services_cssCompletion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/cssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _services_cssHover_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/cssHover.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js\");\n/* harmony import */ var _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/cssNavigation.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js\");\n/* harmony import */ var _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/cssCodeActions.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js\");\n/* harmony import */ var _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/cssValidation.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js\");\n/* harmony import */ var _parser_scssParser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parser/scssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js\");\n/* harmony import */ var _services_scssCompletion_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services/scssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js\");\n/* harmony import */ var _parser_lessParser_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parser/lessParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js\");\n/* harmony import */ var _services_lessCompletion_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./services/lessCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction createFacade(parser, completion, hover, navigation, codeActions, validation) {\n    return {\n        configure: validation.configure.bind(validation),\n        doValidation: validation.doValidation.bind(validation),\n        parseStylesheet: parser.parseStylesheet.bind(parser),\n        doComplete: completion.doComplete.bind(completion),\n        setCompletionParticipants: completion.setCompletionParticipants.bind(completion),\n        doHover: hover.doHover.bind(hover),\n        findDefinition: navigation.findDefinition.bind(navigation),\n        findReferences: navigation.findReferences.bind(navigation),\n        findDocumentHighlights: navigation.findDocumentHighlights.bind(navigation),\n        findDocumentSymbols: navigation.findDocumentSymbols.bind(navigation),\n        doCodeActions: codeActions.doCodeActions.bind(codeActions),\n        findColorSymbols: function (d, s) { return navigation.findDocumentColors(d, s).map(function (s) { return s.range; }); },\n        findDocumentColors: navigation.findDocumentColors.bind(navigation),\n        getColorPresentations: navigation.getColorPresentations.bind(navigation),\n        doRename: navigation.doRename.bind(navigation),\n    };\n}\nfunction getCSSLanguageService() {\n    return createFacade(new _parser_cssParser_js__WEBPACK_IMPORTED_MODULE_1__[\"Parser\"](), new _services_cssCompletion_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSCompletion\"](), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSHover\"](), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSNavigation\"](), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSCodeActions\"](), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_6__[\"CSSValidation\"]());\n}\nfunction getSCSSLanguageService() {\n    return createFacade(new _parser_scssParser_js__WEBPACK_IMPORTED_MODULE_7__[\"SCSSParser\"](), new _services_scssCompletion_js__WEBPACK_IMPORTED_MODULE_8__[\"SCSSCompletion\"](), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSHover\"](), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSNavigation\"](), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSCodeActions\"](), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_6__[\"CSSValidation\"]());\n}\nfunction getLESSLanguageService() {\n    return createFacade(new _parser_lessParser_js__WEBPACK_IMPORTED_MODULE_9__[\"LESSParser\"](), new _services_lessCompletion_js__WEBPACK_IMPORTED_MODULE_10__[\"LESSCompletion\"](), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSHover\"](), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSNavigation\"](), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSCodeActions\"](), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_6__[\"CSSValidation\"]());\n}\n//# sourceMappingURL=cssLanguageService.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js ***!
  \**********************************************************************************************************/
/*! exports provided: data, descriptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"data\", function() { return data; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"descriptions\", function() { return descriptions; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// file generated from css-schema.xml using css-exclude_generate_browserjs.js\nvar data = {\n    \"css\": {\n        \"atdirectives\": [\n            {\n                name: \"@charset\",\n                desc: \"Defines character set of the document.\"\n            },\n            {\n                name: \"@counter-style\",\n                desc: \"Defines a custom counter style.\",\n                browsers: \"FF33\"\n            },\n            {\n                name: \"@font-face\",\n                desc: \"Allows for linking to fonts that are automatically activated when needed. This permits authors to work around the limitation of 'web-safe' fonts, allowing for consistent rendering independent of the fonts available in a given user's environment.\"\n            },\n            {\n                name: \"@font-feature-values\",\n                desc: \"Defines named values for the indices used to select alternate glyphs for a given font family.\",\n                browsers: \"FF34\"\n            },\n            {\n                name: \"@import\",\n                desc: \"Includes content of another file.\"\n            },\n            {\n                name: \"@keyframes\",\n                desc: \"Defines set of animation key frames.\",\n                browsers: \"E,C43,FF16,IE10,O30,S9\"\n            },\n            {\n                name: \"@media\",\n                desc: \"Defines a stylesheet for a particular media type.\"\n            },\n            {\n                name: \"@-moz-document\",\n                desc: \"Gecko-specific at-rule that restricts the style rules contained within it based on the URL of the document.\",\n                browsers: \"FF1.8\"\n            },\n            {\n                name: \"@-moz-keyframes\",\n                desc: \"Defines set of animation key frames.\",\n                browsers: \"FF5\"\n            },\n            {\n                name: \"@-ms-viewport\",\n                desc: \"Specifies the size, zoom factor, and orientation of the viewport.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"@namespace\",\n                desc: \"Declares a prefix and associates it with a namespace name.\",\n                browsers: \"E,C,FF1,IE9,O8,S1\"\n            },\n            {\n                name: \"@-o-keyframes\",\n                desc: \"Defines set of animation key frames.\",\n                browsers: \"O12\"\n            },\n            {\n                name: \"@-o-viewport\",\n                desc: \"Specifies the size, zoom factor, and orientation of the viewport.\",\n                browsers: \"O11\"\n            },\n            {\n                name: \"@page\",\n                desc: \"Directive defines various page parameters.\"\n            },\n            {\n                name: \"@supports\",\n                desc: \"A conditional group rule whose condition tests whether the user agent supports CSS property:value pairs.\",\n                browsers: \"E,C28,FF22,O12.1,S9\"\n            },\n            {\n                name: \"@-webkit-keyframes\",\n                desc: \"Defines set of animation key frames.\",\n                browsers: \"C,S4\"\n            }\n        ],\n        \"pseudoclasses\": [\n            {\n                name: \":active\",\n                desc: \"Applies while an element is being activated by the user. For example, between the times the user presses the mouse button and releases it.\"\n            },\n            {\n                name: \":any-link\",\n                desc: \"Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.\",\n                browsers: \"S9\"\n            },\n            {\n                name: \":checked\",\n                desc: \"Radio and checkbox elements can be toggled by the user. Some menu items are 'checked' when the user selects them. When such elements are toggled 'on' the :checked pseudo-class applies.\",\n                browsers: \"E,C,FF1,IE9,O9,S3.13\"\n            },\n            {\n                name: \":corner-present\",\n                desc: \"Non-standard. Indicates whether or not a scrollbar corner is present.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":decrement\",\n                desc: \"Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will decrement the view’s position when used.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":default\",\n                desc: \"Applies to the one or more UI elements that are the default among a set of similar elements. Typically applies to context menu items, buttons, and select lists/menus.\",\n                browsers: \"C,FF3,O10,S5\"\n            },\n            {\n                name: \":disabled\",\n                desc: \"Represents user interface elements that are in a disabled state; such elements have a corresponding enabled state.\",\n                browsers: \"E,C,FF1.5,IE9,O9,S3.1\"\n            },\n            {\n                name: \":double-button\",\n                desc: \"Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed together at the same end of the scrollbar.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":empty\",\n                desc: \"Represents an element that has no children at all.\",\n                browsers: \"E,C,FF1.5,IE9,O9,S3.1\"\n            },\n            {\n                name: \":enabled\",\n                desc: \"Represents user interface elements that are in an enabled state; such elements have a corresponding disabled state.\",\n                browsers: \"E,C,FF1.5,IE9,O9,S3.1\"\n            },\n            {\n                name: \":end\",\n                desc: \"Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed after the thumb.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":first\",\n                desc: \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n            },\n            {\n                name: \":first-child\",\n                desc: \"Same as :nth-child(1). Represents an element that is the first child of some other element.\",\n                browsers: \"E,C,FF3,IE7,O9.5,S3.1\"\n            },\n            {\n                name: \":first-of-type\",\n                desc: \"Same as :nth-of-type(1). Represents an element that is the first sibling of its type in the list of children of its parent element.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.2\"\n            },\n            {\n                name: \":focus\",\n                desc: \"Applies while an element has the focus (accepts keyboard or mouse events, or other forms of input).\"\n            },\n            {\n                name: \":fullscreen\",\n                desc: \"Matches any element that has its fullscreen flag set.\",\n                browsers: \"E\"\n            },\n            {\n                name: \":future\",\n                desc: \"Represents any element that is defined to occur entirely after a :current element.\",\n                browsers: \"C,O16,S6\"\n            },\n            {\n                name: \":horizontal\",\n                desc: \"Non-standard. Applies to any scrollbar pieces that have a horizontal orientation.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":host\",\n                desc: \"When evaluated in the context of a shadow tree, matches the shadow tree’s host element.\",\n                browsers: \"C35,O22\"\n            },\n            {\n                name: \":host()\",\n                desc: \"When evaluated in the context of a shadow tree, it matches the shadow tree’s host element if the host element, in its normal context, matches the selector argument.\",\n                browsers: \"C35,O22\"\n            },\n            {\n                name: \":host-context()\",\n                desc: \"Tests whether there is an ancestor, outside the shadow tree, which matches a particular selector.\",\n                browsers: \"C35,O22\"\n            },\n            {\n                name: \":hover\",\n                desc: \"Applies while the user designates an element with a pointing device, but does not necessarily activate it. For example, a visual user agent could apply this pseudo-class when the cursor (mouse pointer) hovers over a box generated by the element.\"\n            },\n            {\n                name: \":increment\",\n                desc: \"Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will increment the view’s position when used.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":indeterminate\",\n                desc: \"Applies to UI elements whose value is in an indeterminate state.\",\n                browsers: \"E,C,FF3.6,IE9,O10.6,S3\"\n            },\n            {\n                name: \":in-range\",\n                desc: \"Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.\",\n                browsers: \"E13,C,FF10,O9.6,S5.1\"\n            },\n            {\n                name: \":invalid\",\n                desc: \"An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.\",\n                browsers: \"E,C,FF4,IE10,O10,S5\"\n            },\n            {\n                name: \":lang()\",\n                desc: \"Represents an element that is in language specified.\",\n                browsers: \"E,C,FF1,IE8,O8,S3\"\n            },\n            {\n                name: \":last-child\",\n                desc: \"Same as :nth-last-child(1). Represents an element that is the last child of some other element.\",\n                browsers: \"E,C,FF1,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":last-of-type\",\n                desc: \"Same as :nth-last-of-type(1). Represents an element that is the last sibling of its type in the list of children of its parent element.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":left\",\n                desc: \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n            },\n            {\n                name: \":link\",\n                desc: \"Applies to links that have not yet been visited.\"\n            },\n            {\n                name: \":matches()\",\n                desc: \"Takes a selector list as its argument. It represents an element that is represented by its argument.\",\n                browsers: \"S9\"\n            },\n            {\n                name: \":-moz-any()\",\n                desc: \"Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-moz-any-link\",\n                desc: \"Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \":-moz-broken\",\n                desc: \"Non-standard. Matches elements representing broken images.\",\n                browsers: \"FF3\"\n            },\n            {\n                name: \":-moz-drag-over\",\n                desc: \"Non-standard. Matches elements when a drag-over event applies to it.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \":-moz-first-node\",\n                desc: \"Non-standard. Represents an element that is the first child node of some other element.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \":-moz-focusring\",\n                desc: \"Non-standard. Matches an element that has focus and focus ring drawing is enabled in the browser.\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-moz-full-screen\",\n                desc: \"Matches any element that has its fullscreen flag set. Standardized as :fullscreen.\",\n                browsers: \"FF9\"\n            },\n            {\n                name: \":-moz-last-node\",\n                desc: \"Non-standard. Represents an element that is the last child node of some other element.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \":-moz-loading\",\n                desc: \"Non-standard. Matches elements, such as images, that haven’t started loading yet.\",\n                browsers: \"FF3\"\n            },\n            {\n                name: \":-moz-only-whitespace\",\n                desc: \"The same as :empty, except that it additionally matches elements that only contain code points affected by whitespace processing. Standardized as :blank.\",\n                browsers: \"FF1.5\"\n            },\n            {\n                name: \":-moz-placeholder\",\n                desc: \"Deprecated. Represents placeholder text in an input field. Use ::-moz-placeholder for Firefox 19+.\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-moz-submit-invalid\",\n                desc: \"Non-standard. Represents any submit button when the contents of the associated form are not valid.\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-moz-suppressed\",\n                desc: \"Non-standard. Matches elements representing images that have been blocked from loading.\",\n                browsers: \"FF3\"\n            },\n            {\n                name: \":-moz-ui-invalid\",\n                desc: \"Non-standard. Represents any validated form element whose value isn't valid \",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-moz-ui-valid\",\n                desc: \"Non-standard. Represents any validated form element whose value is valid \",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-moz-user-disabled\",\n                desc: \"Non-standard. Matches elements representing images that have been disabled due to the user’s preferences.\",\n                browsers: \"FF3\"\n            },\n            {\n                name: \":-moz-window-inactive\",\n                desc: \"Non-standard. Matches elements in an inactive window.\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \":-ms-fullscreen\",\n                desc: \"Matches any element that has its fullscreen flag set.\",\n                browsers: \"IE11\"\n            },\n            {\n                name: \":-ms-input-placeholder\",\n                desc: \"Represents placeholder text in an input field. Note: for Edge use the pseudo-element ::-ms-input-placeholder. Standardized as ::placeholder.\",\n                browsers: \"IE10\"\n            },\n            {\n                name: \":-ms-keyboard-active\",\n                desc: \"Windows Store apps only. Applies one or more styles to an element when it has focus and the user presses the space bar.\",\n                browsers: \"IE10\"\n            },\n            {\n                name: \":-ms-lang()\",\n                desc: \"Represents an element that is in the language specified. Accepts a comma seperated list of language tokens.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \":no-button\",\n                desc: \"Non-standard. Applies to track pieces. Applies when there is no button at that end of the track.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":not()\",\n                desc: \"The negation pseudo-class, :not(X), is a functional notation taking a simple selector (excluding the negation pseudo-class itself) as an argument. It represents an element that is not represented by its argument.\",\n                browsers: \"E,C,FF1,IE9,O9.5,S2\"\n            },\n            {\n                name: \":nth-child()\",\n                desc: \"Represents an element that has an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":nth-last-child()\",\n                desc: \"Represents an element that has an+b-1 siblings after it in the document tree, for any positive integer or zero value of n, and has a parent element.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":nth-last-of-type()\",\n                desc: \"Represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":nth-of-type()\",\n                desc: \"Represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":only-child\",\n                desc: \"Represents an element that has a parent element and whose parent element has no other element children. Same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity.\",\n                browsers: \"E,C,FF1.5,IE9,O9.5,S3.1\"\n            },\n            {\n                name: \":only-of-type\",\n                desc: \"Matches every element that is the only child of its type, of its parent. Same as :first-of-type:last-of-type or :nth-of-type(1):nth-last-of-type(1), but with a lower specificity.\",\n                browsers: \"E,C,FF3.5,IE9,O9.5,S3.2\"\n            },\n            {\n                name: \":optional\",\n                desc: \"A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.\",\n                browsers: \"E,C,FF4,IE10,O10,S5\"\n            },\n            {\n                name: \":out-of-range\",\n                desc: \"Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.\",\n                browsers: \"E13,C,FF10,O9.6,S5.1\"\n            },\n            {\n                name: \":past\",\n                desc: \"Represents any element that is defined to occur entirely prior to a :current element.\",\n                browsers: \"C,O16,S6\"\n            },\n            {\n                name: \":read-only\",\n                desc: \"An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.\",\n                browsers: \"E13,C,FF10,O9,S4\"\n            },\n            {\n                name: \":read-write\",\n                desc: \"An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.\",\n                browsers: \"E13,C,FF10,O9,S4\"\n            },\n            {\n                name: \":required\",\n                desc: \"A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.\",\n                browsers: \"E,C,FF4,IE10,O10,S5\"\n            },\n            {\n                name: \":right\",\n                desc: \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n            },\n            {\n                name: \":root\",\n                desc: \"Represents an element that is the root of the document. In HTML 4, this is always the HTML element.\",\n                browsers: \"E,C,FF1,IE9,O9.5,S1\"\n            },\n            {\n                name: \":scope\",\n                desc: \"Represents any element that is in the contextual reference element set.\",\n                browsers: \"FF32,S6\"\n            },\n            {\n                name: \":single-button\",\n                desc: \"Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed separately at either end of the scrollbar.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":start\",\n                desc: \"Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed before the thumb.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":target\",\n                desc: \"Some URIs refer to a location within a resource. This kind of URI ends with a 'number sign' (#) followed by an anchor identifier (called the fragment identifier).\",\n                browsers: \"E,C,FF1,IE9,O9.5,S1\"\n            },\n            {\n                name: \":valid\",\n                desc: \"An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.\",\n                browsers: \"E,C,FF4,IE10,O10,S5\"\n            },\n            {\n                name: \":vertical\",\n                desc: \"Non-standard. Applies to any scrollbar pieces that have a vertical orientation.\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":visited\",\n                desc: \"Applies once the link has been visited by the user.\"\n            },\n            {\n                name: \":-webkit-any()\",\n                desc: \"Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \":-webkit-full-screen\",\n                desc: \"Matches any element that has its fullscreen flag set. Standardized as :fullscreen.\",\n                browsers: \"C,S6\"\n            },\n            {\n                name: \":window-inactive\",\n                desc: \"Non-standard. Applies to all scrollbar pieces. Indicates whether or not the window containing the scrollbar is currently active.\",\n                browsers: \"C,S3\"\n            }\n        ],\n        \"pseudoelements\": [\n            {\n                name: \"::after\",\n                desc: \"Represents a styleable child pseudo-element immediately after the originating element’s actual content.\",\n                browsers: \"E,C,FF1.5,IE9,O9,S4\"\n            },\n            {\n                name: \"::backdrop\",\n                desc: \"Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).\",\n                browsers: \"E\"\n            },\n            {\n                name: \"::before\",\n                desc: \"Represents a styleable child pseudo-element immediately before the originating element’s actual content.\",\n                browsers: \"E,C,FF1.5,IE9,O9,S4\"\n            },\n            {\n                name: \"::content\",\n                desc: \"Deprecated. Matches the distribution list itself, on elements that have one. Use ::slotted for forward compatibility.\",\n                browsers: \"C35,O22\"\n            },\n            {\n                name: \"::cue\",\n                browsers: \"C,O16,S6\"\n            },\n            {\n                name: \"::cue()\",\n                browsers: \"C,O16,S6\"\n            },\n            {\n                name: \"::cue-region\",\n                browsers: \"C,O16,S6\"\n            },\n            {\n                name: \"::cue-region()\",\n                browsers: \"C,O16,S6\"\n            },\n            {\n                name: \"::first-letter\",\n                desc: \"Represents the first letter of an element, if it is not preceded by any other content (such as images or inline tables) on its line.\",\n                browsers: \"E,C,FF1.5,IE9,O7,S1\"\n            },\n            {\n                name: \"::first-line\",\n                desc: \"Describes the contents of the first formatted line of its originating element.\",\n                browsers: \"E,C,FF1.5,IE9,O7,S1\"\n            },\n            {\n                name: \"::-moz-focus-inner\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \"::-moz-focus-outer\",\n                browsers: \"FF4\"\n            },\n            {\n                name: \"::-moz-list-bullet\",\n                desc: \"Used to style the bullet of a list element. Similar to the standardized ::marker.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \"::-moz-list-number\",\n                desc: \"Used to style the numbers of a list element. Similar to the standardized ::marker.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \"::-moz-placeholder\",\n                desc: \"Represents placeholder text in an input field\",\n                browsers: \"FF19\"\n            },\n            {\n                name: \"::-moz-progress-bar\",\n                desc: \"Represents the bar portion of a progress bar.\",\n                browsers: \"FF9\"\n            },\n            {\n                name: \"::-moz-selection\",\n                desc: \"Represents the portion of a document that has been highlighted by the user.\",\n                browsers: \"FF1\"\n            },\n            {\n                name: \"::-ms-backdrop\",\n                desc: \"Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).\",\n                browsers: \"IE11\"\n            },\n            {\n                name: \"::-ms-browse\",\n                desc: \"Represents the browse button of an input type=file control.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-check\",\n                desc: \"Represents the check of a checkbox or radio button input control.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-clear\",\n                desc: \"Represents the clear button of a text input control\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-expand\",\n                desc: \"Represents the drop-down button of a select control.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-fill\",\n                desc: \"Represents the bar portion of a progress bar.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-fill-lower\",\n                desc: \"Represents the portion of the slider track from its smallest value up to the value currently selected by the thumb. In a left-to-right layout, this is the portion of the slider track to the left of the thumb.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-fill-upper\",\n                desc: \"Represents the portion of the slider track from the value currently selected by the thumb up to the slider's largest value. In a left-to-right layout, this is the portion of the slider track to the right of the thumb.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-reveal\",\n                desc: \"Represents the password reveal button of an input type=password control.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-thumb\",\n                desc: \"Represents the portion of range input control (also known as a slider control) that the user drags.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-ticks-after\",\n                desc: \"Represents the tick marks of a slider that begin just after the thumb and continue up to the slider's largest value. In a left-to-right layout, these are the ticks to the right of the thumb.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-ticks-before\",\n                desc: \"Represents the tick marks of a slider that represent its smallest values up to the value currently selected by the thumb. In a left-to-right layout, these are the ticks to the left of the thumb.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-tooltip\",\n                desc: \"Represents the tooltip of a slider (input type=range).\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-track\",\n                desc: \"Represents the track of a slider.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::-ms-value\",\n                desc: \"Represents the content of a text or password input control, or a select control.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"::selection\",\n                desc: \"Represents the portion of a document that has been highlighted by the user.\",\n                browsers: \"E,C,IE9,O9.5,S1.1\"\n            },\n            {\n                name: \"::shadow\",\n                desc: \"Matches the shadow root if an element has a shadow tree.\",\n                browsers: \"C35,O22\"\n            },\n            {\n                name: \"::-webkit-file-upload-button\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-inner-spin-button\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-input-placeholder\",\n                browsers: \"C,S4\"\n            },\n            {\n                name: \"::-webkit-keygen-select\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-meter-bar\",\n                browsers: \"E13,C,O15,S6\"\n            },\n            {\n                name: \"::-webkit-meter-even-less-good-value\",\n                browsers: \"E13,C,O15,S6\"\n            },\n            {\n                name: \"::-webkit-meter-optimum-value\",\n                browsers: \"E13,C,O15,S6\"\n            },\n            {\n                name: \"::-webkit-meter-suboptimal-value\",\n                browsers: \"E13,C,O15,S6\"\n            },\n            {\n                name: \"::-webkit-outer-spin-button\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-progress-bar\",\n                browsers: \"C,S3\"\n            },\n            {\n                name: \"::-webkit-progress-inner-element\",\n                browsers: \"C,S3\"\n            },\n            {\n                name: \"::-webkit-progress-value\",\n                browsers: \"C,S3\"\n            },\n            {\n                name: \"::-webkit-resizer\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-scrollbar\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-scrollbar-button\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-scrollbar-corner\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-scrollbar-thumb\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-scrollbar-track\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-scrollbar-track-piece\",\n                browsers: \"C,S5\"\n            },\n            {\n                name: \"::-webkit-search-cancel-button\",\n                browsers: \"C,S4\"\n            },\n            {\n                name: \"::-webkit-search-decoration\",\n                browsers: \"C,S4\"\n            },\n            {\n                name: \"::-webkit-search-results-button\",\n                browsers: \"C,S4\"\n            },\n            {\n                name: \"::-webkit-search-results-decoration\",\n                browsers: \"C,S4\"\n            },\n            {\n                name: \"::-webkit-slider-runnable-track\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-slider-thumb\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-textfield-decoration-container\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-validation-bubble\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-validation-bubble-arrow\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-validation-bubble-arrow-clipper\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-validation-bubble-heading\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-validation-bubble-message\",\n                browsers: \"C,O,S6\"\n            },\n            {\n                name: \"::-webkit-validation-bubble-text-block\",\n                browsers: \"C,O,S6\"\n            }\n        ],\n        \"properties\": [\n            {\n                name: \"additive-symbols\",\n                desc: \"@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor. Needs to be specified if the counter system is 'additive'.\",\n                browsers: \"FF33\",\n                restriction: \"integer, string, image, identifier\"\n            },\n            {\n                name: \"align-content\",\n                desc: \"Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"Lines are packed toward the center of the flex container.\"\n                    },\n                    {\n                        name: \"flex-end\",\n                        desc: \"Lines are packed toward the end of the flex container.\"\n                    },\n                    {\n                        name: \"flex-start\",\n                        desc: \"Lines are packed toward the start of the flex container.\"\n                    },\n                    {\n                        name: \"space-around\",\n                        desc: \"Lines are evenly distributed in the flex container, with half-size spaces on either end.\"\n                    },\n                    {\n                        name: \"space-between\",\n                        desc: \"Lines are evenly distributed in the flex container.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"Lines stretch to take up the remaining space.\"\n                    }\n                ]\n            },\n            {\n                name: \"align-items\",\n                desc: \"Aligns flex items along the cross axis of the current line of the flex container.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"baseline\",\n                        desc: \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The flex item’s margin box is centered in the cross axis within the line.\"\n                    },\n                    {\n                        name: \"flex-end\",\n                        desc: \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                    },\n                    {\n                        name: \"flex-start\",\n                        desc: \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                    }\n                ]\n            },\n            {\n                name: \"justify-items\",\n                desc: \"Defines the default justify-self for all items of the box, given them the default way of justifying each box along the appropriate axi\",\n                browsers: \"FF45\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"normal\"\n                    },\n                    {\n                        name: \"end\"\n                    },\n                    {\n                        name: \"start\"\n                    },\n                    {\n                        name: \"flex-end\",\n                        desc: \"\\\"Flex items are packed toward the end of the line.\\\"\"\n                    },\n                    {\n                        name: \"flex-start\",\n                        desc: \"\\\"Flex items are packed toward the start of the line.\\\"\"\n                    },\n                    {\n                        name: \"self-end\"\n                    },\n                    {\n                        name: \"self-start\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The items are packed flush to each other toward the center of the of the alignment container.\"\n                    },\n                    {\n                        name: \"left\"\n                    },\n                    {\n                        name: \"right\"\n                    },\n                    {\n                        name: \"baseline\"\n                    },\n                    {\n                        name: \"first baseline\"\n                    },\n                    {\n                        name: \"last baseline\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                    },\n                    {\n                        name: \"save\"\n                    },\n                    {\n                        name: \"unsave\"\n                    },\n                    {\n                        name: \"legacy\"\n                    }\n                ]\n            },\n            {\n                name: \"justify-self\",\n                desc: \"Defines the way of justifying a box inside its container along the appropriate axis.\",\n                browsers: \"FF45\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"normal\"\n                    },\n                    {\n                        name: \"end\"\n                    },\n                    {\n                        name: \"start\"\n                    },\n                    {\n                        name: \"flex-end\",\n                        desc: \"\\\"Flex items are packed toward the end of the line.\\\"\"\n                    },\n                    {\n                        name: \"flex-start\",\n                        desc: \"\\\"Flex items are packed toward the start of the line.\\\"\"\n                    },\n                    {\n                        name: \"self-end\"\n                    },\n                    {\n                        name: \"self-start\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The items are packed flush to each other toward the center of the of the alignment container.\"\n                    },\n                    {\n                        name: \"left\"\n                    },\n                    {\n                        name: \"right\"\n                    },\n                    {\n                        name: \"baseline\"\n                    },\n                    {\n                        name: \"first baseline\"\n                    },\n                    {\n                        name: \"last baseline\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                    },\n                    {\n                        name: \"save\"\n                    },\n                    {\n                        name: \"unsave\"\n                    }\n                ]\n            },\n            {\n                name: \"justify-items\",\n                desc: \"Defines the default justify-self for all items of the box, given them the default way of justifying each box along the appropriate axi\",\n                browsers: \"FF45\",\n                restriction: \"enum\"\n            },\n            {\n                name: \"align-self\",\n                desc: \"Allows the default alignment along the cross axis to be overridden for individual flex items.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself.\"\n                    },\n                    {\n                        name: \"baseline\",\n                        desc: \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The flex item’s margin box is centered in the cross axis within the line.\"\n                    },\n                    {\n                        name: \"flex-end\",\n                        desc: \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                    },\n                    {\n                        name: \"flex-start\",\n                        desc: \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                    }\n                ]\n            },\n            {\n                name: \"all\",\n                desc: \"Shorthand that resets all properties except 'direction' and 'unicode-bidi'.\",\n                browsers: \"C37,FF27,O24\",\n                restriction: \"enum\",\n                values: []\n            },\n            {\n                name: \"alt\",\n                desc: \"Provides alternative text for assistive technology to replace the genenerated content of a ::before or ::after element.\",\n                browsers: \"S9\",\n                restriction: \"string, enum\",\n                values: []\n            },\n            {\n                name: \"animation\",\n                desc: \"Shorthand property combines six of the animation properties into a single property.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"time, timing-function, enum, identifier, number\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"animation-delay\",\n                desc: \"Defines when the animation will start.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"time\"\n            },\n            {\n                name: \"animation-direction\",\n                desc: \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"animation-duration\",\n                desc: \"Defines the length of time that an animation takes to complete one cycle.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"time\"\n            },\n            {\n                name: \"animation-fill-mode\",\n                desc: \"Defines what values are applied by the animation outside the time it is executing.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                    }\n                ]\n            },\n            {\n                name: \"animation-iteration-count\",\n                desc: \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"number, enum\",\n                values: [\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    }\n                ]\n            },\n            {\n                name: \"animation-name\",\n                desc: \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"identifier, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    }\n                ]\n            },\n            {\n                name: \"animation-play-state\",\n                desc: \"Defines whether the animation is running or paused.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"paused\"\n                    },\n                    {\n                        name: \"running\"\n                    }\n                ]\n            },\n            {\n                name: \"animation-timing-function\",\n                desc: \"Describes how the animation will progress over one cycle of its duration.\",\n                browsers: \"E,C43,FF16,IE10,O12.1,S9\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"backface-visibility\",\n                desc: \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n                browsers: \"E,C36,FF16,IE10,O23\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"hidden\",\n                        desc: \"Back side is hidden.\"\n                    },\n                    {\n                        name: \"visible\",\n                        desc: \"Back side is visible.\"\n                    }\n                ]\n            },\n            {\n                name: \"background\",\n                desc: \"Shorthand property for setting most background properties at the same place in the style sheet.\",\n                restriction: \"enum, image, color, position, length, repeat, percentage, box\",\n                values: [\n                    {\n                        name: \"fixed\",\n                        desc: \"The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page.\"\n                    },\n                    {\n                        name: \"local\",\n                        desc: \"The background is fixed with regard to the element's contents: if the element has a scrolling mechanism, the background scrolls with the element's contents.\"\n                    },\n                    {\n                        name: \"scroll\",\n                        desc: \"The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element's border.)\"\n                    }\n                ]\n            },\n            {\n                name: \"background-attachment\",\n                desc: \"Specifies whether the background images are fixed with regard to the viewport ('fixed') or scroll along with the element ('scroll') or its contents ('local').\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"fixed\",\n                        desc: \"The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page.\"\n                    },\n                    {\n                        name: \"local\",\n                        desc: \"The background is fixed with regard to the element’s contents: if the element has a scrolling mechanism, the background scrolls with the element’s contents.\",\n                        browsers: \"E,C,FF25,IE9,O11.5,S5\"\n                    },\n                    {\n                        name: \"scroll\",\n                        desc: \"The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element’s border.)\"\n                    }\n                ]\n            },\n            {\n                name: \"background-blend-mode\",\n                desc: \"Defines the blending mode of each background layer.\",\n                browsers: \"C35,FF30,O22,S7.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"Default attribute which specifies no blending\"\n                    },\n                    {\n                        name: \"multiply\"\n                    },\n                    {\n                        name: \"screen\"\n                    },\n                    {\n                        name: \"overlay\"\n                    },\n                    {\n                        name: \"darken\"\n                    },\n                    {\n                        name: \"lighten\"\n                    },\n                    {\n                        name: \"color-dodge\"\n                    },\n                    {\n                        name: \"color-burn\"\n                    },\n                    {\n                        name: \"hard-light\"\n                    },\n                    {\n                        name: \"soft-light\"\n                    },\n                    {\n                        name: \"difference\"\n                    },\n                    {\n                        name: \"exclusion\"\n                    },\n                    {\n                        name: \"hue\",\n                        browsers: \"C35,FF30,O22\"\n                    },\n                    {\n                        name: \"saturation\",\n                        browsers: \"C35,FF30,O22\"\n                    },\n                    {\n                        name: \"color\",\n                        browsers: \"C35,FF30,O22\"\n                    },\n                    {\n                        name: \"luminosity\",\n                        browsers: \"C35,FF30,O22\"\n                    }\n                ]\n            },\n            {\n                name: \"background-clip\",\n                desc: \"Determines the background painting area.\",\n                browsers: \"E,C,FF4,IE9,O10.5,S3\",\n                restriction: \"box\"\n            },\n            {\n                name: \"background-color\",\n                desc: \"Sets the background color of an element.\",\n                restriction: \"color\"\n            },\n            {\n                name: \"background-image\",\n                desc: \"Sets the background image(s) of an element.\",\n                restriction: \"image, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Counts as an image layer but draws nothing.\"\n                    }\n                ]\n            },\n            {\n                name: \"background-origin\",\n                desc: \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n                browsers: \"E,C,FF4,IE9,O10.5,S3\",\n                restriction: \"box\"\n            },\n            {\n                name: \"background-position\",\n                desc: \"Specifies the initial position of the background image(s) (after any resizing) within their corresponding background positioning area.\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"background-position-x\",\n                desc: \"If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.\",\n                browsers: \"E,IE6\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Equivalent to '0%' for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Equivalent to '100%' for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.\"\n                    }\n                ]\n            },\n            {\n                name: \"background-position-y\",\n                desc: \"If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.\",\n                browsers: \"E,IE6\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"bottom\",\n                        desc: \"Equivalent to '100%' for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is.\"\n                    },\n                    {\n                        name: \"top\",\n                        desc: \"Equivalent to '0%' for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset.\"\n                    }\n                ]\n            },\n            {\n                name: \"background-repeat\",\n                desc: \"Specifies how background images are tiled after they have been sized and positioned.\",\n                restriction: \"repeat\",\n                values: []\n            },\n            {\n                name: \"background-size\",\n                desc: \"Specifies the size of the background images.\",\n                browsers: \"E,C,FF4,IE9,O10,S4.1\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                    },\n                    {\n                        name: \"contain\",\n                        desc: \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                    },\n                    {\n                        name: \"cover\",\n                        desc: \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                    }\n                ]\n            },\n            {\n                name: \"behavior\",\n                desc: \"IE only. Used to extend behaviors of the browser.\",\n                browsers: \"IE6\",\n                restriction: \"url\"\n            },\n            {\n                name: \"block-size\",\n                desc: \"Logical 'width'. Mapping depends on the element’s 'writing-mode'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"border\",\n                desc: \"Shorthand property for setting border width, style, and color.\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-block-end\",\n                desc: \"Logical 'border-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-block-start\",\n                desc: \"Logical 'border-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-block-end-color\",\n                desc: \"Logical 'border-bottom-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-block-start-color\",\n                desc: \"Logical 'border-top-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-block-end-style\",\n                desc: \"Logical 'border-bottom-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"border-block-start-style\",\n                desc: \"Logical 'border-top-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"lline-style\"\n            },\n            {\n                name: \"border-block-end-width\",\n                desc: \"Logical 'border-bottom-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-block-start-width\",\n                desc: \"Logical 'border-top-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-bottom\",\n                desc: \"Shorthand property for setting border width, style and color.\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-bottom-color\",\n                desc: \"Sets the color of the bottom border.\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-bottom-left-radius\",\n                desc: \"Defines the radii of the bottom left outer border edge.\",\n                browsers: \"E,C,FF4,IE9,O10.5,S5\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"border-bottom-right-radius\",\n                desc: \"Defines the radii of the bottom right outer border edge.\",\n                browsers: \"E,C,FF4,IE9,O10.5,S5\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"border-bottom-style\",\n                desc: \"Sets the style of the bottom border.\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"border-bottom-width\",\n                desc: \"Sets the thickness of the bottom border.\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-collapse\",\n                desc: \"Selects a table's border model.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"collapse\",\n                        desc: \"Selects the collapsing borders model.\"\n                    },\n                    {\n                        name: \"separate\",\n                        desc: \"Selects the separated borders border model.\"\n                    }\n                ]\n            },\n            {\n                name: \"border-color\",\n                desc: \"The color of the border around all four edges of an element.\",\n                restriction: \"color\",\n                values: []\n            },\n            {\n                name: \"border-image\",\n                desc: \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n                browsers: \"E,C16,FF15,IE11,O15,S6\",\n                restriction: \"length, percentage, number, url, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"Causes the middle part of the border-image to be preserved.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Use the border styles.\"\n                    },\n                    {\n                        name: \"repeat\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                    },\n                    {\n                        name: \"space\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The image is stretched to fill the area.\"\n                    },\n                    {\n                        name: \"url()\"\n                    }\n                ]\n            },\n            {\n                name: \"border-image-outset\",\n                desc: \"The values specify the amount by which the border image area extends beyond the border box on the top, right, bottom, and left sides respectively. If the fourth value is absent, it is the same as the second. If the third one is also absent, it is the same as the first. If the second one is also absent, it is the same as the first. Numbers represent multiples of the corresponding border-width.\",\n                browsers: \"E,C16,FF15,IE11,O15,S6\",\n                restriction: \"length, number\"\n            },\n            {\n                name: \"border-image-repeat\",\n                desc: \"Specifies how the images for the sides and the middle part of the border image are scaled and tiled. If the second keyword is absent, it is assumed to be the same as the first.\",\n                browsers: \"E,C16,FF15,IE11,O15,S6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"repeat\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                    },\n                    {\n                        name: \"space\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The image is stretched to fill the area.\"\n                    }\n                ]\n            },\n            {\n                name: \"border-image-slice\",\n                desc: \"Specifies inward offsets from the top, right, bottom, and left edges of the image, dividing it into nine regions: four corners, four edges and a middle.\",\n                browsers: \"E,C16,FF15,IE11,O15,S6\",\n                restriction: \"number, percentage\",\n                values: [\n                    {\n                        name: \"fill\",\n                        desc: \"Causes the middle part of the border-image to be preserved.\"\n                    }\n                ]\n            },\n            {\n                name: \"border-image-source\",\n                desc: \"Specifies an image to use instead of the border styles given by the 'border-style' properties and as an additional background layer for the element. If the value is 'none' or if the image cannot be displayed, the border styles will be used.\",\n                browsers: \"E,C16,FF15,IE11,O15,S6\",\n                restriction: \"image\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Use the border styles.\"\n                    }\n                ]\n            },\n            {\n                name: \"border-image-width\",\n                desc: \"The four values of 'border-image-width' specify offsets that are used to divide the border image area into nine parts. They represent inward distances from the top, right, bottom, and left sides of the area, respectively.\",\n                browsers: \"E,C16,FF15,IE11,O15,S6\",\n                restriction: \"length, percentage, number\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                    }\n                ]\n            },\n            {\n                name: \"border-inline-end\",\n                desc: \"Logical 'border-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-inline-start\",\n                desc: \"Logical 'border-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-inline-end-color\",\n                desc: \"Logical 'border-right-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-inline-start-color\",\n                desc: \"Logical 'border-left-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-inline-end-style\",\n                desc: \"Logical 'border-right-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"border-inline-start-style\",\n                desc: \"Logical 'border-left-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"lline-style\"\n            },\n            {\n                name: \"border-inline-end-width\",\n                desc: \"Logical 'border-right-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-inline-start-width\",\n                desc: \"Logical 'border-left-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-left\",\n                desc: \"Shorthand property for setting border width, style and color\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-left-color\",\n                desc: \"Sets the color of the left border.\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-left-style\",\n                desc: \"Sets the style of the left border.\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"border-left-width\",\n                desc: \"Sets the thickness of the left border.\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-radius\",\n                desc: \"Defines the radii of the outer border edge.\",\n                browsers: \"E,C,FF4,IE9,O10.5,S5\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"border-right\",\n                desc: \"Shorthand property for setting border width, style and color\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-right-color\",\n                desc: \"Sets the color of the right border.\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-right-style\",\n                desc: \"Sets the style of the right border.\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"border-right-width\",\n                desc: \"Sets the thickness of the right border.\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-spacing\",\n                desc: \"The lengths specify the distance that separates adjoining cell borders. If one length is specified, it gives both the horizontal and vertical spacing. If two are specified, the first gives the horizontal spacing and the second the vertical spacing. Lengths may not be negative.\",\n                browsers: \"E,C,FF1,IE8,O7,S1.2\",\n                restriction: \"length\"\n            },\n            {\n                name: \"border-style\",\n                desc: \"The style of the border around edges of an element.\",\n                restriction: \"line-style\",\n                values: []\n            },\n            {\n                name: \"border-top\",\n                desc: \"Shorthand property for setting border width, style and color\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"border-top-color\",\n                desc: \"Sets the color of the top border.\",\n                restriction: \"color\"\n            },\n            {\n                name: \"border-top-left-radius\",\n                desc: \"Defines the radii of the top left outer border edge.\",\n                browsers: \"E,C,FF4,IE9,O10.5,S5\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"border-top-right-radius\",\n                desc: \"Defines the radii of the top right outer border edge.\",\n                browsers: \"E,C,FF4,IE9,O10.5,S5\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"border-top-style\",\n                desc: \"Sets the style of the top border.\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"border-top-width\",\n                desc: \"Sets the thickness of the top border.\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"border-width\",\n                desc: \"Shorthand that sets the four 'border-*-width' properties. If it has four values, they set top, right, bottom and left in that order. If left is missing, it is the same as right; if bottom is missing, it is the same as top; if right is missing, it is the same as top.\",\n                restriction: \"length, line-width\",\n                values: []\n            },\n            {\n                name: \"bottom\",\n                desc: \"Specifies how far an absolutely positioned box's bottom margin edge is offset above the bottom edge of the box's 'containing block'.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                    }\n                ]\n            },\n            {\n                name: \"box-decoration-break\",\n                desc: \"Specifies whether individual boxes are treated as broken pieces of one continuous box, or whether each box is individually wrapped with the border and padding.\",\n                browsers: \"FF32,O11\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"clone\"\n                    },\n                    {\n                        name: \"slice\"\n                    }\n                ]\n            },\n            {\n                name: \"box-shadow\",\n                desc: \"Attaches one or more drop-shadows to the box. The property is a comma-separated list of shadows, each specified by 2-4 length values, an optional color, and an optional 'inset' keyword. Omitted lengths are 0; omitted colors are a user agent chosen color.\",\n                browsers: \"E,C,FF4,IE9,O11.5,S5.1\",\n                restriction: \"length, color, enum\",\n                values: [\n                    {\n                        name: \"inset\"\n                    }\n                ]\n            },\n            {\n                name: \"box-sizing\",\n                desc: \"Specifies the behavior of the 'width' and 'height' properties.\",\n                browsers: \"E,C10,FF29,IE8,O8,S5.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"border-box\"\n                    },\n                    {\n                        name: \"content-box\"\n                    }\n                ]\n            },\n            {\n                name: \"break-after\",\n                desc: \"Describes the page/column/region break behavior after the generated box.\",\n                browsers: \"E,IE10,O11.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break before/after the principal box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a break before/after the principal box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break before/after the principal box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break before/after the principal box.\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"Always force a column break before/after the principal box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"page\",\n                        desc: \"Always force a page break before/after the principal box.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"break-before\",\n                desc: \"Describes the page/column/region break behavior before the generated box.\",\n                browsers: \"E,IE10,O11.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break before/after the principal box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a break before/after the principal box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break before/after the principal box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break before/after the principal box.\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"Always force a column break before/after the principal box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"page\",\n                        desc: \"Always force a page break before/after the principal box.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"break-inside\",\n                desc: \"Describes the page/column/region break behavior inside the principal box.\",\n                browsers: \"E,IE10,O11.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Impose no additional breaking constraints within the box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid breaks within the box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break within the box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break within the box.\"\n                    }\n                ]\n            },\n            {\n                name: \"caption-side\",\n                desc: \"Specifies the position of the caption box with respect to the table box.\",\n                browsers: \"E,C,FF,IE8,O,S\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bottom\",\n                        desc: \"Positions the caption box below the table box.\"\n                    },\n                    {\n                        name: \"top\",\n                        desc: \"Positions the caption box above the table box.\"\n                    }\n                ]\n            },\n            {\n                name: \"caret-color\",\n                desc: \"Controls the color of the text insertion indicator.\",\n                browsers: \"C60,FF55,O46\",\n                restriction: \"color, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent selects an appropriate color for the caret. This is generally currentcolor, but the user agent may choose a different color to ensure good visibility and contrast with the surrounding content, taking into account the value of currentcolor, the background, shadows, and other factors.\"\n                    }\n                ]\n            },\n            {\n                name: \"clear\",\n                desc: \"Indicates which sides of an element's box(es) may not be adjacent to an earlier floating box. The 'clear' property does not consider floats inside the element itself or in other block formatting contexts.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"both\",\n                        desc: \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating and left-floating boxes that resulted from elements earlier in the source document.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any left-floating boxes that resulted from elements earlier in the source document.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No constraint on the box's position with respect to floats.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating boxes that resulted from elements earlier in the source document.\"\n                    }\n                ]\n            },\n            {\n                name: \"clip\",\n                desc: \"Deprecated. Use the 'clip-path' property when support allows. Defines the visible portion of an element’s box.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The element does not clip.\"\n                    },\n                    {\n                        name: \"rect()\"\n                    }\n                ]\n            },\n            {\n                name: \"clip-path\",\n                desc: \"Specifies a clipping path where everything inside the path is visable and everything outside is clipped out.\",\n                browsers: \"FF3.5\",\n                restriction: \"url, shape, geometry-box, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No clipping path gets created.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"References a <clipPath> element to create a clipping path.\"\n                    }\n                ]\n            },\n            {\n                name: \"clip-rule\",\n                desc: \"Indicates the algorithm which is to be used to determine what parts of the canvas are included inside the shape.\",\n                browsers: \"E,C5,FF3,IE10,O9,S6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"evenodd\"\n                    },\n                    {\n                        name: \"nonzero\"\n                    }\n                ]\n            },\n            {\n                name: \"color\",\n                desc: \"Color of an element's text\",\n                restriction: \"color\"\n            },\n            {\n                name: \"color-interpolation-filters\",\n                desc: \"Specifies the color space for imaging operations performed via filter effects.\",\n                browsers: \"E,C5,FF3,IE10,O9,S6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Color operations are not required to occur in a particular color space.\"\n                    },\n                    {\n                        name: \"linearRGB\"\n                    },\n                    {\n                        name: \"sRGB\"\n                    }\n                ]\n            },\n            {\n                name: \"column-count\",\n                desc: \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Determines the number of columns by the 'column-width' property and the element width.\"\n                    }\n                ]\n            },\n            {\n                name: \"column-fill\",\n                desc: \"In continuous media, this property will only be consulted if the length of columns has been constrained. Otherwise, columns will automatically be balanced.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Fills columns sequentially.\"\n                    },\n                    {\n                        name: \"balance\"\n                    }\n                ]\n            },\n            {\n                name: \"column-gap\",\n                desc: \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"length, enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"User agent specific and typically equivalent to 1em.\"\n                    }\n                ]\n            },\n            {\n                name: \"column-rule\",\n                desc: \"Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"column-rule-color\",\n                desc: \"Sets the color of the column rule\",\n                browsers: \"E,IE10,O11.6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"column-rule-style\",\n                desc: \"Sets the style of the rule between columns of an element.\",\n                browsers: \"E,IE10,O11.5,S6\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"column-rule-width\",\n                desc: \"Sets the width of the rule between columns. Negative values are not allowed.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"columns\",\n                desc: \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"length, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"column-span\",\n                desc: \"Describes the page/column break behavior after the generated box.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The element does not span multiple columns.\"\n                    }\n                ]\n            },\n            {\n                name: \"column-width\",\n                desc: \"Describes the width of columns in multicol elements.\",\n                browsers: \"E,IE10,O11.5,S9\",\n                restriction: \"length, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"contain\",\n                desc: \"Indicates that an element and its contents are, as much as possible, independent of the rest of the document tree.\",\n                browsers: \"C52,O40\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that the property has no effect.\"\n                    },\n                    {\n                        name: \"strict\",\n                        desc: \"Turns on all forms of containment for the element.\"\n                    },\n                    {\n                        name: \"content\",\n                        desc: \"All containment rules except size are applied to the element.\"\n                    },\n                    {\n                        name: \"size\"\n                    },\n                    {\n                        name: \"layout\"\n                    },\n                    {\n                        name: \"style\",\n                        desc: \"Turns on style containment for the element.\"\n                    },\n                    {\n                        name: \"paint\"\n                    }\n                ]\n            },\n            {\n                name: \"content\",\n                desc: \"Determines which page-based occurrence of a given element is applied to a counter or string value.\",\n                browsers: \"E,C,FF1,IE8,O4,S1\",\n                restriction: \"string, url\",\n                values: [\n                    {\n                        name: \"attr()\"\n                    },\n                    {\n                        name: \"counter(name)\"\n                    },\n                    {\n                        name: \"icon\",\n                        desc: \"The (pseudo-)element is replaced in its entirety by the resource referenced by its 'icon' property, and treated as a replaced element.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"On elements, this inhibits the children of the element from being rendered as children of this element, as if the element was empty. On pseudo-elements it causes the pseudo-element to have no content.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"See http://www.w3.org/TR/css3-content/#content for computation rules.\"\n                    },\n                    {\n                        name: \"url()\"\n                    }\n                ]\n            },\n            {\n                name: \"counter-increment\",\n                desc: \"Manipulate the value of existing counters.\",\n                browsers: \"E,C,FF1.5,IE8,O10.5,S3\",\n                restriction: \"identifier, integer\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"This element does not alter the value of any counters.\"\n                    }\n                ]\n            },\n            {\n                name: \"counter-reset\",\n                desc: \"Property accepts one or more names of counters (identifiers), each one optionally followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element.\",\n                browsers: \"E,C,FF1.5,IE8,O10.5,S3\",\n                restriction: \"identifier, integer\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The counter is not modified.\"\n                    }\n                ]\n            },\n            {\n                name: \"cursor\",\n                desc: \"Allows control over cursor appearance in an element\",\n                restriction: \"url, number, enum\",\n                values: [\n                    {\n                        name: \"alias\"\n                    },\n                    {\n                        name: \"all-scroll\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"The UA determines the cursor to display based on the current context.\"\n                    },\n                    {\n                        name: \"cell\"\n                    },\n                    {\n                        name: \"col-resize\"\n                    },\n                    {\n                        name: \"context-menu\"\n                    },\n                    {\n                        name: \"copy\"\n                    },\n                    {\n                        name: \"crosshair\"\n                    },\n                    {\n                        name: \"default\",\n                        desc: \"The platform-dependent default cursor. Often rendered as an arrow.\"\n                    },\n                    {\n                        name: \"e-resize\"\n                    },\n                    {\n                        name: \"ew-resize\"\n                    },\n                    {\n                        name: \"grab\",\n                        browsers: \"FF27\"\n                    },\n                    {\n                        name: \"grabbing\",\n                        browsers: \"FF27\"\n                    },\n                    {\n                        name: \"help\"\n                    },\n                    {\n                        name: \"move\"\n                    },\n                    {\n                        name: \"-moz-grab\",\n                        browsers: \"FF1.5\"\n                    },\n                    {\n                        name: \"-moz-grabbing\",\n                        browsers: \"FF1.5\"\n                    },\n                    {\n                        name: \"-moz-zoom-in\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-zoom-out\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"ne-resize\"\n                    },\n                    {\n                        name: \"nesw-resize\"\n                    },\n                    {\n                        name: \"no-drop\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No cursor is rendered for the element.\"\n                    },\n                    {\n                        name: \"not-allowed\"\n                    },\n                    {\n                        name: \"n-resize\"\n                    },\n                    {\n                        name: \"ns-resize\"\n                    },\n                    {\n                        name: \"nw-resize\"\n                    },\n                    {\n                        name: \"nwse-resize\"\n                    },\n                    {\n                        name: \"pointer\"\n                    },\n                    {\n                        name: \"progress\"\n                    },\n                    {\n                        name: \"row-resize\"\n                    },\n                    {\n                        name: \"se-resize\"\n                    },\n                    {\n                        name: \"s-resize\"\n                    },\n                    {\n                        name: \"sw-resize\"\n                    },\n                    {\n                        name: \"text\",\n                        desc: \"Indicates text that may be selected. Often rendered as a vertical I-beam.\"\n                    },\n                    {\n                        name: \"vertical-text\"\n                    },\n                    {\n                        name: \"wait\"\n                    },\n                    {\n                        name: \"-webkit-grab\",\n                        browsers: \"C,S4\"\n                    },\n                    {\n                        name: \"-webkit-grabbing\",\n                        browsers: \"C,S4\"\n                    },\n                    {\n                        name: \"-webkit-zoom-in\",\n                        browsers: \"C,S1.2\"\n                    },\n                    {\n                        name: \"-webkit-zoom-out\",\n                        browsers: \"C,S1.2\"\n                    },\n                    {\n                        name: \"w-resize\"\n                    },\n                    {\n                        name: \"zoom-in\",\n                        browsers: \"E,C37,FF24,O12.1,S9\"\n                    },\n                    {\n                        name: \"zoom-out\",\n                        browsers: \"E,C37,FF24,O12.1,S9\"\n                    }\n                ]\n            },\n            {\n                name: \"direction\",\n                desc: \"Specifies the inline base direction or directionality of any bidi paragraph, embedding, isolate, or override established by the box. Note: for HTML content use the 'dir' attribute and 'bdo' element rather than this property.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"ltr\"\n                    },\n                    {\n                        name: \"rtl\"\n                    }\n                ]\n            },\n            {\n                name: \"display\",\n                desc: \"In combination with 'float' and 'position', determines the type of box or boxes that are generated for an element.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"block\"\n                    },\n                    {\n                        name: \"contents\",\n                        desc: \"The element itself does not generate any boxes, but its children and pseudo-elements still generate boxes as normal.\",\n                        browsers: \"FF37\"\n                    },\n                    {\n                        name: \"flex\",\n                        browsers: \"E,C29,FF22,IE11,O12.1,S9\"\n                    },\n                    {\n                        name: \"flexbox\",\n                        browsers: \"O12.1\"\n                    },\n                    {\n                        name: \"flow-root\",\n                        browsers: \"C58,FF53,O45\"\n                    },\n                    {\n                        name: \"grid\",\n                        browsers: \"FF52,C57,S10.1,O44\"\n                    },\n                    {\n                        name: \"inline\",\n                        desc: \"The element generates an inline-level box.\"\n                    },\n                    {\n                        name: \"inline-block\"\n                    },\n                    {\n                        name: \"inline-flex\",\n                        browsers: \"E,C29,FF22,IE11,O12.1,S9\"\n                    },\n                    {\n                        name: \"inline-flexbox\",\n                        browsers: \"O12.1\"\n                    },\n                    {\n                        name: \"inline-table\"\n                    },\n                    {\n                        name: \"list-item\"\n                    },\n                    {\n                        name: \"-moz-box\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-deck\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-grid\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-grid-group\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-grid-line\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-groupbox\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-inline-box\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-inline-grid\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-inline-stack\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-marker\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-popup\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-moz-stack\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"-ms-flexbox\",\n                        browsers: \"IE10\"\n                    },\n                    {\n                        name: \"-ms-grid\",\n                        browsers: \"E,IE10\"\n                    },\n                    {\n                        name: \"-ms-inline-flexbox\",\n                        browsers: \"IE10\"\n                    },\n                    {\n                        name: \"-ms-inline-grid\",\n                        browsers: \"E,IE10\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The element and its descendants generates no boxes.\"\n                    },\n                    {\n                        name: \"ruby\",\n                        desc: \"The element generates a principal ruby container box, and establishes a ruby formatting context.\"\n                    },\n                    {\n                        name: \"ruby-base\"\n                    },\n                    {\n                        name: \"ruby-base-container\"\n                    },\n                    {\n                        name: \"ruby-text\"\n                    },\n                    {\n                        name: \"ruby-text-container\"\n                    },\n                    {\n                        name: \"run-in\",\n                        browsers: \"IE8\"\n                    },\n                    {\n                        name: \"table\"\n                    },\n                    {\n                        name: \"table-caption\"\n                    },\n                    {\n                        name: \"table-cell\"\n                    },\n                    {\n                        name: \"table-column\"\n                    },\n                    {\n                        name: \"table-column-group\"\n                    },\n                    {\n                        name: \"table-footer-group\"\n                    },\n                    {\n                        name: \"table-header-group\"\n                    },\n                    {\n                        name: \"table-row\"\n                    },\n                    {\n                        name: \"table-row-group\"\n                    },\n                    {\n                        name: \"-webkit-box\",\n                        browsers: \"C,S1\"\n                    },\n                    {\n                        name: \"-webkit-flex\",\n                        browsers: \"C21,O15,S6.1\"\n                    },\n                    {\n                        name: \"-webkit-inline-box\",\n                        browsers: \"C,S1\"\n                    },\n                    {\n                        name: \"-webkit-inline-flex\",\n                        browsers: \"C21,O15,S6.1\"\n                    }\n                ]\n            },\n            {\n                name: \"empty-cells\",\n                desc: \"In the separated borders model, this property controls the rendering of borders and backgrounds around cells that have no visible content.\",\n                browsers: \"E,C,FF1,IE7,O4,S1.2\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"hide\"\n                    },\n                    {\n                        name: \"-moz-show-background\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"show\"\n                    }\n                ]\n            },\n            {\n                name: \"enable-background\",\n                desc: \"Deprecated. Use 'isolation' property instead when support allows. Specifies how the accumulation of the background image is managed.\",\n                restriction: \"integer, length, percentage, enum\",\n                values: [\n                    {\n                        name: \"accumulate\"\n                    },\n                    {\n                        name: \"new\"\n                    }\n                ]\n            },\n            {\n                name: \"fallback\",\n                desc: \"@counter-style descriptor. Specifies a fallback counter style to be used when the current counter style can’t create a representation for a given counter value.\",\n                browsers: \"FF33\",\n                restriction: \"identifier\"\n            },\n            {\n                name: \"fill\",\n                desc: \"Paints the interior of the given graphical element.\",\n                restriction: \"color, enum, url\",\n                values: [\n                    {\n                        name: \"url()\",\n                        desc: \"A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’.\"\n                    }\n                ]\n            },\n            {\n                name: \"fill-opacity\",\n                desc: \"Specifies the opacity of the painting operation used to paint the interior the current object.\",\n                restriction: \"number(0-1)\"\n            },\n            {\n                name: \"fill-rule\",\n                desc: \"Indicates the algorithm (or winding rule) which is to be used to determine what parts of the canvas are included inside the shape.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"evenodd\"\n                    },\n                    {\n                        name: \"nonzero\"\n                    }\n                ]\n            },\n            {\n                name: \"filter\",\n                desc: \"Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.\",\n                browsers: \"E13,FF35\",\n                restriction: \"enum, url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No filter effects are applied.\"\n                    },\n                    {\n                        name: \"blur()\"\n                    },\n                    {\n                        name: \"brightness()\"\n                    },\n                    {\n                        name: \"contrast()\"\n                    },\n                    {\n                        name: \"drop-shadow()\"\n                    },\n                    {\n                        name: \"grayscale()\"\n                    },\n                    {\n                        name: \"hue-rotate()\"\n                    },\n                    {\n                        name: \"invert()\"\n                    },\n                    {\n                        name: \"opacity()\"\n                    },\n                    {\n                        name: \"saturate()\"\n                    },\n                    {\n                        name: \"sepia()\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"A filter reference to a <filter> element.\",\n                        browsers: \"FF3.6\"\n                    }\n                ]\n            },\n            {\n                name: \"flex\",\n                desc: \"Specifies the components of a flexible length: the flex grow factor and flex shrink factor, and the flex basis.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"length, number, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                    },\n                    {\n                        name: \"content\",\n                        desc: \"Indicates automatic sizing, based on the flex item’s content.\",\n                        browsers: \"E,IE11\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Expands to '0 0 auto'.\"\n                    }\n                ]\n            },\n            {\n                name: \"flex-basis\",\n                desc: \"Sets the flex basis.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"length, number, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                    },\n                    {\n                        name: \"content\",\n                        desc: \"Indicates automatic sizing, based on the flex item’s content.\",\n                        browsers: \"E,IE11\"\n                    }\n                ]\n            },\n            {\n                name: \"flex-direction\",\n                desc: \"Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"column\",\n                        desc: \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"column-reverse\"\n                    },\n                    {\n                        name: \"row\",\n                        desc: \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"row-reverse\"\n                    }\n                ]\n            },\n            {\n                name: \"flex-flow\",\n                desc: \"Specifies how flexbox items are placed in the flexbox.\",\n                browsers: \"E,C29,FF28,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"column\",\n                        desc: \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"column-reverse\"\n                    },\n                    {\n                        name: \"nowrap\",\n                        desc: \"The flex container is single-line.\"\n                    },\n                    {\n                        name: \"row\",\n                        desc: \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"row-reverse\"\n                    },\n                    {\n                        name: \"wrap\",\n                        desc: \"The flexbox is multi-line.\"\n                    },\n                    {\n                        name: \"wrap-reverse\"\n                    }\n                ]\n            },\n            {\n                name: \"flex-grow\",\n                desc: \"Sets the flex grow factor. Negative numbers are invalid.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"number\"\n            },\n            {\n                name: \"flex-shrink\",\n                desc: \"Sets the flex shrink factor. Negative numbers are invalid.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"number\"\n            },\n            {\n                name: \"flex-wrap\",\n                desc: \"Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.\",\n                browsers: \"E,C29,FF28,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"nowrap\",\n                        desc: \"The flex container is single-line.\"\n                    },\n                    {\n                        name: \"wrap\",\n                        desc: \"The flexbox is multi-line.\"\n                    },\n                    {\n                        name: \"wrap-reverse\"\n                    }\n                ]\n            },\n            {\n                name: \"float\",\n                desc: \"Specifies how a box should be floated. It may be set for any element, but only applies to elements that generate boxes that are not absolutely positioned.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"inline-end\",\n                        browsers: \"FF55\"\n                    },\n                    {\n                        name: \"inline-start\",\n                        browsers: \"FF55\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The element generates a block box that is floated to the left. Content flows on the right side of the box, starting at the top (subject to the 'clear' property).\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The box is not floated.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Similar to 'left', except the box is floated to the right, and content flows on the left side of the box, starting at the top.\"\n                    }\n                ]\n            },\n            {\n                name: \"flood-color\",\n                desc: \"Indicates what color to use to flood the current filter primitive subregion.\",\n                browsers: \"E,C5,FF3,IE10,O9,S6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"flood-opacity\",\n                desc: \"Indicates what opacity to use to flood the current filter primitive subregion.\",\n                browsers: \"E,C5,FF3,IE10,O9,S6\",\n                restriction: \"number(0-1), percentage\"\n            },\n            {\n                name: \"font\",\n                desc: \"Shorthand property for setting 'font-style', 'font-variant', 'font-weight', 'font-size', 'line-height', and 'font-family', at the same place in the style sheet. The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts.\",\n                restriction: \"font\",\n                values: [\n                    {\n                        name: \"100\"\n                    },\n                    {\n                        name: \"200\"\n                    },\n                    {\n                        name: \"300\"\n                    },\n                    {\n                        name: \"400\"\n                    },\n                    {\n                        name: \"500\"\n                    },\n                    {\n                        name: \"600\"\n                    },\n                    {\n                        name: \"700\"\n                    },\n                    {\n                        name: \"800\"\n                    },\n                    {\n                        name: \"900\"\n                    },\n                    {\n                        name: \"bold\"\n                    },\n                    {\n                        name: \"bolder\"\n                    },\n                    {\n                        name: \"caption\"\n                    },\n                    {\n                        name: \"icon\",\n                        desc: \"The font used to label icons.\"\n                    },\n                    {\n                        name: \"italic\",\n                        desc: \"Selects a font that is labeled 'italic', or, if that is not available, one labeled 'oblique'.\"\n                    },\n                    {\n                        name: \"large\"\n                    },\n                    {\n                        name: \"larger\"\n                    },\n                    {\n                        name: \"lighter\"\n                    },\n                    {\n                        name: \"medium\"\n                    },\n                    {\n                        name: \"menu\"\n                    },\n                    {\n                        name: \"message-box\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Specifies a face that is not labeled as a small-caps font.\"\n                    },\n                    {\n                        name: \"oblique\",\n                        desc: \"Selects a font that is labeled 'oblique'.\"\n                    },\n                    {\n                        name: \"small\"\n                    },\n                    {\n                        name: \"small-caps\",\n                        desc: \"Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font.\"\n                    },\n                    {\n                        name: \"small-caption\"\n                    },\n                    {\n                        name: \"smaller\"\n                    },\n                    {\n                        name: \"status-bar\"\n                    },\n                    {\n                        name: \"x-large\"\n                    },\n                    {\n                        name: \"x-small\"\n                    },\n                    {\n                        name: \"xx-large\"\n                    },\n                    {\n                        name: \"xx-small\"\n                    }\n                ]\n            },\n            {\n                name: \"font-family\",\n                desc: \"Specifies a prioritized list of font family names or generic family names. A user agent iterates through the list of family names until it matches an available font that contains a glyph for the character to be rendered.\",\n                restriction: \"font\",\n                values: [\n                    {\n                        name: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\"\n                    },\n                    {\n                        name: \"Arial, Helvetica, sans-serif\"\n                    },\n                    {\n                        name: \"Cambria, Cochin, Georgia, Times, 'Times New Roman', serif\"\n                    },\n                    {\n                        name: \"'Courier New', Courier, monospace\"\n                    },\n                    {\n                        name: \"cursive\"\n                    },\n                    {\n                        name: \"fantasy\"\n                    },\n                    {\n                        name: \"'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\"\n                    },\n                    {\n                        name: \"Georgia, 'Times New Roman', Times, serif\"\n                    },\n                    {\n                        name: \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\"\n                    },\n                    {\n                        name: \"Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif\"\n                    },\n                    {\n                        name: \"'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\"\n                    },\n                    {\n                        name: \"monospace\"\n                    },\n                    {\n                        name: \"sans-serif\"\n                    },\n                    {\n                        name: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n                    },\n                    {\n                        name: \"serif\"\n                    },\n                    {\n                        name: \"'Times New Roman', Times, serif\"\n                    },\n                    {\n                        name: \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\"\n                    },\n                    {\n                        name: \"Verdana, Geneva, Tahoma, sans-serif\"\n                    }\n                ]\n            },\n            {\n                name: \"font-feature-settings\",\n                desc: \"Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n                browsers: \"E,FF34,IE10\",\n                restriction: \"string, integer\",\n                values: [\n                    {\n                        name: \"\\\"aalt\\\"\"\n                    },\n                    {\n                        name: \"\\\"abvf\\\"\"\n                    },\n                    {\n                        name: \"\\\"abvm\\\"\"\n                    },\n                    {\n                        name: \"\\\"abvs\\\"\"\n                    },\n                    {\n                        name: \"\\\"afrc\\\"\"\n                    },\n                    {\n                        name: \"\\\"akhn\\\"\"\n                    },\n                    {\n                        name: \"\\\"blwf\\\"\"\n                    },\n                    {\n                        name: \"\\\"blwm\\\"\"\n                    },\n                    {\n                        name: \"\\\"blws\\\"\"\n                    },\n                    {\n                        name: \"\\\"calt\\\"\"\n                    },\n                    {\n                        name: \"\\\"case\\\"\"\n                    },\n                    {\n                        name: \"\\\"ccmp\\\"\"\n                    },\n                    {\n                        name: \"\\\"cfar\\\"\"\n                    },\n                    {\n                        name: \"\\\"cjct\\\"\"\n                    },\n                    {\n                        name: \"\\\"clig\\\"\"\n                    },\n                    {\n                        name: \"\\\"cpct\\\"\"\n                    },\n                    {\n                        name: \"\\\"cpsp\\\"\"\n                    },\n                    {\n                        name: \"\\\"cswh\\\"\"\n                    },\n                    {\n                        name: \"\\\"curs\\\"\"\n                    },\n                    {\n                        name: \"\\\"c2pc\\\"\"\n                    },\n                    {\n                        name: \"\\\"c2cs\\\"\",\n                        desc: \"Small Capitals From Capitals. Applies only to bicameral scripts.\"\n                    },\n                    {\n                        name: \"\\\"dist\\\"\"\n                    },\n                    {\n                        name: \"\\\"dlig\\\"\",\n                        desc: \"Discretionary ligatures.\"\n                    },\n                    {\n                        name: \"\\\"dnom\\\"\"\n                    },\n                    {\n                        name: \"\\\"dtls\\\"\"\n                    },\n                    {\n                        name: \"\\\"expt\\\"\"\n                    },\n                    {\n                        name: \"\\\"falt\\\"\"\n                    },\n                    {\n                        name: \"\\\"fin2\\\"\"\n                    },\n                    {\n                        name: \"\\\"fin3\\\"\"\n                    },\n                    {\n                        name: \"\\\"fina\\\"\"\n                    },\n                    {\n                        name: \"\\\"flac\\\"\"\n                    },\n                    {\n                        name: \"\\\"frac\\\"\"\n                    },\n                    {\n                        name: \"\\\"fwid\\\"\"\n                    },\n                    {\n                        name: \"\\\"half\\\"\"\n                    },\n                    {\n                        name: \"\\\"haln\\\"\"\n                    },\n                    {\n                        name: \"\\\"halt\\\"\"\n                    },\n                    {\n                        name: \"\\\"hist\\\"\"\n                    },\n                    {\n                        name: \"\\\"hkna\\\"\"\n                    },\n                    {\n                        name: \"\\\"hlig\\\"\"\n                    },\n                    {\n                        name: \"\\\"hngl\\\"\"\n                    },\n                    {\n                        name: \"\\\"hojo\\\"\"\n                    },\n                    {\n                        name: \"\\\"hwid\\\"\"\n                    },\n                    {\n                        name: \"\\\"init\\\"\"\n                    },\n                    {\n                        name: \"\\\"isol\\\"\"\n                    },\n                    {\n                        name: \"\\\"ital\\\"\"\n                    },\n                    {\n                        name: \"\\\"jalt\\\"\"\n                    },\n                    {\n                        name: \"\\\"jp78\\\"\"\n                    },\n                    {\n                        name: \"\\\"jp83\\\"\"\n                    },\n                    {\n                        name: \"\\\"jp90\\\"\"\n                    },\n                    {\n                        name: \"\\\"jp04\\\"\"\n                    },\n                    {\n                        name: \"\\\"kern\\\"\",\n                        desc: \"Kerning.\"\n                    },\n                    {\n                        name: \"\\\"lfbd\\\"\"\n                    },\n                    {\n                        name: \"\\\"liga\\\"\",\n                        desc: \"Standard Ligatures.\"\n                    },\n                    {\n                        name: \"\\\"ljmo\\\"\"\n                    },\n                    {\n                        name: \"\\\"lnum\\\"\",\n                        desc: \"Lining Figures.\"\n                    },\n                    {\n                        name: \"\\\"locl\\\"\"\n                    },\n                    {\n                        name: \"\\\"ltra\\\"\"\n                    },\n                    {\n                        name: \"\\\"ltrm\\\"\"\n                    },\n                    {\n                        name: \"\\\"mark\\\"\"\n                    },\n                    {\n                        name: \"\\\"med2\\\"\"\n                    },\n                    {\n                        name: \"\\\"medi\\\"\"\n                    },\n                    {\n                        name: \"\\\"mgrk\\\"\"\n                    },\n                    {\n                        name: \"\\\"mkmk\\\"\"\n                    },\n                    {\n                        name: \"\\\"nalt\\\"\"\n                    },\n                    {\n                        name: \"\\\"nlck\\\"\"\n                    },\n                    {\n                        name: \"\\\"nukt\\\"\"\n                    },\n                    {\n                        name: \"\\\"numr\\\"\"\n                    },\n                    {\n                        name: \"\\\"onum\\\"\",\n                        desc: \"Oldstyle Figures.\"\n                    },\n                    {\n                        name: \"\\\"opbd\\\"\"\n                    },\n                    {\n                        name: \"\\\"ordn\\\"\"\n                    },\n                    {\n                        name: \"\\\"ornm\\\"\"\n                    },\n                    {\n                        name: \"\\\"palt\\\"\"\n                    },\n                    {\n                        name: \"\\\"pcap\\\"\"\n                    },\n                    {\n                        name: \"\\\"pkna\\\"\"\n                    },\n                    {\n                        name: \"\\\"pnum\\\"\"\n                    },\n                    {\n                        name: \"\\\"pref\\\"\"\n                    },\n                    {\n                        name: \"\\\"pres\\\"\"\n                    },\n                    {\n                        name: \"\\\"pstf\\\"\"\n                    },\n                    {\n                        name: \"\\\"psts\\\"\"\n                    },\n                    {\n                        name: \"\\\"pwid\\\"\"\n                    },\n                    {\n                        name: \"\\\"qwid\\\"\"\n                    },\n                    {\n                        name: \"\\\"rand\\\"\"\n                    },\n                    {\n                        name: \"\\\"rclt\\\"\"\n                    },\n                    {\n                        name: \"\\\"rlig\\\"\"\n                    },\n                    {\n                        name: \"\\\"rkrf\\\"\"\n                    },\n                    {\n                        name: \"\\\"rphf\\\"\"\n                    },\n                    {\n                        name: \"\\\"rtbd\\\"\"\n                    },\n                    {\n                        name: \"\\\"rtla\\\"\"\n                    },\n                    {\n                        name: \"\\\"rtlm\\\"\"\n                    },\n                    {\n                        name: \"\\\"ruby\\\"\"\n                    },\n                    {\n                        name: \"\\\"salt\\\"\"\n                    },\n                    {\n                        name: \"\\\"sinf\\\"\"\n                    },\n                    {\n                        name: \"\\\"size\\\"\"\n                    },\n                    {\n                        name: \"\\\"smcp\\\"\",\n                        desc: \"Small Capitals. Applies only to bicameral scripts.\"\n                    },\n                    {\n                        name: \"\\\"smpl\\\"\"\n                    },\n                    {\n                        name: \"\\\"ssty\\\"\"\n                    },\n                    {\n                        name: \"\\\"stch\\\"\"\n                    },\n                    {\n                        name: \"\\\"subs\\\"\"\n                    },\n                    {\n                        name: \"\\\"sups\\\"\"\n                    },\n                    {\n                        name: \"\\\"swsh\\\"\",\n                        desc: \"Swash. Does not apply to ideographic scripts.\"\n                    },\n                    {\n                        name: \"\\\"titl\\\"\"\n                    },\n                    {\n                        name: \"\\\"tjmo\\\"\"\n                    },\n                    {\n                        name: \"\\\"tnam\\\"\"\n                    },\n                    {\n                        name: \"\\\"tnum\\\"\",\n                        desc: \"Tabular Figures.\"\n                    },\n                    {\n                        name: \"\\\"trad\\\"\"\n                    },\n                    {\n                        name: \"\\\"twid\\\"\"\n                    },\n                    {\n                        name: \"\\\"unic\\\"\"\n                    },\n                    {\n                        name: \"\\\"valt\\\"\"\n                    },\n                    {\n                        name: \"\\\"vatu\\\"\"\n                    },\n                    {\n                        name: \"\\\"vert\\\"\"\n                    },\n                    {\n                        name: \"\\\"vhal\\\"\"\n                    },\n                    {\n                        name: \"\\\"vjmo\\\"\"\n                    },\n                    {\n                        name: \"\\\"vkna\\\"\"\n                    },\n                    {\n                        name: \"\\\"vkrn\\\"\"\n                    },\n                    {\n                        name: \"\\\"vpal\\\"\"\n                    },\n                    {\n                        name: \"\\\"vrt2\\\"\"\n                    },\n                    {\n                        name: \"\\\"zero\\\"\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"No change in glyph substitution or positioning occurs.\"\n                    },\n                    {\n                        name: \"off\",\n                        desc: \"Disable feature.\"\n                    },\n                    {\n                        name: \"on\",\n                        desc: \"Enable feature.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-kerning\",\n                desc: \"Kerning is the contextual adjustment of inter-glyph spacing. This property controls metric kerning, kerning that utilizes adjustment data contained in the font.\",\n                browsers: \"C33,FF34,O20\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Specifies that kerning is applied at the discretion of the user agent.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Specifies that kerning is not applied.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Specifies that kerning is applied.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-language-override\",\n                desc: \"The value of 'normal' implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.\",\n                browsers: \"FF34\",\n                restriction: \"string\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"Implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-size\",\n                desc: \"Indicates the desired height of glyphs from the font. For scalable fonts, the font-size is a scale factor applied to the EM unit of the font. (Note that certain glyphs may bleed outside their EM box.) For non-scalable fonts, the font-size is converted into absolute units and matched against the declared font-size of the font, using the same absolute coordinate space for both of the matched values.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"large\"\n                    },\n                    {\n                        name: \"larger\"\n                    },\n                    {\n                        name: \"medium\"\n                    },\n                    {\n                        name: \"small\"\n                    },\n                    {\n                        name: \"smaller\"\n                    },\n                    {\n                        name: \"x-large\"\n                    },\n                    {\n                        name: \"x-small\"\n                    },\n                    {\n                        name: \"xx-large\"\n                    },\n                    {\n                        name: \"xx-small\"\n                    }\n                ]\n            },\n            {\n                name: \"font-size-adjust\",\n                desc: \"Preserves the readability of text when font fallback occurs by adjusting the font-size so that the x-height is the same irregardless of the font used.\",\n                browsers: \"E,FF3,IE10\",\n                restriction: \"number\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Do not preserve the font’s x-height.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-stretch\",\n                desc: \"Selects a normal, condensed, or expanded face from a font family.\",\n                browsers: \"E,FF9,IE9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"condensed\"\n                    },\n                    {\n                        name: \"expanded\"\n                    },\n                    {\n                        name: \"extra-condensed\"\n                    },\n                    {\n                        name: \"extra-expanded\"\n                    },\n                    {\n                        name: \"narrower\",\n                        browsers: \"E,IE10\"\n                    },\n                    {\n                        name: \"normal\"\n                    },\n                    {\n                        name: \"semi-condensed\"\n                    },\n                    {\n                        name: \"semi-expanded\"\n                    },\n                    {\n                        name: \"ultra-condensed\"\n                    },\n                    {\n                        name: \"ultra-expanded\"\n                    },\n                    {\n                        name: \"wider\",\n                        browsers: \"E,IE10\"\n                    }\n                ]\n            },\n            {\n                name: \"font-style\",\n                desc: \"Allows italic or oblique faces to be selected. Italic forms are generally cursive in nature while oblique faces are typically sloped versions of the regular face.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"italic\",\n                        desc: \"Selects a font that is labeled as an 'italic' face, or an 'oblique' face if one is not\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Selects a face that is classified as 'normal'.\"\n                    },\n                    {\n                        name: \"oblique\",\n                        desc: \"Selects a font that is labeled as an 'oblique' face, or an 'italic' face if one is not.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-synthesis\",\n                desc: \"Controls whether user agents are allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces.\",\n                browsers: \"FF34,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Disallow all synthetic faces.\"\n                    },\n                    {\n                        name: \"style\",\n                        desc: \"Allow synthetic italic faces.\"\n                    },\n                    {\n                        name: \"weight\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant\",\n                desc: \"Specifies variant representations of the font\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"Specifies a face that is not labeled as a small-caps font.\"\n                    },\n                    {\n                        name: \"small-caps\",\n                        desc: \"Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant-alternates\",\n                desc: \"For any given character, fonts can provide a variety of alternate glyphs in addition to the default glyph for that character. This property provides control over the selection of these alternate glyphs.\",\n                browsers: \"FF34\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"annotation()\"\n                    },\n                    {\n                        name: \"character-variant()\"\n                    },\n                    {\n                        name: \"historical-forms\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"None of the features are enabled.\"\n                    },\n                    {\n                        name: \"ornaments()\"\n                    },\n                    {\n                        name: \"styleset()\"\n                    },\n                    {\n                        name: \"stylistic()\"\n                    },\n                    {\n                        name: \"swash()\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant-caps\",\n                desc: \"Specifies control over capitalized forms.\",\n                browsers: \"FF34\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"all-petite-caps\"\n                    },\n                    {\n                        name: \"all-small-caps\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"None of the features are enabled.\"\n                    },\n                    {\n                        name: \"petite-caps\"\n                    },\n                    {\n                        name: \"small-caps\",\n                        desc: \"Enables display of small capitals. Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters.\"\n                    },\n                    {\n                        name: \"titling-caps\"\n                    },\n                    {\n                        name: \"unicase\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant-east-asian\",\n                desc: \"Allows control of glyph substitute and positioning in East Asian text.\",\n                browsers: \"FF34\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"full-width\"\n                    },\n                    {\n                        name: \"jis04\"\n                    },\n                    {\n                        name: \"jis78\"\n                    },\n                    {\n                        name: \"jis83\"\n                    },\n                    {\n                        name: \"jis90\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"None of the features are enabled.\"\n                    },\n                    {\n                        name: \"proportional-width\"\n                    },\n                    {\n                        name: \"ruby\",\n                        desc: \"Enables display of ruby variant glyphs.\"\n                    },\n                    {\n                        name: \"simplified\"\n                    },\n                    {\n                        name: \"traditional\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant-ligatures\",\n                desc: \"Specifies control over which ligatures are enabled or disabled. A value of ‘normal’ implies that the defaults set by the font are used.\",\n                browsers: \"C18,FF34,O15,S6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"additional-ligatures\"\n                    },\n                    {\n                        name: \"common-ligatures\"\n                    },\n                    {\n                        name: \"contextual\",\n                        browsers: \"C35,F34,O22\"\n                    },\n                    {\n                        name: \"discretionary-ligatures\"\n                    },\n                    {\n                        name: \"historical-ligatures\"\n                    },\n                    {\n                        name: \"no-additional-ligatures\"\n                    },\n                    {\n                        name: \"no-common-ligatures\"\n                    },\n                    {\n                        name: \"no-contextual\",\n                        browsers: \"C35,F34,O22\"\n                    },\n                    {\n                        name: \"no-discretionary-ligatures\"\n                    },\n                    {\n                        name: \"no-historical-ligatures\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Disables all ligatures.\",\n                        browsers: \"FF34\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Implies that the defaults set by the font are used.\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant-numeric\",\n                desc: \"Specifies control over numerical forms.\",\n                browsers: \"FF34\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"diagonal-fractions\"\n                    },\n                    {\n                        name: \"lining-nums\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"None of the features are enabled.\"\n                    },\n                    {\n                        name: \"oldstyle-nums\"\n                    },\n                    {\n                        name: \"ordinal\"\n                    },\n                    {\n                        name: \"proportional-nums\"\n                    },\n                    {\n                        name: \"slashed-zero\"\n                    },\n                    {\n                        name: \"stacked-fractions\"\n                    },\n                    {\n                        name: \"tabular-nums\"\n                    }\n                ]\n            },\n            {\n                name: \"font-variant-position\",\n                desc: \"Specifies the vertical position\",\n                browsers: \"FF34\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"None of the features are enabled.\"\n                    },\n                    {\n                        name: \"sub\",\n                        desc: \"Enables display of subscript variants (OpenType feature: subs).\"\n                    },\n                    {\n                        name: \"super\",\n                        desc: \"Enables display of superscript variants (OpenType feature: sups).\"\n                    }\n                ]\n            },\n            {\n                name: \"font-weight\",\n                desc: \"Specifies weight of glyphs in the font, their degree of blackness or stroke thickness.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"100\"\n                    },\n                    {\n                        name: \"200\"\n                    },\n                    {\n                        name: \"300\"\n                    },\n                    {\n                        name: \"400\"\n                    },\n                    {\n                        name: \"500\"\n                    },\n                    {\n                        name: \"600\"\n                    },\n                    {\n                        name: \"700\"\n                    },\n                    {\n                        name: \"800\"\n                    },\n                    {\n                        name: \"900\"\n                    },\n                    {\n                        name: \"bold\"\n                    },\n                    {\n                        name: \"bolder\"\n                    },\n                    {\n                        name: \"lighter\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Same as 400\"\n                    }\n                ]\n            },\n            {\n                name: \"glyph-orientation-horizontal\",\n                desc: \"Controls glyph orientation when the inline-progression-direction is horizontal.\",\n                restriction: \"angle, number\"\n            },\n            {\n                name: \"glyph-orientation-vertical\",\n                desc: \"Controls glyph orientation when the inline-progression-direction is vertical.\",\n                restriction: \"angle, number, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Sets the orientation based on the fullwidth or non-fullwidth characters and the most common orientation.\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-area\",\n                desc: \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement. Shorthand for 'grid-row-start', 'grid-column-start', 'grid-row-end', and 'grid-column-end'.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid\",\n                desc: \"The grid CSS property is a shorthand property that sets all of the explicit grid properties ('grid-template-rows', 'grid-template-columns', and 'grid-template-areas'), and all the implicit grid properties ('grid-auto-rows', 'grid-auto-columns', and 'grid-auto-flow'), in a single declaration.\",\n                browsers: \"FF52,C57,E16,S10.1,O44\",\n                restriction: \"identifier, length, percentage, string, enum\"\n            },\n            {\n                name: \"grid-auto-columns\",\n                desc: \"Specifies the size of implicitly created columns.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"min-content\",\n                        desc: \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"minmax()\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-auto-flow\",\n                desc: \"Controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"row\",\n                        desc: \"The auto-placement algorithm places items by filling each row in turn, adding new rows as necessary.\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"The auto-placement algorithm places items by filling each column in turn, adding new columns as necessary.\"\n                    },\n                    {\n                        name: \"dense\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-auto-rows\",\n                desc: \"Specifies the size of implicitly created rows.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"min-content\",\n                        desc: \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"minmax()\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-column\",\n                desc: \"Shorthand for 'grid-column-start' and 'grid-column-end'.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-column-end\",\n                desc: \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-column-gap\",\n                desc: \"Specifies the gutters between grid columns.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"length\"\n            },\n            {\n                name: \"grid-column-start\",\n                desc: \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-gap\",\n                desc: \"Shorthand that specifies the gutters between grid columns and grid rows in one declaration.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"length\"\n            },\n            {\n                name: \"grid-row\",\n                desc: \"Shorthand for 'grid-row-start' and 'grid-row-end'.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-row-end\",\n                desc: \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-row-gap\",\n                desc: \"Specifies the gutters between grid rows.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"length\"\n            },\n            {\n                name: \"grid-row-start\",\n                desc: \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                    },\n                    {\n                        name: \"span\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-template\",\n                desc: \"Shorthand for setting grid-template-columns, grid-template-rows, and grid-template-areas in a single declaration.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, length, percentage, string, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Sets all three properties to their initial values.\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"subgrid\",\n                        desc: \"Sets 'grid-template-rows' and 'grid-template-columns' to 'subgrid', and 'grid-template-areas' to its initial value.\"\n                    },\n                    {\n                        name: \"minmax()\"\n                    },\n                    {\n                        name: \"repeat()\",\n                        desc: \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-template-areas\",\n                desc: \"Specifies named grid areas, which are not associated with any particular grid item, but can be referenced from the grid-placement properties.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"string\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The grid container doesn’t define any named grid areas.\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-template-columns\",\n                desc: \"specifies, as a space-separated track list, the line names and track sizing functions of the grid.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, length, percentage, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"There is no explicit grid; any rows/columns will be implicitly generated.\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"subgrid\",\n                        desc: \"Indicates that the grid will align to its parent grid in that axis.\"\n                    },\n                    {\n                        name: \"minmax()\"\n                    },\n                    {\n                        name: \"repeat()\",\n                        desc: \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                    }\n                ]\n            },\n            {\n                name: \"grid-template-rows\",\n                desc: \"specifies, as a space-separated track list, the line names and track sizing functions of the grid.\",\n                browsers: \"FF52,C57,S10.1,O44\",\n                restriction: \"identifier, length, percentage, string, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"There is no explicit grid; any rows/columns will be implicitly generated.\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                    },\n                    {\n                        name: \"subgrid\",\n                        desc: \"Indicates that the grid will align to its parent grid in that axis.\"\n                    },\n                    {\n                        name: \"minmax()\"\n                    },\n                    {\n                        name: \"repeat()\",\n                        desc: \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                    }\n                ]\n            },\n            {\n                name: \"height\",\n                desc: \"Specifies the height of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The height depends on the values of other properties.\"\n                    },\n                    {\n                        name: \"fit-content\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    }\n                ]\n            },\n            {\n                name: \"hyphens\",\n                desc: \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n                browsers: \"C55,FF43,O44\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                    },\n                    {\n                        name: \"manual\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"image-orientation\",\n                desc: \"Specifies an orthogonal rotation to be applied to an image before it is laid out.\",\n                browsers: \"FF26\",\n                restriction: \"angle\",\n                values: [\n                    {\n                        name: \"flip\"\n                    },\n                    {\n                        name: \"from-image\"\n                    }\n                ]\n            },\n            {\n                name: \"image-rendering\",\n                desc: \"Provides a hint to the user-agent about what aspects of an image are most important to preserve when the image is scaled, to aid the user-agent in the choice of an appropriate scaling algorithm.\",\n                browsers: \"C,FF3.6,O11.6,S\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The image should be scaled with an algorithm that maximizes the appearance of the image.\"\n                    },\n                    {\n                        name: \"crisp-edges\"\n                    },\n                    {\n                        name: \"-moz-crisp-edges\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"optimizeQuality\"\n                    },\n                    {\n                        name: \"optimizeSpeed\",\n                        desc: \"Deprecated.\"\n                    },\n                    {\n                        name: \"pixelated\"\n                    }\n                ]\n            },\n            {\n                name: \"ime-mode\",\n                desc: \"Controls the state of the input method editor for text fields.\",\n                browsers: \"E,FF3,IE5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"active\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"No change is made to the current input method editor state. This is the default.\"\n                    },\n                    {\n                        name: \"disabled\"\n                    },\n                    {\n                        name: \"inactive\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"The IME state should be normal; this value can be used in a user style sheet to override the page setting.\"\n                    }\n                ]\n            },\n            {\n                name: \"inline-size\",\n                desc: \"Logical 'height'. Mapping depends on the element’s 'writing-mode'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"isolation\",\n                desc: \"In CSS setting to 'isolate' will turn the element into a stacking context. In SVG, it defines whether an element is isolated or not.\",\n                browsers: \"C,FF,O,S\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Elements are not isolated unless an operation is applied that causes the creation of a stacking context.\"\n                    },\n                    {\n                        name: \"isolate\",\n                        desc: \"In CSS will turn the element into a stacking context.\"\n                    }\n                ]\n            },\n            {\n                name: \"justify-content\",\n                desc: \"Aligns flex items along the main axis of the current line of the flex container.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"start\",\n                        desc: \"The items are packed flush to each other toward the start edge of the alignment container in the main axis.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"The items are packed flush to each other toward the end edge of the alignment container in the main axis.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The items are packed flush to each other toward the left edge of the alignment container in the main axis.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The items are packed flush to each other toward the right edge of the alignment container in the main axis.\"\n                    },\n                    {\n                        name: \"safe\"\n                    },\n                    {\n                        name: \"unsafe\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the combined size of the alignment subjects is less than the size of the alignment container, any auto-sized alignment subjects have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container.\"\n                    },\n                    {\n                        name: \"space-evenly\"\n                    },\n                    {\n                        name: \"flex-end\",\n                        desc: \"Flex items are packed toward the end of the line.\"\n                    },\n                    {\n                        name: \"flex-start\",\n                        desc: \"Flex items are packed toward the start of the line.\"\n                    },\n                    {\n                        name: \"space-around\",\n                        desc: \"Flex items are evenly distributed in the line, with half-size spaces on either end.\"\n                    },\n                    {\n                        name: \"space-between\",\n                        desc: \"Flex items are evenly distributed in the line.\"\n                    },\n                    {\n                        name: \"unsafe\"\n                    },\n                    {\n                        name: \"baseline\",\n                        desc: \"Specifies participation in first-baseline alignment.\"\n                    },\n                    {\n                        name: \"first baseline\",\n                        desc: \"Specifies participation in first-baseline alignment.\"\n                    },\n                    {\n                        name: \"last baseline\",\n                        desc: \"Specifies participation in last-baseline alignment.\"\n                    }\n                ]\n            },\n            {\n                name: \"kerning\",\n                desc: \"Indicates whether the user agent should adjust inter-glyph spacing based on kerning tables that are included in the relevant font or instead disable auto-kerning and set inter-character spacing to a specific length.\",\n                restriction: \"length, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Indicates that the user agent should adjust inter-glyph spacing based on kerning tables that are included in the font that will be used.\"\n                    }\n                ]\n            },\n            {\n                name: \"left\",\n                desc: \"Specifies how far an absolutely positioned box's left margin edge is offset to the right of the left edge of the box's 'containing block'.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                    }\n                ]\n            },\n            {\n                name: \"letter-spacing\",\n                desc: \"Specifies the minimum, maximum, and optimal spacing between grapheme clusters.\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"The spacing is the normal spacing for the current font. It is typically zero-length.\"\n                    }\n                ]\n            },\n            {\n                name: \"lighting-color\",\n                desc: \"Defines the color of the light source for filter primitives 'feDiffuseLighting' and 'feSpecularLighting'.\",\n                browsers: \"E,C5,FF3,IE10,O9,S6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"line-break\",\n                desc: \"Specifies what set of line breaking restrictions are in effect within the element.\",\n                browsers: \"E,IE5.5,C58,O45,S\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.\"\n                    },\n                    {\n                        name: \"loose\",\n                        desc: \"Breaks text using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Breaks text using the most common set of line-breaking rules.\"\n                    },\n                    {\n                        name: \"strict\",\n                        desc: \"Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'.\"\n                    }\n                ]\n            },\n            {\n                name: \"line-height\",\n                desc: \"Determines the block-progression dimension of the text content area of an inline box.\",\n                restriction: \"number, length, percentage\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"Tells user agents to set the computed value to a 'reasonable' value based on the font size of the element.\"\n                    }\n                ]\n            },\n            {\n                name: \"list-style\",\n                desc: \"Shorthand for setting 'list-style-type', 'list-style-position' and 'list-style-image'\",\n                restriction: \"image, enum, url\",\n                values: [\n                    {\n                        name: \"armenian\"\n                    },\n                    {\n                        name: \"circle\"\n                    },\n                    {\n                        name: \"decimal\"\n                    },\n                    {\n                        name: \"decimal-leading-zero\"\n                    },\n                    {\n                        name: \"disc\"\n                    },\n                    {\n                        name: \"georgian\"\n                    },\n                    {\n                        name: \"inside\"\n                    },\n                    {\n                        name: \"lower-alpha\"\n                    },\n                    {\n                        name: \"lower-greek\"\n                    },\n                    {\n                        name: \"lower-latin\"\n                    },\n                    {\n                        name: \"lower-roman\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"outside\"\n                    },\n                    {\n                        name: \"square\",\n                        desc: \"A filled square.\"\n                    },\n                    {\n                        name: \"symbols()\",\n                        browsers: \"FF35\"\n                    },\n                    {\n                        name: \"upper-alpha\"\n                    },\n                    {\n                        name: \"upper-latin\"\n                    },\n                    {\n                        name: \"upper-roman\"\n                    },\n                    {\n                        name: \"url()\"\n                    }\n                ]\n            },\n            {\n                name: \"list-style-image\",\n                desc: \"Sets the image that will be used as the list item marker. When the image is available, it will replace the marker set with the 'list-style-type' marker.\",\n                restriction: \"image\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The default contents of the of the list item’s marker are given by 'list-style-type' instead.\"\n                    }\n                ]\n            },\n            {\n                name: \"list-style-position\",\n                desc: \"Specifies the position of the '::marker' pseudo-element's box in the list item.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"inside\"\n                    },\n                    {\n                        name: \"outside\"\n                    }\n                ]\n            },\n            {\n                name: \"list-style-type\",\n                desc: \"Used to construct the default contents of a list item’s marker\",\n                restriction: \"enum, string\",\n                values: [\n                    {\n                        name: \"armenian\",\n                        desc: \"Traditional uppercase Armenian numbering.\"\n                    },\n                    {\n                        name: \"circle\"\n                    },\n                    {\n                        name: \"decimal\",\n                        desc: \"Western decimal numbers.\"\n                    },\n                    {\n                        name: \"decimal-leading-zero\",\n                        desc: \"Decimal numbers padded by initial zeros.\"\n                    },\n                    {\n                        name: \"disc\"\n                    },\n                    {\n                        name: \"georgian\",\n                        desc: \"Traditional Georgian numbering.\"\n                    },\n                    {\n                        name: \"lower-alpha\",\n                        desc: \"Lowercase ASCII letters.\"\n                    },\n                    {\n                        name: \"lower-greek\",\n                        desc: \"Lowercase classical Greek.\"\n                    },\n                    {\n                        name: \"lower-latin\",\n                        desc: \"Lowercase ASCII letters.\"\n                    },\n                    {\n                        name: \"lower-roman\",\n                        desc: \"Lowercase ASCII Roman numerals.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No marker\"\n                    },\n                    {\n                        name: \"square\",\n                        desc: \"A filled square.\"\n                    },\n                    {\n                        name: \"symbols()\",\n                        browsers: \"FF35\"\n                    },\n                    {\n                        name: \"upper-alpha\",\n                        desc: \"Uppercase ASCII letters.\"\n                    },\n                    {\n                        name: \"upper-latin\",\n                        desc: \"Uppercase ASCII letters.\"\n                    },\n                    {\n                        name: \"upper-roman\",\n                        desc: \"Uppercase ASCII Roman numerals.\"\n                    }\n                ]\n            },\n            {\n                name: \"margin\",\n                desc: \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-block-end\",\n                desc: \"Logical 'margin-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-block-start\",\n                desc: \"Logical 'margin-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-bottom\",\n                desc: \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-inline-end\",\n                desc: \"Logical 'margin-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-inline-start\",\n                desc: \"Logical 'margin-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-left\",\n                desc: \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-right\",\n                desc: \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"margin-top\",\n                desc: \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"marker\",\n                desc: \"Specifies the marker symbol that shall be used for all points on the sets the value for all vertices on the given ‘path’ element or basic shape.\",\n                restriction: \"url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"Indicates that the <marker> element referenced will be used.\"\n                    }\n                ]\n            },\n            {\n                name: \"marker-end\",\n                desc: \"Specifies the marker that will be drawn at the last vertices of the given markable element.\",\n                restriction: \"url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"Indicates that the <marker> element referenced will be used.\"\n                    }\n                ]\n            },\n            {\n                name: \"marker-mid\",\n                desc: \"Specifies the marker that will be drawn at all vertices except the first and last.\",\n                restriction: \"url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"Indicates that the <marker> element referenced will be used.\"\n                    }\n                ]\n            },\n            {\n                name: \"marker-start\",\n                desc: \"Specifies the marker that will be drawn at the first vertices of the given markable element.\",\n                restriction: \"url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"Indicates that the <marker> element referenced will be used.\"\n                    }\n                ]\n            },\n            {\n                name: \"mask-image\",\n                desc: \"Sets the mask layer image of an element.\",\n                browsers: \"E,FF53\",\n                restriction: \"url, image, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Counts as a transparent black image layer.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"Reference to a <mask element or to a CSS image.\"\n                    }\n                ]\n            },\n            {\n                name: \"mask-mode\",\n                desc: \"Indicates whether the mask layer image is treated as luminance mask or alpha mask.\",\n                browsers: \"FF53\",\n                restriction: \"url, image, enum\",\n                values: [\n                    {\n                        name: \"alpha\",\n                        desc: \"Alpha values of the mask layer image should be used as the mask values.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Use alpha values if 'mask-image' is an image, luminance if a <mask> element or a CSS image.\"\n                    },\n                    {\n                        name: \"luminance\",\n                        desc: \"Luminance values of the mask layer image should be used as the mask values.\"\n                    }\n                ]\n            },\n            {\n                name: \"mask-origin\",\n                desc: \"Specifies the mask positioning area.\",\n                browsers: \"FF53\",\n                restriction: \"geometry-box, enum\"\n            },\n            {\n                name: \"mask-position\",\n                desc: \"Specifies how mask layer images are positioned.\",\n                browsers: \"FF53\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"mask-repeat\",\n                desc: \"Specifies how mask layer images are tiled after they have been sized and positioned.\",\n                browsers: \"FF53\",\n                restriction: \"repeat\"\n            },\n            {\n                name: \"mask-size\",\n                desc: \"Specifies the size of the mask layer images.\",\n                browsers: \"F53\",\n                restriction: \"length, percentage, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                    },\n                    {\n                        name: \"contain\",\n                        desc: \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                    },\n                    {\n                        name: \"cover\",\n                        desc: \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                    }\n                ]\n            },\n            {\n                name: \"mask-type\",\n                desc: \"Defines whether the content of the <mask> element is treated as as luminance mask or alpha mask.\",\n                browsers: \"C24,FF35,O15,S7\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"alpha\",\n                        desc: \"Indicates that the alpha values of the mask should be used.\"\n                    },\n                    {\n                        name: \"luminance\",\n                        desc: \"Indicates that the luminance values of the mask should be used.\"\n                    }\n                ]\n            },\n            {\n                name: \"max-block-size\",\n                desc: \"Logical 'max-width'. Mapping depends on the element’s 'writing-mode'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No limit on the width of the box.\"\n                    }\n                ]\n            },\n            {\n                name: \"max-height\",\n                desc: \"Allows authors to constrain content height to a certain range.\",\n                browsers: \"E,C,FF1,IE7,O7,S1\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No limit on the height of the box.\"\n                    },\n                    {\n                        name: \"fit-content\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    }\n                ]\n            },\n            {\n                name: \"max-inline-size\",\n                desc: \"Logical 'max-height'. Mapping depends on the element’s 'writing-mode'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No limit on the height of the box.\"\n                    }\n                ]\n            },\n            {\n                name: \"max-width\",\n                desc: \"Allows authors to constrain content width to a certain range.\",\n                browsers: \"E,C,FF1,IE7,O7,S1\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No limit on the width of the box.\"\n                    },\n                    {\n                        name: \"fit-content\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    }\n                ]\n            },\n            {\n                name: \"min-block-size\",\n                desc: \"Logical 'min-width'. Mapping depends on the element’s 'writing-mode'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"min-height\",\n                desc: \"Allows authors to constrain content height to a certain range.\",\n                browsers: \"E,C,FF1,IE7,O7,S1\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        browsers: \"E,IE11\"\n                    },\n                    {\n                        name: \"fit-content\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    }\n                ]\n            },\n            {\n                name: \"min-inline-size\",\n                desc: \"Logical 'min-height'. Mapping depends on the element’s 'writing-mode'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"min-width\",\n                desc: \"Allows authors to constrain content width to a certain range.\",\n                browsers: \"E,C,FF1,IE7,O7,S1\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        browsers: \"E,IE11\"\n                    },\n                    {\n                        name: \"fit-content\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    }\n                ]\n            },\n            {\n                name: \"mix-blend-mode\",\n                desc: \"Defines the formula that must be used to mix the colors with the backdrop.\",\n                browsers: \"C41,FF32,O29,S7.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"Default attribute which specifies no blending\"\n                    },\n                    {\n                        name: \"multiply\"\n                    },\n                    {\n                        name: \"screen\"\n                    },\n                    {\n                        name: \"overlay\"\n                    },\n                    {\n                        name: \"darken\"\n                    },\n                    {\n                        name: \"lighten\"\n                    },\n                    {\n                        name: \"color-dodge\"\n                    },\n                    {\n                        name: \"color-burn\"\n                    },\n                    {\n                        name: \"hard-light\"\n                    },\n                    {\n                        name: \"soft-light\"\n                    },\n                    {\n                        name: \"difference\"\n                    },\n                    {\n                        name: \"exclusion\"\n                    },\n                    {\n                        name: \"hue\",\n                        browsers: \"C41,FF32,O29\"\n                    },\n                    {\n                        name: \"saturation\",\n                        browsers: \"C41,FF32,O29\"\n                    },\n                    {\n                        name: \"color\",\n                        browsers: \"C41,FF32,O29\"\n                    },\n                    {\n                        name: \"luminosity\",\n                        browsers: \"C41,FF32,O29\"\n                    }\n                ]\n            },\n            {\n                name: \"motion\",\n                desc: \"Shorthand property for setting 'motion-path', 'motion-offset' and 'motion-rotation'.\",\n                browsers: \"C46,O33\",\n                restriction: \"url, length, percentage, angle, shape, geometry-box, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No motion path gets created.\"\n                    },\n                    {\n                        name: \"path()\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Indicates that the object is rotated by the angle of the direction of the motion path.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees.\"\n                    }\n                ]\n            },\n            {\n                name: \"motion-offset\",\n                desc: \"A distance that describes the position along the specified motion path.\",\n                browsers: \"C46,O33\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"motion-path\",\n                desc: \"Specifies the motion path the element gets positioned at.\",\n                browsers: \"C46,O33\",\n                restriction: \"url, shape, geometry-box, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No motion path gets created.\"\n                    },\n                    {\n                        name: \"path()\"\n                    }\n                ]\n            },\n            {\n                name: \"motion-rotation\",\n                desc: \"Defines the direction of the element while positioning along the motion path.\",\n                browsers: \"C46,O33\",\n                restriction: \"angle\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Indicates that the object is rotated by the angle of the direction of the motion path.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-animation\",\n                desc: \"Shorthand property combines six of the animation properties into a single property.\",\n                browsers: \"FF9\",\n                restriction: \"time, enum, timing-function, identifier, number\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-animation-delay\",\n                desc: \"Defines when the animation will start.\",\n                browsers: \"FF9\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-moz-animation-direction\",\n                desc: \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n                browsers: \"FF9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-animation-duration\",\n                desc: \"Defines the length of time that an animation takes to complete one cycle.\",\n                browsers: \"FF9\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-moz-animation-iteration-count\",\n                desc: \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n                browsers: \"FF9\",\n                restriction: \"number, enum\",\n                values: [\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-animation-name\",\n                desc: \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n                browsers: \"FF9\",\n                restriction: \"identifier, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-animation-play-state\",\n                desc: \"Defines whether the animation is running or paused.\",\n                browsers: \"FF9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"paused\"\n                    },\n                    {\n                        name: \"running\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-animation-timing-function\",\n                desc: \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n                browsers: \"FF9\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"-moz-appearance\",\n                desc: \"Used in Gecko (Firefox) to display an element using a platform-native styling based on the operating system's theme.\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"button\"\n                    },\n                    {\n                        name: \"button-arrow-down\"\n                    },\n                    {\n                        name: \"button-arrow-next\"\n                    },\n                    {\n                        name: \"button-arrow-previous\"\n                    },\n                    {\n                        name: \"button-arrow-up\"\n                    },\n                    {\n                        name: \"button-bevel\"\n                    },\n                    {\n                        name: \"checkbox\"\n                    },\n                    {\n                        name: \"checkbox-container\"\n                    },\n                    {\n                        name: \"checkbox-label\"\n                    },\n                    {\n                        name: \"dialog\"\n                    },\n                    {\n                        name: \"groupbox\"\n                    },\n                    {\n                        name: \"listbox\"\n                    },\n                    {\n                        name: \"menuarrow\"\n                    },\n                    {\n                        name: \"menuimage\"\n                    },\n                    {\n                        name: \"menuitem\"\n                    },\n                    {\n                        name: \"menuitemtext\"\n                    },\n                    {\n                        name: \"menulist\"\n                    },\n                    {\n                        name: \"menulist-button\"\n                    },\n                    {\n                        name: \"menulist-text\"\n                    },\n                    {\n                        name: \"menulist-textfield\"\n                    },\n                    {\n                        name: \"menupopup\"\n                    },\n                    {\n                        name: \"menuradio\"\n                    },\n                    {\n                        name: \"menuseparator\"\n                    },\n                    {\n                        name: \"-moz-mac-unified-toolbar\"\n                    },\n                    {\n                        name: \"-moz-win-borderless-glass\"\n                    },\n                    {\n                        name: \"-moz-win-browsertabbar-toolbox\"\n                    },\n                    {\n                        name: \"-moz-win-communications-toolbox\"\n                    },\n                    {\n                        name: \"-moz-win-glass\"\n                    },\n                    {\n                        name: \"-moz-win-media-toolbox\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"progressbar\"\n                    },\n                    {\n                        name: \"progresschunk\"\n                    },\n                    {\n                        name: \"radio\"\n                    },\n                    {\n                        name: \"radio-container\"\n                    },\n                    {\n                        name: \"radio-label\"\n                    },\n                    {\n                        name: \"radiomenuitem\"\n                    },\n                    {\n                        name: \"resizer\"\n                    },\n                    {\n                        name: \"resizerpanel\"\n                    },\n                    {\n                        name: \"scrollbarbutton-down\"\n                    },\n                    {\n                        name: \"scrollbarbutton-left\"\n                    },\n                    {\n                        name: \"scrollbarbutton-right\"\n                    },\n                    {\n                        name: \"scrollbarbutton-up\"\n                    },\n                    {\n                        name: \"scrollbar-small\"\n                    },\n                    {\n                        name: \"scrollbartrack-horizontal\"\n                    },\n                    {\n                        name: \"scrollbartrack-vertical\"\n                    },\n                    {\n                        name: \"separator\"\n                    },\n                    {\n                        name: \"spinner\"\n                    },\n                    {\n                        name: \"spinner-downbutton\"\n                    },\n                    {\n                        name: \"spinner-textfield\"\n                    },\n                    {\n                        name: \"spinner-upbutton\"\n                    },\n                    {\n                        name: \"statusbar\"\n                    },\n                    {\n                        name: \"statusbarpanel\"\n                    },\n                    {\n                        name: \"tab\"\n                    },\n                    {\n                        name: \"tabpanels\"\n                    },\n                    {\n                        name: \"tab-scroll-arrow-back\"\n                    },\n                    {\n                        name: \"tab-scroll-arrow-forward\"\n                    },\n                    {\n                        name: \"textfield\"\n                    },\n                    {\n                        name: \"textfield-multiline\"\n                    },\n                    {\n                        name: \"toolbar\"\n                    },\n                    {\n                        name: \"toolbox\"\n                    },\n                    {\n                        name: \"tooltip\"\n                    },\n                    {\n                        name: \"treeheadercell\"\n                    },\n                    {\n                        name: \"treeheadersortarrow\"\n                    },\n                    {\n                        name: \"treeitem\"\n                    },\n                    {\n                        name: \"treetwistyopen\"\n                    },\n                    {\n                        name: \"treeview\"\n                    },\n                    {\n                        name: \"treewisty\"\n                    },\n                    {\n                        name: \"window\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-backface-visibility\",\n                desc: \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n                browsers: \"FF10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"hidden\"\n                    },\n                    {\n                        name: \"visible\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-background-clip\",\n                desc: \"Determines the background painting area.\",\n                browsers: \"FF1-3.6\",\n                restriction: \"box, enum\",\n                values: [\n                    {\n                        name: \"padding\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-background-inline-policy\",\n                desc: \"In Gecko-based applications like Firefox, the -moz-background-inline-policy CSS property specifies how the background image of an inline element is determined when the content of the inline element wraps onto multiple lines. The choice of position has significant effects on repetition.\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bounding-box\"\n                    },\n                    {\n                        name: \"continuous\"\n                    },\n                    {\n                        name: \"each-box\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-background-origin\",\n                desc: \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n                browsers: \"FF1\",\n                restriction: \"box\"\n            },\n            {\n                name: \"-moz-border-bottom-colors\",\n                desc: \"Sets a list of colors for the bottom border.\",\n                browsers: \"FF1\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-moz-border-image\",\n                desc: \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n                browsers: \"FF3.6\",\n                restriction: \"length, percentage, number, url, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"Causes the middle part of the border-image to be preserved.\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"repeat\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                    },\n                    {\n                        name: \"space\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The image is stretched to fill the area.\"\n                    },\n                    {\n                        name: \"url()\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-border-left-colors\",\n                desc: \"Sets a list of colors for the bottom border.\",\n                browsers: \"FF1\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-moz-border-right-colors\",\n                desc: \"Sets a list of colors for the bottom border.\",\n                browsers: \"FF1\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-moz-border-top-colors\",\n                desc: \"Ske Firefox, -moz-border-bottom-colors sets a list of colors for the bottom border.\",\n                browsers: \"FF1\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-moz-box-align\",\n                desc: \"Specifies how a XUL box aligns its contents across (perpendicular to) the direction of its layout. The effect of this is only visible if there is extra space in the box.\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"baseline\",\n                        desc: \"If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"Any extra space is divided evenly, with half placed above the child and the other half placed after the child.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The height of each child is adjusted to that of the containing block.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-box-direction\",\n                desc: \"Specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-box-flex\",\n                desc: \"Specifies how a box grows to fill the box that contains it, in the direction of the containing box's layout.\",\n                browsers: \"FF1\",\n                restriction: \"number\"\n            },\n            {\n                name: \"-moz-box-flexgroup\",\n                desc: \"Flexible elements can be assigned to flex groups using the 'box-flex-group' property.\",\n                browsers: \"FF1\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-moz-box-ordinal-group\",\n                desc: \"Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\",\n                browsers: \"FF1\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-moz-box-orient\",\n                desc: \"In Mozilla applications, -moz-box-orient specifies whether a box lays out its contents horizontally or vertically.\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"block-axis\"\n                    },\n                    {\n                        name: \"horizontal\",\n                        desc: \"The box displays its children from left to right in a horizontal line.\"\n                    },\n                    {\n                        name: \"inline-axis\"\n                    },\n                    {\n                        name: \"vertical\",\n                        desc: \"The box displays its children from stacked from top to bottom vertically.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-box-pack\",\n                desc: \"Specifies how a box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"The extra space is divided evenly, with half placed before the first child and the other half placed after the last child.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-box-sizing\",\n                desc: \"Box Model addition in CSS3.\",\n                browsers: \"FF1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"border-box\"\n                    },\n                    {\n                        name: \"content-box\"\n                    },\n                    {\n                        name: \"padding-box\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-column-count\",\n                desc: \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n                browsers: \"FF3.5\",\n                restriction: \"integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Determines the number of columns by the 'column-width' property and the element width.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-column-gap\",\n                desc: \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n                browsers: \"FF3.5\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"User agent specific and typically equivalent to 1em.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-column-rule\",\n                desc: \"Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n                browsers: \"FF3.5\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"-moz-column-rule-color\",\n                desc: \"Sets the color of the column rule\",\n                browsers: \"FF3.5\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-moz-column-rule-style\",\n                desc: \"Sets the style of the rule between columns of an element.\",\n                browsers: \"FF3.5\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"-moz-column-rule-width\",\n                desc: \"Sets the width of the rule between columns. Negative values are not allowed.\",\n                browsers: \"FF3.5\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"-moz-columns\",\n                desc: \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n                browsers: \"FF9\",\n                restriction: \"length, integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-column-width\",\n                desc: \"This property describes the width of columns in multicol elements.\",\n                browsers: \"FF3.5\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-font-feature-settings\",\n                desc: \"Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n                browsers: \"FF4\",\n                restriction: \"string, integer\",\n                values: [\n                    {\n                        name: \"\\\"c2cs\\\"\"\n                    },\n                    {\n                        name: \"\\\"dlig\\\"\"\n                    },\n                    {\n                        name: \"\\\"kern\\\"\"\n                    },\n                    {\n                        name: \"\\\"liga\\\"\"\n                    },\n                    {\n                        name: \"\\\"lnum\\\"\"\n                    },\n                    {\n                        name: \"\\\"onum\\\"\"\n                    },\n                    {\n                        name: \"\\\"smcp\\\"\"\n                    },\n                    {\n                        name: \"\\\"swsh\\\"\"\n                    },\n                    {\n                        name: \"\\\"tnum\\\"\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"No change in glyph substitution or positioning occurs.\"\n                    },\n                    {\n                        name: \"off\",\n                        browsers: \"FF15\"\n                    },\n                    {\n                        name: \"on\",\n                        browsers: \"FF15\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-hyphens\",\n                desc: \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n                browsers: \"FF9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                    },\n                    {\n                        name: \"manual\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-perspective\",\n                desc: \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n                browsers: \"FF10\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No perspective transform is applied.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-perspective-origin\",\n                desc: \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n                browsers: \"FF10\",\n                restriction: \"position, percentage, length\"\n            },\n            {\n                name: \"-moz-text-align-last\",\n                desc: \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n                browsers: \"FF12\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The inline contents are centered within the line box.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"The text is justified according to the method specified by the 'text-justify' property.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-text-decoration-color\",\n                desc: \"Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.\",\n                browsers: \"FF6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-moz-text-decoration-line\",\n                desc: \"Specifies what line decorations, if any, are added to the element.\",\n                browsers: \"FF6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"line-through\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Neither produces nor inhibits text decoration.\"\n                    },\n                    {\n                        name: \"overline\"\n                    },\n                    {\n                        name: \"underline\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-text-decoration-style\",\n                desc: \"Specifies the line style for underline, line-through and overline text decoration.\",\n                browsers: \"FF6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"dashed\"\n                    },\n                    {\n                        name: \"dotted\"\n                    },\n                    {\n                        name: \"double\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Produces no line.\"\n                    },\n                    {\n                        name: \"solid\"\n                    },\n                    {\n                        name: \"wavy\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-text-size-adjust\",\n                desc: \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n                browsers: \"FF\",\n                restriction: \"enum, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Renderers must use the default size adjustment when displaying on a small device.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Renderers must not do size adjustment when displaying on a small device.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-transform\",\n                desc: \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n                browsers: \"FF3.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"matrix()\"\n                    },\n                    {\n                        name: \"matrix3d()\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"perspective\"\n                    },\n                    {\n                        name: \"rotate()\"\n                    },\n                    {\n                        name: \"rotate3d()\"\n                    },\n                    {\n                        name: \"rotateX('angle')\"\n                    },\n                    {\n                        name: \"rotateY('angle')\"\n                    },\n                    {\n                        name: \"rotateZ('angle')\"\n                    },\n                    {\n                        name: \"scale()\"\n                    },\n                    {\n                        name: \"scale3d()\"\n                    },\n                    {\n                        name: \"scaleX()\"\n                    },\n                    {\n                        name: \"scaleY()\"\n                    },\n                    {\n                        name: \"scaleZ()\"\n                    },\n                    {\n                        name: \"skew()\"\n                    },\n                    {\n                        name: \"skewX()\"\n                    },\n                    {\n                        name: \"skewY()\"\n                    },\n                    {\n                        name: \"translate()\"\n                    },\n                    {\n                        name: \"translate3d()\"\n                    },\n                    {\n                        name: \"translateX()\"\n                    },\n                    {\n                        name: \"translateY()\"\n                    },\n                    {\n                        name: \"translateZ()\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-transform-origin\",\n                desc: \"Establishes the origin of transformation for an element.\",\n                browsers: \"FF3.5\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"-moz-transition\",\n                desc: \"Shorthand property combines four of the transition properties into a single property.\",\n                browsers: \"FF4\",\n                restriction: \"time, property, timing-function, enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-transition-delay\",\n                desc: \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n                browsers: \"FF4\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-moz-transition-duration\",\n                desc: \"Specifies how long the transition from the old value to the new value should take.\",\n                browsers: \"FF4\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-moz-transition-property\",\n                desc: \"Specifies the name of the CSS property to which the transition is applied.\",\n                browsers: \"FF4\",\n                restriction: \"property\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-transition-timing-function\",\n                desc: \"Describes how the intermediate values used during a transition will be calculated.\",\n                browsers: \"FF4\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"-moz-user-focus\",\n                desc: \"Used to indicate whether the element can have focus.\",\n                browsers: \"FF1.5\",\n                values: [\n                    {\n                        name: \"ignore\"\n                    },\n                    {\n                        name: \"normal\"\n                    }\n                ]\n            },\n            {\n                name: \"-moz-user-select\",\n                desc: \"Controls the appearance of selection.\",\n                browsers: \"FF1.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"all\"\n                    },\n                    {\n                        name: \"element\"\n                    },\n                    {\n                        name: \"elements\"\n                    },\n                    {\n                        name: \"-moz-all\"\n                    },\n                    {\n                        name: \"-moz-none\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"text\"\n                    },\n                    {\n                        name: \"toggle\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-accelerator\",\n                desc: \"IE only. Has the ability to turn off its system underlines for accelerator keys until the ALT key is pressed\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"false\"\n                    },\n                    {\n                        name: \"true\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-behavior\",\n                desc: \"IE only. Used to extend behaviors of the browser\",\n                browsers: \"IE8\",\n                restriction: \"url\"\n            },\n            {\n                name: \"-ms-block-progression\",\n                desc: \"Sets the block-progression value and the flow orientation\",\n                browsers: \"IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bt\"\n                    },\n                    {\n                        name: \"lr\"\n                    },\n                    {\n                        name: \"rl\"\n                    },\n                    {\n                        name: \"tb\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-content-zoom-chaining\",\n                desc: \"Specifies the zoom behavior that occurs when a user hits the zoom limit during a manipulation.\",\n                browsers: \"E,IE10\",\n                values: [\n                    {\n                        name: \"chained\",\n                        desc: \"The nearest zoomable parent element begins zooming when the user hits a zoom limit during a manipulation. No bounce effect is shown.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"A bounce effect is shown when the user hits a zoom limit during a manipulation.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-content-zooming\",\n                desc: \"Specifies whether zooming is enabled.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The element is not zoomable.\"\n                    },\n                    {\n                        name: \"zoom\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-content-zoom-limit\",\n                desc: \"Shorthand property for the -ms-content-zoom-limit-min and -ms-content-zoom-limit-max properties.\",\n                browsers: \"E,IE10\",\n                restriction: \"percentage\"\n            },\n            {\n                name: \"-ms-content-zoom-limit-max\",\n                desc: \"Specifies the maximum zoom factor.\",\n                browsers: \"E,IE10\",\n                restriction: \"percentage\"\n            },\n            {\n                name: \"-ms-content-zoom-limit-min\",\n                desc: \"Specifies the minimum zoom factor.\",\n                browsers: \"E,IE10\",\n                restriction: \"percentage\"\n            },\n            {\n                name: \"-ms-content-zoom-snap\",\n                desc: \"Shorthand property for the -ms-content-zoom-snap-type and -ms-content-zoom-snap-points properties.\",\n                browsers: \"E,IE10\",\n                values: [\n                    {\n                        name: \"mandatory\",\n                        desc: \"Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that zooming is unaffected by any defined snap-points.\"\n                    },\n                    {\n                        name: \"proximity\",\n                        desc: \"Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop \\\"close enough\\\" to a snap-point.\"\n                    },\n                    {\n                        name: \"snapInterval(100%, 100%)\",\n                        desc: \"Specifies where the snap-points will be placed.\"\n                    },\n                    {\n                        name: \"snapList()\",\n                        desc: \"Specifies the position of individual snap-points as a comma-separated list of zoom factors.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-content-zoom-snap-points\",\n                desc: \"Defines where zoom snap-points are located.\",\n                browsers: \"E,IE10\",\n                values: [\n                    {\n                        name: \"snapInterval(100%, 100%)\",\n                        desc: \"Specifies where the snap-points will be placed.\"\n                    },\n                    {\n                        name: \"snapList()\",\n                        desc: \"Specifies the position of individual snap-points as a comma-separated list of zoom factors.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-content-zoom-snap-type\",\n                desc: \"Specifies how zooming is affected by defined snap-points.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"mandatory\",\n                        desc: \"Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that zooming is unaffected by any defined snap-points.\"\n                    },\n                    {\n                        name: \"proximity\",\n                        desc: \"Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop \\\"close enough\\\" to a snap-point.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-filter\",\n                desc: \"IE only. Used to produce visual effects.\",\n                browsers: \"IE8-9\",\n                restriction: \"string\"\n            },\n            {\n                name: \"-ms-flex\",\n                desc: \"specifies the parameters of a flexible length: the positive and negative flexibility, and the preferred size.\",\n                browsers: \"IE10\",\n                restriction: \"length, number, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Expands to '0 0 auto'.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-align\",\n                desc: \"Aligns flex items along the cross axis of the current line of the flex container.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"baseline\",\n                        desc: \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The flex item’s margin box is centered in the cross axis within the line.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"The cross-start margin edge of the flexbox item is placed flush with the cross-start edge of the line.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the cross size property of the flexbox item is anything other than 'auto', this value is identical to 'start'.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-direction\",\n                desc: \"Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"column\",\n                        desc: \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"column-reverse\"\n                    },\n                    {\n                        name: \"row\",\n                        desc: \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"row-reverse\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-flow\",\n                desc: \"Specifies how flexbox items are placed in the flexbox.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"column\",\n                        desc: \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"column-reverse\"\n                    },\n                    {\n                        name: \"nowrap\",\n                        desc: \"The flex container is single-line.\"\n                    },\n                    {\n                        name: \"row\",\n                        desc: \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                    },\n                    {\n                        name: \"wrap\",\n                        desc: \"The flexbox is multi-line.\"\n                    },\n                    {\n                        name: \"wrap-reverse\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-item-align\",\n                desc: \"Allows the default alignment along the cross axis to be overridden for individual flex items.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself.\"\n                    },\n                    {\n                        name: \"baseline\",\n                        desc: \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The flex item’s margin box is centered in the cross axis within the line.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-line-pack\",\n                desc: \"Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"Lines are packed toward the center of the flex container.\"\n                    },\n                    {\n                        name: \"distribute\",\n                        desc: \"Lines are evenly distributed in the flex container, with half-size spaces on either end.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"Lines are packed toward the end of the flex container.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"Lines are evenly distributed in the flex container.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"Lines are packed toward the start of the flex container.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"Lines stretch to take up the remaining space.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-order\",\n                desc: \"Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.\",\n                browsers: \"IE10\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-ms-flex-pack\",\n                desc: \"Aligns flex items along the main axis of the current line of the flex container.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"Flex items are packed toward the center of the line.\"\n                    },\n                    {\n                        name: \"distribute\",\n                        desc: \"Flex items are evenly distributed in the line, with half-size spaces on either end.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"Flex items are packed toward the end of the line.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"Flex items are evenly distributed in the line.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"Flex items are packed toward the start of the line.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flex-wrap\",\n                desc: \"Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"nowrap\",\n                        desc: \"The flex container is single-line.\"\n                    },\n                    {\n                        name: \"wrap\",\n                        desc: \"The flexbox is multi-line.\"\n                    },\n                    {\n                        name: \"wrap-reverse\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flow-from\",\n                desc: \"Makes a block container a region and associates it with a named flow.\",\n                browsers: \"E,IE10\",\n                restriction: \"identifier\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The block container is not a CSS Region.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-flow-into\",\n                desc: \"Places an element or its contents into a named flow.\",\n                browsers: \"E,IE10\",\n                restriction: \"identifier\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The element is not moved to a named flow and normal CSS processing takes place.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-grid-column\",\n                desc: \"Used to place grid items and explicitly defined grid cells in the Grid.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer, string, enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"end\"\n                    },\n                    {\n                        name: \"start\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-grid-column-align\",\n                desc: \"Aligns the columns in a grid.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"Places the center of the Grid Item's margin box at the center of the Grid Item's column.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's column.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's column.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"Ensures that the Grid Item's margin box is equal to the size of the Grid Item's column.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-grid-columns\",\n                desc: \"Lays out the columns of the grid.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"-ms-grid-column-span\",\n                desc: \"Specifies the number of columns to span.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-ms-grid-layer\",\n                desc: \"Grid-layer is similar in concept to z-index, but avoids overloading the meaning of the z-index property, which is applicable only to positioned elements.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-ms-grid-row\",\n                desc: \"grid-row is used to place grid items and explicitly defined grid cells in the Grid.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer, string, enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"end\"\n                    },\n                    {\n                        name: \"start\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-grid-row-align\",\n                desc: \"Aligns the rows in a grid.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"Places the center of the Grid Item's margin box at the center of the Grid Item's row.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's row.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's row.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"Ensures that the Grid Item's margin box is equal to the size of the Grid Item's row.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-grid-rows\",\n                desc: \"Lays out the columns of the grid.\",\n                browsers: \"E,IE10\"\n            },\n            {\n                name: \"-ms-grid-row-span\",\n                desc: \"Specifies the number of rows to span.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-ms-high-contrast-adjust\",\n                desc: \"Specifies if properties should be adjusted in high contrast mode.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Properties will be adjusted as applicable.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No adjustments will be applied.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-hyphenate-limit-chars\",\n                desc: \"Specifies the minimum number of characters in a hyphenated word.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent chooses a value that adapts to the current layout.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-hyphenate-limit-lines\",\n                desc: \"Indicates the maximum number of successive hyphenated lines in an element.\",\n                browsers: \"E,IE10\",\n                restriction: \"integer\",\n                values: [\n                    {\n                        name: \"no-limit\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-hyphenate-limit-zone\",\n                desc: \"Specifies the maximum amount of unfilled space (before justification) that may be left in the line box before hyphenation is triggered to pull part of a word from the next line back up into the current line.\",\n                browsers: \"E,IE10\",\n                restriction: \"percentage, length\"\n            },\n            {\n                name: \"-ms-hyphens\",\n                desc: \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                    },\n                    {\n                        name: \"manual\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-ime-mode\",\n                desc: \"Controls the state of the input method editor for text fields.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"active\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"No change is made to the current input method editor state. This is the default.\"\n                    },\n                    {\n                        name: \"disabled\"\n                    },\n                    {\n                        name: \"inactive\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"The IME state should be normal; this value can be used in a user style sheet to override the page setting.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-interpolation-mode\",\n                desc: \"Gets or sets the interpolation (resampling) method used to stretch images.\",\n                browsers: \"IE7\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bicubic\"\n                    },\n                    {\n                        name: \"nearest-neighbor\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-layout-grid\",\n                desc: \"Sets or retrieves the composite document grid properties that specify the layout of text characters.\",\n                browsers: \"E,IE10\",\n                values: [\n                    {\n                        name: \"char\",\n                        desc: \"Any of the range of character values available to the -ms-layout-grid-char property.\"\n                    },\n                    {\n                        name: \"line\",\n                        desc: \"Any of the range of line values available to the -ms-layout-grid-line property.\"\n                    },\n                    {\n                        name: \"mode\"\n                    },\n                    {\n                        name: \"type\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-layout-grid-char\",\n                desc: \"Sets or retrieves the size of the character grid used for rendering the text content of an element.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum, length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Largest character in the font of the element is used to set the character grid.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Default. No character grid is set.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-layout-grid-line\",\n                desc: \"Sets or retrieves the gridline value used for rendering the text content of an element.\",\n                browsers: \"E,IE10\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Largest character in the font of the element is used to set the character grid.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Default. No grid line is set.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-layout-grid-mode\",\n                desc: \"Gets or sets whether the text layout grid uses two dimensions.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"both\",\n                        desc: \"Default. Both the char and line grid modes are enabled. This setting is necessary to fully enable the layout grid on an element.\"\n                    },\n                    {\n                        name: \"char\",\n                        desc: \"Only a character grid is used. This is recommended for use with block-level elements, such as a blockquote, where the line grid is intended to be disabled.\"\n                    },\n                    {\n                        name: \"line\",\n                        desc: \"Only a line grid is used. This is recommended for use with inline elements, such as a span, to disable the horizontal grid on runs of text that act as a single entity in the grid layout.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No grid is used.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-layout-grid-type\",\n                desc: \"Sets or retrieves the type of grid used for rendering the text content of an element.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"fixed\",\n                        desc: \"Grid used for monospaced layout. All noncursive characters are treated as equal; every character is centered within a single grid space by default.\"\n                    },\n                    {\n                        name: \"loose\",\n                        desc: \"Default. Grid used for Japanese and Korean characters.\"\n                    },\n                    {\n                        name: \"strict\",\n                        desc: \"Grid used for Chinese, as well as Japanese (Genko) and Korean characters. Only the ideographs, kanas, and wide characters are snapped to the grid.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-line-break\",\n                desc: \"Specifies what set of line breaking restrictions are in effect within the element.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.\"\n                    },\n                    {\n                        name: \"keep-all\",\n                        desc: \"Sequences of CJK characters can no longer break on implied break points. This option should only be used where the presence of word separator characters still creates line-breaking opportunities, as in Korean.\"\n                    },\n                    {\n                        name: \"newspaper\",\n                        desc: \"Breaks CJK scripts using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Breaks CJK scripts using a normal set of line-breaking rules.\"\n                    },\n                    {\n                        name: \"strict\",\n                        desc: \"Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-overflow-style\",\n                desc: \"Specify whether content is clipped when it overflows the element's content area.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"No preference, UA should use the first scrolling method in the list that it supports.\"\n                    },\n                    {\n                        name: \"-ms-autohiding-scrollbar\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Indicates the element does not display scrollbars or panning indicators, even when its content overflows.\"\n                    },\n                    {\n                        name: \"scrollbar\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-perspective\",\n                desc: \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n                browsers: \"IE10\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No perspective transform is applied.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-perspective-origin\",\n                desc: \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n                browsers: \"IE10\",\n                restriction: \"position, percentage, length\"\n            },\n            {\n                name: \"-ms-perspective-origin-x\",\n                desc: \"Establishes the origin for the perspective property. It effectively sets the X  position at which the viewer appears to be looking at the children of the element.\",\n                browsers: \"IE10\",\n                restriction: \"position, percentage, length\"\n            },\n            {\n                name: \"-ms-perspective-origin-y\",\n                desc: \"Establishes the origin for the perspective property. It effectively sets the Y position at which the viewer appears to be looking at the children of the element.\",\n                browsers: \"IE10\",\n                restriction: \"position, percentage, length\"\n            },\n            {\n                name: \"-ms-progress-appearance\",\n                desc: \"Gets or sets a value that specifies whether a progress control displays as a bar or a ring.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bar\"\n                    },\n                    {\n                        name: \"ring\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scrollbar-3dlight-color\",\n                desc: \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-arrow-color\",\n                desc: \"Determines the color of the arrow elements of a scroll arrow.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-base-color\",\n                desc: \"Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-darkshadow-color\",\n                desc: \"Determines the color of the gutter of a scroll bar.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-face-color\",\n                desc: \"Determines the color of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-highlight-color\",\n                desc: \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-shadow-color\",\n                desc: \"Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scrollbar-track-color\",\n                desc: \"Determines the color of the track element of a scroll bar.\",\n                browsers: \"IE8\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-ms-scroll-chaining\",\n                desc: \"Gets or sets a value that indicates the scrolling behavior that occurs when a user hits the content boundary during a manipulation.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum, length\",\n                values: [\n                    {\n                        name: \"chained\"\n                    },\n                    {\n                        name: \"none\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-limit\",\n                desc: \"Gets or sets a shorthand value that sets values for the -ms-scroll-limit-x-min, -ms-scroll-limit-y-min, -ms-scroll-limit-x-max, and -ms-scroll-limit-y-max properties.\",\n                browsers: \"E,IE10\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-limit-x-max\",\n                desc: \"Gets or sets a value that specifies the maximum value for the scrollLeft property.\",\n                browsers: \"E,IE10\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-limit-x-min\",\n                desc: \"Gets or sets a value that specifies the minimum value for the scrollLeft property.\",\n                browsers: \"E,IE10\",\n                restriction: \"length\"\n            },\n            {\n                name: \"-ms-scroll-limit-y-max\",\n                desc: \"Gets or sets a value that specifies the maximum value for the scrollTop property.\",\n                browsers: \"E,IE10\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-limit-y-min\",\n                desc: \"Gets or sets a value that specifies the minimum value for the scrollTop property.\",\n                browsers: \"E,IE10\",\n                restriction: \"length\"\n            },\n            {\n                name: \"-ms-scroll-rails\",\n                desc: \"Gets or sets a value that indicates whether or not small motions perpendicular to the primary axis of motion will result in either changes to both the scrollTop and scrollLeft properties or a change to the primary axis (for instance, either the scrollTop or scrollLeft properties will change, but not both).\",\n                browsers: \"E,IE10\",\n                restriction: \"enum, length\",\n                values: [\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"railed\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-snap-points-x\",\n                desc: \"Gets or sets a value that defines where snap-points will be located along the x-axis.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"snapInterval(100%, 100%)\"\n                    },\n                    {\n                        name: \"snapList()\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-snap-points-y\",\n                desc: \"Gets or sets a value that defines where snap-points will be located along the y-axis.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"snapInterval(100%, 100%)\"\n                    },\n                    {\n                        name: \"snapList()\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-snap-type\",\n                desc: \"Gets or sets a value that defines what type of snap-point should be used for the current element. There are two type of snap-points, with the primary difference being whether or not the user is guaranteed to always stop on a snap-point.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The visual viewport of this scroll container must ignore snap points, if any, when scrolled.\"\n                    },\n                    {\n                        name: \"mandatory\",\n                        desc: \"The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations.\"\n                    },\n                    {\n                        name: \"proximity\",\n                        desc: \"The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-snap-x\",\n                desc: \"Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-x properties.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"mandatory\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"proximity\"\n                    },\n                    {\n                        name: \"snapInterval(100%, 100%)\"\n                    },\n                    {\n                        name: \"snapList()\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-snap-y\",\n                desc: \"Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-y properties.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"mandatory\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"proximity\"\n                    },\n                    {\n                        name: \"snapInterval(100%, 100%)\"\n                    },\n                    {\n                        name: \"snapList()\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-scroll-translation\",\n                desc: \"Gets or sets a value that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"vertical-to-horizontal\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-align-last\",\n                desc: \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n                browsers: \"E,IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The inline contents are centered within the line box.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"The text is justified according to the method specified by the 'text-justify' property.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-autospace\",\n                desc: \"Determines whether or not a full-width punctuation mark character should be trimmed if it appears at the beginning of a line, so that its 'ink' lines up with the first glyph in the line above and below.\",\n                browsers: \"E,IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"ideograph-alpha\"\n                    },\n                    {\n                        name: \"ideograph-numeric\"\n                    },\n                    {\n                        name: \"ideograph-parenthesis\"\n                    },\n                    {\n                        name: \"ideograph-space\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No extra space is created.\"\n                    },\n                    {\n                        name: \"punctuation\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-combine-horizontal\",\n                desc: \"This property specifies the combination of multiple characters into the space of a single character.\",\n                browsers: \"E,IE11\",\n                restriction: \"enum, integer\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Attempt to typeset horizontally all consecutive characters within the box such that they take up the space of a single character within the vertical line box.\"\n                    },\n                    {\n                        name: \"digits\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No special processing.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-justify\",\n                desc: \"Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.\",\n                browsers: \"E,IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality.\"\n                    },\n                    {\n                        name: \"distribute\",\n                        desc: \"Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property.\"\n                    },\n                    {\n                        name: \"inter-cluster\"\n                    },\n                    {\n                        name: \"inter-ideograph\"\n                    },\n                    {\n                        name: \"inter-word\"\n                    },\n                    {\n                        name: \"kashida\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-kashida-space\",\n                desc: \"Sets or retrieves the ratio of kashida expansion to white space expansion when justifying lines of text in the object.\",\n                browsers: \"E,IE10\",\n                restriction: \"percentage\"\n            },\n            {\n                name: \"-ms-text-overflow\",\n                desc: \"Text can overflow for example when it is prevented from wrapping\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"clip\"\n                    },\n                    {\n                        name: \"ellipsis\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-size-adjust\",\n                desc: \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Renderers must use the default size adjustment when displaying on a small device.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Renderers must not do size adjustment when displaying on a small device.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-text-underline-position\",\n                desc: \"Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements.This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"alphabetic\",\n                        desc: \"The underline is aligned with the alphabetic baseline. In this case the underline is likely to cross some descenders.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent may use any algorithm to determine the underline's position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over.\"\n                    },\n                    {\n                        name: \"over\"\n                    },\n                    {\n                        name: \"under\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-touch-action\",\n                desc: \"Gets or sets a value that indicates whether and how a given region can be manipulated by the user.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The element is a passive element, with several exceptions.\"\n                    },\n                    {\n                        name: \"double-tap-zoom\",\n                        desc: \"The element will zoom on double-tap.\"\n                    },\n                    {\n                        name: \"manipulation\",\n                        desc: \"The element is a manipulation-causing element.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The element is a manipulation-blocking element.\"\n                    },\n                    {\n                        name: \"pan-x\",\n                        desc: \"The element permits touch-driven panning on the horizontal axis. The touch pan is performed on the nearest ancestor with horizontally scrollable content.\"\n                    },\n                    {\n                        name: \"pan-y\",\n                        desc: \"The element permits touch-driven panning on the vertical axis. The touch pan is performed on the nearest ancestor with vertically scrollable content.\"\n                    },\n                    {\n                        name: \"pinch-zoom\",\n                        desc: \"The element permits pinch-zooming. The pinch-zoom is performed on the nearest ancestor with zoomable content.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-touch-select\",\n                desc: \"Gets or sets a value that toggles the 'gripper' visual elements that enable touch text selection.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"grippers\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Grippers are always off.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-transform\",\n                desc: \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n                browsers: \"IE9-9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"matrix()\"\n                    },\n                    {\n                        name: \"matrix3d()\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"rotate()\"\n                    },\n                    {\n                        name: \"rotate3d()\"\n                    },\n                    {\n                        name: \"rotateX('angle')\"\n                    },\n                    {\n                        name: \"rotateY('angle')\"\n                    },\n                    {\n                        name: \"rotateZ('angle')\"\n                    },\n                    {\n                        name: \"scale()\"\n                    },\n                    {\n                        name: \"scale3d()\"\n                    },\n                    {\n                        name: \"scaleX()\"\n                    },\n                    {\n                        name: \"scaleY()\"\n                    },\n                    {\n                        name: \"scaleZ()\"\n                    },\n                    {\n                        name: \"skew()\"\n                    },\n                    {\n                        name: \"skewX()\"\n                    },\n                    {\n                        name: \"skewY()\"\n                    },\n                    {\n                        name: \"translate()\"\n                    },\n                    {\n                        name: \"translate3d()\"\n                    },\n                    {\n                        name: \"translateX()\"\n                    },\n                    {\n                        name: \"translateY()\"\n                    },\n                    {\n                        name: \"translateZ()\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-transform-origin\",\n                desc: \"Establishes the origin of transformation for an element.\",\n                browsers: \"IE9-9\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"-ms-transform-origin-x\",\n                desc: \"The x coordinate of the origin for transforms applied to an element with respect to its border box.\",\n                browsers: \"IE10\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-ms-transform-origin-y\",\n                desc: \"The y coordinate of the origin for transforms applied to an element with respect to its border box.\",\n                browsers: \"IE10\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-ms-transform-origin-z\",\n                desc: \"The z coordinate of the origin for transforms applied to an element with respect to its border box.\",\n                browsers: \"IE10\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-ms-user-select\",\n                desc: \"Controls the appearance of selection.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"element\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"text\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-word-break\",\n                desc: \"Specifies line break opportunities for non-CJK scripts.\",\n                browsers: \"IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"break-all\"\n                    },\n                    {\n                        name: \"keep-all\",\n                        desc: \"Block characters can no longer create implied break points.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Breaks non-CJK scripts according to their own rules.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-word-wrap\",\n                desc: \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.\",\n                browsers: \"IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"break-word\",\n                        desc: \"An unbreakable 'word' may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Lines may break only at allowed break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-wrap-flow\",\n                desc: \"An element becomes an exclusion when its 'wrap-flow' property has a computed value other than 'auto'.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For floats an exclusion is created, for all other elements an exclusion is not created.\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Inline flow content can flow on all sides of the exclusion.\"\n                    },\n                    {\n                        name: \"clear\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"Inline flow content can wrap on the end side of the exclusion area but must leave the area to the start edge of the exclusion area empty.\"\n                    },\n                    {\n                        name: \"maximum\"\n                    },\n                    {\n                        name: \"minimum\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"Inline flow content can wrap on the start edge of the exclusion area but must leave the area to end edge of the exclusion area empty.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-wrap-margin\",\n                desc: \"Gets or sets a value that is used to offset the inner wrap shape from other shapes.\",\n                browsers: \"E,IE10\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-ms-wrap-through\",\n                desc: \"Specifies if an element inherits its parent wrapping context. In other words if it is subject to the exclusions defined outside the element.\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The exclusion element does not inherit its parent node's wrapping context. Its descendants are only subject to exclusion shapes defined inside the element.\"\n                    },\n                    {\n                        name: \"wrap\",\n                        desc: \"The exclusion element inherits its parent node's wrapping context. Its descendant inline content wraps around exclusions defined outside the element.\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-writing-mode\",\n                desc: \"Shorthand property for both 'direction' and 'block-progression'.\",\n                browsers: \"IE8\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bt-lr\"\n                    },\n                    {\n                        name: \"bt-rl\"\n                    },\n                    {\n                        name: \"lr-bt\"\n                    },\n                    {\n                        name: \"lr-tb\"\n                    },\n                    {\n                        name: \"rl-bt\"\n                    },\n                    {\n                        name: \"rl-tb\"\n                    },\n                    {\n                        name: \"tb-lr\"\n                    },\n                    {\n                        name: \"tb-rl\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-zoom\",\n                desc: \"Sets or retrieves the magnification scale of the object.\",\n                browsers: \"IE8\",\n                restriction: \"enum, integer, number, percentage\",\n                values: [\n                    {\n                        name: \"normal\"\n                    }\n                ]\n            },\n            {\n                name: \"-ms-zoom-animation\",\n                desc: \"Gets or sets a value that indicates whether an animation is used when zooming.\",\n                browsers: \"IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"default\"\n                    },\n                    {\n                        name: \"none\"\n                    }\n                ]\n            },\n            {\n                name: \"nav-down\",\n                desc: \"Provides an way to control directional focus navigation.\",\n                browsers: \"O9.5\",\n                restriction: \"enum, identifier, string\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                    },\n                    {\n                        name: \"current\"\n                    },\n                    {\n                        name: \"root\"\n                    }\n                ]\n            },\n            {\n                name: \"nav-index\",\n                desc: \"Provides an input-method-neutral way of specifying the sequential navigation order (also known as 'tabbing order').\",\n                browsers: \"O9.5\",\n                restriction: \"number\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The element's sequential navigation order is assigned automatically by the user agent.\"\n                    }\n                ]\n            },\n            {\n                name: \"nav-left\",\n                desc: \"Provides an way to control directional focus navigation.\",\n                browsers: \"O9.5\",\n                restriction: \"enum, identifier, string\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                    },\n                    {\n                        name: \"current\"\n                    },\n                    {\n                        name: \"root\"\n                    }\n                ]\n            },\n            {\n                name: \"nav-right\",\n                desc: \"Provides an way to control directional focus navigation.\",\n                browsers: \"O9.5\",\n                restriction: \"enum, identifier, string\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                    },\n                    {\n                        name: \"current\"\n                    },\n                    {\n                        name: \"root\"\n                    }\n                ]\n            },\n            {\n                name: \"nav-up\",\n                desc: \"Provides an way to control directional focus navigation.\",\n                browsers: \"O9.5\",\n                restriction: \"enum, identifier, string\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                    },\n                    {\n                        name: \"current\"\n                    },\n                    {\n                        name: \"root\"\n                    }\n                ]\n            },\n            {\n                name: \"negative\",\n                desc: \"@counter-style descriptor. Defines how to alter the representation when the counter value is negative.\",\n                browsers: \"FF33\",\n                restriction: \"image, identifier, string\"\n            },\n            {\n                name: \"-o-animation\",\n                desc: \"Shorthand property combines six of the animation properties into a single property.\",\n                browsers: \"O12\",\n                restriction: \"time, enum, timing-function, identifier, number\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-animation-delay\",\n                desc: \"Defines when the animation will start.\",\n                browsers: \"O12\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-o-animation-direction\",\n                desc: \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n                browsers: \"O12\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-animation-duration\",\n                desc: \"Defines the length of time that an animation takes to complete one cycle.\",\n                browsers: \"O12\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-o-animation-fill-mode\",\n                desc: \"Defines what values are applied by the animation outside the time it is executing.\",\n                browsers: \"O12\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-animation-iteration-count\",\n                desc: \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n                browsers: \"O12\",\n                restriction: \"number, enum\",\n                values: [\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-animation-name\",\n                desc: \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n                browsers: \"O12\",\n                restriction: \"identifier, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-animation-play-state\",\n                desc: \"Defines whether the animation is running or paused.\",\n                browsers: \"O12\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"paused\"\n                    },\n                    {\n                        name: \"running\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-animation-timing-function\",\n                desc: \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n                browsers: \"O12\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"object-fit\",\n                desc: \"Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.\",\n                browsers: \"C32,FF36,O19,S7.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"contain\",\n                        desc: \"The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height.\"\n                    },\n                    {\n                        name: \"cover\",\n                        desc: \"The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The replaced content is not resized to fit inside the element's content box\"\n                    },\n                    {\n                        name: \"scale-down\"\n                    }\n                ]\n            },\n            {\n                name: \"object-position\",\n                desc: \"Determines the alignment of the replaced element inside its box.\",\n                browsers: \"C32,FF36,O19\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"-o-border-image\",\n                desc: \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n                browsers: \"O11.6\",\n                restriction: \"length, percentage, number, image, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"Causes the middle part of the border-image to be preserved.\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"repeat\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                    },\n                    {\n                        name: \"space\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The image is stretched to fill the area.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-object-fit\",\n                desc: \"Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.\",\n                browsers: \"O10.6\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"contain\",\n                        desc: \"The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height.\"\n                    },\n                    {\n                        name: \"cover\",\n                        desc: \"The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The replaced content is not resized to fit inside the element's content box\"\n                    },\n                    {\n                        name: \"scale-down\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-object-position\",\n                desc: \"Determines the alignment of the replaced element inside its box.\",\n                browsers: \"O10.6\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"opacity\",\n                desc: \"Opacity of an element's text, where 1 is opaque and 0 is entirely transparent.\",\n                browsers: \"C,FF3.6,IE9,O9,S1.2\",\n                restriction: \"number(0-1)\"\n            },\n            {\n                name: \"order\",\n                desc: \"Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.\",\n                browsers: \"E,C29,FF22,IE11,O12.1,S9\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"orphans\",\n                desc: \"Specifies the minimum number of line boxes in a block container that must be left in a fragment before a fragmentation break.\",\n                browsers: \"C,IE8,O7,S1.3\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-o-table-baseline\",\n                desc: \"Determines which row of a inline-table should be used as baseline of inline-table.\",\n                browsers: \"O9.6\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-o-tab-size\",\n                desc: \"This property determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.\",\n                browsers: \"O10.6\",\n                restriction: \"integer, length\"\n            },\n            {\n                name: \"-o-text-overflow\",\n                desc: \"Text can overflow for example when it is prevented from wrapping\",\n                browsers: \"O10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"clip\"\n                    },\n                    {\n                        name: \"ellipsis\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-transform\",\n                desc: \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n                browsers: \"O10.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"matrix()\"\n                    },\n                    {\n                        name: \"matrix3d()\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"rotate()\"\n                    },\n                    {\n                        name: \"rotate3d()\"\n                    },\n                    {\n                        name: \"rotateX('angle')\"\n                    },\n                    {\n                        name: \"rotateY('angle')\"\n                    },\n                    {\n                        name: \"rotateZ('angle')\"\n                    },\n                    {\n                        name: \"scale()\"\n                    },\n                    {\n                        name: \"scale3d()\"\n                    },\n                    {\n                        name: \"scaleX()\"\n                    },\n                    {\n                        name: \"scaleY()\"\n                    },\n                    {\n                        name: \"scaleZ()\"\n                    },\n                    {\n                        name: \"skew()\"\n                    },\n                    {\n                        name: \"skewX()\"\n                    },\n                    {\n                        name: \"skewY()\"\n                    },\n                    {\n                        name: \"translate()\"\n                    },\n                    {\n                        name: \"translate3d()\"\n                    },\n                    {\n                        name: \"translateX()\"\n                    },\n                    {\n                        name: \"translateY()\"\n                    },\n                    {\n                        name: \"translateZ()\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-transform-origin\",\n                desc: \"Establishes the origin of transformation for an element.\",\n                browsers: \"O10.5\",\n                restriction: \"positon, length, percentage\"\n            },\n            {\n                name: \"-o-transition\",\n                desc: \"Shorthand property combines four of the transition properties into a single property.\",\n                browsers: \"O11.5\",\n                restriction: \"time, property, timing-function, enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-transition-delay\",\n                desc: \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n                browsers: \"O11.5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-o-transition-duration\",\n                desc: \"Specifies how long the transition from the old value to the new value should take.\",\n                browsers: \"O11.5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-o-transition-property\",\n                desc: \"Specifies the name of the CSS property to which the transition is applied.\",\n                browsers: \"O11.5\",\n                restriction: \"property\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"-o-transition-timing-function\",\n                desc: \"Describes how the intermediate values used during a transition will be calculated.\",\n                browsers: \"O11.5\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"offset-block-end\",\n                desc: \"Logical 'bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                    }\n                ]\n            },\n            {\n                name: \"offset-block-start\",\n                desc: \"Logical 'top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                    }\n                ]\n            },\n            {\n                name: \"offset-inline-end\",\n                desc: \"Logical 'right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                    }\n                ]\n            },\n            {\n                name: \"offset-inline-start\",\n                desc: \"Logical 'left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                    }\n                ]\n            },\n            {\n                name: \"outline\",\n                desc: \"Shorthand property for 'outline-style', 'outline-width', and 'outline-color'.\",\n                browsers: \"E,C,FF1.5,IE8,O8,S1.2\",\n                restriction: \"length, line-width, line-style, color, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Permits the user agent to render a custom outline style, typically the default platform style.\"\n                    },\n                    {\n                        name: \"invert\",\n                        browsers: \"E,IE8,O\"\n                    }\n                ]\n            },\n            {\n                name: \"outline-color\",\n                desc: \"The color of the outline.\",\n                browsers: \"E,C,FF1.5,IE8,O8,S1.2\",\n                restriction: \"enum, color\",\n                values: [\n                    {\n                        name: \"invert\",\n                        browsers: \"E,IE8,O\"\n                    }\n                ]\n            },\n            {\n                name: \"outline-offset\",\n                desc: \"Offset the outline and draw it beyond the border edge.\",\n                browsers: \"C,FF1.5,O9.5,S1.2\",\n                restriction: \"length\"\n            },\n            {\n                name: \"outline-style\",\n                desc: \"Style of the outline.\",\n                browsers: \"E,C,FF1.5,IE8,O8,S1.2\",\n                restriction: \"line-style, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Permits the user agent to render a custom outline style, typically the default platform style.\"\n                    }\n                ]\n            },\n            {\n                name: \"outline-width\",\n                desc: \"Width of the outline.\",\n                browsers: \"E,C,FF1.5,IE8,O8,S1.2\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"overflow\",\n                desc: \"Shorthand for setting 'overflow-x' and 'overflow-y'.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                    },\n                    {\n                        name: \"hidden\",\n                        desc: \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                    },\n                    {\n                        name: \"-moz-hidden-unscrollable\",\n                        browsers: \"FF\"\n                    },\n                    {\n                        name: \"scroll\",\n                        desc: \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                    },\n                    {\n                        name: \"visible\",\n                        desc: \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                    }\n                ]\n            },\n            {\n                name: \"overflow-wrap\",\n                desc: \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit within the line box.\",\n                browsers: \"C23,O12.1,S6.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"break-word\",\n                        desc: \"An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Lines may break only at allowed break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"overflow-x\",\n                desc: \"Specifies the handling of overflow in the horizontal direction.\",\n                browsers: \"E,C,FF1.5,IE5,O9.5,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                    },\n                    {\n                        name: \"hidden\",\n                        desc: \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                    },\n                    {\n                        name: \"scroll\",\n                        desc: \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                    },\n                    {\n                        name: \"visible\",\n                        desc: \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                    }\n                ]\n            },\n            {\n                name: \"overflow-y\",\n                desc: \"Specifies the handling of overflow in the vertical direction.\",\n                browsers: \"E,C,FF1.5,IE5,O9.5,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                    },\n                    {\n                        name: \"hidden\",\n                        desc: \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                    },\n                    {\n                        name: \"scroll\",\n                        desc: \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                    },\n                    {\n                        name: \"visible\",\n                        desc: \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                    }\n                ]\n            },\n            {\n                name: \"pad\",\n                desc: \"@counter-style descriptor. Specifies a “fixed-width” counter style, where representations shorter than the pad value are padded with a particular <symbol>\",\n                browsers: \"FF33\",\n                restriction: \"integer, image, string, identifier\"\n            },\n            {\n                name: \"padding\",\n                desc: \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n                restriction: \"length, percentage\",\n                values: []\n            },\n            {\n                name: \"padding-bottom\",\n                desc: \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-block-end\",\n                desc: \"Logical 'padding-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-block-start\",\n                desc: \"Logical 'padding-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-inline-end\",\n                desc: \"Logical 'padding-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-inline-start\",\n                desc: \"Logical 'padding-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n                browsers: \"FF41\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-left\",\n                desc: \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-right\",\n                desc: \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"padding-top\",\n                desc: \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"page-break-after\",\n                desc: \"Defines rules for page breaks after an element.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page break after generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page break after the generated box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"page-break-before\",\n                desc: \"Defines rules for page breaks before an element.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page break before the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page break before the generated box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"page-break-inside\",\n                desc: \"Defines rules for page breaks inside an element.\",\n                browsers: \"C,IE8,O7,S1.3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page break inside the generated box.\"\n                    }\n                ]\n            },\n            {\n                name: \"paint-order\",\n                desc: \"Controls the order that the three paint operations that shapes and text are rendered with: their fill, their stroke and any markers they might have.\",\n                browsers: \"C35,FF31,O22,S7.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"fill\"\n                    },\n                    {\n                        name: \"markers\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"The element is painted with the standard order of painting operations: the 'fill' is painted first, then its 'stroke' and finally its markers.\"\n                    },\n                    {\n                        name: \"stroke\"\n                    }\n                ]\n            },\n            {\n                name: \"perspective\",\n                desc: \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n                browsers: \"E,C36,FF16,IE10,O23,S9\",\n                restriction: \"length, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No perspective transform is applied.\"\n                    }\n                ]\n            },\n            {\n                name: \"perspective-origin\",\n                desc: \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n                browsers: \"E,C36,FF16,IE10,O23,S9\",\n                restriction: \"position, percentage, length\"\n            },\n            {\n                name: \"pointer-events\",\n                desc: \"Specifies under what circumstances a given element can be the target element for a pointer event.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"The given element can be the target element for pointer events whenever the pointer is over either the interior or the perimeter of the element.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"The given element can be the target element for pointer events whenever the pointer is over the interior of the element.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The given element does not receive pointer events.\"\n                    },\n                    {\n                        name: \"painted\"\n                    },\n                    {\n                        name: \"stroke\",\n                        desc: \"The given element can be the target element for pointer events whenever the pointer is over the perimeter of the element.\"\n                    },\n                    {\n                        name: \"visible\",\n                        desc: \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and the pointer is over either the interior or the perimete of the element.\"\n                    },\n                    {\n                        name: \"visibleFill\"\n                    },\n                    {\n                        name: \"visiblePainted\"\n                    },\n                    {\n                        name: \"visibleStroke\"\n                    }\n                ]\n            },\n            {\n                name: \"position\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"absolute\"\n                    },\n                    {\n                        name: \"fixed\",\n                        desc: \"The box's position is calculated according to the 'absolute' model, but in addition, the box is fixed with respect to some reference. As with the 'absolute' model, the box's margins do not collapse with any other margins.\"\n                    },\n                    {\n                        name: \"-ms-page\",\n                        browsers: \"E,IE10\"\n                    },\n                    {\n                        name: \"relative\"\n                    },\n                    {\n                        name: \"static\"\n                    },\n                    {\n                        name: \"sticky\",\n                        browsers: \"C56,FF32\"\n                    },\n                    {\n                        name: \"-webkit-sticky\",\n                        browsers: \"S6.1\"\n                    }\n                ]\n            },\n            {\n                name: \"prefix\",\n                desc: \"@counter-style descriptor. Specifies a <symbol> that is prepended to the marker representation.\",\n                browsers: \"FF33\",\n                restriction: \"image, string, identifier\"\n            },\n            {\n                name: \"quotes\",\n                desc: \"Specifies quotation marks for any number of embedded quotations.\",\n                browsers: \"E,C,FF1.5,IE8,O8,S5.1\",\n                restriction: \"string\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The 'open-quote' and 'close-quote' values of the 'content' property produce no quotations marks, as if they were 'no-open-quote' and 'no-close-quote' respectively.\"\n                    }\n                ]\n            },\n            {\n                name: \"range\",\n                desc: \"@counter-style descriptor. Defines the ranges over which the counter style is defined.\",\n                browsers: \"FF33\",\n                restriction: \"integer, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The range depends on the counter system.\"\n                    },\n                    {\n                        name: \"infinite\",\n                        desc: \"If used as the first value in a range, it represents negative infinity; if used as the second value, it represents positive infinity.\"\n                    }\n                ]\n            },\n            {\n                name: \"resize\",\n                desc: \"Specifies whether or not an element is resizable by the user, and if so, along which axis/axes.\",\n                browsers: \"C,FF4,O15,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"both\",\n                        desc: \"The UA presents a bidirectional resizing mechanism to allow the user to adjust both the height and the width of the element.\"\n                    },\n                    {\n                        name: \"horizontal\",\n                        desc: \"The UA presents a unidirectional horizontal resizing mechanism to allow the user to adjust only the width of the element.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The UA does not present a resizing mechanism on the element, and the user is given no direct manipulation mechanism to resize the element.\"\n                    },\n                    {\n                        name: \"vertical\",\n                        desc: \"The UA presents a unidirectional vertical resizing mechanism to allow the user to adjust only the height of the element.\"\n                    }\n                ]\n            },\n            {\n                name: \"right\",\n                desc: \"Specifies how far an absolutely positioned box's right margin edge is offset to the left of the right edge of the box's 'containing block'.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                    }\n                ]\n            },\n            {\n                name: \"ruby-align\",\n                desc: \"Specifies how text is distributed within the various ruby boxes when their contents do not exactly fill their respective boxes.\",\n                browsers: \"FF10,IE5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent determines how the ruby contents are aligned. This is the initial value.\",\n                        browsers: \"E,IE5\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The ruby content is centered within its box.\"\n                    },\n                    {\n                        name: \"distribute-letter\",\n                        browsers: \"E,IE5\"\n                    },\n                    {\n                        name: \"distribute-space\",\n                        browsers: \"E,IE5\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The ruby text content is aligned with the start edge of the base.\"\n                    },\n                    {\n                        name: \"line-edge\",\n                        browsers: \"E,IE5\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The ruby text content is aligned with the end edge of the base.\",\n                        browsers: \"E,IE5\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"The ruby text content is aligned with the start edge of the base.\",\n                        browsers: \"FF10\"\n                    },\n                    {\n                        name: \"space-between\",\n                        desc: \"The ruby content expands as defined for normal text justification (as defined by 'text-justify'),\",\n                        browsers: \"FF10\"\n                    },\n                    {\n                        name: \"space-around\",\n                        desc: \"As for 'space-between' except that there exists an extra justification opportunities whose space is distributed half before and half after the ruby content.\",\n                        browsers: \"FF10\"\n                    }\n                ]\n            },\n            {\n                name: \"ruby-overhang\",\n                desc: \"Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.\",\n                browsers: \"FF10,IE5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The ruby text can overhang text adjacent to the base on either side. This is the initial value.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"The ruby text can overhang the text that follows it.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The ruby text cannot overhang any text adjacent to its base, only its own base.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"The ruby text can overhang the text that precedes it.\"\n                    }\n                ]\n            },\n            {\n                name: \"ruby-position\",\n                desc: \"Used by the parent of elements with display: ruby-text to control the position of the ruby text with respect to its base.\",\n                browsers: \"FF10,IE5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"after\"\n                    },\n                    {\n                        name: \"before\"\n                    },\n                    {\n                        name: \"inline\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The ruby text appears on the right of the base. Unlike 'before' and 'after', this value is not relative to the text flow direction.\"\n                    }\n                ]\n            },\n            {\n                name: \"ruby-span\",\n                desc: \"Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.\",\n                browsers: \"FF10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"attr(x)\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No spanning. The computed value is '1'.\"\n                    }\n                ]\n            },\n            {\n                name: \"scrollbar-3dlight-color\",\n                desc: \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-arrow-color\",\n                desc: \"Determines the color of the arrow elements of a scroll arrow.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-base-color\",\n                desc: \"Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-darkshadow-color\",\n                desc: \"Determines the color of the gutter of a scroll bar.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-face-color\",\n                desc: \"Determines the color of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-highlight-color\",\n                desc: \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-shadow-color\",\n                desc: \"Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scrollbar-track-color\",\n                desc: \"Determines the color of the track element of a scroll bar.\",\n                browsers: \"IE6\",\n                restriction: \"color\"\n            },\n            {\n                name: \"scroll-behavior\",\n                desc: \"Specifies the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling APIs.\",\n                browsers: \"FF36\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Scrolls in an instant fashion.\"\n                    },\n                    {\n                        name: \"smooth\"\n                    }\n                ]\n            },\n            {\n                name: \"scroll-snap-coordinate\",\n                desc: \"Defines the x and y coordinate within the element which will align with the nearest ancestor scroll container’s snap-destination for the respective axis.\",\n                browsers: \"FF39\",\n                restriction: \"position, length, percentage, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Specifies that this element does not contribute a snap point.\"\n                    }\n                ]\n            },\n            {\n                name: \"scroll-snap-destination\",\n                desc: \"Define the x and y coordinate within the scroll container’s visual viewport which element snap points will align with.\",\n                browsers: \"FF39\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"scroll-snap-points-x\",\n                desc: \"Defines the positioning of snap points along the x axis of the scroll container it is applied to.\",\n                browsers: \"FF39\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No snap points are defined by this scroll container.\"\n                    },\n                    {\n                        name: \"repeat()\",\n                        desc: \"Defines an interval at which snap points are defined, starting from the container’s relevant start edge.\"\n                    }\n                ]\n            },\n            {\n                name: \"scroll-snap-points-y\",\n                desc: \"Defines the positioning of snap points alobg the y axis of the scroll container it is applied to.\",\n                browsers: \"FF39\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No snap points are defined by this scroll container.\"\n                    },\n                    {\n                        name: \"repeat()\",\n                        desc: \"Defines an interval at which snap points are defined, starting from the container’s relevant start edge.\"\n                    }\n                ]\n            },\n            {\n                name: \"scroll-snap-type\",\n                desc: \"Defines how strictly snap points are enforced on the scroll container.\",\n                browsers: \"FF39\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The visual viewport of this scroll container must ignore snap points, if any, when scrolled.\"\n                    },\n                    {\n                        name: \"mandatory\",\n                        desc: \"The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations.\"\n                    },\n                    {\n                        name: \"proximity\",\n                        desc: \"The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll.\"\n                    }\n                ]\n            },\n            {\n                name: \"shape-image-threshold\",\n                desc: \"Defines the alpha channel threshold used to extract the shape using an image. A value of 0.5 means that the shape will enclose all the pixels that are more than 50% opaque.\",\n                browsers: \"C37,O24\",\n                restriction: \"number\"\n            },\n            {\n                name: \"shape-margin\",\n                desc: \"Adds a margin to a 'shape-outside'. This defines a new shape that is the smallest contour that includes all the points that are the 'shape-margin' distance outward in the perpendicular direction from a point on the underlying shape.\",\n                browsers: \"C37,O24\",\n                restriction: \"url, length, percentage\"\n            },\n            {\n                name: \"shape-outside\",\n                desc: \"Specifies an orthogonal rotation to be applied to an image before it is laid out.\",\n                browsers: \"C37,O24\",\n                restriction: \"image, box, shape, enum\",\n                values: [\n                    {\n                        name: \"margin-box\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The float area is unaffected.\"\n                    }\n                ]\n            },\n            {\n                name: \"shape-rendering\",\n                desc: \"Provides hints about what tradeoffs to make as it renders vector graphics elements such as <path> elements and basic shapes such as circles and rectangles.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Suppresses aural rendering.\"\n                    },\n                    {\n                        name: \"crispEdges\"\n                    },\n                    {\n                        name: \"geometricPrecision\",\n                        desc: \"Emphasize geometric precision over speed and crisp edges.\"\n                    },\n                    {\n                        name: \"optimizeSpeed\",\n                        desc: \"Emphasize rendering speed over geometric precision and crisp edges.\"\n                    }\n                ]\n            },\n            {\n                name: \"size\",\n                browsers: \"C,O8\",\n                restriction: \"length\"\n            },\n            {\n                name: \"src\",\n                desc: \"@font-face descriptor. Specifies the resource containing font data. It is required, whether the font is downloadable or locally installed.\",\n                restriction: \"enum, url, identifier\",\n                values: [\n                    {\n                        name: \"url()\",\n                        desc: \"Reference font by URL\"\n                    },\n                    {\n                        name: \"format()\"\n                    },\n                    {\n                        name: \"local()\"\n                    }\n                ]\n            },\n            {\n                name: \"stop-color\",\n                desc: \"Indicates what color to use at that gradient stop.\",\n                restriction: \"color\"\n            },\n            {\n                name: \"stop-opacity\",\n                desc: \"Defines the opacity of a given gradient stop.\",\n                restriction: \"number(0-1)\"\n            },\n            {\n                name: \"stroke\",\n                desc: \"Paints along the outline of the given graphical element.\",\n                restriction: \"color, enum, url\",\n                values: [\n                    {\n                        name: \"url()\",\n                        desc: \"A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’.\"\n                    }\n                ]\n            },\n            {\n                name: \"stroke-dasharray\",\n                desc: \"Controls the pattern of dashes and gaps used to stroke paths.\",\n                restriction: \"length, percentage, number, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Indicates that no dashing is used.\"\n                    }\n                ]\n            },\n            {\n                name: \"stroke-dashoffset\",\n                desc: \"Specifies the distance into the dash pattern to start the dash.\",\n                restriction: \"percentage, length\"\n            },\n            {\n                name: \"stroke-linecap\",\n                desc: \"Specifies the shape to be used at the end of open subpaths when they are stroked.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"butt\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"Indicates that at each end of each subpath, the shape representing the stroke will be extended by a half circle with a radius equal to the stroke width.\"\n                    },\n                    {\n                        name: \"square\",\n                        desc: \"Indicates that at the end of each subpath, the shape representing the stroke will be extended by a rectangle with the same width as the stroke width and whose length is half of the stroke width.\"\n                    }\n                ]\n            },\n            {\n                name: \"stroke-linejoin\",\n                desc: \"Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bevel\"\n                    },\n                    {\n                        name: \"miter\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"Indicates that a round corner is to be used to join path segments.\"\n                    }\n                ]\n            },\n            {\n                name: \"stroke-miterlimit\",\n                desc: \"When two line segments meet at a sharp angle and miter joins have been specified for 'stroke-linejoin', it is possible for the miter to extend far beyond the thickness of the line stroking the path.\",\n                restriction: \"number\"\n            },\n            {\n                name: \"stroke-opacity\",\n                desc: \"Specifies the opacity of the painting operation used to stroke the current object.\",\n                restriction: \"number(0-1)\"\n            },\n            {\n                name: \"stroke-width\",\n                desc: \"Specifies the width of the stroke on the current object.\",\n                restriction: \"percentage, length\"\n            },\n            {\n                name: \"suffix\",\n                desc: \"@counter-style descriptor. Specifies a <symbol> that is appended to the marker representation.\",\n                browsers: \"FF33\",\n                restriction: \"image, string, identifier\"\n            },\n            {\n                name: \"system\",\n                desc: \"@counter-style descriptor. Specifies which algorithm will be used to construct the counter’s representation based on the counter value.\",\n                browsers: \"FF33\",\n                restriction: \"enum, integer\",\n                values: [\n                    {\n                        name: \"additive\"\n                    },\n                    {\n                        name: \"alphabetic\",\n                        desc: \"Interprets the list of counter symbols as digits to an alphabetic numbering system, similar to the default lower-alpha counter style, which wraps from \\\"a\\\", \\\"b\\\", \\\"c\\\", to \\\"aa\\\", \\\"ab\\\", \\\"ac\\\".\"\n                    },\n                    {\n                        name: \"cyclic\"\n                    },\n                    {\n                        name: \"extends\"\n                    },\n                    {\n                        name: \"fixed\",\n                        desc: \"Runs through its list of counter symbols once, then falls back.\"\n                    },\n                    {\n                        name: \"numeric\"\n                    },\n                    {\n                        name: \"symbolic\"\n                    }\n                ]\n            },\n            {\n                name: \"symbols\",\n                desc: \"@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor.\",\n                browsers: \"FF33\",\n                restriction: \"image, string, identifier\"\n            },\n            {\n                name: \"table-layout\",\n                desc: \"Controls the algorithm used to lay out the table cells, rows, and columns.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Use any automatic table layout algorithm.\"\n                    },\n                    {\n                        name: \"fixed\",\n                        desc: \"Use the fixed table layout algorithm.\"\n                    }\n                ]\n            },\n            {\n                name: \"tab-size\",\n                desc: \"Determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.\",\n                browsers: \"C21,O15,S6.1\",\n                restriction: \"integer, length\"\n            },\n            {\n                name: \"text-align\",\n                desc: \"Describes how inline contents of a block are horizontally aligned if the contents do not completely fill the line box.\",\n                restriction: \"string\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"The inline contents are centered within the line box.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"The inline contents are aligned to the end edge of the line box.\",\n                        browsers: \"C,FF3.6,O15,S3.1\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"The text is justified according to the method specified by the 'text-justify' property.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"The inline contents are aligned to the start edge of the line box.\",\n                        browsers: \"C,FF1,O15,S3.1\"\n                    }\n                ]\n            },\n            {\n                name: \"text-align-last\",\n                desc: \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n                browsers: \"E,FF12,IE5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Content on the affected line is aligned per 'text-align' unless 'text-align' is set to 'justify', in which case it is 'start-aligned'.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"The inline contents are centered within the line box.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"The text is justified according to the method specified by the 'text-justify' property.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                    }\n                ]\n            },\n            {\n                name: \"text-anchor\",\n                desc: \"Used to align (start-, middle- or end-alignment) a string of text relative to a given point.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"end\",\n                        desc: \"The rendered characters are aligned such that the end of the resulting rendered text is at the initial current text position.\"\n                    },\n                    {\n                        name: \"middle\",\n                        desc: \"The rendered characters are aligned such that the geometric middle of the resulting rendered text is at the initial current text position.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"The rendered characters are aligned such that the start of the resulting rendered text is at the initial current text position.\"\n                    }\n                ]\n            },\n            {\n                name: \"text-decoration\",\n                desc: \"Decorations applied to font used for an element's text.\",\n                restriction: \"enum, color\",\n                values: [\n                    {\n                        name: \"dashed\"\n                    },\n                    {\n                        name: \"dotted\"\n                    },\n                    {\n                        name: \"double\"\n                    },\n                    {\n                        name: \"line-through\"\n                    },\n                    {\n                        name: \"overline\"\n                    },\n                    {\n                        name: \"solid\"\n                    },\n                    {\n                        name: \"underline\"\n                    },\n                    {\n                        name: \"wavy\"\n                    }\n                ]\n            },\n            {\n                name: \"text-decoration-color\",\n                desc: \"Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.\",\n                browsers: \"FF36,C57,O44\",\n                restriction: \"color\"\n            },\n            {\n                name: \"text-decoration-line\",\n                desc: \"Specifies what line decorations, if any, are added to the element.\",\n                browsers: \"FF36\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"line-through\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Neither produces nor inhibits text decoration.\"\n                    },\n                    {\n                        name: \"overline\"\n                    },\n                    {\n                        name: \"underline\"\n                    }\n                ]\n            },\n            {\n                name: \"text-decoration-style\",\n                desc: \"Specifies the line style for underline, line-through and overline text decoration.\",\n                browsers: \"FF36\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"dashed\"\n                    },\n                    {\n                        name: \"dotted\"\n                    },\n                    {\n                        name: \"double\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Produces no line.\"\n                    },\n                    {\n                        name: \"solid\"\n                    },\n                    {\n                        name: \"wavy\"\n                    }\n                ]\n            },\n            {\n                name: \"text-indent\",\n                desc: \"Specifies the indentation applied to lines of inline content in a block. The indentation only affects the first line of inline content in the block unless the 'hanging' keyword is specified, in which case it affects all lines except the first.\",\n                restriction: \"percentage, length\",\n                values: []\n            },\n            {\n                name: \"text-justify\",\n                desc: \"Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.\",\n                browsers: \"E,IE5.5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality.\"\n                    },\n                    {\n                        name: \"distribute\",\n                        desc: \"Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property.\"\n                    },\n                    {\n                        name: \"distribute-all-lines\"\n                    },\n                    {\n                        name: \"inter-cluster\"\n                    },\n                    {\n                        name: \"inter-ideograph\"\n                    },\n                    {\n                        name: \"inter-word\"\n                    },\n                    {\n                        name: \"kashida\"\n                    },\n                    {\n                        name: \"newspaper\"\n                    }\n                ]\n            },\n            {\n                name: \"text-orientation\",\n                desc: \"Specifies the orientation of text within a line.\",\n                browsers: \"C,O15,S5.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"sideways\",\n                        browsers: \"C25,O15,S6.1\"\n                    },\n                    {\n                        name: \"sideways-right\",\n                        browsers: \"C25,O15,S6.1\"\n                    },\n                    {\n                        name: \"upright\"\n                    }\n                ]\n            },\n            {\n                name: \"text-overflow\",\n                desc: \"Text can overflow for example when it is prevented from wrapping.\",\n                browsers: \"E,C,FF9,IE5.5,O11.6,S2\",\n                restriction: \"enum, string\",\n                values: [\n                    {\n                        name: \"clip\"\n                    },\n                    {\n                        name: \"ellipsis\"\n                    }\n                ]\n            },\n            {\n                name: \"text-rendering\",\n                desc: \"The creator of SVG content might want to provide a hint to the implementation about what tradeoffs to make as it renders text. The ‘text-rendering’ property provides these hints.\",\n                browsers: \"C,FF3,O9,S5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"geometricPrecision\",\n                        desc: \"Indicates that the user agent shall emphasize geometric precision over legibility and rendering speed.\"\n                    },\n                    {\n                        name: \"optimizeLegibility\"\n                    },\n                    {\n                        name: \"optimizeSpeed\",\n                        desc: \"Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision.\"\n                    }\n                ]\n            },\n            {\n                name: \"text-shadow\",\n                desc: \"Enables shadow effects to be applied to the text of the element.\",\n                browsers: \"E,C,FF3.6,IE10,O9.5,S1.1\",\n                restriction: \"length, color\",\n                values: []\n            },\n            {\n                name: \"text-transform\",\n                desc: \"Controls capitalization effects of an element’s text.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"capitalize\"\n                    },\n                    {\n                        name: \"lowercase\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No effects.\"\n                    },\n                    {\n                        name: \"uppercase\"\n                    }\n                ]\n            },\n            {\n                name: \"text-underline-position\",\n                desc: \"Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements. This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text\",\n                browsers: \"E,IE10\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"above\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent may use any algorithm to determine the underline’s position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over.\"\n                    },\n                    {\n                        name: \"below\",\n                        desc: \"The underline is aligned with the under edge of the element’s content box.\"\n                    }\n                ]\n            },\n            {\n                name: \"top\",\n                desc: \"Specifies how far an absolutely positioned box's top margin edge is offset below the top edge of the box's 'containing block'.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                    }\n                ]\n            },\n            {\n                name: \"touch-action\",\n                desc: \"Determines whether touch input may trigger default behavior supplied by user agent.\",\n                browsers: \"E,C36,IE11,O23\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The user agent may determine any permitted touch behaviors for touches that begin on the element.\"\n                    },\n                    {\n                        name: \"cross-slide-x\",\n                        browsers: \"E,IE11\"\n                    },\n                    {\n                        name: \"cross-slide-y\",\n                        browsers: \"E,IE11\"\n                    },\n                    {\n                        name: \"double-tap-zoom\",\n                        browsers: \"E,IE11\"\n                    },\n                    {\n                        name: \"manipulation\",\n                        desc: \"The user agent may consider touches that begin on the element only for the purposes of scrolling and continuous zooming.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Touches that begin on the element must not trigger default touch behaviors.\"\n                    },\n                    {\n                        name: \"pan-x\",\n                        desc: \"The user agent may consider touches that begin on the element only for the purposes of horizontally scrolling the element’s nearest ancestor with horizontally scrollable content.\"\n                    },\n                    {\n                        name: \"pan-y\",\n                        desc: \"The user agent may consider touches that begin on the element only for the purposes of vertically scrolling the element’s nearest ancestor with vertically scrollable content.\"\n                    },\n                    {\n                        name: \"pinch-zoom\",\n                        browsers: \"E,IE11\"\n                    }\n                ]\n            },\n            {\n                name: \"transform\",\n                desc: \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n                browsers: \"E,C36,FF16,IE10,O12.1,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"matrix()\"\n                    },\n                    {\n                        name: \"matrix3d()\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"perspective()\"\n                    },\n                    {\n                        name: \"rotate()\"\n                    },\n                    {\n                        name: \"rotate3d()\"\n                    },\n                    {\n                        name: \"rotateX('angle')\"\n                    },\n                    {\n                        name: \"rotateY('angle')\"\n                    },\n                    {\n                        name: \"rotateZ('angle')\"\n                    },\n                    {\n                        name: \"scale()\"\n                    },\n                    {\n                        name: \"scale3d()\"\n                    },\n                    {\n                        name: \"scaleX()\"\n                    },\n                    {\n                        name: \"scaleY()\"\n                    },\n                    {\n                        name: \"scaleZ()\"\n                    },\n                    {\n                        name: \"skew()\"\n                    },\n                    {\n                        name: \"skewX()\"\n                    },\n                    {\n                        name: \"skewY()\"\n                    },\n                    {\n                        name: \"translate()\"\n                    },\n                    {\n                        name: \"translate3d()\"\n                    },\n                    {\n                        name: \"translateX()\"\n                    },\n                    {\n                        name: \"translateY()\"\n                    },\n                    {\n                        name: \"translateZ()\"\n                    }\n                ]\n            },\n            {\n                name: \"transform-origin\",\n                desc: \"Establishes the origin of transformation for an element.\",\n                browsers: \"E,C36,FF16,IE10,O12.1,S9\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"transform-style\",\n                desc: \"Defines how nested elements are rendered in 3D space.\",\n                browsers: \"E,C36,FF16,IE10,O23,S9\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"flat\"\n                    },\n                    {\n                        name: \"preserve-3d\",\n                        browsers: \"E,C36,FF16,O23,S9\"\n                    }\n                ]\n            },\n            {\n                name: \"transition\",\n                desc: \"Shorthand property combines four of the transition properties into a single property.\",\n                browsers: \"E,FF16,IE10,O12.5\",\n                restriction: \"time, property, timing-function, enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"transition-delay\",\n                desc: \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n                browsers: \"E,FF16,IE10,O12.5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"transition-duration\",\n                desc: \"Specifies how long the transition from the old value to the new value should take.\",\n                browsers: \"E,FF16,IE10,O12.5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"transition-property\",\n                desc: \"Specifies the name of the CSS property to which the transition is applied.\",\n                browsers: \"E,FF16,IE10,O12.5\",\n                restriction: \"property\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"transition-timing-function\",\n                desc: \"Describes how the intermediate values used during a transition will be calculated.\",\n                browsers: \"E,FF16,IE10,O12.5\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"unicode-bidi\",\n                desc: \"The level of embedding with respect to the bidirectional algorithm.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"bidi-override\"\n                    },\n                    {\n                        name: \"embed\"\n                    },\n                    {\n                        name: \"isolate\",\n                        desc: \"The contents of the element are considered to be inside a separate, independent paragraph.\",\n                        browsers: \"C,FF10,O15,S5.1\"\n                    },\n                    {\n                        name: \"isolate-override\",\n                        browsers: \"C,FF17,O15,S6.1\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"The element does not open an additional level of embedding with respect to the bidirectional algorithm. For inline-level elements, implicit reordering works across element boundaries.\"\n                    },\n                    {\n                        name: \"plaintext\",\n                        browsers: \"C,FF10,O15,S6\"\n                    }\n                ]\n            },\n            {\n                name: \"unicode-range\",\n                desc: \"@font-face descriptor. Defines the set of Unicode codepoints that may be supported by the font face for which it is declared.\",\n                restriction: \"unicode-range\",\n                values: [\n                    {\n                        name: \"U+26\"\n                    },\n                    {\n                        name: \"U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F\"\n                    },\n                    {\n                        name: \"U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF\"\n                    },\n                    {\n                        name: \"U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD\"\n                    },\n                    {\n                        name: \"U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD\"\n                    },\n                    {\n                        name: \"U+00-7F\"\n                    },\n                    {\n                        name: \"U+80-FF\"\n                    },\n                    {\n                        name: \"U+100-17F\"\n                    },\n                    {\n                        name: \"U+180-24F\"\n                    },\n                    {\n                        name: \"U+1E00-1EFF\"\n                    },\n                    {\n                        name: \"U+250-2AF\"\n                    },\n                    {\n                        name: \"U+370-3FF\"\n                    },\n                    {\n                        name: \"U+1F00-1FFF\"\n                    },\n                    {\n                        name: \"U+400-4FF\"\n                    },\n                    {\n                        name: \"U+500-52F\"\n                    },\n                    {\n                        name: \"U+00-52F, U+1E00-1FFF, U+2200–22FF\"\n                    },\n                    {\n                        name: \"U+530–58F\"\n                    },\n                    {\n                        name: \"U+590–5FF\"\n                    },\n                    {\n                        name: \"U+600–6FF\"\n                    },\n                    {\n                        name: \"U+750–77F\"\n                    },\n                    {\n                        name: \"U+8A0–8FF\"\n                    },\n                    {\n                        name: \"U+700–74F\"\n                    },\n                    {\n                        name: \"U+900–97F\"\n                    },\n                    {\n                        name: \"U+980–9FF\"\n                    },\n                    {\n                        name: \"U+A00–A7F\"\n                    },\n                    {\n                        name: \"U+A80–AFF\"\n                    },\n                    {\n                        name: \"U+B00–B7F\"\n                    },\n                    {\n                        name: \"U+B80–BFF\"\n                    },\n                    {\n                        name: \"U+C00–C7F\"\n                    },\n                    {\n                        name: \"U+C80–CFF\"\n                    },\n                    {\n                        name: \"U+D00–D7F\"\n                    },\n                    {\n                        name: \"U+D80–DFF\"\n                    },\n                    {\n                        name: \"U+118A0–118FF\"\n                    },\n                    {\n                        name: \"U+E00–E7F\"\n                    },\n                    {\n                        name: \"U+1A20–1AAF\"\n                    },\n                    {\n                        name: \"U+AA80–AADF\"\n                    },\n                    {\n                        name: \"U+E80–EFF\"\n                    },\n                    {\n                        name: \"U+F00–FFF\"\n                    },\n                    {\n                        name: \"U+1000–109F\"\n                    },\n                    {\n                        name: \"U+10A0–10FF\"\n                    },\n                    {\n                        name: \"U+1200–137F\"\n                    },\n                    {\n                        name: \"U+1380–139F\"\n                    },\n                    {\n                        name: \"U+2D80–2DDF\"\n                    },\n                    {\n                        name: \"U+AB00–AB2F\"\n                    },\n                    {\n                        name: \"U+1780–17FF\"\n                    },\n                    {\n                        name: \"U+1800–18AF\"\n                    },\n                    {\n                        name: \"U+1B80–1BBF\"\n                    },\n                    {\n                        name: \"U+1CC0–1CCF\"\n                    },\n                    {\n                        name: \"U+4E00–9FD5\"\n                    },\n                    {\n                        name: \"U+3400–4DB5\"\n                    },\n                    {\n                        name: \"U+2F00–2FDF\"\n                    },\n                    {\n                        name: \"U+2E80–2EFF\"\n                    },\n                    {\n                        name: \"U+1100–11FF\"\n                    },\n                    {\n                        name: \"U+AC00–D7AF\"\n                    },\n                    {\n                        name: \"U+3040–309F\"\n                    },\n                    {\n                        name: \"U+30A0–30FF\"\n                    },\n                    {\n                        name: \"U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F\"\n                    },\n                    {\n                        name: \"U+A4D0–A4FF\"\n                    },\n                    {\n                        name: \"U+A000–A48F\"\n                    },\n                    {\n                        name: \"U+A490–A4CF\"\n                    },\n                    {\n                        name: \"U+2000-206F\"\n                    },\n                    {\n                        name: \"U+3000–303F\"\n                    },\n                    {\n                        name: \"U+2070–209F\"\n                    },\n                    {\n                        name: \"U+20A0–20CF\"\n                    },\n                    {\n                        name: \"U+2100–214F\"\n                    },\n                    {\n                        name: \"U+2150–218F\"\n                    },\n                    {\n                        name: \"U+2190–21FF\"\n                    },\n                    {\n                        name: \"U+2200–22FF\"\n                    },\n                    {\n                        name: \"U+2300–23FF\"\n                    },\n                    {\n                        name: \"U+E000-F8FF\"\n                    },\n                    {\n                        name: \"U+FB00–FB4F\"\n                    },\n                    {\n                        name: \"U+FB50–FDFF\"\n                    },\n                    {\n                        name: \"U+1F600–1F64F\"\n                    },\n                    {\n                        name: \"U+2600–26FF\"\n                    },\n                    {\n                        name: \"U+1F300–1F5FF\"\n                    },\n                    {\n                        name: \"U+1F900–1F9FF\"\n                    },\n                    {\n                        name: \"U+1F680–1F6FF\"\n                    }\n                ]\n            },\n            {\n                name: \"user-select\",\n                desc: \"Controls the appearance of selection.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"The content of the element must be selected atomically\"\n                    },\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"contain\",\n                        desc: \"UAs must not allow a selection which is started in this element to be extended outside of this element.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The UA must not allow selections to be started in this element.\"\n                    },\n                    {\n                        name: \"text\",\n                        desc: \"The element imposes no constraint on the selection.\"\n                    }\n                ]\n            },\n            {\n                name: \"vertical-align\",\n                desc: \"Affects the vertical positioning of the inline boxes generated by an inline-level element inside a line box.\",\n                restriction: \"percentage, length\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Align the dominant baseline of the parent box with the equivalent, or heuristically reconstructed, baseline of the element inline box.\"\n                    },\n                    {\n                        name: \"baseline\",\n                        desc: \"Align the 'alphabetic' baseline of the element with the 'alphabetic' baseline of the parent element.\"\n                    },\n                    {\n                        name: \"bottom\",\n                        desc: \"Align the after edge of the extended inline box with the after-edge of the line box.\"\n                    },\n                    {\n                        name: \"middle\",\n                        desc: \"Align the 'middle' baseline of the inline element with the middle baseline of the parent.\"\n                    },\n                    {\n                        name: \"sub\",\n                        desc: \"Lower the baseline of the box to the proper position for subscripts of the parent's box. (This value has no effect on the font size of the element's text.)\"\n                    },\n                    {\n                        name: \"super\",\n                        desc: \"Raise the baseline of the box to the proper position for superscripts of the parent's box. (This value has no effect on the font size of the element's text.)\"\n                    },\n                    {\n                        name: \"text-bottom\"\n                    },\n                    {\n                        name: \"text-top\"\n                    },\n                    {\n                        name: \"top\",\n                        desc: \"Align the before edge of the extended inline box with the before-edge of the line box.\"\n                    },\n                    {\n                        name: \"-webkit-baseline-middle\",\n                        browsers: \"C,S1\"\n                    }\n                ]\n            },\n            {\n                name: \"visibility\",\n                desc: \"Specifies whether the boxes generated by an element are rendered. Invisible boxes still affect layout (set the ‘display’ property to ‘none’ to suppress box generation altogether).\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"collapse\",\n                        desc: \"Table-specific. If used on elements other than rows, row groups, columns, or column groups, 'collapse' has the same meaning as 'hidden'.\"\n                    },\n                    {\n                        name: \"hidden\",\n                        desc: \"The generated box is invisible (fully transparent, nothing is drawn), but still affects layout.\"\n                    },\n                    {\n                        name: \"visible\",\n                        desc: \"The generated box is visible.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation\",\n                desc: \"Shorthand property combines six of the animation properties into a single property.\",\n                browsers: \"C,S5\",\n                restriction: \"time, enum, timing-function, identifier, number\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation-delay\",\n                desc: \"Defines when the animation will start.\",\n                browsers: \"C,S5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-webkit-animation-direction\",\n                desc: \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n                browsers: \"C,S5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"alternate\"\n                    },\n                    {\n                        name: \"alternate-reverse\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Normal playback.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation-duration\",\n                desc: \"Defines the length of time that an animation takes to complete one cycle.\",\n                browsers: \"C,S5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-webkit-animation-fill-mode\",\n                desc: \"Defines what values are applied by the animation outside the time it is executing.\",\n                browsers: \"C,S5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"backwards\"\n                    },\n                    {\n                        name: \"both\",\n                        desc: \"Both forwards and backwards fill modes are applied.\"\n                    },\n                    {\n                        name: \"forwards\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation-iteration-count\",\n                desc: \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n                browsers: \"C,S5\",\n                restriction: \"number, enum\",\n                values: [\n                    {\n                        name: \"infinite\",\n                        desc: \"Causes the animation to repeat forever.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation-name\",\n                desc: \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n                browsers: \"C,S5\",\n                restriction: \"identifier, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No animation is performed\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation-play-state\",\n                desc: \"Defines whether the animation is running or paused.\",\n                browsers: \"C,S5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"paused\"\n                    },\n                    {\n                        name: \"running\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-animation-timing-function\",\n                desc: \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n                browsers: \"C,S5\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"-webkit-appearance\",\n                desc: \"Changes the appearance of buttons and other controls to resemble native controls.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"button\"\n                    },\n                    {\n                        name: \"button-bevel\"\n                    },\n                    {\n                        name: \"caps-lock-indicator\"\n                    },\n                    {\n                        name: \"caret\"\n                    },\n                    {\n                        name: \"checkbox\"\n                    },\n                    {\n                        name: \"default-button\"\n                    },\n                    {\n                        name: \"listbox\"\n                    },\n                    {\n                        name: \"listitem\"\n                    },\n                    {\n                        name: \"media-fullscreen-button\"\n                    },\n                    {\n                        name: \"media-mute-button\"\n                    },\n                    {\n                        name: \"media-play-button\"\n                    },\n                    {\n                        name: \"media-seek-back-button\"\n                    },\n                    {\n                        name: \"media-seek-forward-button\"\n                    },\n                    {\n                        name: \"media-slider\"\n                    },\n                    {\n                        name: \"media-sliderthumb\"\n                    },\n                    {\n                        name: \"menulist\"\n                    },\n                    {\n                        name: \"menulist-button\"\n                    },\n                    {\n                        name: \"menulist-text\"\n                    },\n                    {\n                        name: \"menulist-textfield\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"push-button\"\n                    },\n                    {\n                        name: \"radio\"\n                    },\n                    {\n                        name: \"scrollbarbutton-down\"\n                    },\n                    {\n                        name: \"scrollbarbutton-left\"\n                    },\n                    {\n                        name: \"scrollbarbutton-right\"\n                    },\n                    {\n                        name: \"scrollbarbutton-up\"\n                    },\n                    {\n                        name: \"scrollbargripper-horizontal\"\n                    },\n                    {\n                        name: \"scrollbargripper-vertical\"\n                    },\n                    {\n                        name: \"scrollbarthumb-horizontal\"\n                    },\n                    {\n                        name: \"scrollbarthumb-vertical\"\n                    },\n                    {\n                        name: \"scrollbartrack-horizontal\"\n                    },\n                    {\n                        name: \"scrollbartrack-vertical\"\n                    },\n                    {\n                        name: \"searchfield\"\n                    },\n                    {\n                        name: \"searchfield-cancel-button\"\n                    },\n                    {\n                        name: \"searchfield-decoration\"\n                    },\n                    {\n                        name: \"searchfield-results-button\"\n                    },\n                    {\n                        name: \"searchfield-results-decoration\"\n                    },\n                    {\n                        name: \"slider-horizontal\"\n                    },\n                    {\n                        name: \"sliderthumb-horizontal\"\n                    },\n                    {\n                        name: \"sliderthumb-vertical\"\n                    },\n                    {\n                        name: \"slider-vertical\"\n                    },\n                    {\n                        name: \"square-button\"\n                    },\n                    {\n                        name: \"textarea\"\n                    },\n                    {\n                        name: \"textfield\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-backdrop-filter\",\n                desc: \"Applies a filter effect where the first filter in the list takes the element's background image as the input image.\",\n                browsers: \"S9\",\n                restriction: \"enum, url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No filter effects are applied.\"\n                    },\n                    {\n                        name: \"blur()\"\n                    },\n                    {\n                        name: \"brightness()\"\n                    },\n                    {\n                        name: \"contrast()\"\n                    },\n                    {\n                        name: \"drop-shadow()\"\n                    },\n                    {\n                        name: \"grayscale()\"\n                    },\n                    {\n                        name: \"hue-rotate()\"\n                    },\n                    {\n                        name: \"invert()\"\n                    },\n                    {\n                        name: \"opacity()\"\n                    },\n                    {\n                        name: \"saturate()\"\n                    },\n                    {\n                        name: \"sepia()\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"A filter reference to a <filter> element.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-backface-visibility\",\n                desc: \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n                browsers: \"C,S5\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"hidden\"\n                    },\n                    {\n                        name: \"visible\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-background-clip\",\n                desc: \"Determines the background painting area.\",\n                browsers: \"C,S3\",\n                restriction: \"box\"\n            },\n            {\n                name: \"-webkit-background-composite\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"border\"\n                    },\n                    {\n                        name: \"padding\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-background-origin\",\n                desc: \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n                browsers: \"C,S3\",\n                restriction: \"box\"\n            },\n            {\n                name: \"-webkit-border-image\",\n                desc: \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n                browsers: \"C,S5\",\n                restriction: \"length, percentage, number, url, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                    },\n                    {\n                        name: \"fill\",\n                        desc: \"Causes the middle part of the border-image to be preserved.\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"repeat\"\n                    },\n                    {\n                        name: \"round\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                    },\n                    {\n                        name: \"space\",\n                        desc: \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The image is stretched to fill the area.\"\n                    },\n                    {\n                        name: \"url()\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-box-align\",\n                desc: \"Specifies the alignment of nested elements within an outer flexible box element.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"baseline\",\n                        desc: \"If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used.\"\n                    },\n                    {\n                        name: \"center\",\n                        desc: \"Any extra space is divided evenly, with half placed above the child and the other half placed after the child.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element.\"\n                    },\n                    {\n                        name: \"stretch\",\n                        desc: \"The height of each child is adjusted to that of the containing block.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-box-direction\",\n                desc: \"In webkit applications, -webkit-box-direction specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom.\"\n                    },\n                    {\n                        name: \"reverse\",\n                        desc: \"A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-box-flex\",\n                desc: \"Specifies an element's flexibility.\",\n                browsers: \"C,S3\",\n                restriction: \"number\"\n            },\n            {\n                name: \"-webkit-box-flex-group\",\n                desc: \"Flexible elements can be assigned to flex groups using the 'box-flex-group' property.\",\n                browsers: \"C,S3\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-webkit-box-ordinal-group\",\n                desc: \"Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\",\n                browsers: \"C,S3\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"-webkit-box-orient\",\n                desc: \"In webkit applications, -webkit-box-orient specifies whether a box lays out its contents horizontally or vertically.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"block-axis\"\n                    },\n                    {\n                        name: \"horizontal\",\n                        desc: \"The box displays its children from left to right in a horizontal line.\"\n                    },\n                    {\n                        name: \"inline-axis\"\n                    },\n                    {\n                        name: \"vertical\",\n                        desc: \"The box displays its children from stacked from top to bottom vertically.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-box-pack\",\n                desc: \"Specifies alignment of child elements within the current element in the direction of orientation.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"center\",\n                        desc: \"The extra space is divided evenly, with half placed before the first child and the other half placed after the last child.\"\n                    },\n                    {\n                        name: \"end\",\n                        desc: \"For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child.\"\n                    },\n                    {\n                        name: \"justify\",\n                        desc: \"The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\"\n                    },\n                    {\n                        name: \"start\",\n                        desc: \"For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-box-reflect\",\n                desc: \"Defines a reflection of a border box.\",\n                browsers: \"C,S4\",\n                values: [\n                    {\n                        name: \"above\",\n                        desc: \"The reflection appears above the border box.\"\n                    },\n                    {\n                        name: \"below\",\n                        desc: \"The reflection appears below the border box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"The reflection appears to the left of the border box.\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"The reflection appears to the right of the border box.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-box-sizing\",\n                desc: \"Box Model addition in CSS3.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"border-box\"\n                    },\n                    {\n                        name: \"content-box\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-break-after\",\n                desc: \"Describes the page/column break behavior before the generated box.\",\n                browsers: \"S7\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-region\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"Always force a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"page\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"region\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-break-before\",\n                desc: \"Describes the page/column break behavior before the generated box.\",\n                browsers: \"S7\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-region\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"Always force a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"page\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"region\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-break-inside\",\n                desc: \"Describes the page/column break behavior inside the generated box.\",\n                browsers: \"S7\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page/column break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid-region\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-break-after\",\n                desc: \"Describes the page/column break behavior before the generated box.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-region\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"Always force a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"page\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"region\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-break-before\",\n                desc: \"Describes the page/column break behavior before the generated box.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"always\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page/column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"avoid-region\"\n                    },\n                    {\n                        name: \"column\",\n                        desc: \"Always force a column break before/after the generated box.\"\n                    },\n                    {\n                        name: \"left\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                    },\n                    {\n                        name: \"page\",\n                        desc: \"Always force a page break before/after the generated box.\"\n                    },\n                    {\n                        name: \"region\"\n                    },\n                    {\n                        name: \"right\",\n                        desc: \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-break-inside\",\n                desc: \"Describes the page/column break behavior inside the generated box.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Neither force nor forbid a page/column break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid\",\n                        desc: \"Avoid a page/column break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid-column\",\n                        desc: \"Avoid a column break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid-page\",\n                        desc: \"Avoid a page break inside the generated box.\"\n                    },\n                    {\n                        name: \"avoid-region\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-count\",\n                desc: \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n                browsers: \"C,S3\",\n                restriction: \"integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Determines the number of columns by the 'column-width' property and the element width.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-gap\",\n                desc: \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n                browsers: \"C,S3\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"User agent specific and typically equivalent to 1em.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-rule\",\n                desc: \"This property is a shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n                browsers: \"C,S3\",\n                restriction: \"length, line-width, line-style, color\"\n            },\n            {\n                name: \"-webkit-column-rule-color\",\n                desc: \"Sets the color of the column rule\",\n                browsers: \"C,S3\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-webkit-column-rule-style\",\n                desc: \"Sets the style of the rule between columns of an element.\",\n                browsers: \"C,S3\",\n                restriction: \"line-style\"\n            },\n            {\n                name: \"-webkit-column-rule-width\",\n                desc: \"Sets the width of the rule between columns. Negative values are not allowed.\",\n                browsers: \"C,S3\",\n                restriction: \"length, line-width\"\n            },\n            {\n                name: \"-webkit-columns\",\n                desc: \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n                browsers: \"C,S3\",\n                restriction: \"length, integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-span\",\n                desc: \"Describes the page/column break behavior after the generated box.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"The element does not span multiple columns.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-column-width\",\n                desc: \"This property describes the width of columns in multicol elements.\",\n                browsers: \"C,S3\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-filter\",\n                desc: \"Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.\",\n                browsers: \"C18,O15,S6\",\n                restriction: \"enum, url\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No filter effects are applied.\"\n                    },\n                    {\n                        name: \"blur()\"\n                    },\n                    {\n                        name: \"brightness()\"\n                    },\n                    {\n                        name: \"contrast()\"\n                    },\n                    {\n                        name: \"drop-shadow()\"\n                    },\n                    {\n                        name: \"grayscale()\"\n                    },\n                    {\n                        name: \"hue-rotate()\"\n                    },\n                    {\n                        name: \"invert()\"\n                    },\n                    {\n                        name: \"opacity()\"\n                    },\n                    {\n                        name: \"saturate()\"\n                    },\n                    {\n                        name: \"sepia()\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"A filter reference to a <filter> element.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-flow-from\",\n                desc: \"Makes a block container a region and associates it with a named flow.\",\n                browsers: \"S6.1\",\n                restriction: \"identifier\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The block container is not a CSS Region.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-flow-into\",\n                desc: \"Places an element or its contents into a named flow.\",\n                browsers: \"S6.1\",\n                restriction: \"identifier\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"The element is not moved to a named flow and normal CSS processing takes place.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-font-feature-settings\",\n                desc: \"This property provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n                browsers: \"C16\",\n                restriction: \"string, integer\",\n                values: [\n                    {\n                        name: \"\\\"c2cs\\\"\"\n                    },\n                    {\n                        name: \"\\\"dlig\\\"\"\n                    },\n                    {\n                        name: \"\\\"kern\\\"\"\n                    },\n                    {\n                        name: \"\\\"liga\\\"\"\n                    },\n                    {\n                        name: \"\\\"lnum\\\"\"\n                    },\n                    {\n                        name: \"\\\"onum\\\"\"\n                    },\n                    {\n                        name: \"\\\"smcp\\\"\"\n                    },\n                    {\n                        name: \"\\\"swsh\\\"\"\n                    },\n                    {\n                        name: \"\\\"tnum\\\"\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"No change in glyph substitution or positioning occurs.\"\n                    },\n                    {\n                        name: \"off\"\n                    },\n                    {\n                        name: \"on\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-hyphens\",\n                desc: \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n                browsers: \"S5.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                    },\n                    {\n                        name: \"manual\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-line-break\",\n                desc: \"Specifies line-breaking rules for CJK (Chinese, Japanese, and Korean) text.\",\n                browsers: \"C,S3\",\n                values: [\n                    {\n                        name: \"after-white-space\"\n                    },\n                    {\n                        name: \"normal\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-margin-bottom-collapse\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"collapse\"\n                    },\n                    {\n                        name: \"discard\"\n                    },\n                    {\n                        name: \"separate\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-margin-collapse\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"collapse\"\n                    },\n                    {\n                        name: \"discard\"\n                    },\n                    {\n                        name: \"separate\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-margin-start\",\n                browsers: \"C,S3\",\n                restriction: \"percentage, length\",\n                values: [\n                    {\n                        name: \"auto\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-margin-top-collapse\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"collapse\"\n                    },\n                    {\n                        name: \"discard\"\n                    },\n                    {\n                        name: \"separate\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-mask-clip\",\n                desc: \"Determines the mask painting area, which determines the area that is affected by the mask.\",\n                browsers: \"C,O15,S4\",\n                restriction: \"box\"\n            },\n            {\n                name: \"-webkit-mask-image\",\n                desc: \"Sets the mask layer image of an element.\",\n                browsers: \"C,O15,S4\",\n                restriction: \"url, image, enum\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"Counts as a transparent black image layer.\"\n                    },\n                    {\n                        name: \"url()\",\n                        desc: \"Reference to a <mask element or to a CSS image.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-mask-origin\",\n                desc: \"Specifies the mask positioning area.\",\n                browsers: \"C,O15,S4\",\n                restriction: \"box\"\n            },\n            {\n                name: \"-webkit-mask-repeat\",\n                desc: \"Specifies how mask layer images are tiled after they have been sized and positioned.\",\n                browsers: \"C,O15,S4\",\n                restriction: \"repeat\"\n            },\n            {\n                name: \"-webkit-mask-size\",\n                desc: \"Specifies the size of the mask layer images.\",\n                browsers: \"C,O15,S4\",\n                restriction: \"length, percentage, enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                    },\n                    {\n                        name: \"contain\",\n                        desc: \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                    },\n                    {\n                        name: \"cover\",\n                        desc: \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-nbsp-mode\",\n                desc: \"Defines the behavior of nonbreaking spaces within text.\",\n                browsers: \"C,S3\",\n                values: [\n                    {\n                        name: \"normal\"\n                    },\n                    {\n                        name: \"space\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-overflow-scrolling\",\n                desc: \"Specifies whether to use native-style scrolling in an overflow:scroll element.\",\n                browsers: \"C,S5\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"touch\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-padding-start\",\n                browsers: \"C,S3\",\n                restriction: \"percentage, length\"\n            },\n            {\n                name: \"-webkit-perspective\",\n                desc: \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n                browsers: \"C,S4\",\n                restriction: \"length\",\n                values: [\n                    {\n                        name: \"none\",\n                        desc: \"No perspective transform is applied.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-perspective-origin\",\n                desc: \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n                browsers: \"C,S4\",\n                restriction: \"position, percentage, length\"\n            },\n            {\n                name: \"-webkit-region-fragment\",\n                desc: \"The 'region-fragment' property controls the behavior of the last region associated with a named flow.\",\n                browsers: \"S7\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Content flows as it would in a regular content box.\"\n                    },\n                    {\n                        name: \"break\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-tap-highlight-color\",\n                browsers: \"E,C,S3.1\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-webkit-text-fill-color\",\n                browsers: \"E,C,S3\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-webkit-text-size-adjust\",\n                desc: \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n                browsers: \"E,C,S3\",\n                restriction: \"percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Renderers must use the default size adjustment when displaying on a small device.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"Renderers must not do size adjustment when displaying on a small device.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-text-stroke\",\n                browsers: \"S3\",\n                restriction: \"length, line-width, color, percentage\"\n            },\n            {\n                name: \"-webkit-text-stroke-color\",\n                browsers: \"S3\",\n                restriction: \"color\"\n            },\n            {\n                name: \"-webkit-text-stroke-width\",\n                browsers: \"S3\",\n                restriction: \"length, line-width, percentage\"\n            },\n            {\n                name: \"-webkit-touch-callout\",\n                browsers: \"S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"none\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-transform\",\n                desc: \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n                browsers: \"C,O12,S3.1\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"matrix()\"\n                    },\n                    {\n                        name: \"matrix3d()\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"perspective()\"\n                    },\n                    {\n                        name: \"rotate()\"\n                    },\n                    {\n                        name: \"rotate3d()\"\n                    },\n                    {\n                        name: \"rotateX('angle')\"\n                    },\n                    {\n                        name: \"rotateY('angle')\"\n                    },\n                    {\n                        name: \"rotateZ('angle')\"\n                    },\n                    {\n                        name: \"scale()\"\n                    },\n                    {\n                        name: \"scale3d()\"\n                    },\n                    {\n                        name: \"scaleX()\"\n                    },\n                    {\n                        name: \"scaleY()\"\n                    },\n                    {\n                        name: \"scaleZ()\"\n                    },\n                    {\n                        name: \"skew()\"\n                    },\n                    {\n                        name: \"skewX()\"\n                    },\n                    {\n                        name: \"skewY()\"\n                    },\n                    {\n                        name: \"translate()\"\n                    },\n                    {\n                        name: \"translate3d()\"\n                    },\n                    {\n                        name: \"translateX()\"\n                    },\n                    {\n                        name: \"translateY()\"\n                    },\n                    {\n                        name: \"translateZ()\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-transform-origin\",\n                desc: \"Establishes the origin of transformation for an element.\",\n                browsers: \"C,O15,S3.1\",\n                restriction: \"position, length, percentage\"\n            },\n            {\n                name: \"-webkit-transform-origin-x\",\n                desc: \"The x coordinate of the origin for transforms applied to an element with respect to its border box.\",\n                browsers: \"C,S3.1\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-webkit-transform-origin-y\",\n                desc: \"The y coordinate of the origin for transforms applied to an element with respect to its border box.\",\n                browsers: \"C,S3.1\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-webkit-transform-origin-z\",\n                desc: \"The z coordinate of the origin for transforms applied to an element with respect to its border box.\",\n                browsers: \"C,S4\",\n                restriction: \"length, percentage\"\n            },\n            {\n                name: \"-webkit-transform-style\",\n                desc: \"Defines how nested elements are rendered in 3D space.\",\n                browsers: \"C,S4\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"flat\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-transition\",\n                desc: \"Shorthand property combines four of the transition properties into a single property.\",\n                browsers: \"C,O12,S5\",\n                restriction: \"time, property, timing-function, enum\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-transition-delay\",\n                desc: \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n                browsers: \"C,O12,S5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-webkit-transition-duration\",\n                desc: \"Specifies how long the transition from the old value to the new value should take.\",\n                browsers: \"C,O12,S5\",\n                restriction: \"time\"\n            },\n            {\n                name: \"-webkit-transition-property\",\n                desc: \"Specifies the name of the CSS property to which the transition is applied.\",\n                browsers: \"C,O12,S5\",\n                restriction: \"property\",\n                values: [\n                    {\n                        name: \"all\",\n                        desc: \"Every property that is able to undergo a transition will do so.\"\n                    },\n                    {\n                        name: \"none\",\n                        desc: \"No property will transition.\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-transition-timing-function\",\n                desc: \"Describes how the intermediate values used during a transition will be calculated.\",\n                browsers: \"C,O12,S5\",\n                restriction: \"timing-function\"\n            },\n            {\n                name: \"-webkit-user-drag\",\n                browsers: \"S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"element\"\n                    },\n                    {\n                        name: \"none\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-user-modify\",\n                desc: \"Determines whether a user can edit the content of an element.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"read-only\"\n                    },\n                    {\n                        name: \"read-write\"\n                    },\n                    {\n                        name: \"read-write-plaintext-only\"\n                    }\n                ]\n            },\n            {\n                name: \"-webkit-user-select\",\n                desc: \"Controls the appearance of selection.\",\n                browsers: \"C,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"auto\"\n                    },\n                    {\n                        name: \"none\"\n                    },\n                    {\n                        name: \"text\"\n                    }\n                ]\n            },\n            {\n                name: \"white-space\",\n                desc: \"Shorthand property for the 'white-space-collapsing' and 'text-wrap' properties.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'normal'.\"\n                    },\n                    {\n                        name: \"nowrap\",\n                        desc: \"Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'none'.\"\n                    },\n                    {\n                        name: \"pre\"\n                    },\n                    {\n                        name: \"pre-line\"\n                    },\n                    {\n                        name: \"pre-wrap\"\n                    }\n                ]\n            },\n            {\n                name: \"widows\",\n                desc: \"Specifies the minimum number of line boxes of a block container that must be left in a fragment after a break.\",\n                browsers: \"C,IE8,O9.5,S1\",\n                restriction: \"integer\"\n            },\n            {\n                name: \"width\",\n                desc: \"Specifies the width of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The width depends on the values of other properties.\"\n                    },\n                    {\n                        name: \"fit-content\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"max-content\",\n                        desc: \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    },\n                    {\n                        name: \"min-content\",\n                        desc: \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\",\n                        browsers: \"C46,O33\"\n                    }\n                ]\n            },\n            {\n                name: \"will-change\",\n                desc: \"Provides a rendering hint to the user agent, stating what kinds of changes the author expects to perform on the element.\",\n                browsers: \"C36,FF36,O24\",\n                restriction: \"enum, identifier\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"Expresses no particular intent.\"\n                    },\n                    {\n                        name: \"contents\",\n                        desc: \"Indicates that the author expects to animate or change something about the element’s contents in the near future.\"\n                    },\n                    {\n                        name: \"scroll-position\"\n                    }\n                ]\n            },\n            {\n                name: \"word-break\",\n                desc: \"Specifies line break opportunities for non-CJK scripts.\",\n                browsers: \"E,C,FF15,IE5,S3\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"break-all\"\n                    },\n                    {\n                        name: \"keep-all\",\n                        desc: \"Block characters can no longer create implied break points.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Breaks non-CJK scripts according to their own rules.\"\n                    }\n                ]\n            },\n            {\n                name: \"word-spacing\",\n                desc: \"Specifies additional spacing between “words”.\",\n                restriction: \"length, percentage\",\n                values: [\n                    {\n                        name: \"normal\",\n                        desc: \"No additional spacing is applied. Computes to zero.\"\n                    }\n                ]\n            },\n            {\n                name: \"word-wrap\",\n                desc: \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"break-word\",\n                        desc: \"An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                    },\n                    {\n                        name: \"normal\",\n                        desc: \"Lines may break only at allowed break points.\"\n                    }\n                ]\n            },\n            {\n                name: \"writing-mode\",\n                desc: \"This is a shorthand property for both 'direction' and 'block-progression'.\",\n                browsers: \"E,FF41\",\n                restriction: \"enum\",\n                values: [\n                    {\n                        name: \"horizontal-tb\"\n                    },\n                    {\n                        name: \"sideways-lr\",\n                        browsers: \"FF43\"\n                    },\n                    {\n                        name: \"sideways-rl\",\n                        browsers: \"FF43\"\n                    },\n                    {\n                        name: \"vertical-lr\"\n                    },\n                    {\n                        name: \"vertical-rl\"\n                    }\n                ]\n            },\n            {\n                name: \"z-index\",\n                desc: \"For a positioned box, the 'z-index' property specifies the stack level of the box in the current stacking context and whether the box establishes a local stacking context.\",\n                restriction: \"integer\",\n                values: [\n                    {\n                        name: \"auto\",\n                        desc: \"The stack level of the generated box in the current stacking context is 0. The box does not establish a new stacking context unless it is the root element.\"\n                    }\n                ]\n            },\n            {\n                name: \"zoom\",\n                desc: \"Non-standard. Specifies the magnification scale of the object. See 'transform: scale()' for a standards-based alternative.\",\n                browsers: \"E,C,IE6,O15,S4\",\n                restriction: \"enum, integer, number, percentage\",\n                values: [\n                    {\n                        name: \"normal\"\n                    }\n                ]\n            }\n        ]\n    }\n};\nvar descriptions = {\n    \"100\": \"Thin\",\n    \"200\": \"Extra Light (Ultra Light)\",\n    \"300\": \"Light\",\n    \"400\": \"Normal\",\n    \"500\": \"Medium\",\n    \"600\": \"Semi Bold (Demi Bold)\",\n    \"700\": \"Bold\",\n    \"800\": \"Extra Bold (Ultra Bold)\",\n    \"900\": \"Black (Heavy)\",\n    \"self-end\": \"The item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\",\n    \"self-start\": \"The item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis..\",\n    \"alternate\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\",\n    \"alternate-reverse\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\",\n    \"backwards\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\",\n    \"forwards\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\",\n    \"paused\": \"A running animation will be paused.\",\n    \"running\": \"Resume playback of a paused animation.\",\n    \"multiply\": \"The source color is multiplied by the destination color and replaces the destination.\",\n    \"screen\": \"Multiplies the complements of the backdrop and source color values, then complements the result.\",\n    \"overlay\": \"Multiplies or screens the colors, depending on the backdrop color value.\",\n    \"darken\": \"Selects the darker of the backdrop and source colors.\",\n    \"lighten\": \"Selects the lighter of the backdrop and source colors.\",\n    \"color-dodge\": \"Brightens the backdrop color to reflect the source color.\",\n    \"color-burn\": \"Darkens the backdrop color to reflect the source color.\",\n    \"hard-light\": \"Multiplies or screens the colors, depending on the source color value.\",\n    \"soft-light\": \"Darkens or lightens the colors, depending on the source color value.\",\n    \"difference\": \"Subtracts the darker of the two constituent colors from the lighter color..\",\n    \"exclusion\": \"Produces an effect similar to that of the Difference mode but lower in contrast.\",\n    \"hue\": \"Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.\",\n    \"saturation\": \"Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color.\",\n    \"color\": \"Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color.\",\n    \"luminosity\": \"Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color.\",\n    \"repeat\": \"The image is tiled (repeated) to fill the area.\",\n    \"clone\": \"Each box is independently wrapped with the border and padding.\",\n    \"slice\": \"The effect is as though the element were rendered with no breaks present, and then sliced by the breaks afterward.\",\n    \"inset\": \"Changes the drop shadow from an outer shadow (one that shadows the box onto the canvas, as if it were lifted above the canvas) to an inner shadow (one that shadows the canvas onto the box, as if the box were cut out of the canvas and shifted behind it).\",\n    \"border-box\": \"The specified width and height (and respective min/max properties) on this element determine the border box of the element.\",\n    \"content-box\": \"Behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element.\",\n    \"rect()\": \"Specifies offsets from the edges of the border box.\",\n    \"evenodd\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses.\",\n    \"nonzero\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray.\",\n    \"linearRGB\": \"Color operations should occur in the linearized RGB color space.\",\n    \"sRGB\": \"Color operations should occur in the sRGB color space.\",\n    \"balance\": \"Balance content equally between columns, if possible.\",\n    \"size\": \"For properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element.\",\n    \"layout\": \"Turns on layout containment for the element.\",\n    \"paint\": \"Turns on paint containment for the element.\",\n    \"attr()\": \"The attr(n) function returns as a string the value of attribute n for the subject of the selector.\",\n    \"counter(name)\": \"Counters are denoted by identifiers (see the 'counter-increment' and 'counter-reset' properties).\",\n    \"alias\": \"Indicates an alias of/shortcut to something is to be created. Often rendered as an arrow with a small curved arrow next to it.\",\n    \"all-scroll\": \"Indicates that the something can be scrolled in any direction. Often rendered as arrows pointing up, down, left, and right with a dot in the middle.\",\n    \"cell\": \"Indicates that a cell or set of cells may be selected. Often rendered as a thick plus-sign with a dot in the middle.\",\n    \"col-resize\": \"Indicates that the item/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating them.\",\n    \"context-menu\": \"A context menu is available for the object under the cursor. Often rendered as an arrow with a small menu-like graphic next to it.\",\n    \"copy\": \"Indicates something is to be copied. Often rendered as an arrow with a small plus sign next to it.\",\n    \"crosshair\": \"A simple crosshair (e.g., short line segments resembling a '+' sign). Often used to indicate a two dimensional bitmap selection mode.\",\n    \"e-resize\": \"Indicates that east edge is to be moved.\",\n    \"ew-resize\": \"Indicates a bidirectional east-west resize cursor.\",\n    \"grab\": \"Indicates that something can be grabbed.\",\n    \"grabbing\": \"Indicates that something is being grabbed.\",\n    \"help\": \"Help is available for the object under the cursor. Often rendered as a question mark or a balloon.\",\n    \"move\": \"Indicates something is to be moved.\",\n    \"-moz-grab\": \"Indicates that something can be grabbed.\",\n    \"-moz-grabbing\": \"Indicates that something is being grabbed.\",\n    \"-moz-zoom-in\": \"Indicates that something can be zoomed (magnified) in.\",\n    \"-moz-zoom-out\": \"Indicates that something can be zoomed (magnified) out.\",\n    \"ne-resize\": \"Indicates that movement starts from north-east corner.\",\n    \"nesw-resize\": \"Indicates a bidirectional north-east/south-west cursor.\",\n    \"no-drop\": \"Indicates that the dragged item cannot be dropped at the current cursor location. Often rendered as a hand or pointer with a small circle with a line through it.\",\n    \"not-allowed\": \"Indicates that the requested action will not be carried out. Often rendered as a circle with a line through it.\",\n    \"n-resize\": \"Indicates that north edge is to be moved.\",\n    \"ns-resize\": \"Indicates a bidirectional north-south cursor.\",\n    \"nw-resize\": \"Indicates that movement starts from north-west corner.\",\n    \"nwse-resize\": \"Indicates a bidirectional north-west/south-east cursor.\",\n    \"pointer\": \"The cursor is a pointer that indicates a link.\",\n    \"progress\": \"A progress indicator. The program is performing some processing, but is different from 'wait' in that the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.\",\n    \"row-resize\": \"Indicates that the item/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.\",\n    \"se-resize\": \"Indicates that movement starts from south-east corner.\",\n    \"s-resize\": \"Indicates that south edge is to be moved.\",\n    \"sw-resize\": \"Indicates that movement starts from south-west corner.\",\n    \"vertical-text\": \"Indicates vertical-text that may be selected. Often rendered as a horizontal I-beam.\",\n    \"wait\": \"Indicates that the program is busy and the user should wait. Often rendered as a watch or hourglass.\",\n    \"-webkit-grab\": \"Indicates that something can be grabbed.\",\n    \"-webkit-grabbing\": \"Indicates that something is being grabbed.\",\n    \"-webkit-zoom-in\": \"Indicates that something can be zoomed (magnified) in.\",\n    \"-webkit-zoom-out\": \"Indicates that something can be zoomed (magnified) out.\",\n    \"w-resize\": \"Indicates that west edge is to be moved.\",\n    \"zoom-in\": \"Indicates that something can be zoomed (magnified) in.\",\n    \"zoom-out\": \"Indicates that something can be zoomed (magnified) out.\",\n    \"ltr\": \"Left-to-right direction.\",\n    \"rtl\": \"Right-to-left direction.\",\n    \"block\": \"The element generates a block-level box\",\n    \"flex\": \"The element generates a principal flex container box and establishes a flex formatting context.\",\n    \"flexbox\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"flow-root\": \"The element generates a block container box, and lays out its contents using flow layout.\",\n    \"grid\": \"The element generates a principal grid container box, and establishes a grid formatting context.\",\n    \"inline-block\": \"A block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the box itself is formatted as an inline box.\",\n    \"inline-flex\": \"Inline-level flex container.\",\n    \"inline-flexbox\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"inline-table\": \"Inline-level table wrapper box containing table box.\",\n    \"list-item\": \"One or more block boxes and one marker box.\",\n    \"-moz-box\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"-moz-inline-box\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"-ms-flexbox\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"-ms-grid\": \"The element generates a principal grid container box, and establishes a grid formatting context.\",\n    \"-ms-inline-flexbox\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"-ms-inline-grid\": \"Inline-level grid container.\",\n    \"run-in\": \"The element generates a run-in box. Run-in elements act like inlines or blocks, depending on the surrounding elements.\",\n    \"table\": \"The element generates a principal table wrapper box containing an additionally-generated table box, and establishes a table formatting context.\",\n    \"-webkit-box\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\",\n    \"-webkit-flex\": \"The element lays out its contents using flow layout (block-and-inline layout).\",\n    \"-webkit-inline-box\": \"Inline-level flex container. Standardized as 'inline-flex'\",\n    \"-webkit-inline-flex\": \"Inline-level flex container.\",\n    \"hide\": \"No borders or backgrounds are drawn around/behind empty cells.\",\n    \"show\": \"Borders and backgrounds are drawn around/behind empty cells (like normal cells).\",\n    \"accumulate\": \"If the ancestor container element has a property of new, then all graphics elements within the current container are rendered both on the parent's background image and onto the target.\",\n    \"new\": \"Create a new background image canvas. All children of the current container element can access the background, and they will be rendered onto both the parent's background image canvas in addition to the target device.\",\n    \"blur()\": \"Applies a Gaussian blur to the input image.\",\n    \"brightness()\": \"Applies a linear multiplier to input image, making it appear more or less bright.\",\n    \"contrast()\": \"Adjusts the contrast of the input.\",\n    \"drop-shadow()\": \"Applies a drop shadow effect to the input image.\",\n    \"grayscale()\": \"Converts the input image to grayscale.\",\n    \"hue-rotate()\": \"Applies a hue rotation on the input image. \",\n    \"invert()\": \"Inverts the samples in the input image.\",\n    \"opacity()\": \"Applies transparency to the samples in the input image.\",\n    \"saturate()\": \"Saturates the input image.\",\n    \"sepia()\": \"Converts the input image to sepia.\",\n    \"column-reverse\": \"Same as 'column', except the main-start and main-end directions are swapped.\",\n    \"row-reverse\": \"Same as 'row', except the main-start and main-end directions are swapped.\",\n    \"wrap-reverse\": \"Same as 'wrap', except the cross-start and cross-end directions are swapped.\",\n    \"inline-end\": \"A keyword indicating that the element must float on the end side of its containing block. That is the right side with ltr scripts, and the left side with rtl scripts.\",\n    \"inline-start\": \"A keyword indicating that the element must float on the start side of its containing block. That is the left side with ltr scripts, and the right side with rtl scripts.\",\n    \"bold\": \"Same as 700\",\n    \"bolder\": \"Specifies the weight of the face bolder than the inherited value.\",\n    \"caption\": \"The font used for captioned controls (e.g., buttons, drop-downs, etc.).\",\n    \"lighter\": \"Specifies the weight of the face lighter than the inherited value.\",\n    \"menu\": \"The font used in menus (e.g., dropdown menus and menu lists).\",\n    \"message-box\": \"The font used in dialog boxes.\",\n    \"small-caption\": \"The font used for labeling small controls.\",\n    \"status-bar\": \"The font used in window status bars.\",\n    \"\\\"aalt\\\"\": \"Access All Alternates.\",\n    \"\\\"abvf\\\"\": \"Above-base Forms. Required in Khmer script.\",\n    \"\\\"abvm\\\"\": \"Above-base Mark Positioning. Required in Indic scripts.\",\n    \"\\\"abvs\\\"\": \"Above-base Substitutions. Required in Indic scripts.\",\n    \"\\\"afrc\\\"\": \"Alternative Fractions.\",\n    \"\\\"akhn\\\"\": \"Akhand. Required in most Indic scripts.\",\n    \"\\\"blwf\\\"\": \"Below-base Form. Required in a number of Indic scripts.\",\n    \"\\\"blwm\\\"\": \"Below-base Mark Positioning. Required in Indic scripts.\",\n    \"\\\"blws\\\"\": \"Below-base Substitutions. Required in Indic scripts.\",\n    \"\\\"calt\\\"\": \"Contextual Alternates.\",\n    \"\\\"case\\\"\": \"Case-Sensitive Forms. Applies only to European scripts; particularly prominent in Spanish-language setting.\",\n    \"\\\"ccmp\\\"\": \"Glyph Composition/Decomposition.\",\n    \"\\\"cfar\\\"\": \"Conjunct Form After Ro. Required in Khmer scripts.\",\n    \"\\\"cjct\\\"\": \"Conjunct Forms. Required in Indic scripts that show similarity to Devanagari.\",\n    \"\\\"clig\\\"\": \"Contextual Ligatures.\",\n    \"\\\"cpct\\\"\": \"Centered CJK Punctuation. Used primarily in Chinese fonts.\",\n    \"\\\"cpsp\\\"\": \"Capital Spacing. Should not be used in connecting scripts (e.g. most Arabic).\",\n    \"\\\"cswh\\\"\": \"Contextual Swash.\",\n    \"\\\"curs\\\"\": \"Cursive Positioning. Can be used in any cursive script.\",\n    \"\\\"c2pc\\\"\": \"Petite Capitals From Capitals. Applies only to bicameral scripts.\",\n    \"\\\"dist\\\"\": \"Distances. Required in Indic scripts.\",\n    \"\\\"dnom\\\"\": \"Denominators.\",\n    \"\\\"dtls\\\"\": \"Dotless Forms. Applied to math formula layout.\",\n    \"\\\"expt\\\"\": \"Expert Forms. Applies only to Japanese.\",\n    \"\\\"falt\\\"\": \"Final Glyph on Line Alternates. Can be used in any cursive script.\",\n    \"\\\"fin2\\\"\": \"Terminal Form #2. Used only with the Syriac script.\",\n    \"\\\"fin3\\\"\": \"Terminal Form #3. Used only with the Syriac script.\",\n    \"\\\"fina\\\"\": \"Terminal Forms. Can be used in any alphabetic script.\",\n    \"\\\"flac\\\"\": \"Flattened ascent forms. Applied to math formula layout.\",\n    \"\\\"frac\\\"\": \"Fractions.\",\n    \"\\\"fwid\\\"\": \"Full Widths. Applies to any script which can use monospaced forms.\",\n    \"\\\"half\\\"\": \"Half Forms. Required in Indic scripts that show similarity to Devanagari.\",\n    \"\\\"haln\\\"\": \"Halant Forms. Required in Indic scripts.\",\n    \"\\\"halt\\\"\": \"Alternate Half Widths. Used only in CJKV fonts.\",\n    \"\\\"hist\\\"\": \"Historical Forms.\",\n    \"\\\"hkna\\\"\": \"Horizontal Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).\",\n    \"\\\"hlig\\\"\": \"Historical Ligatures.\",\n    \"\\\"hngl\\\"\": \"Hangul. Korean only.\",\n    \"\\\"hojo\\\"\": \"Hojo Kanji Forms (JIS X 0212-1990 Kanji Forms). Used only with Kanji script.\",\n    \"\\\"hwid\\\"\": \"Half Widths. Generally used only in CJKV fonts.\",\n    \"\\\"init\\\"\": \"Initial Forms. Can be used in any alphabetic script.\",\n    \"\\\"isol\\\"\": \"Isolated Forms. Can be used in any cursive script.\",\n    \"\\\"ital\\\"\": \"Italics. Applies mostly to Latin; note that many non-Latin fonts contain Latin as well.\",\n    \"\\\"jalt\\\"\": \"Justification Alternates. Can be used in any cursive script.\",\n    \"\\\"jp78\\\"\": \"JIS78 Forms. Applies only to Japanese.\",\n    \"\\\"jp83\\\"\": \"JIS83 Forms. Applies only to Japanese.\",\n    \"\\\"jp90\\\"\": \"JIS90 Forms. Applies only to Japanese.\",\n    \"\\\"jp04\\\"\": \"JIS2004 Forms. Applies only to Japanese.\",\n    \"\\\"lfbd\\\"\": \"Left Bounds.\",\n    \"\\\"ljmo\\\"\": \"Leading Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\",\n    \"\\\"locl\\\"\": \"Localized Forms.\",\n    \"\\\"ltra\\\"\": \"Left-to-right glyph alternates.\",\n    \"\\\"ltrm\\\"\": \"Left-to-right mirrored forms.\",\n    \"\\\"mark\\\"\": \"Mark Positioning.\",\n    \"\\\"med2\\\"\": \"Medial Form #2. Used only with the Syriac script.\",\n    \"\\\"medi\\\"\": \"Medial Forms.\",\n    \"\\\"mgrk\\\"\": \"Mathematical Greek.\",\n    \"\\\"mkmk\\\"\": \"Mark to Mark Positioning.\",\n    \"\\\"nalt\\\"\": \"Alternate Annotation Forms.\",\n    \"\\\"nlck\\\"\": \"NLC Kanji Forms. Used only with Kanji script.\",\n    \"\\\"nukt\\\"\": \"Nukta Forms. Required in Indic scripts..\",\n    \"\\\"numr\\\"\": \"Numerators.\",\n    \"\\\"opbd\\\"\": \"Optical Bounds.\",\n    \"\\\"ordn\\\"\": \"Ordinals. Applies mostly to Latin script.\",\n    \"\\\"ornm\\\"\": \"Ornaments.\",\n    \"\\\"palt\\\"\": \"Proportional Alternate Widths. Used mostly in CJKV fonts.\",\n    \"\\\"pcap\\\"\": \"Petite Capitals.\",\n    \"\\\"pkna\\\"\": \"Proportional Kana. Generally used only in Japanese fonts.\",\n    \"\\\"pnum\\\"\": \"Proportional Figures.\",\n    \"\\\"pref\\\"\": \"Pre-base Forms. Required in Khmer and Myanmar (Burmese) scripts and southern Indic scripts that may display a pre-base form of Ra.\",\n    \"\\\"pres\\\"\": \"Pre-base Substitutions. Required in Indic scripts.\",\n    \"\\\"pstf\\\"\": \"Post-base Forms. Required in scripts of south and southeast Asia that have post-base forms for consonants eg: Gurmukhi, Malayalam, Khmer.\",\n    \"\\\"psts\\\"\": \"Post-base Substitutions.\",\n    \"\\\"pwid\\\"\": \"Proportional Widths.\",\n    \"\\\"qwid\\\"\": \"Quarter Widths. Generally used only in CJKV fonts.\",\n    \"\\\"rand\\\"\": \"Randomize.\",\n    \"\\\"rclt\\\"\": \"Required Contextual Alternates. May apply to any script, but is especially important for many styles of Arabic.\",\n    \"\\\"rlig\\\"\": \"Required Ligatures. Applies to Arabic and Syriac. May apply to some other scripts.\",\n    \"\\\"rkrf\\\"\": \"Rakar Forms. Required in Devanagari and Gujarati scripts.\",\n    \"\\\"rphf\\\"\": \"Reph Form. Required in Indic scripts. E.g. Devanagari, Kannada.\",\n    \"\\\"rtbd\\\"\": \"Right Bounds.\",\n    \"\\\"rtla\\\"\": \"Right-to-left alternates.\",\n    \"\\\"rtlm\\\"\": \"Right-to-left mirrored forms.\",\n    \"\\\"ruby\\\"\": \"Ruby Notation Forms. Applies only to Japanese.\",\n    \"\\\"salt\\\"\": \"Stylistic Alternates.\",\n    \"\\\"sinf\\\"\": \"Scientific Inferiors.\",\n    \"\\\"size\\\"\": \"Optical size.\",\n    \"\\\"smpl\\\"\": \"Simplified Forms. Applies only to Chinese and Japanese.\",\n    \"\\\"ssty\\\"\": \"Math script style alternates.\",\n    \"\\\"stch\\\"\": \"Stretching Glyph Decomposition.\",\n    \"\\\"subs\\\"\": \"Subscript.\",\n    \"\\\"sups\\\"\": \"Superscript.\",\n    \"\\\"titl\\\"\": \"Titling.\",\n    \"\\\"tjmo\\\"\": \"Trailing Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\",\n    \"\\\"tnam\\\"\": \"Traditional Name Forms. Applies only to Japanese.\",\n    \"\\\"trad\\\"\": \"Traditional Forms. Applies only to Chinese and Japanese.\",\n    \"\\\"twid\\\"\": \"Third Widths. Generally used only in CJKV fonts.\",\n    \"\\\"unic\\\"\": \"Unicase.\",\n    \"\\\"valt\\\"\": \"Alternate Vertical Metrics. Applies only to scripts with vertical writing modes.\",\n    \"\\\"vatu\\\"\": \"Vattu Variants. Used for Indic scripts. E.g. Devanagari.\",\n    \"\\\"vert\\\"\": \"Vertical Alternates. Applies only to scripts with vertical writing modes.\",\n    \"\\\"vhal\\\"\": \"Alternate Vertical Half Metrics. Used only in CJKV fonts.\",\n    \"\\\"vjmo\\\"\": \"Vowel Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\",\n    \"\\\"vkna\\\"\": \"Vertical Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).\",\n    \"\\\"vkrn\\\"\": \"Vertical Kerning.\",\n    \"\\\"vpal\\\"\": \"Proportional Alternate Vertical Metrics. Used mostly in CJKV fonts.\",\n    \"\\\"vrt2\\\"\": \"Vertical Alternates and Rotation. Applies only to scripts with vertical writing modes.\",\n    \"\\\"zero\\\"\": \"Slashed Zero.\",\n    \"narrower\": \"Indicates a narrower value relative to the width of the parent element.\",\n    \"wider\": \"Indicates a wider value relative to the width of the parent element.\",\n    \"weight\": \"Allow synthetic bold faces.\",\n    \"annotation()\": \"Enables display of alternate annotation forms.\",\n    \"character-variant()\": \"Enables display of specific character variants.\",\n    \"historical-forms\": \"Enables display of historical forms.\",\n    \"ornaments()\": \"Enables replacement of default glyphs with ornaments, if provided in the font.\",\n    \"styleset()\": \"Enables display with stylistic sets.\",\n    \"stylistic()\": \"Enables display of stylistic alternates.\",\n    \"swash()\": \"Enables display of swash glyphs.\",\n    \"all-petite-caps\": \"Enables display of petite capitals for both upper and lowercase letters.\",\n    \"all-small-caps\": \"Enables display of small capitals for both upper and lowercase letters.\",\n    \"petite-caps\": \"Enables display of petite capitals.\",\n    \"titling-caps\": \"Enables display of titling capitals.\",\n    \"unicase\": \"Enables display of mixture of small capitals for uppercase letters with normal lowercase letters.\",\n    \"full-width\": \"Enables rendering of full-width variants.\",\n    \"jis04\": \"Enables rendering of JIS04 forms.\",\n    \"jis78\": \"Enables rendering of JIS78 forms.\",\n    \"jis83\": \"Enables rendering of JIS83 forms.\",\n    \"jis90\": \"Enables rendering of JIS90 forms.\",\n    \"proportional-width\": \"Enables rendering of proportionally-spaced variants.\",\n    \"simplified\": \"Enables rendering of simplified forms.\",\n    \"traditional\": \"Enables rendering of traditional forms.\",\n    \"additional-ligatures\": \"Enables display of additional ligatures.\",\n    \"common-ligatures\": \"Enables display of common ligatures.\",\n    \"contextual\": \"Enables display of contextual alternates.\",\n    \"discretionary-ligatures\": \"Enables display of discretionary ligatures.\",\n    \"historical-ligatures\": \"Enables display of historical ligatures.\",\n    \"no-additional-ligatures\": \"Disables display of additional ligatures.\",\n    \"no-common-ligatures\": \"Disables display of common ligatures.\",\n    \"no-contextual\": \"Disables display of contextual alternates.\",\n    \"no-discretionary-ligatures\": \"Disables display of discretionary ligatures.\",\n    \"no-historical-ligatures\": \"Disables display of historical ligatures.\",\n    \"diagonal-fractions\": \"Enables display of lining diagonal fractions.\",\n    \"lining-nums\": \"Enables display of lining numerals.\",\n    \"oldstyle-nums\": \"Enables display of old-style numerals.\",\n    \"ordinal\": \"Enables display of letter forms used with ordinal numbers.\",\n    \"proportional-nums\": \"Enables display of proportional numerals.\",\n    \"slashed-zero\": \"Enables display of slashed zeros.\",\n    \"stacked-fractions\": \"Enables display of lining stacked fractions.\",\n    \"tabular-nums\": \"Enables display of tabular numerals.\",\n    \"span\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\",\n    \"minmax()\": \"Defines a size range greater than or equal to min and less than or equal to max.\",\n    \"dense\": \"If specified, the auto-placement algorithm uses a “dense” packing algorithm, which attempts to fill in holes earlier in the grid if smaller items come up later.\",\n    \"fit-content\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\",\n    \"manual\": \"Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities\",\n    \"flip\": \"After rotating by the precededing angle, the image is flipped horizontally. Defaults to 0deg if the angle is ommitted.\",\n    \"from-image\": \"If the image has an orientation specified in its metadata, such as EXIF, this value computes to the angle that the metadata specifies is necessary to correctly orient the image.\",\n    \"crisp-edges\": \"The image must be scaled with an algorithm that preserves contrast and edges in the image, and which does not smooth colors or introduce blur to the image in the process.\",\n    \"optimizeQuality\": \"Deprecated.\",\n    \"pixelated\": \"When scaling the image up, the 'nearest neighbor' or similar algorithm must be used, so that the image appears to be simply composed of very large pixels.\",\n    \"active\": \"The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it.\",\n    \"disabled\": \"The input method editor is disabled and may not be activated by the user.\",\n    \"inactive\": \"The input method editor is initially inactive, but the user may activate it if they wish.\",\n    \"safe\": \"If the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.\",\n    \"unsafe\": \"Regardless of the relative sizes of the item and alignment container, the given alignment value is honored.\",\n    \"space-evenly\": \"The items are evenly distributed within the alignment container along the main axis.\",\n    \"circle\": \"A hollow circle.\",\n    \"disc\": \"A filled circle.\",\n    \"inside\": \"The marker box is outside the principal block box, as described in the section on the ::marker pseudo-element below.\",\n    \"outside\": \"The ::marker pseudo-element is an inline element placed immediately before all ::before pseudo-elements in the principal block box, after which the element's content flows.\",\n    \"symbols()\": \"Allows a counter style to be defined inline.\",\n    \"path()\": \"Defines an SVG path as a string, with optional 'fill-rule' as the first argument.\",\n    \"block-axis\": \"Elements are oriented along the box's axis.\",\n    \"inline-axis\": \"Elements are oriented vertically.\",\n    \"padding-box\": \"The specified width and height (and respective min/max properties) on this element determine the padding box of the element.\",\n    \"line-through\": \"Each line of text has a line through the middle.\",\n    \"overline\": \"Each line of text has a line above it.\",\n    \"underline\": \"Each line of text is underlined.\",\n    \"dashed\": \"Produces a dashed line style.\",\n    \"dotted\": \"Produces a dotted line.\",\n    \"double\": \"Produces a double line.\",\n    \"solid\": \"Produces a solid line.\",\n    \"wavy\": \"Produces a wavy line.\",\n    \"matrix()\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\",\n    \"matrix3d()\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\",\n    \"perspective\": \"Specifies a perspective projection matrix.\",\n    \"rotate()\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\",\n    \"rotate3d()\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\",\n    \"rotateX('angle')\": \"Specifies a clockwise rotation by the given angle about the X axis.\",\n    \"rotateY('angle')\": \"Specifies a clockwise rotation by the given angle about the Y axis.\",\n    \"rotateZ('angle')\": \"Specifies a clockwise rotation by the given angle about the Z axis.\",\n    \"scale()\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\",\n    \"scale3d()\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\",\n    \"scaleX()\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\",\n    \"scaleY()\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\",\n    \"scaleZ()\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\",\n    \"skew()\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\",\n    \"skewX()\": \"Specifies a skew transformation along the X axis by the given angle.\",\n    \"skewY()\": \"Specifies a skew transformation along the Y axis by the given angle.\",\n    \"translate()\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\",\n    \"translate3d()\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\",\n    \"translateX()\": \"Specifies a translation by the given amount in the X direction.\",\n    \"translateY()\": \"Specifies a translation by the given amount in the Y direction.\",\n    \"translateZ()\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\",\n    \"false\": \"The element does not contain an accelerator key sequence.\",\n    \"true\": \"The element contains an accelerator key sequence.\",\n    \"bt\": \"Bottom-to-top block flow. Layout is horizontal.\",\n    \"lr\": \"Left-to-right direction. The flow orientation is vertical.\",\n    \"rl\": \"Right-to-left direction. The flow orientation is vertical.\",\n    \"tb\": \"Top-to-bottom direction. The flow orientation is horizontal.\",\n    \"zoom\": \"The element is zoomable.\",\n    \"no-limit\": \"There is no limit.\",\n    \"mode\": \"Any of the range of mode values available to the -ms-layout-grid-mode property.\",\n    \"type\": \"Any of the range of type values available to the -ms-layout-grid-type property.\",\n    \"-ms-autohiding-scrollbar\": \"Indicates the element displays auto-hiding scrollbars during mouse interactions and panning indicators during touch and keyboard interactions.\",\n    \"scrollbar\": \"Scrollbars are typically narrow strips inserted on one or two edges of an element and which often have arrows to click on and a \\\"thumb\\\" to drag up and down (or left and right) to move the contents of the element.\",\n    \"ideograph-alpha\": \"Creates 1/4em extra spacing between runs of ideographic letters and non-ideographic letters, such as Latin-based, Cyrillic, Greek, Arabic or Hebrew.\",\n    \"ideograph-numeric\": \"Creates 1/4em extra spacing between runs of ideographic letters and numeric glyphs.\",\n    \"ideograph-parenthesis\": \"Creates extra spacing between normal (non wide) parenthesis and ideographs.\",\n    \"ideograph-space\": \"Extends the width of the space character while surrounded by ideographs.\",\n    \"punctuation\": \"Creates extra non-breaking spacing around punctuation as required by language-specific typographic conventions.\",\n    \"digits\": \"Attempt to typeset horizontally each maximal sequence of consecutive ASCII digits (U+0030–U+0039) that has as many or fewer characters than the specified integer such that it takes up the space of a single character within the vertical line box.\",\n    \"inter-cluster\": \"Justification primarily changes spacing at word separators and at grapheme cluster boundaries in clustered scripts. This value is typically used for Southeast Asian scripts such as Thai.\",\n    \"inter-ideograph\": \"Justification primarily changes spacing at word separators and at inter-graphemic boundaries in scripts that use no word spaces. This value is typically used for CJK languages.\",\n    \"inter-word\": \"Justification primarily changes spacing at word separators. This value is typically used for languages that separate words using spaces, like English or (sometimes) Korean.\",\n    \"kashida\": \"Justification primarily stretches Arabic and related scripts through the use of kashida or other calligraphic elongation.\",\n    \"clip\": \"Clip inline content that overflows. Characters may be only partially rendered.\",\n    \"ellipsis\": \"Render an ellipsis character (U+2026) to represent clipped inline content.\",\n    \"over\": \"The underline is aligned with the 'top' (right in vertical writing) edge of the element's em-box. In this mode, an overline also switches sides.\",\n    \"under\": \"The underline is aligned with the 'bottom' (left in vertical writing) edge of the element's em-box. In this case the underline usually does not cross the descenders. This is sometimes called 'accounting' underline.\",\n    \"grippers\": \"Grippers are always on.\",\n    \"break-all\": \"Lines may break between any two grapheme clusters for non-CJK scripts.\",\n    \"clear\": \"Inline flow content can only wrap on top and bottom of the exclusion and must leave the areas to the start and end edges of the exclusion box empty.\",\n    \"maximum\": \"Inline flow content can wrap on the side of the exclusion with the largest available space for the given line, and must leave the other side of the exclusion empty.\",\n    \"minimum\": \"Inline flow content can flow around the edge of the exclusion with the smallest available space within the flow content’s containing block, and must leave the other edge of the exclusion empty.\",\n    \"current\": \"Indicates that the user agent should target the frame that the element is in.\",\n    \"root\": \"Indicates that the user agent should target the full window.\",\n    \"scale-down\": \"Size the content as if ‘none’ or ‘contain’ were specified, whichever would result in a smaller concrete object size.\",\n    \"invert\": \"Performs a color inversion on the pixels on the screen.\",\n    \"-moz-hidden-unscrollable\": \"Same as the standardized 'clip', except doesn’t establish a block formatting context.\",\n    \"painted\": \"The given element can be the target element for pointer events when the pointer is over a \\\"painted\\\" area. \",\n    \"visibleFill\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the interior of the element.\",\n    \"visiblePainted\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over a ‘painted’ area.\",\n    \"visibleStroke\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the perimeter of the element.\",\n    \"absolute\": \"The box's position (and possibly size) is specified with the 'top', 'right', 'bottom', and 'left' properties. These properties specify offsets with respect to the box's 'containing block'.\",\n    \"-ms-page\": \"The box's position is calculated according to the 'absolute' model.\",\n    \"relative\": \"The box's position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its normal position.\",\n    \"static\": \"The box is a normal box, laid out according to the normal flow. The 'top', 'right', 'bottom', and 'left' properties do not apply.\",\n    \"sticky\": \"The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.\",\n    \"-webkit-sticky\": \"The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.\",\n    \"distribute-letter\": \"If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with the first and last ruby text glyphs lining up with the corresponding first and last base glyphs. If the width of the ruby text is at least the width of the base, then the letters of the base are evenly distributed across the width of the ruby text.\",\n    \"distribute-space\": \"If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with a certain amount of white space preceding the first and following the last character in the ruby text. That amount of white space is normally equal to half the amount of inter-character space of the ruby text.\",\n    \"line-edge\": \"If the ruby text is not adjacent to a line edge, it is aligned as in 'auto'. If it is adjacent to a line edge, then it is still aligned as in auto, but the side of the ruby text that touches the end of the line is lined up with the corresponding edge of the base.\",\n    \"after\": \"The ruby text appears after the base. This is a relatively rare setting used in ideographic East Asian writing systems, most easily found in educational text.\",\n    \"before\": \"The ruby text appears before the base. This is the most common setting used in ideographic East Asian writing systems.\",\n    \"attr(x)\": \"The value of attribute 'x' is a string value. The string value is evaluated as a <number> to determine the number of ruby base elements to be spanned by the annotation element.\",\n    \"smooth\": \"Scrolls in a smooth fashion using a user-agent-defined timing function and time period.\",\n    \"margin-box\": \"The background is painted within (clipped to) the margin box.\",\n    \"crispEdges\": \"Emphasize the contrast between clean edges of artwork over rendering speed and geometric precision.\",\n    \"format()\": \"Optional hint describing the format of the font resource.\",\n    \"local()\": \"Format-specific string that identifies a locally available copy of a given font.\",\n    \"butt\": \"Indicates that the stroke for each subpath does not extend beyond its two endpoints.\",\n    \"bevel\": \"Indicates that a bevelled corner is to be used to join path segments.\",\n    \"miter\": \"Indicates that a sharp corner is to be used to join path segments.\",\n    \"additive\": \"Represents “sign-value” numbering systems, which, rather than using reusing digits in different positions to change their value, define additional digits with much larger values, so that the value of the number can be obtained by adding all the digits together.\",\n    \"cyclic\": \"Cycles repeatedly through its provided symbols, looping back to the beginning when it reaches the end of the list.\",\n    \"extends\": \"Use the algorithm of another counter style, but alter other aspects.\",\n    \"numeric\": \"interprets the list of counter symbols as digits to a \\\"place-value\\\" numbering system, similar to the default 'decimal' counter style.\",\n    \"symbolic\": \"Cycles repeatedly through its provided symbols, doubling, tripling, etc. the symbols on each successive pass through the list.\",\n    \"sideways\": \"This value is equivalent to 'sideways-right' in 'vertical-rl' writing mode and equivalent to 'sideways-left' in 'vertical-lr' writing mode.\",\n    \"sideways-right\": \"In vertical writing modes, this causes text to be set as if in a horizontal layout, but rotated 90° clockwise.\",\n    \"upright\": \"In vertical writing modes, characters from horizontal-only scripts are rendered upright, i.e. in their standard horizontal orientation.\",\n    \"optimizeLegibility\": \"Indicates that the user agent shall emphasize legibility over rendering speed and geometric precision.\",\n    \"capitalize\": \"Puts the first typographic letter unit of each word in titlecase.\",\n    \"lowercase\": \"Puts all letters in lowercase.\",\n    \"uppercase\": \"Puts all letters in uppercase.\",\n    \"perspective()\": \"Specifies a perspective projection matrix.\",\n    \"flat\": \"All children of this element are rendered flattened into the 2D plane of the element.\",\n    \"preserve-3d\": \"Flattening is not performed, so children maintain their position in 3D space.\",\n    \"bidi-override\": \"Inside the element, reordering is strictly in sequence according to the 'direction' property; the implicit part of the bidirectional algorithm is ignored.\",\n    \"embed\": \"If the element is inline-level, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the 'direction' property.\",\n    \"isolate-override\": \"This combines the isolation behavior of 'isolate' with the directional override behavior of 'bidi-override'\",\n    \"plaintext\": \"For the purposes of the Unicode bidirectional algorithm, the base directionality of each bidi paragraph for which the element forms the containing block is determined not by the element's computed 'direction'.\",\n    \"U+26\": \"Ampersand.\",\n    \"U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F\": \"WGL4 character set (Pan-European).\",\n    \"U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF\": \"The Multilingual European Subset No. 1. Latin. Covers ~44 languages.\",\n    \"U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD\": \"The Multilingual European Subset No. 2. Latin, Greek, and Cyrillic. Covers ~128 language.\",\n    \"U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD\": \"The Multilingual European Subset No. 3. Covers all characters belonging to European scripts.\",\n    \"U+00-7F\": \"Basic Latin (ASCII).\",\n    \"U+80-FF\": \"Latin-1 Supplement. Accented characters for Western European languages, common punctuation characters, multiplication and division signs.\",\n    \"U+100-17F\": \"Latin Extended-A. Accented characters for for Czech, Dutch, Polish, and Turkish.\",\n    \"U+180-24F\": \"Latin Extended-B. Croatian, Slovenian, Romanian, Non-European and historic latin, Khoisan, Pinyin, Livonian, Sinology.\",\n    \"U+1E00-1EFF\": \"Latin Extended Additional. Vietnamese, German captial sharp s, Medievalist, Latin general use.\",\n    \"U+250-2AF\": \"International Phonetic Alphabet Extensions.\",\n    \"U+370-3FF\": \"Greek and Coptic.\",\n    \"U+1F00-1FFF\": \"Greek Extended. Accented characters for polytonic Greek.\",\n    \"U+400-4FF\": \"Cyrillic.\",\n    \"U+500-52F\": \"Cyrillic Supplement. Extra letters for Komi, Khanty, Chukchi, Mordvin, Kurdish, Aleut, Chuvash, Abkhaz, Azerbaijani, and Orok.\",\n    \"U+00-52F, U+1E00-1FFF, U+2200–22FF\": \"Latin, Greek, Cyrillic, some punctuation and symbols.\",\n    \"U+530–58F\": \"Armenian.\",\n    \"U+590–5FF\": \"Hebrew.\",\n    \"U+600–6FF\": \"Arabic.\",\n    \"U+750–77F\": \"Arabic Supplement. Additional letters for African languages, Khowar, Torwali, Burushaski, and early Persian.\",\n    \"U+8A0–8FF\": \"Arabic Extended-A. Additional letters for African languages, European and Central Asian languages, Rohingya, Tamazight, Arwi, and Koranic annotation signs.\",\n    \"U+700–74F\": \"Syriac.\",\n    \"U+900–97F\": \"Devanagari.\",\n    \"U+980–9FF\": \"Bengali.\",\n    \"U+A00–A7F\": \"Gurmukhi.\",\n    \"U+A80–AFF\": \"Gujarati.\",\n    \"U+B00–B7F\": \"Oriya.\",\n    \"U+B80–BFF\": \"Tamil.\",\n    \"U+C00–C7F\": \"Telugu.\",\n    \"U+C80–CFF\": \"Kannada.\",\n    \"U+D00–D7F\": \"Malayalam.\",\n    \"U+D80–DFF\": \"Sinhala.\",\n    \"U+118A0–118FF\": \"Warang Citi.\",\n    \"U+E00–E7F\": \"Thai.\",\n    \"U+1A20–1AAF\": \"Tai Tham.\",\n    \"U+AA80–AADF\": \"Tai Viet.\",\n    \"U+E80–EFF\": \"Lao.\",\n    \"U+F00–FFF\": \"Tibetan.\",\n    \"U+1000–109F\": \"Myanmar (Burmese).\",\n    \"U+10A0–10FF\": \"Georgian.\",\n    \"U+1200–137F\": \"Ethiopic.\",\n    \"U+1380–139F\": \"Ethiopic Supplement. Extra Syllables for Sebatbeit, and Tonal marks\",\n    \"U+2D80–2DDF\": \"Ethiopic Extended. Extra Syllables for Me'en, Blin, and Sebatbeit.\",\n    \"U+AB00–AB2F\": \"Ethiopic Extended-A. Extra characters for Gamo-Gofa-Dawro, Basketo, and Gumuz.\",\n    \"U+1780–17FF\": \"Khmer.\",\n    \"U+1800–18AF\": \"Mongolian.\",\n    \"U+1B80–1BBF\": \"Sundanese.\",\n    \"U+1CC0–1CCF\": \"Sundanese Supplement. Punctuation.\",\n    \"U+4E00–9FD5\": \"CJK (Chinese, Japanese, Korean) Unified Ideographs. Most common ideographs for modern Chinese and Japanese.\",\n    \"U+3400–4DB5\": \"CJK Unified Ideographs Extension A. Rare ideographs.\",\n    \"U+2F00–2FDF\": \"Kangxi Radicals.\",\n    \"U+2E80–2EFF\": \"CJK Radicals Supplement. Alternative forms of Kangxi Radicals.\",\n    \"U+1100–11FF\": \"Hangul Jamo.\",\n    \"U+AC00–D7AF\": \"Hangul Syllables.\",\n    \"U+3040–309F\": \"Hiragana.\",\n    \"U+30A0–30FF\": \"Katakana.\",\n    \"U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F\": \"Japanese Kanji, Hiragana and Katakana characters plus Yen/Yuan symbol.\",\n    \"U+A4D0–A4FF\": \"Lisu.\",\n    \"U+A000–A48F\": \"Yi Syllables.\",\n    \"U+A490–A4CF\": \"Yi Radicals.\",\n    \"U+2000-206F\": \"General Punctuation.\",\n    \"U+3000–303F\": \"CJK Symbols and Punctuation.\",\n    \"U+2070–209F\": \"Superscripts and Subscripts.\",\n    \"U+20A0–20CF\": \"Currency Symbols.\",\n    \"U+2100–214F\": \"Letterlike Symbols.\",\n    \"U+2150–218F\": \"Number Forms.\",\n    \"U+2190–21FF\": \"Arrows.\",\n    \"U+2200–22FF\": \"Mathematical Operators.\",\n    \"U+2300–23FF\": \"Miscellaneous Technical.\",\n    \"U+E000-F8FF\": \"Private Use Area.\",\n    \"U+FB00–FB4F\": \"Alphabetic Presentation Forms. Ligatures for latin, Armenian, and Hebrew.\",\n    \"U+FB50–FDFF\": \"Arabic Presentation Forms-A. Contextual forms / ligatures for Persian, Urdu, Sindhi, Central Asian languages, etc, Arabic pedagogical symbols, word ligatures.\",\n    \"U+1F600–1F64F\": \"Emoji: Emoticons.\",\n    \"U+2600–26FF\": \"Emoji: Miscellaneous Symbols.\",\n    \"U+1F300–1F5FF\": \"Emoji: Miscellaneous Symbols and Pictographs.\",\n    \"U+1F900–1F9FF\": \"Emoji: Supplemental Symbols and Pictographs.\",\n    \"U+1F680–1F6FF\": \"Emoji: Transport and Map Symbols.\",\n    \"text-bottom\": \"Align the bottom of the box with the after-edge of the parent element's font.\",\n    \"text-top\": \"Align the top of the box with the before-edge of the parent element's font.\",\n    \"break\": \"If the content fits within the CSS Region, then this property has no effect.\",\n    \"pre\": \"Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'none'.\",\n    \"pre-line\": \"Sets 'white-space-collapsing' to 'preserve-breaks' and 'text-wrap' to 'normal'.\",\n    \"pre-wrap\": \"Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'normal'.\",\n    \"scroll-position\": \"Indicates that the author expects to animate or change the scroll position of the element in the near future.\",\n    \"horizontal-tb\": \"Top-to-bottom block flow direction. The writing mode is horizontal.\",\n    \"sideways-lr\": \"Left-to-right block flow direction. The writing mode is vertical, while the typographic mode is horizontal.\",\n    \"sideways-rl\": \"Right-to-left block flow direction. The writing mode is vertical, while the typographic mode is horizontal.\",\n    \"vertical-lr\": \"Left-to-right block flow direction. The writing mode is vertical.\",\n    \"vertical-rl\": \"Right-to-left block flow direction. The writing mode is vertical.\"\n};\n//# sourceMappingURL=browsers.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js ***!
  \*************************************************************************************************************/
/*! exports provided: CSSIssueType, ParseError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSIssueType\", function() { return CSSIssueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParseError\", function() { return ParseError; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar CSSIssueType = /** @class */ (function () {\n    function CSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return CSSIssueType;\n}());\n\nvar ParseError = {\n    NumberExpected: new CSSIssueType('css-numberexpected', localize('expected.number', \"number expected\")),\n    ConditionExpected: new CSSIssueType('css-conditionexpected', localize('expected.condt', \"condition expected\")),\n    RuleOrSelectorExpected: new CSSIssueType('css-ruleorselectorexpected', localize('expected.ruleorselector', \"at-rule or selector expected\")),\n    DotExpected: new CSSIssueType('css-dotexpected', localize('expected.dot', \"dot expected\")),\n    ColonExpected: new CSSIssueType('css-colonexpected', localize('expected.colon', \"colon expected\")),\n    SemiColonExpected: new CSSIssueType('css-semicolonexpected', localize('expected.semicolon', \"semi-colon expected\")),\n    TermExpected: new CSSIssueType('css-termexpected', localize('expected.term', \"term expected\")),\n    ExpressionExpected: new CSSIssueType('css-expressionexpected', localize('expected.expression', \"expression expected\")),\n    OperatorExpected: new CSSIssueType('css-operatorexpected', localize('expected.operator', \"operator expected\")),\n    IdentifierExpected: new CSSIssueType('css-identifierexpected', localize('expected.ident', \"identifier expected\")),\n    PercentageExpected: new CSSIssueType('css-percentageexpected', localize('expected.percentage', \"percentage expected\")),\n    URIOrStringExpected: new CSSIssueType('css-uriorstringexpected', localize('expected.uriorstring', \"uri or string expected\")),\n    URIExpected: new CSSIssueType('css-uriexpected', localize('expected.uri', \"URI expected\")),\n    VariableNameExpected: new CSSIssueType('css-varnameexpected', localize('expected.varname', \"variable name expected\")),\n    VariableValueExpected: new CSSIssueType('css-varvalueexpected', localize('expected.varvalue', \"variable value expected\")),\n    PropertyValueExpected: new CSSIssueType('css-propertyvalueexpected', localize('expected.propvalue', \"property value expected\")),\n    LeftCurlyExpected: new CSSIssueType('css-lcurlyexpected', localize('expected.lcurly', \"{ expected\")),\n    RightCurlyExpected: new CSSIssueType('css-rcurlyexpected', localize('expected.rcurly', \"} expected\")),\n    LeftSquareBracketExpected: new CSSIssueType('css-rbracketexpected', localize('expected.lsquare', \"[ expected\")),\n    RightSquareBracketExpected: new CSSIssueType('css-lbracketexpected', localize('expected.rsquare', \"] expected\")),\n    LeftParenthesisExpected: new CSSIssueType('css-lparentexpected', localize('expected.lparen', \"( expected\")),\n    RightParenthesisExpected: new CSSIssueType('css-rparentexpected', localize('expected.rparent', \") expected\")),\n    CommaExpected: new CSSIssueType('css-commaexpected', localize('expected.comma', \"comma expected\")),\n    PageDirectiveOrDeclarationExpected: new CSSIssueType('css-pagedirordeclexpected', localize('expected.pagedirordecl', \"page directive or declaraton expected\")),\n    UnknownAtRule: new CSSIssueType('css-unknownatrule', localize('unknown.atrule', \"at-rule unknown\")),\n    UnknownKeyword: new CSSIssueType('css-unknownkeyword', localize('unknown.keyword', \"unknown keyword\")),\n    SelectorExpected: new CSSIssueType('css-selectorexpected', localize('expected.selector', \"selector expected\")),\n    StringLiteralExpected: new CSSIssueType('css-stringliteralexpected', localize('expected.stringliteral', \"string literal expected\")),\n    WhitespaceExpected: new CSSIssueType('css-whitespaceexpected', localize('expected.whitespace', \"whitespace expected\")),\n    MediaQueryExpected: new CSSIssueType('css-mediaqueryexpected', localize('expected.mediaquery', \"media query expected\"))\n};\n//# sourceMappingURL=cssErrors.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js ***!
  \************************************************************************************************************/
/*! exports provided: NodeType, ReferenceType, getNodeAtOffset, getNodePath, getParentDeclaration, Node, Nodelist, Identifier, Stylesheet, Declarations, BodyDeclaration, RuleSet, Selector, SimpleSelector, AtApplyRule, AbstractDeclaration, CustomPropertyDeclaration, CustomPropertySet, Declaration, Property, Invocation, Function, FunctionParameter, FunctionArgument, IfStatement, ForStatement, EachStatement, WhileStatement, ElseStatement, FunctionDeclaration, ViewPort, FontFace, NestedProperties, Keyframe, KeyframeSelector, Import, Namespace, Media, Supports, Document, Medialist, MediaQuery, SupportsCondition, Page, PageBoxMarginBox, Expression, BinaryExpression, Term, AttributeSelector, Operator, HexColorValue, NumericValue, VariableDeclaration, Interpolation, Variable, ExtendsReference, MixinReference, MixinDeclaration, LessGuard, GuardCondition, Level, Marker, ParseErrorCollector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodeType\", function() { return NodeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReferenceType\", function() { return ReferenceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodeAtOffset\", function() { return getNodeAtOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodePath\", function() { return getNodePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParentDeclaration\", function() { return getParentDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Nodelist\", function() { return Nodelist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Identifier\", function() { return Identifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stylesheet\", function() { return Stylesheet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Declarations\", function() { return Declarations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BodyDeclaration\", function() { return BodyDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RuleSet\", function() { return RuleSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Selector\", function() { return Selector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleSelector\", function() { return SimpleSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AtApplyRule\", function() { return AtApplyRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractDeclaration\", function() { return AbstractDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomPropertyDeclaration\", function() { return CustomPropertyDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomPropertySet\", function() { return CustomPropertySet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Declaration\", function() { return Declaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Property\", function() { return Property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Invocation\", function() { return Invocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Function\", function() { return Function; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionParameter\", function() { return FunctionParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionArgument\", function() { return FunctionArgument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfStatement\", function() { return IfStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ForStatement\", function() { return ForStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EachStatement\", function() { return EachStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WhileStatement\", function() { return WhileStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ElseStatement\", function() { return ElseStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionDeclaration\", function() { return FunctionDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ViewPort\", function() { return ViewPort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontFace\", function() { return FontFace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedProperties\", function() { return NestedProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Keyframe\", function() { return Keyframe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyframeSelector\", function() { return KeyframeSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Import\", function() { return Import; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Namespace\", function() { return Namespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Media\", function() { return Media; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Supports\", function() { return Supports; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Document\", function() { return Document; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Medialist\", function() { return Medialist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MediaQuery\", function() { return MediaQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SupportsCondition\", function() { return SupportsCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return Page; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageBoxMarginBox\", function() { return PageBoxMarginBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Expression\", function() { return Expression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BinaryExpression\", function() { return BinaryExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Term\", function() { return Term; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributeSelector\", function() { return AttributeSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Operator\", function() { return Operator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HexColorValue\", function() { return HexColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumericValue\", function() { return NumericValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableDeclaration\", function() { return VariableDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interpolation\", function() { return Interpolation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Variable\", function() { return Variable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExtendsReference\", function() { return ExtendsReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinReference\", function() { return MixinReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinDeclaration\", function() { return MixinDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LessGuard\", function() { return LessGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardCondition\", function() { return GuardCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Level\", function() { return Level; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Marker\", function() { return Marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParseErrorCollector\", function() { return ParseErrorCollector; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/// <summary>\n/// Nodes for the css 2.1 specification. See for reference:\n/// http://www.w3.org/TR/CSS21/grammar.html#grammar\n/// </summary>\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Undefined\"] = 0] = \"Undefined\";\n    NodeType[NodeType[\"Identifier\"] = 1] = \"Identifier\";\n    NodeType[NodeType[\"Stylesheet\"] = 2] = \"Stylesheet\";\n    NodeType[NodeType[\"Ruleset\"] = 3] = \"Ruleset\";\n    NodeType[NodeType[\"Selector\"] = 4] = \"Selector\";\n    NodeType[NodeType[\"SimpleSelector\"] = 5] = \"SimpleSelector\";\n    NodeType[NodeType[\"SelectorInterpolation\"] = 6] = \"SelectorInterpolation\";\n    NodeType[NodeType[\"SelectorCombinator\"] = 7] = \"SelectorCombinator\";\n    NodeType[NodeType[\"SelectorCombinatorParent\"] = 8] = \"SelectorCombinatorParent\";\n    NodeType[NodeType[\"SelectorCombinatorSibling\"] = 9] = \"SelectorCombinatorSibling\";\n    NodeType[NodeType[\"SelectorCombinatorAllSiblings\"] = 10] = \"SelectorCombinatorAllSiblings\";\n    NodeType[NodeType[\"SelectorCombinatorShadowPiercingDescendant\"] = 11] = \"SelectorCombinatorShadowPiercingDescendant\";\n    NodeType[NodeType[\"Page\"] = 12] = \"Page\";\n    NodeType[NodeType[\"PageBoxMarginBox\"] = 13] = \"PageBoxMarginBox\";\n    NodeType[NodeType[\"ClassSelector\"] = 14] = \"ClassSelector\";\n    NodeType[NodeType[\"IdentifierSelector\"] = 15] = \"IdentifierSelector\";\n    NodeType[NodeType[\"ElementNameSelector\"] = 16] = \"ElementNameSelector\";\n    NodeType[NodeType[\"PseudoSelector\"] = 17] = \"PseudoSelector\";\n    NodeType[NodeType[\"AttributeSelector\"] = 18] = \"AttributeSelector\";\n    NodeType[NodeType[\"Declaration\"] = 19] = \"Declaration\";\n    NodeType[NodeType[\"Declarations\"] = 20] = \"Declarations\";\n    NodeType[NodeType[\"Property\"] = 21] = \"Property\";\n    NodeType[NodeType[\"Expression\"] = 22] = \"Expression\";\n    NodeType[NodeType[\"BinaryExpression\"] = 23] = \"BinaryExpression\";\n    NodeType[NodeType[\"Term\"] = 24] = \"Term\";\n    NodeType[NodeType[\"Operator\"] = 25] = \"Operator\";\n    NodeType[NodeType[\"Value\"] = 26] = \"Value\";\n    NodeType[NodeType[\"StringLiteral\"] = 27] = \"StringLiteral\";\n    NodeType[NodeType[\"URILiteral\"] = 28] = \"URILiteral\";\n    NodeType[NodeType[\"EscapedValue\"] = 29] = \"EscapedValue\";\n    NodeType[NodeType[\"Function\"] = 30] = \"Function\";\n    NodeType[NodeType[\"NumericValue\"] = 31] = \"NumericValue\";\n    NodeType[NodeType[\"HexColorValue\"] = 32] = \"HexColorValue\";\n    NodeType[NodeType[\"MixinDeclaration\"] = 33] = \"MixinDeclaration\";\n    NodeType[NodeType[\"MixinReference\"] = 34] = \"MixinReference\";\n    NodeType[NodeType[\"VariableName\"] = 35] = \"VariableName\";\n    NodeType[NodeType[\"VariableDeclaration\"] = 36] = \"VariableDeclaration\";\n    NodeType[NodeType[\"Prio\"] = 37] = \"Prio\";\n    NodeType[NodeType[\"Interpolation\"] = 38] = \"Interpolation\";\n    NodeType[NodeType[\"NestedProperties\"] = 39] = \"NestedProperties\";\n    NodeType[NodeType[\"ExtendsReference\"] = 40] = \"ExtendsReference\";\n    NodeType[NodeType[\"SelectorPlaceholder\"] = 41] = \"SelectorPlaceholder\";\n    NodeType[NodeType[\"Debug\"] = 42] = \"Debug\";\n    NodeType[NodeType[\"If\"] = 43] = \"If\";\n    NodeType[NodeType[\"Else\"] = 44] = \"Else\";\n    NodeType[NodeType[\"For\"] = 45] = \"For\";\n    NodeType[NodeType[\"Each\"] = 46] = \"Each\";\n    NodeType[NodeType[\"While\"] = 47] = \"While\";\n    NodeType[NodeType[\"MixinContent\"] = 48] = \"MixinContent\";\n    NodeType[NodeType[\"Media\"] = 49] = \"Media\";\n    NodeType[NodeType[\"Keyframe\"] = 50] = \"Keyframe\";\n    NodeType[NodeType[\"FontFace\"] = 51] = \"FontFace\";\n    NodeType[NodeType[\"Import\"] = 52] = \"Import\";\n    NodeType[NodeType[\"Namespace\"] = 53] = \"Namespace\";\n    NodeType[NodeType[\"Invocation\"] = 54] = \"Invocation\";\n    NodeType[NodeType[\"FunctionDeclaration\"] = 55] = \"FunctionDeclaration\";\n    NodeType[NodeType[\"ReturnStatement\"] = 56] = \"ReturnStatement\";\n    NodeType[NodeType[\"MediaQuery\"] = 57] = \"MediaQuery\";\n    NodeType[NodeType[\"FunctionParameter\"] = 58] = \"FunctionParameter\";\n    NodeType[NodeType[\"FunctionArgument\"] = 59] = \"FunctionArgument\";\n    NodeType[NodeType[\"KeyframeSelector\"] = 60] = \"KeyframeSelector\";\n    NodeType[NodeType[\"ViewPort\"] = 61] = \"ViewPort\";\n    NodeType[NodeType[\"Document\"] = 62] = \"Document\";\n    NodeType[NodeType[\"AtApplyRule\"] = 63] = \"AtApplyRule\";\n    NodeType[NodeType[\"CustomPropertyDeclaration\"] = 64] = \"CustomPropertyDeclaration\";\n    NodeType[NodeType[\"CustomPropertySet\"] = 65] = \"CustomPropertySet\";\n    NodeType[NodeType[\"ListEntry\"] = 66] = \"ListEntry\";\n    NodeType[NodeType[\"Supports\"] = 67] = \"Supports\";\n    NodeType[NodeType[\"SupportsCondition\"] = 68] = \"SupportsCondition\";\n    NodeType[NodeType[\"NamespacePrefix\"] = 69] = \"NamespacePrefix\";\n    NodeType[NodeType[\"GridLine\"] = 70] = \"GridLine\";\n    NodeType[NodeType[\"Plugin\"] = 71] = \"Plugin\";\n})(NodeType || (NodeType = {}));\nvar ReferenceType;\n(function (ReferenceType) {\n    ReferenceType[ReferenceType[\"Mixin\"] = 0] = \"Mixin\";\n    ReferenceType[ReferenceType[\"Rule\"] = 1] = \"Rule\";\n    ReferenceType[ReferenceType[\"Variable\"] = 2] = \"Variable\";\n    ReferenceType[ReferenceType[\"Function\"] = 3] = \"Function\";\n    ReferenceType[ReferenceType[\"Keyframe\"] = 4] = \"Keyframe\";\n    ReferenceType[ReferenceType[\"Unknown\"] = 5] = \"Unknown\";\n})(ReferenceType || (ReferenceType = {}));\nfunction getNodeAtOffset(node, offset) {\n    var candidate = null;\n    if (!node || offset < node.offset || offset > node.end) {\n        return null;\n    }\n    // Find the shortest node at the position\n    node.accept(function (node) {\n        if (node.offset === -1 && node.length === -1) {\n            return true;\n        }\n        if (node.offset <= offset && node.end >= offset) {\n            if (!candidate) {\n                candidate = node;\n            }\n            else if (node.length <= candidate.length) {\n                candidate = node;\n            }\n            return true;\n        }\n        return false;\n    });\n    return candidate;\n}\nfunction getNodePath(node, offset) {\n    var candidate = getNodeAtOffset(node, offset), path = [];\n    while (candidate) {\n        path.unshift(candidate);\n        candidate = candidate.parent;\n    }\n    return path;\n}\nfunction getParentDeclaration(node) {\n    var decl = node.findParent(NodeType.Declaration);\n    if (decl && decl.getValue() && decl.getValue().encloses(node)) {\n        return decl;\n    }\n    return null;\n}\nvar Node = /** @class */ (function () {\n    function Node(offset, len, nodeType) {\n        if (offset === void 0) { offset = -1; }\n        if (len === void 0) { len = -1; }\n        this.parent = null;\n        this.offset = offset;\n        this.length = len;\n        if (nodeType) {\n            this.nodeType = nodeType;\n        }\n    }\n    Object.defineProperty(Node.prototype, \"end\", {\n        get: function () { return this.offset + this.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"type\", {\n        get: function () {\n            return this.nodeType || NodeType.Undefined;\n        },\n        set: function (type) {\n            this.nodeType = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getTextProvider = function () {\n        var node = this;\n        while (node && !node.textProvider) {\n            node = node.parent;\n        }\n        if (node) {\n            return node.textProvider;\n        }\n        return function () { return 'unknown'; };\n    };\n    Node.prototype.getText = function () {\n        return this.getTextProvider()(this.offset, this.length);\n    };\n    Node.prototype.matches = function (str) {\n        return this.length === str.length && this.getTextProvider()(this.offset, this.length) === str;\n    };\n    Node.prototype.startsWith = function (str) {\n        return this.length >= str.length && this.getTextProvider()(this.offset, str.length) === str;\n    };\n    Node.prototype.endsWith = function (str) {\n        return this.length >= str.length && this.getTextProvider()(this.end - str.length, str.length) === str;\n    };\n    Node.prototype.accept = function (visitor) {\n        if (visitor(this) && this.children) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.accept(visitor);\n            }\n        }\n    };\n    Node.prototype.acceptVisitor = function (visitor) {\n        this.accept(visitor.visitNode.bind(visitor));\n    };\n    Node.prototype.adoptChild = function (node, index) {\n        if (index === void 0) { index = -1; }\n        if (node.parent && node.parent.children) {\n            var idx = node.parent.children.indexOf(node);\n            if (idx >= 0) {\n                node.parent.children.splice(idx, 1);\n            }\n        }\n        node.parent = this;\n        var children = this.children;\n        if (!children) {\n            children = this.children = [];\n        }\n        if (index !== -1) {\n            children.splice(index, 0, node);\n        }\n        else {\n            children.push(node);\n        }\n        return node;\n    };\n    Node.prototype.attachTo = function (parent, index) {\n        if (index === void 0) { index = -1; }\n        if (parent) {\n            parent.adoptChild(this, index);\n        }\n        return this;\n    };\n    Node.prototype.collectIssues = function (results) {\n        if (this.issues) {\n            results.push.apply(results, this.issues);\n        }\n    };\n    Node.prototype.addIssue = function (issue) {\n        if (!this.issues) {\n            this.issues = [];\n        }\n        this.issues.push(issue);\n    };\n    Node.prototype.hasIssue = function (rule) {\n        return this.issues && this.issues.some(function (i) { return i.getRule() === rule; });\n    };\n    Node.prototype.isErroneous = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        if (this.issues && this.issues.length > 0) {\n            return true;\n        }\n        return recursive && this.children && this.children.some(function (c) { return c.isErroneous(true); });\n    };\n    Node.prototype.setNode = function (field, node, index) {\n        if (index === void 0) { index = -1; }\n        if (node) {\n            node.attachTo(this, index);\n            this[field] = node;\n            return true;\n        }\n        return false;\n    };\n    Node.prototype.addChild = function (node) {\n        if (node) {\n            if (!this.children) {\n                this.children = [];\n            }\n            node.attachTo(this);\n            this.updateOffsetAndLength(node);\n            return true;\n        }\n        return false;\n    };\n    Node.prototype.updateOffsetAndLength = function (node) {\n        if (node.offset < this.offset || this.offset === -1) {\n            this.offset = node.offset;\n        }\n        var nodeEnd = node.end;\n        if ((nodeEnd > this.end) || this.length === -1) {\n            this.length = nodeEnd - this.offset;\n        }\n    };\n    Node.prototype.hasChildren = function () {\n        return this.children && this.children.length > 0;\n    };\n    Node.prototype.getChildren = function () {\n        return this.children ? this.children.slice(0) : [];\n    };\n    Node.prototype.getChild = function (index) {\n        if (this.children && index < this.children.length) {\n            return this.children[index];\n        }\n        return null;\n    };\n    Node.prototype.addChildren = function (nodes) {\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            this.addChild(node);\n        }\n    };\n    Node.prototype.findFirstChildBeforeOffset = function (offset) {\n        if (this.children) {\n            var current = null;\n            for (var i = this.children.length - 1; i >= 0; i--) {\n                // iterate until we find a child that has a start offset smaller than the input offset\n                current = this.children[i];\n                if (current.offset <= offset) {\n                    return current;\n                }\n            }\n        }\n        return null;\n    };\n    Node.prototype.findChildAtOffset = function (offset, goDeep) {\n        var current = this.findFirstChildBeforeOffset(offset);\n        if (current && current.end >= offset) {\n            if (goDeep) {\n                return current.findChildAtOffset(offset, true) || current;\n            }\n            return current;\n        }\n        return null;\n    };\n    Node.prototype.encloses = function (candidate) {\n        return this.offset <= candidate.offset && this.offset + this.length >= candidate.offset + candidate.length;\n    };\n    Node.prototype.getParent = function () {\n        var result = this.parent;\n        while (result instanceof Nodelist) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.findParent = function (type) {\n        var result = this;\n        while (result && result.type !== type) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.setData = function (key, value) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.options[key] = value;\n    };\n    Node.prototype.getData = function (key) {\n        if (!this.options || !this.options.hasOwnProperty(key)) {\n            return null;\n        }\n        return this.options[key];\n    };\n    return Node;\n}());\n\nvar Nodelist = /** @class */ (function (_super) {\n    __extends(Nodelist, _super);\n    function Nodelist(parent, index) {\n        if (index === void 0) { index = -1; }\n        var _this = _super.call(this, -1, -1) || this;\n        _this.attachTo(parent, index);\n        _this.offset = -1;\n        _this.length = -1;\n        return _this;\n    }\n    return Nodelist;\n}(Node));\n\nvar Identifier = /** @class */ (function (_super) {\n    __extends(Identifier, _super);\n    function Identifier(offset, length) {\n        var _this = _super.call(this, offset, length) || this;\n        _this.isCustomProperty = false;\n        return _this;\n    }\n    Object.defineProperty(Identifier.prototype, \"type\", {\n        get: function () {\n            return NodeType.Identifier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Identifier.prototype.containsInterpolation = function () {\n        return this.hasChildren();\n    };\n    return Identifier;\n}(Node));\n\nvar Stylesheet = /** @class */ (function (_super) {\n    __extends(Stylesheet, _super);\n    function Stylesheet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Stylesheet.prototype, \"type\", {\n        get: function () {\n            return NodeType.Stylesheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Stylesheet.prototype.setName = function (value) {\n        this.name = value;\n    };\n    return Stylesheet;\n}(Node));\n\nvar Declarations = /** @class */ (function (_super) {\n    __extends(Declarations, _super);\n    function Declarations(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Declarations.prototype, \"type\", {\n        get: function () {\n            return NodeType.Declarations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Declarations;\n}(Node));\n\nvar BodyDeclaration = /** @class */ (function (_super) {\n    __extends(BodyDeclaration, _super);\n    function BodyDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    BodyDeclaration.prototype.getDeclarations = function () {\n        return this.declarations;\n    };\n    BodyDeclaration.prototype.setDeclarations = function (decls) {\n        return this.setNode('declarations', decls);\n    };\n    return BodyDeclaration;\n}(Node));\n\nvar RuleSet = /** @class */ (function (_super) {\n    __extends(RuleSet, _super);\n    function RuleSet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(RuleSet.prototype, \"type\", {\n        get: function () {\n            return NodeType.Ruleset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RuleSet.prototype.getSelectors = function () {\n        if (!this.selectors) {\n            this.selectors = new Nodelist(this);\n        }\n        return this.selectors;\n    };\n    RuleSet.prototype.isNested = function () {\n        return this.parent && this.parent.findParent(NodeType.Declarations) !== null;\n    };\n    return RuleSet;\n}(BodyDeclaration));\n\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Selector.prototype, \"type\", {\n        get: function () {\n            return NodeType.Selector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Selector;\n}(Node));\n\nvar SimpleSelector = /** @class */ (function (_super) {\n    __extends(SimpleSelector, _super);\n    function SimpleSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(SimpleSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.SimpleSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSelector;\n}(Node));\n\nvar AtApplyRule = /** @class */ (function (_super) {\n    __extends(AtApplyRule, _super);\n    function AtApplyRule(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(AtApplyRule.prototype, \"type\", {\n        get: function () {\n            return NodeType.AtApplyRule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AtApplyRule.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    AtApplyRule.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    AtApplyRule.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return AtApplyRule;\n}(Node));\n\nvar AbstractDeclaration = /** @class */ (function (_super) {\n    __extends(AbstractDeclaration, _super);\n    function AbstractDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    return AbstractDeclaration;\n}(Node));\n\nvar CustomPropertyDeclaration = /** @class */ (function (_super) {\n    __extends(CustomPropertyDeclaration, _super);\n    function CustomPropertyDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(CustomPropertyDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.CustomPropertyDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomPropertyDeclaration.prototype.setProperty = function (node) {\n        return this.setNode('property', node);\n    };\n    CustomPropertyDeclaration.prototype.getProperty = function () {\n        return this.property;\n    };\n    CustomPropertyDeclaration.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    CustomPropertyDeclaration.prototype.getValue = function () {\n        return this.value;\n    };\n    CustomPropertyDeclaration.prototype.setPropertySet = function (value) {\n        return this.setNode('propertySet', value);\n    };\n    CustomPropertyDeclaration.prototype.getPropertySet = function () {\n        return this.propertySet;\n    };\n    return CustomPropertyDeclaration;\n}(AbstractDeclaration));\n\nvar CustomPropertySet = /** @class */ (function (_super) {\n    __extends(CustomPropertySet, _super);\n    function CustomPropertySet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(CustomPropertySet.prototype, \"type\", {\n        get: function () {\n            return NodeType.CustomPropertySet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CustomPropertySet;\n}(BodyDeclaration));\n\nvar Declaration = /** @class */ (function (_super) {\n    __extends(Declaration, _super);\n    function Declaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Declaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.Declaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Declaration.prototype.setProperty = function (node) {\n        return this.setNode('property', node);\n    };\n    Declaration.prototype.getProperty = function () {\n        return this.property;\n    };\n    Declaration.prototype.getFullPropertyName = function () {\n        var propertyName = this.property ? this.property.getName() : 'unknown';\n        if (this.parent instanceof Declarations && this.parent.getParent() instanceof NestedProperties) {\n            var parentDecl = this.parent.getParent().getParent();\n            if (parentDecl instanceof Declaration) {\n                return parentDecl.getFullPropertyName() + propertyName;\n            }\n        }\n        return propertyName;\n    };\n    Declaration.prototype.getNonPrefixedPropertyName = function () {\n        var propertyName = this.getFullPropertyName();\n        if (propertyName && propertyName.charAt(0) === '-') {\n            var vendorPrefixEnd = propertyName.indexOf('-', 1);\n            if (vendorPrefixEnd !== -1) {\n                return propertyName.substring(vendorPrefixEnd + 1);\n            }\n        }\n        return propertyName;\n    };\n    Declaration.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    Declaration.prototype.getValue = function () {\n        return this.value;\n    };\n    Declaration.prototype.setNestedProperties = function (value) {\n        return this.setNode('nestedProprties', value);\n    };\n    Declaration.prototype.getNestedProperties = function () {\n        return this.nestedProprties;\n    };\n    return Declaration;\n}(AbstractDeclaration));\n\nvar Property = /** @class */ (function (_super) {\n    __extends(Property, _super);\n    function Property(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Property.prototype, \"type\", {\n        get: function () {\n            return NodeType.Property;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Property.prototype.setIdentifier = function (value) {\n        return this.setNode('identifier', value);\n    };\n    Property.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Property.prototype.getName = function () {\n        return this.getText();\n    };\n    Property.prototype.isCustomProperty = function () {\n        return this.identifier.isCustomProperty;\n    };\n    return Property;\n}(Node));\n\nvar Invocation = /** @class */ (function (_super) {\n    __extends(Invocation, _super);\n    function Invocation(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Invocation.prototype, \"type\", {\n        get: function () {\n            return NodeType.Invocation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Invocation.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    return Invocation;\n}(Node));\n\nvar Function = /** @class */ (function (_super) {\n    __extends(Function, _super);\n    function Function(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Function.prototype, \"type\", {\n        get: function () {\n            return NodeType.Function;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Function.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Function.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Function.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return Function;\n}(Invocation));\n\nvar FunctionParameter = /** @class */ (function (_super) {\n    __extends(FunctionParameter, _super);\n    function FunctionParameter(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionParameter.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionParameter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionParameter.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionParameter.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionParameter.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionParameter.prototype.setDefaultValue = function (node) {\n        return this.setNode('defaultValue', node, 0);\n    };\n    FunctionParameter.prototype.getDefaultValue = function () {\n        return this.defaultValue;\n    };\n    return FunctionParameter;\n}(Node));\n\nvar FunctionArgument = /** @class */ (function (_super) {\n    __extends(FunctionArgument, _super);\n    function FunctionArgument(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionArgument.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionArgument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionArgument.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionArgument.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionArgument.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionArgument.prototype.setValue = function (node) {\n        return this.setNode('value', node, 0);\n    };\n    FunctionArgument.prototype.getValue = function () {\n        return this.value;\n    };\n    return FunctionArgument;\n}(Node));\n\nvar IfStatement = /** @class */ (function (_super) {\n    __extends(IfStatement, _super);\n    function IfStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(IfStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.If;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IfStatement.prototype.setExpression = function (node) {\n        return this.setNode('expression', node, 0);\n    };\n    IfStatement.prototype.setElseClause = function (elseClause) {\n        return this.setNode('elseClause', elseClause);\n    };\n    return IfStatement;\n}(BodyDeclaration));\n\nvar ForStatement = /** @class */ (function (_super) {\n    __extends(ForStatement, _super);\n    function ForStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ForStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.For;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ForStatement.prototype.setVariable = function (node) {\n        return this.setNode('variable', node, 0);\n    };\n    return ForStatement;\n}(BodyDeclaration));\n\nvar EachStatement = /** @class */ (function (_super) {\n    __extends(EachStatement, _super);\n    function EachStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(EachStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.Each;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EachStatement.prototype.getVariables = function () {\n        if (!this.variables) {\n            this.variables = new Nodelist(this);\n        }\n        return this.variables;\n    };\n    return EachStatement;\n}(BodyDeclaration));\n\nvar WhileStatement = /** @class */ (function (_super) {\n    __extends(WhileStatement, _super);\n    function WhileStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(WhileStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.While;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return WhileStatement;\n}(BodyDeclaration));\n\nvar ElseStatement = /** @class */ (function (_super) {\n    __extends(ElseStatement, _super);\n    function ElseStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ElseStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.Else;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ElseStatement;\n}(BodyDeclaration));\n\nvar FunctionDeclaration = /** @class */ (function (_super) {\n    __extends(FunctionDeclaration, _super);\n    function FunctionDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionDeclaration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionDeclaration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionDeclaration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    return FunctionDeclaration;\n}(BodyDeclaration));\n\nvar ViewPort = /** @class */ (function (_super) {\n    __extends(ViewPort, _super);\n    function ViewPort(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ViewPort.prototype, \"type\", {\n        get: function () {\n            return NodeType.ViewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ViewPort;\n}(BodyDeclaration));\n\nvar FontFace = /** @class */ (function (_super) {\n    __extends(FontFace, _super);\n    function FontFace(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FontFace.prototype, \"type\", {\n        get: function () {\n            return NodeType.FontFace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FontFace;\n}(BodyDeclaration));\n\nvar NestedProperties = /** @class */ (function (_super) {\n    __extends(NestedProperties, _super);\n    function NestedProperties(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(NestedProperties.prototype, \"type\", {\n        get: function () {\n            return NodeType.NestedProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NestedProperties;\n}(BodyDeclaration));\n\nvar Keyframe = /** @class */ (function (_super) {\n    __extends(Keyframe, _super);\n    function Keyframe(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Keyframe.prototype, \"type\", {\n        get: function () {\n            return NodeType.Keyframe;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Keyframe.prototype.setKeyword = function (keyword) {\n        return this.setNode('keyword', keyword, 0);\n    };\n    Keyframe.prototype.getKeyword = function () {\n        return this.keyword;\n    };\n    Keyframe.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Keyframe.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Keyframe.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return Keyframe;\n}(BodyDeclaration));\n\nvar KeyframeSelector = /** @class */ (function (_super) {\n    __extends(KeyframeSelector, _super);\n    function KeyframeSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(KeyframeSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.KeyframeSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyframeSelector;\n}(BodyDeclaration));\n\nvar Import = /** @class */ (function (_super) {\n    __extends(Import, _super);\n    function Import(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Import.prototype, \"type\", {\n        get: function () {\n            return NodeType.Import;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Import.prototype.setMedialist = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.medialist = node;\n            return true;\n        }\n        return false;\n    };\n    return Import;\n}(Node));\n\nvar Namespace = /** @class */ (function (_super) {\n    __extends(Namespace, _super);\n    function Namespace(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Namespace.prototype, \"type\", {\n        get: function () {\n            return NodeType.Namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Namespace;\n}(Node));\n\nvar Media = /** @class */ (function (_super) {\n    __extends(Media, _super);\n    function Media(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Media.prototype, \"type\", {\n        get: function () {\n            return NodeType.Media;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Media;\n}(BodyDeclaration));\n\nvar Supports = /** @class */ (function (_super) {\n    __extends(Supports, _super);\n    function Supports(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Supports.prototype, \"type\", {\n        get: function () {\n            return NodeType.Supports;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Supports;\n}(BodyDeclaration));\n\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Document.prototype, \"type\", {\n        get: function () {\n            return NodeType.Document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Document;\n}(BodyDeclaration));\n\nvar Medialist = /** @class */ (function (_super) {\n    __extends(Medialist, _super);\n    function Medialist(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Medialist.prototype.getMediums = function () {\n        if (!this.mediums) {\n            this.mediums = new Nodelist(this);\n        }\n        return this.mediums;\n    };\n    return Medialist;\n}(Node));\n\nvar MediaQuery = /** @class */ (function (_super) {\n    __extends(MediaQuery, _super);\n    function MediaQuery(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MediaQuery.prototype, \"type\", {\n        get: function () {\n            return NodeType.MediaQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MediaQuery;\n}(Node));\n\nvar SupportsCondition = /** @class */ (function (_super) {\n    __extends(SupportsCondition, _super);\n    function SupportsCondition(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(SupportsCondition.prototype, \"type\", {\n        get: function () {\n            return NodeType.SupportsCondition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SupportsCondition;\n}(Node));\n\nvar Page = /** @class */ (function (_super) {\n    __extends(Page, _super);\n    function Page(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Page.prototype, \"type\", {\n        get: function () {\n            return NodeType.Page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Page;\n}(BodyDeclaration));\n\nvar PageBoxMarginBox = /** @class */ (function (_super) {\n    __extends(PageBoxMarginBox, _super);\n    function PageBoxMarginBox(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(PageBoxMarginBox.prototype, \"type\", {\n        get: function () {\n            return NodeType.PageBoxMarginBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageBoxMarginBox;\n}(BodyDeclaration));\n\nvar Expression = /** @class */ (function (_super) {\n    __extends(Expression, _super);\n    function Expression(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Expression.prototype, \"type\", {\n        get: function () {\n            return NodeType.Expression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Expression;\n}(Node));\n\nvar BinaryExpression = /** @class */ (function (_super) {\n    __extends(BinaryExpression, _super);\n    function BinaryExpression(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(BinaryExpression.prototype, \"type\", {\n        get: function () {\n            return NodeType.BinaryExpression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BinaryExpression.prototype.setLeft = function (left) {\n        return this.setNode('left', left);\n    };\n    BinaryExpression.prototype.getLeft = function () {\n        return this.left;\n    };\n    BinaryExpression.prototype.setRight = function (right) {\n        return this.setNode('right', right);\n    };\n    BinaryExpression.prototype.getRight = function () {\n        return this.right;\n    };\n    BinaryExpression.prototype.setOperator = function (value) {\n        return this.setNode('operator', value);\n    };\n    BinaryExpression.prototype.getOperator = function () {\n        return this.operator;\n    };\n    return BinaryExpression;\n}(Node));\n\nvar Term = /** @class */ (function (_super) {\n    __extends(Term, _super);\n    function Term(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Term.prototype, \"type\", {\n        get: function () {\n            return NodeType.Term;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Term.prototype.setOperator = function (value) {\n        return this.setNode('operator', value);\n    };\n    Term.prototype.getOperator = function () {\n        return this.operator;\n    };\n    Term.prototype.setExpression = function (value) {\n        return this.setNode('expression', value);\n    };\n    Term.prototype.getExpression = function () {\n        return this.expression;\n    };\n    return Term;\n}(Node));\n\nvar AttributeSelector = /** @class */ (function (_super) {\n    __extends(AttributeSelector, _super);\n    function AttributeSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(AttributeSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.AttributeSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AttributeSelector.prototype.setExpression = function (value) {\n        return this.setNode('expression', value);\n    };\n    AttributeSelector.prototype.getExpression = function () {\n        return this.expression;\n    };\n    AttributeSelector.prototype.setNamespacePrefix = function (value) {\n        return this.setNode('namespacePrefix', value);\n    };\n    AttributeSelector.prototype.getNamespacePrefix = function () {\n        return this.namespacePrefix;\n    };\n    return AttributeSelector;\n}(Node));\n\nvar Operator = /** @class */ (function (_super) {\n    __extends(Operator, _super);\n    function Operator(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Operator.prototype, \"type\", {\n        get: function () {\n            return NodeType.Operator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Operator;\n}(Node));\n\nvar HexColorValue = /** @class */ (function (_super) {\n    __extends(HexColorValue, _super);\n    function HexColorValue(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(HexColorValue.prototype, \"type\", {\n        get: function () {\n            return NodeType.HexColorValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HexColorValue;\n}(Node));\n\nvar NumericValue = /** @class */ (function (_super) {\n    __extends(NumericValue, _super);\n    function NumericValue(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(NumericValue.prototype, \"type\", {\n        get: function () {\n            return NodeType.NumericValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericValue.prototype.getValue = function () {\n        var raw = this.getText();\n        var unitIdx = 0, code, _dot = '.'.charCodeAt(0), _0 = '0'.charCodeAt(0), _9 = '9'.charCodeAt(0);\n        for (var i = 0, len = raw.length; i < len; i++) {\n            code = raw.charCodeAt(i);\n            if (!(_0 <= code && code <= _9 || code === _dot)) {\n                break;\n            }\n            unitIdx += 1;\n        }\n        return {\n            value: raw.substring(0, unitIdx),\n            unit: unitIdx < raw.length ? raw.substring(unitIdx) : undefined\n        };\n    };\n    return NumericValue;\n}(Node));\n\nvar VariableDeclaration = /** @class */ (function (_super) {\n    __extends(VariableDeclaration, _super);\n    function VariableDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(VariableDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.VariableDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VariableDeclaration.prototype.setVariable = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.variable = node;\n            return true;\n        }\n        return false;\n    };\n    VariableDeclaration.prototype.getVariable = function () {\n        return this.variable;\n    };\n    VariableDeclaration.prototype.getName = function () {\n        return this.variable ? this.variable.getName() : '';\n    };\n    VariableDeclaration.prototype.setValue = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.value = node;\n            return true;\n        }\n        return false;\n    };\n    VariableDeclaration.prototype.getValue = function () {\n        return this.value;\n    };\n    return VariableDeclaration;\n}(AbstractDeclaration));\n\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Interpolation.prototype, \"type\", {\n        get: function () {\n            return NodeType.Interpolation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Interpolation;\n}(Node));\n\nvar Variable = /** @class */ (function (_super) {\n    __extends(Variable, _super);\n    function Variable(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Variable.prototype, \"type\", {\n        get: function () {\n            return NodeType.VariableName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Variable.prototype.getName = function () {\n        return this.getText();\n    };\n    return Variable;\n}(Node));\n\nvar ExtendsReference = /** @class */ (function (_super) {\n    __extends(ExtendsReference, _super);\n    function ExtendsReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ExtendsReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.ExtendsReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExtendsReference.prototype.getSelectors = function () {\n        if (!this.selectors) {\n            this.selectors = new Nodelist(this);\n        }\n        return this.selectors;\n    };\n    return ExtendsReference;\n}(Node));\n\nvar MixinReference = /** @class */ (function (_super) {\n    __extends(MixinReference, _super);\n    function MixinReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinReference.prototype.getNamespaces = function () {\n        if (!this.namespaces) {\n            this.namespaces = new Nodelist(this);\n        }\n        return this.namespaces;\n    };\n    MixinReference.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    MixinReference.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    MixinReference.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    MixinReference.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    MixinReference.prototype.setContent = function (node) {\n        return this.setNode('content', node);\n    };\n    MixinReference.prototype.getContent = function () {\n        return this.content;\n    };\n    return MixinReference;\n}(Node));\n\nvar MixinDeclaration = /** @class */ (function (_super) {\n    __extends(MixinDeclaration, _super);\n    function MixinDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinDeclaration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    MixinDeclaration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    MixinDeclaration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    MixinDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    MixinDeclaration.prototype.setGuard = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.guard = node;\n        }\n        return false;\n    };\n    return MixinDeclaration;\n}(BodyDeclaration));\n\nvar LessGuard = /** @class */ (function (_super) {\n    __extends(LessGuard, _super);\n    function LessGuard() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LessGuard.prototype.getConditions = function () {\n        if (!this.conditions) {\n            this.conditions = new Nodelist(this);\n        }\n        return this.conditions;\n    };\n    return LessGuard;\n}(Node));\n\nvar GuardCondition = /** @class */ (function (_super) {\n    __extends(GuardCondition, _super);\n    function GuardCondition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GuardCondition.prototype.setVariable = function (node) {\n        return this.setNode('variable', node);\n    };\n    return GuardCondition;\n}(Node));\n\nvar Level;\n(function (Level) {\n    Level[Level[\"Ignore\"] = 1] = \"Ignore\";\n    Level[Level[\"Warning\"] = 2] = \"Warning\";\n    Level[Level[\"Error\"] = 4] = \"Error\";\n})(Level || (Level = {}));\nvar Marker = /** @class */ (function () {\n    function Marker(node, rule, level, message, offset, length) {\n        if (offset === void 0) { offset = node.offset; }\n        if (length === void 0) { length = node.length; }\n        this.node = node;\n        this.rule = rule;\n        this.level = level;\n        this.message = message || rule.message;\n        this.offset = offset;\n        this.length = length;\n    }\n    Marker.prototype.getRule = function () {\n        return this.rule;\n    };\n    Marker.prototype.getLevel = function () {\n        return this.level;\n    };\n    Marker.prototype.getOffset = function () {\n        return this.offset;\n    };\n    Marker.prototype.getLength = function () {\n        return this.length;\n    };\n    Marker.prototype.getNode = function () {\n        return this.node;\n    };\n    Marker.prototype.getMessage = function () {\n        return this.message;\n    };\n    return Marker;\n}());\n\n/*\nexport class DefaultVisitor implements IVisitor {\n\n    public visitNode(node:Node):boolean {\n        switch (node.type) {\n            case NodeType.Stylesheet:\n                return this.visitStylesheet(<Stylesheet> node);\n            case NodeType.FontFace:\n                return this.visitFontFace(<FontFace> node);\n            case NodeType.Ruleset:\n                return this.visitRuleSet(<RuleSet> node);\n            case NodeType.Selector:\n                return this.visitSelector(<Selector> node);\n            case NodeType.SimpleSelector:\n                return this.visitSimpleSelector(<SimpleSelector> node);\n            case NodeType.Declaration:\n                return this.visitDeclaration(<Declaration> node);\n            case NodeType.Function:\n                return this.visitFunction(<Function> node);\n            case NodeType.FunctionDeclaration:\n                return this.visitFunctionDeclaration(<FunctionDeclaration> node);\n            case NodeType.FunctionParameter:\n                return this.visitFunctionParameter(<FunctionParameter> node);\n            case NodeType.FunctionArgument:\n                return this.visitFunctionArgument(<FunctionArgument> node);\n            case NodeType.Term:\n                return this.visitTerm(<Term> node);\n            case NodeType.Declaration:\n                return this.visitExpression(<Expression> node);\n            case NodeType.NumericValue:\n                return this.visitNumericValue(<NumericValue> node);\n            case NodeType.Page:\n                return this.visitPage(<Page> node);\n            case NodeType.PageBoxMarginBox:\n                return this.visitPageBoxMarginBox(<PageBoxMarginBox> node);\n            case NodeType.Property:\n                return this.visitProperty(<Property> node);\n            case NodeType.NumericValue:\n                return this.visitNodelist(<Nodelist> node);\n            case NodeType.Import:\n                return this.visitImport(<Import> node);\n            case NodeType.Namespace:\n                return this.visitNamespace(<Namespace> node);\n            case NodeType.Keyframe:\n                return this.visitKeyframe(<Keyframe> node);\n            case NodeType.KeyframeSelector:\n                return this.visitKeyframeSelector(<KeyframeSelector> node);\n            case NodeType.MixinDeclaration:\n                return this.visitMixinDeclaration(<MixinDeclaration> node);\n            case NodeType.MixinReference:\n                return this.visitMixinReference(<MixinReference> node);\n            case NodeType.Variable:\n                return this.visitVariable(<Variable> node);\n            case NodeType.VariableDeclaration:\n                return this.visitVariableDeclaration(<VariableDeclaration> node);\n        }\n        return this.visitUnknownNode(node);\n    }\n\n    public visitFontFace(node:FontFace):boolean {\n        return true;\n    }\n\n    public visitKeyframe(node:Keyframe):boolean {\n        return true;\n    }\n\n    public visitKeyframeSelector(node:KeyframeSelector):boolean {\n        return true;\n    }\n\n    public visitStylesheet(node:Stylesheet):boolean {\n        return true;\n    }\n\n    public visitProperty(Node:Property):boolean {\n        return true;\n    }\n\n    public visitRuleSet(node:RuleSet):boolean {\n        return true;\n    }\n\n    public visitSelector(node:Selector):boolean {\n        return true;\n    }\n\n    public visitSimpleSelector(node:SimpleSelector):boolean {\n        return true;\n    }\n\n    public visitDeclaration(node:Declaration):boolean {\n        return true;\n    }\n\n    public visitFunction(node:Function):boolean {\n        return true;\n    }\n\n    public visitFunctionDeclaration(node:FunctionDeclaration):boolean {\n        return true;\n    }\n\n    public visitInvocation(node:Invocation):boolean {\n        return true;\n    }\n\n    public visitTerm(node:Term):boolean {\n        return true;\n    }\n\n    public visitImport(node:Import):boolean {\n        return true;\n    }\n\n    public visitNamespace(node:Namespace):boolean {\n        return true;\n    }\n\n    public visitExpression(node:Expression):boolean {\n        return true;\n    }\n\n    public visitNumericValue(node:NumericValue):boolean {\n        return true;\n    }\n\n    public visitPage(node:Page):boolean {\n        return true;\n    }\n\n    public visitPageBoxMarginBox(node:PageBoxMarginBox):boolean {\n        return true;\n    }\n\n    public visitNodelist(node:Nodelist):boolean {\n        return true;\n    }\n\n    public visitVariableDeclaration(node:VariableDeclaration):boolean {\n        return true;\n    }\n\n    public visitVariable(node:Variable):boolean {\n        return true;\n    }\n\n    public visitMixinDeclaration(node:MixinDeclaration):boolean {\n        return true;\n    }\n\n    public visitMixinReference(node:MixinReference):boolean {\n        return true;\n    }\n\n    public visitUnknownNode(node:Node):boolean {\n        return true;\n    }\n}\n*/\nvar ParseErrorCollector = /** @class */ (function () {\n    function ParseErrorCollector() {\n        this.entries = [];\n    }\n    ParseErrorCollector.entries = function (node) {\n        var visitor = new ParseErrorCollector();\n        node.acceptVisitor(visitor);\n        return visitor.entries;\n    };\n    ParseErrorCollector.prototype.visitNode = function (node) {\n        if (node.isErroneous()) {\n            node.collectIssues(this.entries);\n        }\n        return true;\n    };\n    return ParseErrorCollector;\n}());\n\n//# sourceMappingURL=cssNodes.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js ***!
  \*************************************************************************************************************/
/*! exports provided: Parser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/* harmony import */ var _services_languageFacts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/languageFacts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nvar Parser = /** @class */ (function () {\n    function Parser(scnr) {\n        if (scnr === void 0) { scnr = new _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"](); }\n        this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n        this.scanner = scnr;\n        this.token = null;\n        this.prevToken = null;\n    }\n    Parser.prototype.peekIdent = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekKeyword = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekDelim = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim === this.token.type && text === this.token.text;\n    };\n    Parser.prototype.peek = function (type) {\n        return type === this.token.type;\n    };\n    Parser.prototype.peekRegExp = function (type, regEx) {\n        if (type !== this.token.type) {\n            return false;\n        }\n        return regEx.test(this.token.text);\n    };\n    Parser.prototype.hasWhitespace = function () {\n        return this.prevToken && (this.prevToken.offset + this.prevToken.len !== this.token.offset);\n    };\n    Parser.prototype.consumeToken = function () {\n        this.prevToken = this.token;\n        this.token = this.scanner.scan();\n    };\n    Parser.prototype.mark = function () {\n        return {\n            prev: this.prevToken,\n            curr: this.token,\n            pos: this.scanner.pos()\n        };\n    };\n    Parser.prototype.restoreAtMark = function (mark) {\n        this.prevToken = mark.prev;\n        this.token = mark.curr;\n        this.scanner.goBackTo(mark.pos);\n    };\n    Parser.prototype.try = function (func) {\n        var pos = this.mark();\n        var node = func();\n        if (!node) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    Parser.prototype.acceptOneKeyword = function (keywords) {\n        if (_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword === this.token.type) {\n            for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n                var keyword = keywords_1[_i];\n                if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n                    this.consumeToken();\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Parser.prototype.accept = function (type) {\n        if (type === this.token.type) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptIdent = function (text) {\n        if (this.peekIdent(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptKeyword = function (text) {\n        if (this.peekKeyword(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptDelim = function (text) {\n        if (this.peekDelim(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptUnquotedString = function () {\n        var pos = this.scanner.pos();\n        this.scanner.goBackTo(this.token.offset);\n        var unquoted = this.scanner.scanUnquotedString();\n        if (unquoted) {\n            this.token = unquoted;\n            this.consumeToken();\n            return true;\n        }\n        this.scanner.goBackTo(pos);\n        return false;\n    };\n    Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n        while (true) {\n            if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n                this.consumeToken();\n                return true;\n            }\n            else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n                return true;\n            }\n            else {\n                if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) {\n                    return false;\n                }\n                this.token = this.scanner.scan();\n            }\n        }\n    };\n    Parser.prototype.createNode = function (nodeType) {\n        return new _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"](this.token.offset, this.token.len, nodeType);\n    };\n    Parser.prototype.create = function (ctor) {\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, [this.token.offset, this.token.len]);\n        return obj;\n    };\n    Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n        // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n        // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n        if (!(node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Nodelist\"])) {\n            if (error) {\n                this.markError(node, error, resyncTokens, resyncStopTokens);\n            }\n            // set the node end position\n            if (this.prevToken !== null) {\n                // length with more elements belonging together\n                var prevEnd = this.prevToken.offset + this.prevToken.len;\n                node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n            }\n        }\n        return node;\n    };\n    Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n        if (this.token !== this.lastErrorToken) {\n            node.addIssue(new _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Marker\"](node, error, _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Level\"].Error, null, this.token.offset, this.token.len));\n            this.lastErrorToken = this.token;\n        }\n        if (resyncTokens || resyncStopTokens) {\n            this.resync(resyncTokens, resyncStopTokens);\n        }\n    };\n    Parser.prototype.parseStylesheet = function (textDocument) {\n        var versionId = textDocument.version;\n        var textProvider = function (offset, length) {\n            if (textDocument.version !== versionId) {\n                throw new Error('Underlying model has changed, AST is no longer valid');\n            }\n            return textDocument.getText().substr(offset, length);\n        };\n        return this.internalParse(textDocument.getText(), this._parseStylesheet, textProvider);\n    };\n    Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n        this.scanner.setSource(input);\n        this.token = this.scanner.scan();\n        var node = parseFunc.bind(this)();\n        if (node) {\n            if (textProvider) {\n                node.textProvider = textProvider;\n            }\n            else {\n                node.textProvider = function (offset, length) { return input.substr(offset, length); };\n            }\n        }\n        return node;\n    };\n    Parser.prototype._parseStylesheet = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Stylesheet\"]);\n        node.addChild(this._parseCharset());\n        var inRecovery = false;\n        do {\n            var hasMatch = false;\n            do {\n                hasMatch = false;\n                var statement = this._parseStylesheetStatement();\n                if (statement) {\n                    node.addChild(statement);\n                    hasMatch = true;\n                    inRecovery = false;\n                    if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) && this._needsSemicolonAfter(statement) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                        this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n                    }\n                }\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CDO) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CDC)) {\n                    // accept empty statements\n                    hasMatch = true;\n                    inRecovery = false;\n                }\n            } while (hasMatch);\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF)) {\n                break;\n            }\n            if (!inRecovery) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownAtRule);\n                }\n                else {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RuleOrSelectorExpected);\n                }\n                inRecovery = true;\n            }\n            this.consumeToken();\n        } while (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF));\n        return this.finish(node);\n    };\n    Parser.prototype._parseStylesheetStatement = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return this._parseImport()\n                || this._parseMedia()\n                || this._parsePage()\n                || this._parseFontFace()\n                || this._parseKeyframe()\n                || this._parseSupports()\n                || this._parseViewPort()\n                || this._parseNamespace()\n                || this._parseDocument();\n        }\n        return this._parseRuleset(false);\n    };\n    Parser.prototype._tryParseRuleset = function (isNested) {\n        var mark = this.mark();\n        if (this._parseSelector(isNested)) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma) && this._parseSelector(isNested)) {\n                // loop\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n                this.restoreAtMark(mark);\n                return this._parseRuleset(isNested);\n            }\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseRuleset = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"RuleSet\"]);\n        if (!node.getSelectors().addChild(this._parseSelector(isNested))) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma) && node.getSelectors().addChild(this._parseSelector(isNested))) {\n            // loop\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseRuleSetDeclaration = function () {\n        return this._parseAtApply() || this._tryParseCustomPropertyDeclaration() || this._parseDeclaration();\n    };\n    /**\n     * Parses declarations like:\n     *   @apply --my-theme;\n     *\n     * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n     */\n    Parser.prototype._parseAtApply = function () {\n        if (!this.peekKeyword('@apply')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AtApplyRule\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Variable]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._needsSemicolonAfter = function (node) {\n        switch (node.type) {\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Keyframe:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ViewPort:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Media:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Ruleset:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Namespace:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].If:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].For:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Each:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].While:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinDeclaration:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].FunctionDeclaration:\n                return false;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].VariableDeclaration:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ExtendsReference:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinContent:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ReturnStatement:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MediaQuery:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Debug:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Import:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].AtApplyRule:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].CustomPropertyDeclaration:\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinReference:\n                return !node.getContent();\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Declaration:\n                return !node.getNestedProperties();\n        }\n        return false;\n    };\n    Parser.prototype._parseDeclarations = function (parseDeclaration) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Declarations\"]);\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            return null;\n        }\n        var decl = parseDeclaration();\n        while (node.addChild(decl)) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR)) {\n                break;\n            }\n            if (this._needsSemicolonAfter(decl) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR]);\n            }\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                // accept empty statements\n            }\n            decl = parseDeclaration();\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBody = function (node, parseDeclaration) {\n        if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSelector = function (isNested) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Selector\"]);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Declaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon], resyncStopTokens);\n        }\n        node.colonPosition = this.prevToken.offset;\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PropertyValueExpected);\n        }\n        node.addChild(this._parsePrio());\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^--/)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"CustomPropertyDeclaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon]);\n        }\n        node.colonPosition = this.prevToken.offset;\n        var mark = this.mark();\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            // try to parse it as nested declaration\n            var propertySet = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"CustomPropertySet\"]);\n            var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n            if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n                propertySet.addChild(this._parsePrio());\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                    this.finish(propertySet);\n                    node.setPropertySet(propertySet);\n                    node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                    return this.finish(node);\n                }\n            }\n            this.restoreAtMark(mark);\n        }\n        // try tp parse as expression\n        var expression = this._parseExpr();\n        if (expression && !expression.isErroneous(true)) {\n            this._parsePrio();\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                node.setValue(expression);\n                node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                return this.finish(node);\n            }\n        }\n        this.restoreAtMark(mark);\n        node.addChild(this._parseCustomPropertyValue());\n        node.addChild(this._parsePrio());\n        if (this.token.offset === node.colonPosition + 1) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PropertyValueExpected);\n        }\n        return this.finish(node);\n    };\n    /**\n     * Parse custom property values.\n     *\n     * Based on https://www.w3.org/TR/css-variables/#syntax\n     *\n     * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n     * parsing almost any sequence of tokens, save for a small set of exceptions.\n     * Unbalanced delimitors, invalid tokens, and declaration\n     * terminators like semicolons and !important directives (when not inside\n     * of delimitors).\n     */\n    Parser.prototype._parseCustomPropertyValue = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon:\n                    // A semicolon only ends things if we're not inside a delimitor.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation:\n                    // An exclamation ends the value if we're not inside delims.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n                    curlyDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR:\n                    curlyDepth--;\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL:\n                    parensDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL:\n                    bracketsDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftSquareBracketExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString:// fall through\n                    break done;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF:\n                    // We shouldn't have reached the end of input, something is\n                    // unterminated.\n                    var error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected;\n                    if (bracketsDepth > 0) {\n                        error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected;\n                    }\n                    else if (parensDepth > 0) {\n                        error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected;\n                    }\n                    return this.finish(node, error);\n            }\n            this.consumeToken();\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryToParseDeclaration = function () {\n        var mark = this.mark();\n        if (this._parseProperty() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            // looks like a declaration, go ahead\n            this.restoreAtMark(mark);\n            return this._parseDeclaration();\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseProperty = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Property\"]);\n        var mark = this.mark();\n        if (this.acceptDelim('*') || this.acceptDelim('_')) {\n            // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (node.setIdentifier(this._parsePropertyIdentifier())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parsePropertyIdentifier = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseCharset = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Charset)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // charset\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Import\"]);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].URIOrStringExpected);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespace = function () {\n        // http://www.w3.org/TR/css3-namespace/\n        // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n        if (!this.peekKeyword('@namespace')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Namespace\"]);\n        this.consumeToken(); // @namespace\n        if (!node.addChild(this._parseURILiteral())) {\n            node.addChild(this._parseIdent()); // optional prefix\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].URIExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFontFace = function () {\n        if (!this.peekKeyword('@font-face')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FontFace\"]);\n        this.consumeToken(); // @font-face\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseViewPort = function () {\n        if (!this.peekKeyword('@-ms-viewport') &&\n            !this.peekKeyword('@-o-viewport') &&\n            !this.peekKeyword('@viewport')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ViewPort\"]);\n        this.consumeToken(); // @-ms-viewport\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseKeyframe = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword, this.keyframeRegex)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Keyframe\"]);\n        var atNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // atkeyword\n        node.setKeyword(this.finish(atNode));\n        if (atNode.getText() === '@-ms-keyframes') {\n            this.markError(atNode, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownKeyword);\n        }\n        if (!node.setIdentifier(this._parseKeyframeIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n    };\n    Parser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Keyframe]);\n    };\n    Parser.prototype._parseKeyframeSelector = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"KeyframeSelector\"]);\n        if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PercentageExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._tryParseKeyframeSelector = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"KeyframeSelector\"]);\n        var pos = this.mark();\n        if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n                this.restoreAtMark(pos);\n                return null;\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseSupports = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n        if (!this.peekKeyword('@supports')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Supports\"]);\n        this.consumeToken(); // @supports\n        node.addChild(this._parseSupportsCondition());\n        return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseSupportsDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(isNested)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement();\n        }\n        return this._parseStylesheetStatement();\n    };\n    Parser.prototype._parseSupportsCondition = function () {\n        // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n        // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n        // supports_negation: NOT S+ supports_condition_in_parens ;\n        // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n        // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n        // supports_declaration_condition: '(' S* declaration ')';\n        // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SupportsCondition\"]);\n        if (this.acceptIdent('not')) {\n            node.addChild(this._parseSupportsConditionInParens());\n        }\n        else {\n            node.addChild(this._parseSupportsConditionInParens());\n            if (this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^(and|or)$/i)) {\n                var text = this.token.text;\n                while (this.acceptIdent(text)) {\n                    node.addChild(this._parseSupportsConditionInParens());\n                }\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSupportsConditionInParens = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SupportsCondition\"]);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            node.lParent = this.prevToken.offset;\n            if (!node.addChild(this._tryToParseDeclaration())) {\n                if (!this._parseSupportsCondition()) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ConditionExpected);\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR], []);\n            }\n            node.rParent = this.prevToken.offset;\n            return this.finish(node);\n        }\n        else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            var pos = this.mark();\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                var openParentCount = 1;\n                while (this.token.type !== _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF && openParentCount !== 0) {\n                    if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL) {\n                        openParentCount++;\n                    }\n                    else if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR) {\n                        openParentCount--;\n                    }\n                    this.consumeToken();\n                }\n                return this.finish(node);\n            }\n            else {\n                this.restoreAtMark(pos);\n            }\n        }\n        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL]);\n    };\n    Parser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._tryParseRuleset(isNested)\n            || this._tryToParseDeclaration()\n            || this._parseStylesheetStatement();\n    };\n    Parser.prototype._parseMedia = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n        // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n        if (!this.peekKeyword('@media')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Media\"]);\n        this.consumeToken(); // @media\n        if (!node.addChild(this._parseMediaQueryList())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n        }\n        return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseMediaQueryList = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Medialist\"]);\n        if (!node.addChild(this._parseMediaQuery([_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseMediaQuery([_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n        // http://www.w3.org/TR/css3-mediaqueries/\n        // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n        // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MediaQuery\"]);\n        var parseExpression = true;\n        var hasContent = false;\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            if (this.acceptIdent('only') || this.acceptIdent('not')) {\n                // optional\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return null;\n            }\n            hasContent = true;\n            parseExpression = this.acceptIdent('and');\n        }\n        while (parseExpression) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                if (hasContent) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected, [], resyncStopToken);\n                }\n                return null;\n            }\n            if (!node.addChild(this._parseMediaFeatureName())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected, [], resyncStopToken);\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n                if (!node.addChild(this._parseExpr())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].TermExpected, [], resyncStopToken);\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected, [], resyncStopToken);\n            }\n            parseExpression = this.acceptIdent('and');\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseMedium = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (node.addChild(this._parseIdent())) {\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parsePageDeclaration = function () {\n        return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n    };\n    Parser.prototype._parsePage = function () {\n        // http://www.w3.org/TR/css3-page/\n        // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n        // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n        if (!this.peekKeyword('@page')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Page\"]);\n        this.consumeToken();\n        if (node.addChild(this._parsePageSelector())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (!node.addChild(this._parsePageSelector())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n                }\n            }\n        }\n        return this._parseBody(node, this._parsePageDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageMarginBox = function () {\n        // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PageBoxMarginBox\"]);\n        if (!this.acceptOneKeyword(_services_languageFacts_js__WEBPACK_IMPORTED_MODULE_3__[\"getPageBoxDirectives\"]())) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownAtRule, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]);\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageSelector = function () {\n        // page_selector : pseudo_page+ | IDENT pseudo_page*\n        // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        node.addChild(this._parseIdent()); // optional ident\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseDocument = function () {\n        // -moz-document is experimental but has been pushed to css4\n        if (!this.peekKeyword('@-moz-document')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Document\"]);\n        this.consumeToken(); // @-moz-document\n        this.resync([], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]); // ignore all the rules\n        return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n    };\n    Parser.prototype._parseOperator = function () {\n        // these are operators for binary expressions\n        if (this.peekDelim('/') ||\n            this.peekDelim('*') ||\n            this.peekDelim('+') ||\n            this.peekDelim('-') ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Dashmatch) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Includes) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SubstringOperator) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].PrefixOperator) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SuffixOperator) ||\n            this.peekDelim('=')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseUnaryOperator = function () {\n        if (!this.peekDelim('+') && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseCombinator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                    node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant;\n                    return this.finish(node);\n                }\n                this.restoreAtMark(mark);\n            }\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorParent;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('+')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorSibling;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('~')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorAllSiblings;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('/')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n                node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant;\n                return this.finish(node);\n            }\n            this.restoreAtMark(mark);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseSimpleSelector = function () {\n        // simple_selector\n        //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SimpleSelector\"]);\n        var c = 0;\n        if (node.addChild(this._parseElementName())) {\n            c++;\n        }\n        while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n            c++;\n        }\n        return c > 0 ? this.finish(node) : null;\n    };\n    Parser.prototype._parseSimpleSelectorBody = function () {\n        return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n    };\n    Parser.prototype._parseSelectorIdent = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseHash = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Hash) && !this.peekDelim('#')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].IdentifierSelector);\n        if (this.acceptDelim('#')) {\n            if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n        }\n        else {\n            this.consumeToken(); // TokenType.Hash\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseClass = function () {\n        // class: '.' IDENT ;\n        if (!this.peekDelim('.')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ClassSelector);\n        this.consumeToken(); // '.'\n        if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseElementName = function () {\n        // element_name: (ns? '|')? IDENT | '*';\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ElementNameSelector);\n        node.addChild(this._parseNamespacePrefix());\n        if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespacePrefix = function () {\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].NamespacePrefix);\n        if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {\n            // ns is optional\n        }\n        if (!this.acceptDelim('|')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseAttrib = function () {\n        // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AttributeSelector\"]);\n        this.consumeToken(); // BracketL\n        // Optional attrib namespace\n        node.setNamespacePrefix(this._parseNamespacePrefix());\n        if (!node.setExpression(this._parseBinaryExpr())) {\n            // is this bad?\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parsePseudo = function () {\n        var _this = this;\n        // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].PseudoSelector);\n        this.consumeToken(); // Colon\n        if (!this.hasWhitespace()) {\n            // optional, support ::\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon) && this.hasWhitespace()) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                var tryAsSelector = function () {\n                    var selector = _this._parseSimpleSelector();\n                    if (selector && _this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                        return selector;\n                    }\n                    return null;\n                };\n                node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                }\n            }\n            return this.finish(node);\n        }\n        this.restoreAtMark(pos);\n        return null;\n    };\n    Parser.prototype._tryParsePrio = function () {\n        var mark = this.mark();\n        var prio = this._parsePrio();\n        if (prio) {\n            return prio;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parsePrio = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Prio);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation) && this.acceptIdent('important')) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseExpr = function (stopOnComma) {\n        if (stopOnComma === void 0) { stopOnComma = false; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Expression\"]);\n        if (!node.addChild(this._parseNamedLine() || this._parseBinaryExpr())) {\n            return null;\n        }\n        while (true) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (stopOnComma) {\n                    return this.finish(node);\n                }\n                this.consumeToken();\n            }\n            if (!node.addChild(this._parseNamedLine() || this._parseBinaryExpr())) {\n                break;\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamedLine = function () {\n        // https://www.w3.org/TR/css-grid-1/#named-lines\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].GridLine);\n        this.consumeToken();\n        while (node.addChild(this._parseIdent())) {\n            // repeat\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BinaryExpression\"]);\n        if (!node.setLeft((preparsedLeft || this._parseTerm()))) {\n            return null;\n        }\n        if (!node.setOperator(preparsedOper || this._parseOperator())) {\n            return this.finish(node);\n        }\n        if (!node.setRight(this._parseTerm())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].TermExpected);\n        }\n        // things needed for multiple binary expressions\n        node = this.finish(node);\n        var operator = this._parseOperator();\n        if (operator) {\n            node = this._parseBinaryExpr(node, operator);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseTerm = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Term\"]);\n        node.setOperator(this._parseUnaryOperator()); // optional\n        if (node.setExpression(this._parseURILiteral()) || // url before function\n            node.setExpression(this._parseFunction()) || // function before ident\n            node.setExpression(this._parseIdent()) ||\n            node.setExpression(this._parseStringLiteral()) ||\n            node.setExpression(this._parseNumeric()) ||\n            node.setExpression(this._parseHexColor()) ||\n            node.setExpression(this._parseOperation())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseOperation = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // ParenthesisL\n        node.addChild(this._parseExpr());\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNumeric = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Num) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Resolution) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Length) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EMS) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EXS) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Angle) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Time) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Dimension) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Freq)) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NumericValue\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseStringLiteral = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].StringLiteral);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseURILiteral = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^url(-prefix)?$/i)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].URILiteral);\n        this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident);\n        if (this.hasWhitespace() || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        this.scanner.inURL = true;\n        this.consumeToken(); // consume ()\n        node.addChild(this._parseURLArgument()); // argument is optional\n        this.scanner.inURL = false;\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseURLArgument = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString) && !this.acceptUnquotedString()) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseIdent = function (referenceTypes) {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Identifier\"]);\n        if (referenceTypes) {\n            node.referenceTypes = referenceTypes;\n        }\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^--/);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Function\"]);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseFunctionArgument())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionIdentifier = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Identifier\"]);\n        node.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Function];\n        if (this.acceptIdent('progid')) {\n            // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident) && this.acceptDelim('.')) {\n                    // loop\n                }\n            }\n            return this.finish(node);\n        }\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionArgument = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FunctionArgument\"]);\n        if (node.setValue(this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseHexColor = function () {\n        if (this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"HexColorValue\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    return Parser;\n}());\n\n//# sourceMappingURL=cssParser.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js ***!
  \**************************************************************************************************************/
/*! exports provided: TokenType, MultiLineStream, Scanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenType\", function() { return TokenType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MultiLineStream\", function() { return MultiLineStream; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scanner\", function() { return Scanner; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"Ident\"] = 0] = \"Ident\";\n    TokenType[TokenType[\"AtKeyword\"] = 1] = \"AtKeyword\";\n    TokenType[TokenType[\"String\"] = 2] = \"String\";\n    TokenType[TokenType[\"BadString\"] = 3] = \"BadString\";\n    TokenType[TokenType[\"UnquotedString\"] = 4] = \"UnquotedString\";\n    TokenType[TokenType[\"Hash\"] = 5] = \"Hash\";\n    TokenType[TokenType[\"Num\"] = 6] = \"Num\";\n    TokenType[TokenType[\"Percentage\"] = 7] = \"Percentage\";\n    TokenType[TokenType[\"Dimension\"] = 8] = \"Dimension\";\n    TokenType[TokenType[\"UnicodeRange\"] = 9] = \"UnicodeRange\";\n    TokenType[TokenType[\"CDO\"] = 10] = \"CDO\";\n    TokenType[TokenType[\"CDC\"] = 11] = \"CDC\";\n    TokenType[TokenType[\"Colon\"] = 12] = \"Colon\";\n    TokenType[TokenType[\"SemiColon\"] = 13] = \"SemiColon\";\n    TokenType[TokenType[\"CurlyL\"] = 14] = \"CurlyL\";\n    TokenType[TokenType[\"CurlyR\"] = 15] = \"CurlyR\";\n    TokenType[TokenType[\"ParenthesisL\"] = 16] = \"ParenthesisL\";\n    TokenType[TokenType[\"ParenthesisR\"] = 17] = \"ParenthesisR\";\n    TokenType[TokenType[\"BracketL\"] = 18] = \"BracketL\";\n    TokenType[TokenType[\"BracketR\"] = 19] = \"BracketR\";\n    TokenType[TokenType[\"Whitespace\"] = 20] = \"Whitespace\";\n    TokenType[TokenType[\"Includes\"] = 21] = \"Includes\";\n    TokenType[TokenType[\"Dashmatch\"] = 22] = \"Dashmatch\";\n    TokenType[TokenType[\"SubstringOperator\"] = 23] = \"SubstringOperator\";\n    TokenType[TokenType[\"PrefixOperator\"] = 24] = \"PrefixOperator\";\n    TokenType[TokenType[\"SuffixOperator\"] = 25] = \"SuffixOperator\";\n    TokenType[TokenType[\"Delim\"] = 26] = \"Delim\";\n    TokenType[TokenType[\"EMS\"] = 27] = \"EMS\";\n    TokenType[TokenType[\"EXS\"] = 28] = \"EXS\";\n    TokenType[TokenType[\"Length\"] = 29] = \"Length\";\n    TokenType[TokenType[\"Angle\"] = 30] = \"Angle\";\n    TokenType[TokenType[\"Time\"] = 31] = \"Time\";\n    TokenType[TokenType[\"Freq\"] = 32] = \"Freq\";\n    TokenType[TokenType[\"Exclamation\"] = 33] = \"Exclamation\";\n    TokenType[TokenType[\"Resolution\"] = 34] = \"Resolution\";\n    TokenType[TokenType[\"Comma\"] = 35] = \"Comma\";\n    TokenType[TokenType[\"Charset\"] = 36] = \"Charset\";\n    TokenType[TokenType[\"EscapedJavaScript\"] = 37] = \"EscapedJavaScript\";\n    TokenType[TokenType[\"BadEscapedJavaScript\"] = 38] = \"BadEscapedJavaScript\";\n    TokenType[TokenType[\"Comment\"] = 39] = \"Comment\";\n    TokenType[TokenType[\"SingleLineComment\"] = 40] = \"SingleLineComment\";\n    TokenType[TokenType[\"EOF\"] = 41] = \"EOF\";\n    TokenType[TokenType[\"CustomToken\"] = 42] = \"CustomToken\";\n})(TokenType || (TokenType = {}));\nvar MultiLineStream = /** @class */ (function () {\n    function MultiLineStream(source) {\n        this.source = source;\n        this.len = source.length;\n        this.position = 0;\n    }\n    MultiLineStream.prototype.substring = function (from, to) {\n        if (to === void 0) { to = this.position; }\n        return this.source.substring(from, to);\n    };\n    MultiLineStream.prototype.eos = function () {\n        return this.len <= this.position;\n    };\n    MultiLineStream.prototype.pos = function () {\n        return this.position;\n    };\n    MultiLineStream.prototype.goBackTo = function (pos) {\n        this.position = pos;\n    };\n    MultiLineStream.prototype.goBack = function (n) {\n        this.position -= n;\n    };\n    MultiLineStream.prototype.advance = function (n) {\n        this.position += n;\n    };\n    MultiLineStream.prototype.nextChar = function () {\n        return this.source.charCodeAt(this.position++) || 0;\n    };\n    MultiLineStream.prototype.peekChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position + n) || 0;\n    };\n    MultiLineStream.prototype.lookbackChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position - n) || 0;\n    };\n    MultiLineStream.prototype.advanceIfChar = function (ch) {\n        if (ch === this.source.charCodeAt(this.position)) {\n            this.position++;\n            return true;\n        }\n        return false;\n    };\n    MultiLineStream.prototype.advanceIfChars = function (ch) {\n        var i;\n        if (this.position + ch.length > this.source.length) {\n            return false;\n        }\n        for (i = 0; i < ch.length; i++) {\n            if (this.source.charCodeAt(this.position + i) !== ch[i]) {\n                return false;\n            }\n        }\n        this.advance(i);\n        return true;\n    };\n    MultiLineStream.prototype.advanceWhileChar = function (condition) {\n        var posNow = this.position;\n        while (this.position < this.len && condition(this.source.charCodeAt(this.position))) {\n            this.position++;\n        }\n        return this.position - posNow;\n    };\n    return MultiLineStream;\n}());\n\nvar _a = 'a'.charCodeAt(0);\nvar _f = 'f'.charCodeAt(0);\nvar _z = 'z'.charCodeAt(0);\nvar _A = 'A'.charCodeAt(0);\nvar _F = 'F'.charCodeAt(0);\nvar _Z = 'Z'.charCodeAt(0);\nvar _0 = '0'.charCodeAt(0);\nvar _9 = '9'.charCodeAt(0);\nvar _TLD = '~'.charCodeAt(0);\nvar _HAT = '^'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _PIP = '|'.charCodeAt(0);\nvar _MIN = '-'.charCodeAt(0);\nvar _USC = '_'.charCodeAt(0);\nvar _PRC = '%'.charCodeAt(0);\nvar _MUL = '*'.charCodeAt(0);\nvar _LPA = '('.charCodeAt(0);\nvar _RPA = ')'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _ATS = '@'.charCodeAt(0);\nvar _HSH = '#'.charCodeAt(0);\nvar _DLR = '$'.charCodeAt(0);\nvar _BSL = '\\\\'.charCodeAt(0);\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _DQO = '\"'.charCodeAt(0);\nvar _SQO = '\\''.charCodeAt(0);\nvar _WSP = ' '.charCodeAt(0);\nvar _TAB = '\\t'.charCodeAt(0);\nvar _SEM = ';'.charCodeAt(0);\nvar _COL = ':'.charCodeAt(0);\nvar _CUL = '{'.charCodeAt(0);\nvar _CUR = '}'.charCodeAt(0);\nvar _BRL = '['.charCodeAt(0);\nvar _BRR = ']'.charCodeAt(0);\nvar _CMA = ','.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar _BNG = '!'.charCodeAt(0);\nvar staticTokenTable = {};\nstaticTokenTable[_SEM] = TokenType.SemiColon;\nstaticTokenTable[_COL] = TokenType.Colon;\nstaticTokenTable[_CUL] = TokenType.CurlyL;\nstaticTokenTable[_CUR] = TokenType.CurlyR;\nstaticTokenTable[_BRR] = TokenType.BracketR;\nstaticTokenTable[_BRL] = TokenType.BracketL;\nstaticTokenTable[_LPA] = TokenType.ParenthesisL;\nstaticTokenTable[_RPA] = TokenType.ParenthesisR;\nstaticTokenTable[_CMA] = TokenType.Comma;\nvar staticUnitTable = {};\nstaticUnitTable['em'] = TokenType.EMS;\nstaticUnitTable['ex'] = TokenType.EXS;\nstaticUnitTable['px'] = TokenType.Length;\nstaticUnitTable['cm'] = TokenType.Length;\nstaticUnitTable['mm'] = TokenType.Length;\nstaticUnitTable['in'] = TokenType.Length;\nstaticUnitTable['pt'] = TokenType.Length;\nstaticUnitTable['pc'] = TokenType.Length;\nstaticUnitTable['deg'] = TokenType.Angle;\nstaticUnitTable['rad'] = TokenType.Angle;\nstaticUnitTable['grad'] = TokenType.Angle;\nstaticUnitTable['ms'] = TokenType.Time;\nstaticUnitTable['s'] = TokenType.Time;\nstaticUnitTable['hz'] = TokenType.Freq;\nstaticUnitTable['khz'] = TokenType.Freq;\nstaticUnitTable['%'] = TokenType.Percentage;\nstaticUnitTable['dpi'] = TokenType.Resolution;\nstaticUnitTable['dpcm'] = TokenType.Resolution;\nvar Scanner = /** @class */ (function () {\n    function Scanner() {\n        this.ignoreComment = true;\n        this.ignoreWhitespace = true;\n        this.inURL = false;\n    }\n    Scanner.prototype.setSource = function (input) {\n        this.stream = new MultiLineStream(input);\n    };\n    Scanner.prototype.finishToken = function (offset, type, text) {\n        return {\n            offset: offset,\n            len: this.stream.pos() - offset,\n            type: type,\n            text: text || this.stream.substring(offset)\n        };\n    };\n    Scanner.prototype.substring = function (offset, len) {\n        return this.stream.substring(offset, offset + len);\n    };\n    Scanner.prototype.pos = function () {\n        return this.stream.pos();\n    };\n    Scanner.prototype.goBackTo = function (pos) {\n        this.stream.goBackTo(pos);\n    };\n    Scanner.prototype.scanUnquotedString = function () {\n        var offset = this.stream.pos();\n        var content = [];\n        if (this._unquotedString(content)) {\n            return this.finishToken(offset, TokenType.UnquotedString, content.join(''));\n        }\n        return null;\n    };\n    Scanner.prototype.scan = function () {\n        // processes all whitespaces and comments\n        var triviaToken = this.trivia();\n        if (triviaToken !== null) {\n            return triviaToken;\n        }\n        var offset = this.stream.pos();\n        // End of file/input\n        if (this.stream.eos()) {\n            return this.finishToken(offset, TokenType.EOF);\n        }\n        return this.scanNext(offset);\n    };\n    Scanner.prototype.scanNext = function (offset) {\n        // CDO <!--\n        if (this.stream.advanceIfChars([_LAN, _BNG, _MIN, _MIN])) {\n            return this.finishToken(offset, TokenType.CDO);\n        }\n        // CDC -->\n        if (this.stream.advanceIfChars([_MIN, _MIN, _RAN])) {\n            return this.finishToken(offset, TokenType.CDC);\n        }\n        var content = [];\n        if (this.ident(content)) {\n            return this.finishToken(offset, TokenType.Ident, content.join(''));\n        }\n        // at-keyword\n        if (this.stream.advanceIfChar(_ATS)) {\n            content = ['@'];\n            if (this._name(content)) {\n                var keywordText = content.join('');\n                if (keywordText === '@charset') {\n                    return this.finishToken(offset, TokenType.Charset, keywordText);\n                }\n                return this.finishToken(offset, TokenType.AtKeyword, keywordText);\n            }\n            else {\n                return this.finishToken(offset, TokenType.Delim);\n            }\n        }\n        // hash\n        if (this.stream.advanceIfChar(_HSH)) {\n            content = ['#'];\n            if (this._name(content)) {\n                return this.finishToken(offset, TokenType.Hash, content.join(''));\n            }\n            else {\n                return this.finishToken(offset, TokenType.Delim);\n            }\n        }\n        // Important\n        if (this.stream.advanceIfChar(_BNG)) {\n            return this.finishToken(offset, TokenType.Exclamation);\n        }\n        // Numbers\n        if (this._number()) {\n            var pos = this.stream.pos();\n            content = [this.stream.substring(offset, pos)];\n            if (this.stream.advanceIfChar(_PRC)) {\n                // Percentage 43%\n                return this.finishToken(offset, TokenType.Percentage);\n            }\n            else if (this.ident(content)) {\n                var dim = this.stream.substring(pos).toLowerCase();\n                var tokenType_1 = staticUnitTable[dim];\n                if (typeof tokenType_1 !== 'undefined') {\n                    // Known dimension 43px\n                    return this.finishToken(offset, tokenType_1, content.join(''));\n                }\n                else {\n                    // Unknown dimension 43ft\n                    return this.finishToken(offset, TokenType.Dimension, content.join(''));\n                }\n            }\n            return this.finishToken(offset, TokenType.Num);\n        }\n        // String, BadString\n        content = [];\n        var tokenType = this._string(content);\n        if (tokenType !== null) {\n            return this.finishToken(offset, tokenType, content.join(''));\n        }\n        // single character tokens\n        tokenType = staticTokenTable[this.stream.peekChar()];\n        if (typeof tokenType !== 'undefined') {\n            this.stream.advance(1);\n            return this.finishToken(offset, tokenType);\n        }\n        // includes ~=\n        if (this.stream.peekChar(0) === _TLD && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.Includes);\n        }\n        // DashMatch |=\n        if (this.stream.peekChar(0) === _PIP && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.Dashmatch);\n        }\n        // Substring operator *=\n        if (this.stream.peekChar(0) === _MUL && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.SubstringOperator);\n        }\n        // Substring operator ^=\n        if (this.stream.peekChar(0) === _HAT && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.PrefixOperator);\n        }\n        // Substring operator $=\n        if (this.stream.peekChar(0) === _DLR && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.SuffixOperator);\n        }\n        // Delim\n        this.stream.nextChar();\n        return this.finishToken(offset, TokenType.Delim);\n    };\n    Scanner.prototype._matchWordAnyCase = function (characters) {\n        var index = 0;\n        this.stream.advanceWhileChar(function (ch) {\n            var result = characters[index] === ch || characters[index + 1] === ch;\n            if (result) {\n                index += 2;\n            }\n            return result;\n        });\n        if (index === characters.length) {\n            return true;\n        }\n        else {\n            this.stream.goBack(index / 2);\n            return false;\n        }\n    };\n    Scanner.prototype.trivia = function () {\n        while (true) {\n            var offset = this.stream.pos();\n            if (this._whitespace()) {\n                if (!this.ignoreWhitespace) {\n                    return this.finishToken(offset, TokenType.Whitespace);\n                }\n            }\n            else if (this.comment()) {\n                if (!this.ignoreComment) {\n                    return this.finishToken(offset, TokenType.Comment);\n                }\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    Scanner.prototype.comment = function () {\n        if (this.stream.advanceIfChars([_FSL, _MUL])) {\n            var success_1 = false, hot_1 = false;\n            this.stream.advanceWhileChar(function (ch) {\n                if (hot_1 && ch === _FSL) {\n                    success_1 = true;\n                    return false;\n                }\n                hot_1 = ch === _MUL;\n                return true;\n            });\n            if (success_1) {\n                this.stream.advance(1);\n            }\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._number = function () {\n        var npeek = 0, ch;\n        if (this.stream.peekChar() === _DOT) {\n            npeek = 1;\n        }\n        ch = this.stream.peekChar(npeek);\n        if (ch >= _0 && ch <= _9) {\n            this.stream.advance(npeek + 1);\n            this.stream.advanceWhileChar(function (ch) {\n                return ch >= _0 && ch <= _9 || npeek === 0 && ch === _DOT;\n            });\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._newline = function (result) {\n        var ch = this.stream.peekChar();\n        switch (ch) {\n            case _CAR:\n            case _LFD:\n            case _NWL:\n                this.stream.advance(1);\n                result.push(String.fromCharCode(ch));\n                if (ch === _CAR && this.stream.advanceIfChar(_NWL)) {\n                    result.push('\\n');\n                }\n                return true;\n        }\n        return false;\n    };\n    Scanner.prototype._escape = function (result, includeNewLines) {\n        var ch = this.stream.peekChar();\n        if (ch === _BSL) {\n            this.stream.advance(1);\n            ch = this.stream.peekChar();\n            var hexNumCount = 0;\n            while (hexNumCount < 6 && (ch >= _0 && ch <= _9 || ch >= _a && ch <= _f || ch >= _A && ch <= _F)) {\n                this.stream.advance(1);\n                ch = this.stream.peekChar();\n                hexNumCount++;\n            }\n            if (hexNumCount > 0) {\n                try {\n                    var hexVal = parseInt(this.stream.substring(this.stream.pos() - hexNumCount), 16);\n                    if (hexVal) {\n                        result.push(String.fromCharCode(hexVal));\n                    }\n                }\n                catch (e) {\n                    // ignore\n                }\n                // optional whitespace or new line, not part of result text\n                if (ch === _WSP || ch === _TAB) {\n                    this.stream.advance(1);\n                }\n                else {\n                    this._newline([]);\n                }\n                return true;\n            }\n            if (ch !== _CAR && ch !== _LFD && ch !== _NWL) {\n                this.stream.advance(1);\n                result.push(String.fromCharCode(ch));\n                return true;\n            }\n            else if (includeNewLines) {\n                return this._newline(result);\n            }\n        }\n        return false;\n    };\n    Scanner.prototype._stringChar = function (closeQuote, result) {\n        // not closeQuote, not backslash, not newline\n        var ch = this.stream.peekChar();\n        if (ch !== 0 && ch !== closeQuote && ch !== _BSL && ch !== _CAR && ch !== _LFD && ch !== _NWL) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._string = function (result) {\n        if (this.stream.peekChar() === _SQO || this.stream.peekChar() === _DQO) {\n            var closeQuote = this.stream.nextChar();\n            result.push(String.fromCharCode(closeQuote));\n            while (this._stringChar(closeQuote, result) || this._escape(result, true)) {\n                // loop\n            }\n            if (this.stream.peekChar() === closeQuote) {\n                this.stream.nextChar();\n                result.push(String.fromCharCode(closeQuote));\n                return TokenType.String;\n            }\n            else {\n                return TokenType.BadString;\n            }\n        }\n        return null;\n    };\n    Scanner.prototype._unquotedChar = function (result) {\n        // not closeQuote, not backslash, not newline\n        var ch = this.stream.peekChar();\n        if (ch !== 0 && ch !== _BSL && ch !== _SQO && ch !== _DQO && ch !== _LPA && ch !== _RPA && ch !== _WSP && ch !== _TAB && ch !== _NWL && ch !== _LFD && ch !== _CAR) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._unquotedString = function (result) {\n        var hasContent = false;\n        while (this._unquotedChar(result) || this._escape(result)) {\n            hasContent = true;\n        }\n        return hasContent;\n    };\n    Scanner.prototype._whitespace = function () {\n        var n = this.stream.advanceWhileChar(function (ch) {\n            return ch === _WSP || ch === _TAB || ch === _NWL || ch === _LFD || ch === _CAR;\n        });\n        return n > 0;\n    };\n    Scanner.prototype._name = function (result) {\n        var matched = false;\n        while (this._identChar(result) || this._escape(result)) {\n            matched = true;\n        }\n        return matched;\n    };\n    Scanner.prototype.ident = function (result) {\n        var pos = this.stream.pos();\n        var hasMinus = this._minus(result);\n        if (hasMinus && this._minus(result) /* -- */) {\n            if (this._identFirstChar(result) || this._escape(result)) {\n                while (this._identChar(result) || this._escape(result)) {\n                    // loop\n                }\n                return true;\n            }\n        }\n        else if (this._identFirstChar(result) || this._escape(result)) {\n            while (this._identChar(result) || this._escape(result)) {\n                // loop\n            }\n            return true;\n        }\n        this.stream.goBackTo(pos);\n        return false;\n    };\n    Scanner.prototype._identFirstChar = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _USC || // _\n            ch >= _a && ch <= _z || // a-z\n            ch >= _A && ch <= _Z || // A-Z\n            ch >= 0x80 && ch <= 0xFFFF) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._minus = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _MIN) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._identChar = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _USC || // _\n            ch === _MIN || // -\n            ch >= _a && ch <= _z || // a-z\n            ch >= _A && ch <= _Z || // A-Z\n            ch >= _0 && ch <= _9 || // 0/9\n            ch >= 0x80 && ch <= 0xFFFF) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    return Scanner;\n}());\n\n//# sourceMappingURL=cssScanner.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js ***!
  \******************************************************************************************************************/
/*! exports provided: Scope, GlobalScope, Symbol, ScopeBuilder, Symbols */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scope\", function() { return Scope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GlobalScope\", function() { return GlobalScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbol\", function() { return Symbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScopeBuilder\", function() { return ScopeBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbols\", function() { return Symbols; });\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/arrays.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar Scope = /** @class */ (function () {\n    function Scope(offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.symbols = [];\n        this.parent = null;\n        this.children = [];\n    }\n    Scope.prototype.addChild = function (scope) {\n        this.children.push(scope);\n        scope.setParent(this);\n    };\n    Scope.prototype.setParent = function (scope) {\n        this.parent = scope;\n    };\n    Scope.prototype.findScope = function (offset, length) {\n        if (length === void 0) { length = 0; }\n        if (this.offset <= offset && this.offset + this.length > offset + length || this.offset === offset && this.length === length) {\n            return this.findInScope(offset, length);\n        }\n        return null;\n    };\n    Scope.prototype.findInScope = function (offset, length) {\n        if (length === void 0) { length = 0; }\n        // find the first scope child that has an offset larger than offset + length\n        var end = offset + length;\n        var idx = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__[\"findFirst\"])(this.children, function (s) { return s.offset > end; });\n        if (idx === 0) {\n            // all scopes have offsets larger than our end\n            return this;\n        }\n        var res = this.children[idx - 1];\n        if (res.offset <= offset && res.offset + res.length >= offset + length) {\n            return res.findInScope(offset, length);\n        }\n        return this;\n    };\n    Scope.prototype.addSymbol = function (symbol) {\n        this.symbols.push(symbol);\n    };\n    Scope.prototype.getSymbol = function (name, type) {\n        for (var index = 0; index < this.symbols.length; index++) {\n            var symbol = this.symbols[index];\n            if (symbol.name === name && symbol.type === type) {\n                return symbol;\n            }\n        }\n        return null;\n    };\n    Scope.prototype.getSymbols = function () {\n        return this.symbols;\n    };\n    return Scope;\n}());\n\nvar GlobalScope = /** @class */ (function (_super) {\n    __extends(GlobalScope, _super);\n    function GlobalScope() {\n        return _super.call(this, 0, Number.MAX_VALUE) || this;\n    }\n    return GlobalScope;\n}(Scope));\n\nvar Symbol = /** @class */ (function () {\n    function Symbol(name, value, node, type) {\n        this.name = name;\n        this.value = value;\n        this.node = node;\n        this.type = type;\n    }\n    return Symbol;\n}());\n\nvar ScopeBuilder = /** @class */ (function () {\n    function ScopeBuilder(scope) {\n        this.scope = scope;\n    }\n    ScopeBuilder.prototype.addSymbol = function (node, name, value, type) {\n        if (node.offset !== -1) {\n            var current = this.scope.findScope(node.offset, node.length);\n            current.addSymbol(new Symbol(name, value, node, type));\n        }\n    };\n    ScopeBuilder.prototype.addScope = function (node) {\n        if (node.offset !== -1) {\n            var current = this.scope.findScope(node.offset, node.length);\n            if (current.offset !== node.offset || current.length !== node.length) {\n                var newScope = new Scope(node.offset, node.length);\n                current.addChild(newScope);\n                return newScope;\n            }\n            return current;\n        }\n        return null;\n    };\n    ScopeBuilder.prototype.addSymbolToChildScope = function (scopeNode, node, name, value, type) {\n        if (scopeNode && scopeNode.offset !== -1) {\n            var current = this.addScope(scopeNode); // create the scope or gets the existing one\n            current.addSymbol(new Symbol(name, value, node, type));\n        }\n    };\n    ScopeBuilder.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Keyframe:\n                this.addSymbol(node, node.getName(), null, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Keyframe);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].CustomPropertyDeclaration:\n                return this.visitCustomPropertyDeclarationNode(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].VariableDeclaration:\n                return this.visitVariableDeclarationNode(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset:\n                return this.visitRuleSet(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n                this.addSymbol(node, node.getName(), null, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Mixin);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionDeclaration:\n                this.addSymbol(node, node.getName(), null, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter: {\n                return this.visitFunctionParameterNode(node);\n            }\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declarations:\n                this.addScope(node);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].For:\n                var forNode = node;\n                var scopeNode = forNode.getDeclarations();\n                if (scopeNode) {\n                    this.addSymbolToChildScope(scopeNode, forNode.variable, forNode.variable.getName(), null, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n                }\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Each: {\n                var eachNode = node;\n                var scopeNode_1 = eachNode.getDeclarations();\n                if (scopeNode_1) {\n                    var variables = eachNode.getVariables().getChildren();\n                    for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n                        var variable = variables_1[_i];\n                        this.addSymbolToChildScope(scopeNode_1, variable, variable.getName(), null, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n                    }\n                }\n                return true;\n            }\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitRuleSet = function (node) {\n        var current = this.scope.findScope(node.offset, node.length);\n        for (var _i = 0, _a = node.getSelectors().getChildren(); _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                if (child.getChildren().length === 1) {\n                    current.addSymbol(new Symbol(child.getChild(0).getText(), null, child, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule));\n                }\n            }\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitVariableDeclarationNode = function (node) {\n        var value = node.getValue() ? node.getValue().getText() : null;\n        this.addSymbol(node, node.getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        return true;\n    };\n    ScopeBuilder.prototype.visitFunctionParameterNode = function (node) {\n        // parameters are part of the body scope\n        var scopeNode = node.getParent().getDeclarations();\n        if (scopeNode) {\n            var valueNode = node.getDefaultValue();\n            var value = valueNode ? valueNode.getText() : null;\n            this.addSymbolToChildScope(scopeNode, node, node.getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitCustomPropertyDeclarationNode = function (node) {\n        var value = node.getValue() ? node.getValue().getText() : '';\n        this.addCSSVariable(node.getProperty(), node.getProperty().getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        return true;\n    };\n    ScopeBuilder.prototype.addCSSVariable = function (node, name, value, type) {\n        if (node.offset !== -1) {\n            var globalScope = this.getGlobalScope(node, name, type);\n            globalScope.addSymbol(new Symbol(name, value, node, type));\n        }\n    };\n    ScopeBuilder.prototype.getGlobalScope = function (node, name, type) {\n        var current = this.scope.findScope(node.offset, node.length);\n        while (current.parent !== null) {\n            current = current.parent;\n        }\n        return current;\n    };\n    return ScopeBuilder;\n}());\n\nvar Symbols = /** @class */ (function () {\n    function Symbols(node) {\n        this.global = new GlobalScope();\n        node.acceptVisitor(new ScopeBuilder(this.global));\n    }\n    Symbols.prototype.findSymbolsAtOffset = function (offset, referenceType) {\n        var scope = this.global.findScope(offset, 0);\n        var result = [];\n        var names = {};\n        while (scope) {\n            var symbols = scope.getSymbols();\n            for (var i = 0; i < symbols.length; i++) {\n                var symbol = symbols[i];\n                if (symbol.type === referenceType && !names[symbol.name]) {\n                    result.push(symbol);\n                    names[symbol.name] = true;\n                }\n            }\n            scope = scope.parent;\n        }\n        return result;\n    };\n    Symbols.prototype.internalFindSymbol = function (node, referenceTypes) {\n        var scopeNode = node;\n        if (node.parent instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionParameter\"] && node.parent.getParent() instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"BodyDeclaration\"]) {\n            scopeNode = node.parent.getParent().getDeclarations();\n        }\n        if (node.parent instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"] && node.parent.getParent() instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"]) {\n            var funcId = node.parent.getParent().getIdentifier();\n            if (funcId) {\n                var functionSymbol = this.internalFindSymbol(funcId, [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function]);\n                if (functionSymbol) {\n                    scopeNode = functionSymbol.node.getDeclarations();\n                }\n            }\n        }\n        if (!scopeNode) {\n            return null;\n        }\n        var name = node.getText();\n        var scope = this.global.findScope(scopeNode.offset, scopeNode.length);\n        while (scope) {\n            for (var index = 0; index < referenceTypes.length; index++) {\n                var type = referenceTypes[index];\n                var symbol = scope.getSymbol(name, type);\n                if (symbol) {\n                    return symbol;\n                }\n            }\n            scope = scope.parent;\n        }\n        return null;\n    };\n    Symbols.prototype.evaluateReferenceTypes = function (node) {\n        if (node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n            var referenceTypes = node.referenceTypes;\n            if (referenceTypes) {\n                return referenceTypes;\n            }\n            else {\n                if (node.isCustomProperty) {\n                    return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable];\n                }\n                // are a reference to a keyframe?\n                var decl = _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getParentDeclaration\"](node);\n                if (decl) {\n                    var propertyName = decl.getNonPrefixedPropertyName();\n                    if ((propertyName === 'animation' || propertyName === 'animation-name')\n                        && decl.getValue() && decl.getValue().offset === node.offset) {\n                        return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Keyframe];\n                    }\n                }\n            }\n        }\n        else if (node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Variable\"]) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable];\n        }\n        var selector = node.findParent(_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Selector);\n        if (selector) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule];\n        }\n        var extendsRef = node.findParent(_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference);\n        if (extendsRef) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule];\n        }\n        return null;\n    };\n    Symbols.prototype.findSymbolFromNode = function (node) {\n        if (!node) {\n            return null;\n        }\n        while (node.type === _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Interpolation) {\n            node = node.getParent();\n        }\n        var referenceTypes = this.evaluateReferenceTypes(node);\n        if (referenceTypes) {\n            return this.internalFindSymbol(node, referenceTypes);\n        }\n        return null;\n    };\n    Symbols.prototype.matchesSymbol = function (node, symbol) {\n        if (!node) {\n            return null;\n        }\n        while (node.type === _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Interpolation) {\n            node = node.getParent();\n        }\n        if (symbol.name.length !== node.length || symbol.name !== node.getText()) {\n            return false;\n        }\n        var referenceTypes = this.evaluateReferenceTypes(node);\n        if (!referenceTypes || referenceTypes.indexOf(symbol.type) === -1) {\n            return false;\n        }\n        var nodeSymbol = this.internalFindSymbol(node, referenceTypes);\n        return nodeSymbol === symbol;\n    };\n    Symbols.prototype.findSymbol = function (name, type, offset) {\n        var scope = this.global.findScope(offset);\n        while (scope) {\n            var symbol = scope.getSymbol(name, type);\n            if (symbol) {\n                return symbol;\n            }\n            scope = scope.parent;\n        }\n        return null;\n    };\n    return Symbols;\n}());\n\n//# sourceMappingURL=cssSymbolScope.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js ***!
  \**************************************************************************************************************/
/*! exports provided: LESSParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSParser\", function() { return LESSParser; });\n/* harmony import */ var _lessScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lessScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\");\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n/// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\nvar LESSParser = /** @class */ (function (_super) {\n    __extends(LESSParser, _super);\n    function LESSParser() {\n        return _super.call(this, new _lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"LESSScanner\"]()) || this;\n    }\n    LESSParser.prototype._parseStylesheetStatement = function () {\n        return this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference(true)\n            || _super.prototype._parseStylesheetStatement.call(this)\n            || this._parseVariableDeclaration()\n            || this._parsePlugin();\n    };\n    LESSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once') /* deprecated in less 1.4.1 */) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Import\"]);\n        this.consumeToken();\n        // less 1.4.1: @import (css) \"lib\"\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n            }\n            do {\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    break;\n                }\n            } while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident));\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n            }\n        }\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].URIOrStringExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parsePlugin = function () {\n        if (!this.peekKeyword('@plugin')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Plugin);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].StringLiteralExpected);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n        var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n        if (!node) {\n            var node_1 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MediaQuery\"]);\n            if (node_1.addChild(this._parseVariable())) {\n                return this.finish(node_1);\n            }\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._tryParseRuleset(isNested)\n            || this._tryToParseDeclaration()\n            || this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseDetachedRuleSetMixin()\n            || this._parseStylesheetStatement();\n    };\n    LESSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent() || this._parseVariable();\n    };\n    LESSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"VariableDeclaration\"]);\n        var mark = this.mark();\n        if (!node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            node.colonPosition = this.prevToken.offset;\n            if (!node.setValue(this._parseDetachedRuleSet() || this._parseExpr())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].VariableValueExpected, [], panic);\n            }\n            node.addChild(this._parsePrio());\n        }\n        else {\n            this.restoreAtMark(mark);\n            return null; // at keyword, but no ':', not a variable declaration but some at keyword\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSet = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            return null;\n        }\n        var content = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"BodyDeclaration\"]);\n        this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n        return this.finish(content);\n    };\n    LESSParser.prototype._parseDetachedRuleSetBody = function () {\n        return this._tryParseKeyframeSelector() || _super.prototype._parseRuleSetDeclaration.call(this);\n    };\n    LESSParser.prototype._parseVariable = function () {\n        if (!this.peekDelim('@') && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Variable\"]);\n        var mark = this.mark();\n        while (this.acceptDelim('@')) {\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseTerm = function () {\n        var term = _super.prototype._parseTerm.call(this);\n        if (term) {\n            return term;\n        }\n        term = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Term\"]);\n        if (term.setExpression(this._parseVariable()) ||\n            term.setExpression(this._parseEscaped())) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseEscaped = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EscapedJavaScript) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BadEscapedJavaScript)) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].EscapedValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        if (this.peekDelim('~')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].EscapedValue);\n            this.consumeToken();\n            return this.finish(node, this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].String) ? null : _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].TermExpected);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseOperator = function () {\n        var node = this._parseGuardOperator();\n        if (node) {\n            return node;\n        }\n        else {\n            return _super.prototype._parseOperator.call(this);\n        }\n    };\n    LESSParser.prototype._parseGuardOperator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        else if (this.peekDelim('=')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('<');\n            return node;\n        }\n        else if (this.peekDelim('<')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        return null;\n    };\n    LESSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseKeyframe()\n                || this._parseMedia(true)\n                || this._parseImport()\n                || this._parseSupports(true) // @supports\n                || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n                || this._parseVariableDeclaration(); // Variable declarations\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseRuleset(true) // nested ruleset\n            || this._tryParseMixinReference() // less mixin reference\n            || this._parseExtend() // less extend declaration\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n    };\n    LESSParser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Keyframe]) || this._parseVariable();\n    };\n    LESSParser.prototype._parseKeyframeSelector = function () {\n        return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n            || _super.prototype._parseKeyframeSelector.call(this);\n    };\n    LESSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    LESSParser.prototype._parseSelector = function (isNested) {\n        // CSS Guards\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Selector\"]);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            var mark = this.mark();\n            if (node.addChild(this._parseGuard()) && this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                break;\n            }\n            this.restoreAtMark(mark);\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseSelectorIdent = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorInterpolation);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parsePropertyIdentifier = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^--/);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        if (hasContent && !this.hasWhitespace()) {\n            this.acceptDelim('+');\n            if (!this.hasWhitespace()) {\n                this.acceptIdent('_');\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype.peekInterpolatedIdent = function () {\n        return this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) || this.peekDelim('@') || this.peekDelim('-');\n    };\n    LESSParser.prototype._acceptInterpolatedIdent = function (node) {\n        var _this = this;\n        var hasContent = false;\n        var delimWithInterpolation = function () {\n            if (!_this.acceptDelim('-')) {\n                return null;\n            }\n            if (!_this.hasWhitespace() && _this.acceptDelim('-')) {\n            }\n            if (!_this.hasWhitespace()) {\n                return _this._parseInterpolation();\n            }\n            return null;\n        };\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) || node.addChild(this._parseInterpolation() || this.try(delimWithInterpolation))) {\n            hasContent = true;\n            if (!this.hasWhitespace() && this.acceptDelim('-')) {\n                // '-' is a valid char inside a ident (special treatment here to support @{foo}-@{bar})\n            }\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent;\n    };\n    LESSParser.prototype._parseInterpolation = function () {\n        //  @{name}\n        var mark = this.mark();\n        if (this.peekDelim('@')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Interpolation);\n            this.consumeToken();\n            if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected);\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._tryParseMixinDeclaration = function () {\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n        if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        node.setGuard(this._parseGuard());\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n    };\n    LESSParser.prototype._parseMixInBodyDeclaration = function () {\n        return this._parseFontFace() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n        var identifier;\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            identifier = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            this.consumeToken(); // # or .\n            if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n                return null;\n            }\n        }\n        else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Hash)) {\n            identifier = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            this.consumeToken(); // TokenType.Hash\n        }\n        else {\n            return null;\n        }\n        identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin];\n        return this.finish(identifier);\n    };\n    LESSParser.prototype._parsePseudo = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n        this.consumeToken(); // :\n        if (this.acceptIdent('extend')) {\n            return this._completeExtends(node);\n        }\n        this.restoreAtMark(mark);\n        return _super.prototype._parsePseudo.call(this);\n    };\n    LESSParser.prototype._parseExtend = function () {\n        if (!this.peekDelim('&')) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n        this.consumeToken(); // &\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon) || !this.acceptIdent('extend')) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._completeExtends(node);\n    };\n    LESSParser.prototype._completeExtends = function (node) {\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].LeftParenthesisExpected);\n        }\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SelectorExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!selectors.addChild(this._parseSelector(true))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SelectorExpected);\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        if (!node.addChild(this._parseVariable()) || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._tryParseMixinReference = function (atRoot) {\n        if (atRoot === void 0) { atRoot = false; }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        var identifier = this._parseMixinDeclarationIdentifier();\n        while (identifier) {\n            this.acceptDelim('>');\n            var nextId = this._parseMixinDeclarationIdentifier();\n            if (nextId) {\n                node.getNamespaces().addChild(identifier);\n                identifier = nextId;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node.setIdentifier(identifier)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        var hasArguments = false;\n        if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            hasArguments = true;\n            if (node.getArguments().addChild(this._parseMixinArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n            }\n            identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin];\n        }\n        else {\n            identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin, _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Rule];\n        }\n        node.addChild(this._parsePrio());\n        if (!hasArguments && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMixinArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionArgument\"]);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n                this.restoreAtMark(pos);\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        this.restoreAtMark(pos);\n        return null;\n    };\n    LESSParser.prototype._parseMixinParameter = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionParameter\"]);\n        // special rest variable: @rest...\n        if (this.peekKeyword('@rest')) {\n            var restNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            if (!this.accept(_lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].DotExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n            }\n            node.setIdentifier(this.finish(restNode));\n            return this.finish(node);\n        }\n        // special let args: ...\n        if (this.peek(_lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n            var varargsNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            node.setIdentifier(this.finish(varargsNode));\n            return this.finish(node);\n        }\n        var hasContent = false;\n        // default variable declaration: @param: 12 or @name\n        if (node.setIdentifier(this._parseVariable())) {\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon);\n            hasContent = true;\n        }\n        if (!node.setDefaultValue(this._parseExpr(true)) && !hasContent) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuard = function () {\n        if (!this.peekIdent('when')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"LessGuard\"]);\n        this.consumeToken(); // when\n        node.isNegated = this.acceptIdent('not');\n        if (!node.getConditions().addChild(this._parseGuardCondition())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ConditionExpected);\n        }\n        while (this.acceptIdent('and') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!node.getConditions().addChild(this._parseGuardCondition())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ConditionExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuardCondition = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"GuardCondition\"]);\n        this.consumeToken(); // ParenthesisL\n        if (!node.addChild(this._parseExpr())) {\n            // empty (?)\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunctionIdentifier = function () {\n        if (this.peekDelim('%')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            node.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Function];\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseFunctionIdentifier.call(this);\n    };\n    LESSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_2 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            node_2.addChild(this._parseBinaryExpr());\n            return this.finish(node_2);\n        }\n        return node;\n    };\n    return LESSParser;\n}(_cssParser_js__WEBPACK_IMPORTED_MODULE_2__[\"Parser\"]));\n\n//# sourceMappingURL=lessParser.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js ***!
  \***************************************************************************************************************/
/*! exports provided: Ellipsis, LESSScanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipsis\", function() { return Ellipsis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSScanner\", function() { return LESSScanner; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _TIC = '`'.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar customTokenValue = _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CustomToken;\nvar Ellipsis = customTokenValue++;\nvar LESSScanner = /** @class */ (function (_super) {\n    __extends(LESSScanner, _super);\n    function LESSScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LESSScanner.prototype.scanNext = function (offset) {\n        // LESS: escaped JavaScript code `let a = \"dddd\"`\n        var tokenType = this.escapedJavaScript();\n        if (tokenType !== null) {\n            return this.finishToken(offset, tokenType);\n        }\n        if (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\n            return this.finishToken(offset, Ellipsis);\n        }\n        return _super.prototype.scanNext.call(this, offset);\n    };\n    LESSScanner.prototype.comment = function () {\n        if (_super.prototype.comment.call(this)) {\n            return true;\n        }\n        if (!this.inURL && this.stream.advanceIfChars([_FSL, _FSL])) {\n            this.stream.advanceWhileChar(function (ch) {\n                switch (ch) {\n                    case _NWL:\n                    case _CAR:\n                    case _LFD:\n                        return false;\n                    default:\n                        return true;\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    LESSScanner.prototype.escapedJavaScript = function () {\n        var ch = this.stream.peekChar();\n        if (ch === _TIC) {\n            this.stream.advance(1);\n            this.stream.advanceWhileChar(function (ch) { return ch !== _TIC; });\n            return this.stream.advanceIfChar(_TIC) ? _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EscapedJavaScript : _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadEscapedJavaScript;\n        }\n        return null;\n    };\n    return LESSScanner;\n}(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]));\n\n//# sourceMappingURL=lessScanner.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js ***!
  \**************************************************************************************************************/
/*! exports provided: SCSSIssueType, SCSSParseError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSIssueType\", function() { return SCSSIssueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSParseError\", function() { return SCSSParseError; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar SCSSIssueType = /** @class */ (function () {\n    function SCSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return SCSSIssueType;\n}());\n\nvar SCSSParseError = {\n    FromExpected: new SCSSIssueType('scss-fromexpected', localize('expected.from', \"'from' expected\")),\n    ThroughOrToExpected: new SCSSIssueType('scss-throughexpected', localize('expected.through', \"'through' or 'to' expected\")),\n    InExpected: new SCSSIssueType('scss-fromexpected', localize('expected.in', \"'in' expected\")),\n};\n//# sourceMappingURL=scssErrors.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js ***!
  \**************************************************************************************************************/
/*! exports provided: SCSSParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSParser\", function() { return SCSSParser; });\n/* harmony import */ var _scssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\");\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cssParser.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cssErrors.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n/// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nvar SCSSParser = /** @class */ (function (_super) {\n    __extends(SCSSParser, _super);\n    function SCSSParser() {\n        return _super.call(this, new _scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"SCSSScanner\"]()) || this;\n    }\n    SCSSParser.prototype._parseStylesheetStatement = function () {\n        var node = _super.prototype._parseStylesheetStatement.call(this);\n        if (node) {\n            return node;\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseWarnAndDebug()\n                || this._parseControlStatement()\n                || this._parseMixinDeclaration()\n                || this._parseMixinContent()\n                || this._parseMixinReference() // @include\n                || this._parseFunctionDeclaration();\n        }\n        return this._parseVariableDeclaration();\n    };\n    SCSSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Import\"]);\n        this.consumeToken();\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].URIOrStringExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].URIOrStringExpected);\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    // scss variables: $font-size: 12px;\n    SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        if (!this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableName\"])) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"VariableDeclaration\"]);\n        if (!node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ColonExpected);\n        }\n        node.colonPosition = this.prevToken.offset;\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], panic);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Exclamation)) {\n            if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^(default|global)$/)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n            }\n            this.consumeToken();\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseFunction() || this._parseIdent() || this._parseVariable(); // first function, the indent\n    };\n    SCSSParser.prototype._parseKeyframeSelector = function () {\n        return this._tryParseKeyframeSelector() || this._parseControlStatement(this._parseKeyframeSelector.bind(this)) || this._parseMixinContent();\n    };\n    SCSSParser.prototype._parseVariable = function () {\n        if (!this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableName\"])) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Variable\"]);\n        this.consumeToken();\n        return node;\n    };\n    SCSSParser.prototype._parseIdent = function (referenceTypes) {\n        var _this = this;\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) && !this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"InterpolationFunction\"]) && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n        node.referenceTypes = referenceTypes;\n        var hasContent = false;\n        var delimWithInterpolation = function () {\n            if (!_this.acceptDelim('-')) {\n                return null;\n            }\n            if (!_this.hasWhitespace() && _this.acceptDelim('-')) {\n                node.isCustomProperty = true;\n            }\n            if (!_this.hasWhitespace()) {\n                return _this._parseInterpolation();\n            }\n            return null;\n        };\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) || node.addChild(this._parseInterpolation() || this.try(delimWithInterpolation))) {\n            hasContent = true;\n            if (!this.hasWhitespace() && this.acceptDelim('-')) {\n                // '-' is a valid char inside a ident (special treatment here to support #{foo}-#{bar})\n            }\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    SCSSParser.prototype._parseTerm = function () {\n        var term = _super.prototype._parseTerm.call(this);\n        if (term) {\n            return term;\n        }\n        term = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Term\"]);\n        if (term.setExpression(this._parseVariable())\n            || term.setExpression(this._parseSelectorCombinator())\n            || term.setExpression(this._tryParsePrio())) {\n            return this.finish(term);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseInterpolation = function () {\n        if (this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"InterpolationFunction\"])) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Interpolation\"]);\n            this.consumeToken();\n            if (!node.addChild(this._parseBinaryExpr()) && !this._parseSelectorCombinator()) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseOperator = function () {\n        if (this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"EqualsOperator\"]) || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"NotEqualsOperator\"])\n            || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"GreaterEqualsOperator\"]) || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"SmallerEqualsOperator\"])\n            || this.peekDelim('>') || this.peekDelim('<')\n            || this.peekIdent('and') || this.peekIdent('or')\n            || this.peekDelim('%')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseOperator.call(this);\n    };\n    SCSSParser.prototype._parseUnaryOperator = function () {\n        if (this.peekIdent('not')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseUnaryOperator.call(this);\n    };\n    SCSSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseKeyframe() // nested @keyframe\n                || this._parseImport() // nested @import\n                || this._parseMedia(true) // nested @media\n                || this._parseFontFace() // nested @font-face\n                || this._parseWarnAndDebug() // @warn, @debug and @error statements\n                || this._parseControlStatement() // @if, @while, @for, @each\n                || this._parseFunctionDeclaration() // @function\n                || this._parseExtends() // @extends\n                || this._parseMixinReference() // @include\n                || this._parseMixinContent() // @content\n                || this._parseMixinDeclaration() // nested @mixin\n                || this._parseRuleset(true) // @at-rule\n                || this._parseSupports(true); // @supports\n        }\n        return this._parseVariableDeclaration() // variable declaration\n            || this._tryParseRuleset(true) // nested ruleset\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n    };\n    SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Declaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon], resyncStopTokens);\n        }\n        node.colonPosition = this.prevToken.offset;\n        var hasContent = false;\n        if (node.setValue(this._parseExpr())) {\n            hasContent = true;\n            node.addChild(this._parsePrio());\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            node.setNestedProperties(this._parseNestedProperties());\n        }\n        else {\n            if (!hasContent) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].PropertyValueExpected);\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseNestedProperties = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NestedProperties\"]);\n        return this._parseBody(node, this._parseDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseExtends = function () {\n        if (this.peekKeyword('@extend')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n            this.consumeToken();\n            if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].SelectorExpected);\n            }\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                node.getSelectors().addChild(this._parseSimpleSelector());\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Exclamation)) {\n                if (!this.acceptIdent('optional')) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    SCSSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo-1\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSelectorPlaceholder = function () {\n        if (this.peekDelim('%')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorPlaceholder);\n            this.consumeToken();\n            this._parseIdent();\n            return this.finish(node);\n        }\n        else if (this.peekKeyword('@at-root')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorPlaceholder);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseWarnAndDebug = function () {\n        if (!this.peekKeyword('@debug')\n            && !this.peekKeyword('@warn')\n            && !this.peekKeyword('@error')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Debug);\n        this.consumeToken(); // @debug, @warn or @error\n        node.addChild(this._parseExpr()); // optional\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n        if (parseStatement === void 0) { parseStatement = this._parseRuleSetDeclaration.bind(this); }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\n            || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n    };\n    SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n        if (!this.peekKeyword('@if')) {\n            return null;\n        }\n        return this._internalParseIfStatement(parseStatement);\n    };\n    SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"IfStatement\"]);\n        this.consumeToken(); // @if or if\n        if (!node.setExpression(this._parseExpr(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n        }\n        this._parseBody(node, parseStatement);\n        if (this.acceptKeyword('@else')) {\n            if (this.peekIdent('if')) {\n                node.setElseClause(this._internalParseIfStatement(parseStatement));\n            }\n            else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                var elseNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ElseStatement\"]);\n                this._parseBody(elseNode, parseStatement);\n                node.setElseClause(elseNode);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForStatement = function (parseStatement) {\n        if (!this.peekKeyword('@for')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ForStatement\"]);\n        this.consumeToken(); // @for\n        if (!node.setVariable(this._parseVariable())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.acceptIdent('from')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].FromExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].ThroughOrToExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n        if (!this.peekKeyword('@each')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"EachStatement\"]);\n        this.consumeToken(); // @each\n        var variables = node.getVariables();\n        if (!variables.addChild(this._parseVariable())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!variables.addChild(this._parseVariable())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n        }\n        this.finish(variables);\n        if (!this.acceptIdent('in')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].InExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n        if (!this.peekKeyword('@while')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"WhileStatement\"]);\n        this.consumeToken(); // @while\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n        return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug()\n            || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseFunctionDeclaration = function () {\n        if (!this.peekKeyword('@function')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionDeclaration\"]);\n        this.consumeToken(); // @function\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Function]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].LeftParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseReturnStatement = function () {\n        if (!this.peekKeyword('@return')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].ReturnStatement);\n        this.consumeToken(); // @function\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinDeclaration = function () {\n        if (!this.peekKeyword('@mixin')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseParameterDeclaration = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionParameter\"]);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n            // ok\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            if (!node.setDefaultValue(this._parseExpr(true))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinContent = function () {\n        if (!this.peekKeyword('@content')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].MixinContent);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReference = function () {\n        if (!this.peekKeyword('@include')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getArguments().addChild(this._parseFunctionArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            var content = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"BodyDeclaration\"]);\n            this._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n            node.setContent(content);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    SCSSParser.prototype._parseFunctionArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionArgument\"]);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n                if (this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n                    node.setValue(argument);\n                    return this.finish(node);\n                }\n                else {\n                    this.restoreAtMark(pos);\n                }\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseExpr(true))) {\n            this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"]); // #43746\n            node.addChild(this._parsePrio()); // #9859\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_1 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            node_1.addChild(this._parseBinaryExpr());\n            return this.finish(node_1);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseOperation = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n        this.consumeToken();\n        while (node.addChild(this._parseListElement())) {\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma); // optional\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseListElement = function () {\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].ListEntry);\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return null;\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            if (!node.addChild(this._parseBinaryExpr())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    return SCSSParser;\n}(_cssParser_js__WEBPACK_IMPORTED_MODULE_2__[\"Parser\"]));\n\n//# sourceMappingURL=scssParser.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js ***!
  \***************************************************************************************************************/
/*! exports provided: VariableName, InterpolationFunction, Default, EqualsOperator, NotEqualsOperator, GreaterEqualsOperator, SmallerEqualsOperator, Ellipsis, SCSSScanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableName\", function() { return VariableName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InterpolationFunction\", function() { return InterpolationFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Default\", function() { return Default; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EqualsOperator\", function() { return EqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NotEqualsOperator\", function() { return NotEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GreaterEqualsOperator\", function() { return GreaterEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SmallerEqualsOperator\", function() { return SmallerEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipsis\", function() { return Ellipsis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSScanner\", function() { return SCSSScanner; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _DLR = '$'.charCodeAt(0);\nvar _HSH = '#'.charCodeAt(0);\nvar _CUL = '{'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _BNG = '!'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar customTokenValue = _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CustomToken;\nvar VariableName = customTokenValue++;\nvar InterpolationFunction = customTokenValue++;\nvar Default = customTokenValue++;\nvar EqualsOperator = customTokenValue++;\nvar NotEqualsOperator = customTokenValue++;\nvar GreaterEqualsOperator = customTokenValue++;\nvar SmallerEqualsOperator = customTokenValue++;\nvar Ellipsis = customTokenValue++;\nvar SCSSScanner = /** @class */ (function (_super) {\n    __extends(SCSSScanner, _super);\n    function SCSSScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SCSSScanner.prototype.scanNext = function (offset) {\n        // scss variable\n        if (this.stream.advanceIfChar(_DLR)) {\n            var content = ['$'];\n            if (this.ident(content)) {\n                return this.finishToken(offset, VariableName, content.join(''));\n            }\n            else {\n                this.stream.goBackTo(offset);\n            }\n        }\n        // scss: interpolation function #{..})\n        if (this.stream.advanceIfChars([_HSH, _CUL])) {\n            return this.finishToken(offset, InterpolationFunction);\n        }\n        // operator ==\n        if (this.stream.advanceIfChars([_EQS, _EQS])) {\n            return this.finishToken(offset, EqualsOperator);\n        }\n        // operator !=\n        if (this.stream.advanceIfChars([_BNG, _EQS])) {\n            return this.finishToken(offset, NotEqualsOperator);\n        }\n        // operators <, <=\n        if (this.stream.advanceIfChar(_LAN)) {\n            if (this.stream.advanceIfChar(_EQS)) {\n                return this.finishToken(offset, SmallerEqualsOperator);\n            }\n            return this.finishToken(offset, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim);\n        }\n        // ooperators >, >=\n        if (this.stream.advanceIfChar(_RAN)) {\n            if (this.stream.advanceIfChar(_EQS)) {\n                return this.finishToken(offset, GreaterEqualsOperator);\n            }\n            return this.finishToken(offset, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim);\n        }\n        // ellipis\n        if (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\n            return this.finishToken(offset, Ellipsis);\n        }\n        return _super.prototype.scanNext.call(this, offset);\n    };\n    SCSSScanner.prototype.comment = function () {\n        if (_super.prototype.comment.call(this)) {\n            return true;\n        }\n        if (!this.inURL && this.stream.advanceIfChars([_FSL, _FSL])) {\n            this.stream.advanceWhileChar(function (ch) {\n                switch (ch) {\n                    case _NWL:\n                    case _CAR:\n                    case _LFD:\n                        return false;\n                    default:\n                        return true;\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return SCSSScanner;\n}(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]));\n\n//# sourceMappingURL=scssScanner.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js ***!
  \********************************************************************************************************************/
/*! exports provided: CSSCodeActions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSCodeActions\", function() { return CSSCodeActions; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _languageFacts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageFacts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _services_lintRules_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/lintRules.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar CSSCodeActions = /** @class */ (function () {\n    function CSSCodeActions() {\n    }\n    CSSCodeActions.prototype.doCodeActions = function (document, range, context, stylesheet) {\n        var result = [];\n        if (context.diagnostics) {\n            for (var _i = 0, _a = context.diagnostics; _i < _a.length; _i++) {\n                var diagnostic = _a[_i];\n                this.appendFixesForMarker(document, stylesheet, diagnostic, result);\n            }\n        }\n        return result;\n    };\n    CSSCodeActions.prototype.getFixesForUnknownProperty = function (document, property, marker, result) {\n        var propertyName = property.getName();\n        var candidates = [];\n        for (var p in _languageFacts_js__WEBPACK_IMPORTED_MODULE_1__[\"getProperties\"]()) {\n            var score = Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"difference\"])(propertyName, p);\n            if (score >= propertyName.length / 2 /*score_lim*/) {\n                candidates.push({ property: p, score: score });\n            }\n        }\n        // Sort in descending order.\n        candidates.sort(function (a, b) {\n            return b.score - a.score;\n        });\n        var maxActions = 3;\n        for (var _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) {\n            var candidate = candidates_1[_i];\n            var propertyName_1 = candidate.property;\n            var title = localize('css.codeaction.rename', \"Rename to '{0}'\", propertyName_1);\n            var edit = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(marker.range, propertyName_1);\n            result.push(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Command\"].create(title, '_css.applyCodeAction', document.uri, document.version, [edit]));\n            if (--maxActions <= 0) {\n                return;\n            }\n        }\n    };\n    CSSCodeActions.prototype.appendFixesForMarker = function (document, stylesheet, marker, result) {\n        if (marker.code !== _services_lintRules_js__WEBPACK_IMPORTED_MODULE_3__[\"Rules\"].UnknownProperty.id) {\n            return;\n        }\n        var offset = document.offsetAt(marker.range.start);\n        var end = document.offsetAt(marker.range.end);\n        var nodepath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](stylesheet, offset);\n        for (var i = nodepath.length - 1; i >= 0; i--) {\n            var node = nodepath[i];\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                var property = node.getProperty();\n                if (property && property.offset === offset && property.end === end) {\n                    this.getFixesForUnknownProperty(document, property, marker, result);\n                    return;\n                }\n            }\n        }\n    };\n    return CSSCodeActions;\n}());\n\n//# sourceMappingURL=cssCodeActions.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js ***!
  \*******************************************************************************************************************/
/*! exports provided: CSSCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSCompletion\", function() { return CSSCompletion; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssSymbolScope.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\");\n/* harmony import */ var _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./languageFacts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar SnippetFormat = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet;\nvar CSSCompletion = /** @class */ (function () {\n    function CSSCompletion(variablePrefix) {\n        if (variablePrefix === void 0) { variablePrefix = null; }\n        this.completionParticipants = [];\n        this.valueTypes = [\n            _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Value, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].StringLiteral, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].URILiteral, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].NumericValue,\n            _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].VariableName, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Prio\n        ];\n        this.variablePrefix = variablePrefix;\n    }\n    CSSCompletion.prototype.getSymbolContext = function () {\n        if (!this.symbolContext) {\n            this.symbolContext = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"](this.styleSheet);\n        }\n        return this.symbolContext;\n    };\n    CSSCompletion.prototype.setCompletionParticipants = function (registeredCompletionParticipants) {\n        this.completionParticipants = registeredCompletionParticipants || [];\n    };\n    CSSCompletion.prototype.doComplete = function (document, position, styleSheet) {\n        this.offset = document.offsetAt(position);\n        this.position = position;\n        this.currentWord = getCurrentWord(document, this.offset);\n        this.defaultReplaceRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Position\"].create(this.position.line, this.position.character - this.currentWord.length), this.position);\n        this.textDocument = document;\n        this.styleSheet = styleSheet;\n        try {\n            var result = { isIncomplete: false, items: [] };\n            this.nodePath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](this.styleSheet, this.offset);\n            for (var i = this.nodePath.length - 1; i >= 0; i--) {\n                var node = this.nodePath[i];\n                if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Property\"]) {\n                    this.getCompletionsForDeclarationProperty(node.getParent(), result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Expression\"]) {\n                    this.getCompletionsForExpression(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                    var parentExtRef = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference);\n                    if (parentExtRef) {\n                        this.getCompletionsForExtendsReference(parentExtRef, node, result);\n                    }\n                    else {\n                        var parentRuleSet = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset);\n                        this.getCompletionsForSelector(parentRuleSet, parentRuleSet && parentRuleSet.isNested(), result);\n                    }\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"]) {\n                    this.getCompletionsForFunctionArgument(node, node.getParent(), result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declarations\"]) {\n                    this.getCompletionsForDeclarations(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableDeclaration\"]) {\n                    this.getCompletionsForVariableDeclaration(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n                    this.getCompletionsForRuleSet(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Interpolation\"]) {\n                    this.getCompletionsForInterpolation(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                    this.getCompletionsForFunctionDeclaration(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinReference\"]) {\n                    this.getCompletionsForMixinReference(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"]) {\n                    this.getCompletionsForFunctionArgument(null, node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Supports\"]) {\n                    this.getCompletionsForSupports(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                    this.getCompletionsForSupportsCondition(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ExtendsReference\"]) {\n                    this.getCompletionsForExtendsReference(node, null, result);\n                }\n                if (result.items.length > 0) {\n                    return this.finalize(result);\n                }\n            }\n            this.getCompletionsForStylesheet(result);\n            if (result.items.length === 0) {\n                if (this.variablePrefix && this.currentWord.indexOf(this.variablePrefix) === 0) {\n                    this.getVariableProposals(null, result);\n                }\n            }\n            return this.finalize(result);\n        }\n        finally {\n            // don't hold on any state, clear symbolContext\n            this.position = null;\n            this.currentWord = null;\n            this.textDocument = null;\n            this.styleSheet = null;\n            this.symbolContext = null;\n            this.defaultReplaceRange = null;\n            this.nodePath = null;\n        }\n    };\n    CSSCompletion.prototype.finalize = function (result) {\n        var needsSortText = result.items.some(function (i) { return !!i.sortText; });\n        if (needsSortText) {\n            for (var _i = 0, _a = result.items; _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (!i.sortText) {\n                    i.sortText = 'd';\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.findInNodePath = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        for (var i = this.nodePath.length - 1; i >= 0; i--) {\n            var node = this.nodePath[i];\n            if (types.indexOf(node.type) !== -1) {\n                return node;\n            }\n        }\n        return null;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        return this.getPropertyProposals(declaration, result);\n    };\n    CSSCompletion.prototype.getPropertyProposals = function (declaration, result) {\n        var _this = this;\n        var properties = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getProperties\"]();\n        for (var key in properties) {\n            if (properties.hasOwnProperty(key)) {\n                var entry = properties[key];\n                if (entry.browsers.onCodeComplete) {\n                    var range = void 0;\n                    var insertText = void 0;\n                    if (declaration) {\n                        range = this.getCompletionRange(declaration.getProperty());\n                        insertText = entry.name + (!isDefined(declaration.colonPosition) ? ': ' : '');\n                    }\n                    else {\n                        range = this.getCompletionRange(null);\n                        insertText = entry.name + ': ';\n                    }\n                    var item = {\n                        label: entry.name,\n                        documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(range, insertText),\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property,\n                        command: {\n                            title: 'Suggest',\n                            command: 'editor.action.triggerSuggest'\n                        }\n                    };\n                    if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, '-')) {\n                        item.sortText = 'x';\n                    }\n                    result.items.push(item);\n                }\n            }\n        }\n        this.completionParticipants.forEach(function (participant) {\n            participant.onCssProperty({\n                propertyName: _this.currentWord,\n                range: _this.defaultReplaceRange\n            });\n        });\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarationValue = function (node, result) {\n        var _this = this;\n        var propertyName = node.getFullPropertyName();\n        var entry = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getProperties\"]()[propertyName];\n        var existingNode = node.getValue();\n        while (existingNode && existingNode.hasChildren()) {\n            existingNode = existingNode.findChildAtOffset(this.offset, false);\n        }\n        this.completionParticipants.forEach(function (participant) {\n            participant.onCssPropertyValue({\n                propertyName: propertyName,\n                propertyValue: _this.currentWord,\n                range: _this.getCompletionRange(existingNode)\n            });\n        });\n        if (entry) {\n            for (var _i = 0, _a = entry.restrictions; _i < _a.length; _i++) {\n                var restriction = _a[_i];\n                switch (restriction) {\n                    case 'color':\n                        this.getColorProposals(entry, existingNode, result);\n                        break;\n                    case 'position':\n                        this.getPositionProposals(entry, existingNode, result);\n                        break;\n                    case 'repeat':\n                        this.getRepeatStyleProposals(entry, existingNode, result);\n                        break;\n                    case 'line-style':\n                        this.getLineStyleProposals(entry, existingNode, result);\n                        break;\n                    case 'line-width':\n                        this.getLineWidthProposals(entry, existingNode, result);\n                        break;\n                    case 'geometry-box':\n                        this.getGeometryBoxProposals(entry, existingNode, result);\n                        break;\n                    case 'box':\n                        this.getBoxProposals(entry, existingNode, result);\n                        break;\n                    case 'image':\n                        this.getImageProposals(entry, existingNode, result);\n                        break;\n                    case 'timing-function':\n                        this.getTimingFunctionProposals(entry, existingNode, result);\n                        break;\n                    case 'shape':\n                        this.getBasicShapeProposals(entry, existingNode, result);\n                        break;\n                }\n            }\n            this.getValueEnumProposals(entry, existingNode, result);\n            this.getCSSWideKeywordProposals(entry, existingNode, result);\n            this.getUnitProposals(entry, existingNode, result);\n        }\n        else {\n            var existingValues = collectValues(this.styleSheet, node);\n            for (var _b = 0, _c = existingValues.getEntries(); _b < _c.length; _b++) {\n                var existingValue = _c[_b];\n                result.items.push({\n                    label: existingValue,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), existingValue),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n                });\n            }\n        }\n        this.getVariableProposals(existingNode, result);\n        this.getTermProposals(entry, existingNode, result);\n        return result;\n    };\n    CSSCompletion.prototype.getValueEnumProposals = function (entry, existingNode, result) {\n        if (entry.values) {\n            for (var _i = 0, _a = entry.values; _i < _a.length; _i++) {\n                var value = _a[_i];\n                if (_languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"isCommonValue\"](value)) {\n                    var insertString = value.name;\n                    var insertTextFormat = void 0;\n                    if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"endsWith\"](insertString, ')')) {\n                        var from = insertString.lastIndexOf('(');\n                        if (from !== -1) {\n                            insertString = insertString.substr(0, from) + '($1)';\n                            insertTextFormat = SnippetFormat;\n                        }\n                    }\n                    var item = {\n                        label: value.name,\n                        documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](value),\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertString),\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value,\n                        insertTextFormat: insertTextFormat\n                    };\n                    result.items.push(item);\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCSSWideKeywordProposals = function (entry, existingNode, result) {\n        for (var keywords in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"]) {\n            result.items.push({\n                label: keywords,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"][keywords],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), keywords),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForInterpolation = function (node, result) {\n        if (this.offset >= node.offset + 2) {\n            this.getVariableProposals(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getVariableProposals = function (existingNode, result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var insertText = _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](symbol.name, '--') ? \"var(\" + symbol.name + \")\" : symbol.name;\n            var suggest = {\n                label: symbol.name,\n                documentation: symbol.value ? _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"getLimitedString\"](symbol.value) : symbol.value,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Variable,\n                sortText: 'z'\n            };\n            if (symbol.node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter) {\n                var mixinNode = (symbol.node.getParent());\n                if (mixinNode.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration) {\n                    suggest.detail = localize('completion.argument', 'argument from \\'{0}\\'', mixinNode.getName());\n                }\n            }\n            result.items.push(suggest);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getVariableProposalsForCSSVarFunction = function (result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        symbols = symbols.filter(function (symbol) {\n            return _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](symbol.name, '--');\n        });\n        for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.items.push({\n                label: symbol.name,\n                documentation: symbol.value ? _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"getLimitedString\"](symbol.value) : symbol.value,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(null), symbol.name),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Variable\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getUnitProposals = function (entry, existingNode, result) {\n        var currentWord = '0';\n        if (this.currentWord.length > 0) {\n            var numMatch = this.currentWord.match(/^-?\\d[\\.\\d+]*/);\n            if (numMatch) {\n                currentWord = numMatch[0];\n                result.isIncomplete = currentWord.length === this.currentWord.length;\n            }\n        }\n        else if (this.currentWord.length === 0) {\n            result.isIncomplete = true;\n        }\n        if (existingNode && existingNode.parent && existingNode.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            existingNode = existingNode.getParent(); // include the unary operator\n        }\n        for (var _i = 0, _a = entry.restrictions; _i < _a.length; _i++) {\n            var restriction = _a[_i];\n            var units = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"units\"][restriction];\n            if (units) {\n                for (var _b = 0, units_1 = units; _b < units_1.length; _b++) {\n                    var unit = units_1[_b];\n                    var insertText = currentWord + unit;\n                    result.items.push({\n                        label: insertText,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Unit\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionRange = function (existingNode) {\n        if (existingNode && existingNode.offset <= this.offset) {\n            var end = existingNode.end !== -1 ? this.textDocument.positionAt(existingNode.end) : this.position;\n            return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(this.textDocument.positionAt(existingNode.offset), end);\n        }\n        return this.defaultReplaceRange;\n    };\n    CSSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        for (var color in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"]) {\n            result.items.push({\n                label: color,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"][color],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color\n            });\n        }\n        for (var color in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorKeywords\"]) {\n            result.items.push({\n                label: color,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorKeywords\"][color],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        var colorValues = new Set();\n        this.styleSheet.acceptVisitor(new ColorValueCollector(colorValues));\n        for (var _i = 0, _a = colorValues.getEntries(); _i < _a.length; _i++) {\n            var color = _a[_i];\n            result.items.push({\n                label: color,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color\n            });\n        }\n        var _loop_1 = function (p) {\n            var tabStop = 1;\n            var replaceFunction = function (match, p1) { return '${' + tabStop++ + ':' + p1 + '}'; };\n            var insertText = p.func.replace(/\\[?\\$(\\w+)\\]?/g, replaceFunction);\n            result.items.push({\n                label: p.func.substr(0, p.func.indexOf('(')),\n                detail: p.func,\n                documentation: p.desc,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this_1.getCompletionRange(existingNode), insertText),\n                insertTextFormat: SnippetFormat,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function\n            });\n        };\n        var this_1 = this;\n        for (var _b = 0, _c = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorFunctions\"]; _b < _c.length; _b++) {\n            var p = _c[_b];\n            _loop_1(p);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getPositionProposals = function (entry, existingNode, result) {\n        for (var position in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"]) {\n            result.items.push({\n                label: position,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"][position],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), position),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getRepeatStyleProposals = function (entry, existingNode, result) {\n        for (var repeat in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"]) {\n            result.items.push({\n                label: repeat,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"][repeat],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), repeat),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getLineStyleProposals = function (entry, existingNode, result) {\n        for (var lineStyle in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"]) {\n            result.items.push({\n                label: lineStyle,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"][lineStyle],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), lineStyle),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getLineWidthProposals = function (entry, existingNode, result) {\n        for (var _i = 0, _a = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineWidthKeywords\"]; _i < _a.length; _i++) {\n            var lineWidth = _a[_i];\n            result.items.push({\n                label: lineWidth,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), lineWidth),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getGeometryBoxProposals = function (entry, existingNode, result) {\n        for (var box in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"]) {\n            result.items.push({\n                label: box,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"][box],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), box),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getBoxProposals = function (entry, existingNode, result) {\n        for (var box in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"]) {\n            result.items.push({\n                label: box,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"][box],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), box),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getImageProposals = function (entry, existingNode, result) {\n        for (var image in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(image);\n            result.items.push({\n                label: image,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"][image],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: image !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getTimingFunctionProposals = function (entry, existingNode, result) {\n        for (var timing in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(timing);\n            result.items.push({\n                label: timing,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"][timing],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: timing !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getBasicShapeProposals = function (entry, existingNode, result) {\n        for (var shape in _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(shape);\n            result.items.push({\n                label: shape,\n                documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"][shape],\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: shape !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForStylesheet = function (result) {\n        var node = this.styleSheet.findFirstChildBeforeOffset(this.offset);\n        if (!node) {\n            return this.getCompletionForTopLevel(result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n            return this.getCompletionsForRuleSet(node, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Supports\"]) {\n            return this.getCompletionsForSupports(node, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForTopLevel = function (result) {\n        for (var _i = 0, _a = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getAtDirectives\"](); _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.browsers.count > 0) {\n                result.items.push({\n                    label: entry.name,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(null), entry.name),\n                    documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n        }\n        this.getCompletionsForSelector(null, false, result);\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForRuleSet = function (ruleSet, result) {\n        var declarations = ruleSet.getDeclarations();\n        var isAfter = declarations && declarations.endsWith('}') && this.offset >= declarations.end;\n        if (isAfter) {\n            return this.getCompletionForTopLevel(result);\n        }\n        var isInSelectors = !declarations || this.offset <= declarations.offset;\n        if (isInSelectors) {\n            return this.getCompletionsForSelector(ruleSet, ruleSet.isNested(), result);\n        }\n        ruleSet.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset);\n        return this.getCompletionsForDeclarations(ruleSet.getDeclarations(), result);\n    };\n    CSSCompletion.prototype.getCompletionsForSelector = function (ruleSet, isNested, result) {\n        var _this = this;\n        var existingNode = this.findInNodePath(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector);\n        if (!existingNode && this.offset - this.currentWord.length > 0 && this.textDocument.getText()[this.offset - this.currentWord.length - 1] === ':') {\n            // after the ':' of a pseudo selector, no node generated for just ':'\n            this.currentWord = ':' + this.currentWord;\n            this.defaultReplaceRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Position\"].create(this.position.line, this.position.character - this.currentWord.length), this.position);\n        }\n        for (var _i = 0, _a = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getPseudoClasses\"](); _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.browsers.onCodeComplete) {\n                var insertText = moveCursorInsideParenthesis(entry.name);\n                var item = {\n                    label: entry.name,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                    documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                    insertTextFormat: entry.name !== insertText ? SnippetFormat : void 0\n                };\n                if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, ':-')) {\n                    item.sortText = 'x';\n                }\n                result.items.push(item);\n            }\n        }\n        for (var _b = 0, _c = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getPseudoElements\"](); _b < _c.length; _b++) {\n            var entry = _c[_b];\n            if (entry.browsers.onCodeComplete) {\n                var insertText = moveCursorInsideParenthesis(entry.name);\n                var item = {\n                    label: entry.name,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                    documentation: _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                    insertTextFormat: entry.name !== insertText ? SnippetFormat : void 0\n                };\n                if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, '::-')) {\n                    item.sortText = 'x';\n                }\n                result.items.push(item);\n            }\n        }\n        if (!isNested) {\n            for (var _d = 0, _e = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"html5Tags\"]; _d < _e.length; _d++) {\n                var entry = _e[_d];\n                result.items.push({\n                    label: entry,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n            for (var _f = 0, _g = _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"svgElements\"]; _f < _g.length; _f++) {\n                var entry = _g[_f];\n                result.items.push({\n                    label: entry,\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), entry),\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n        }\n        var visited = {};\n        visited[this.currentWord] = true;\n        var textProvider = this.styleSheet.getTextProvider();\n        this.styleSheet.accept(function (n) {\n            if (n.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SimpleSelector && n.length > 0) {\n                var selector = textProvider(n.offset, n.length);\n                if (selector.charAt(0) === '.' && !visited[selector]) {\n                    visited[selector] = true;\n                    result.items.push({\n                        label: selector,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), selector),\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                    });\n                }\n                return false;\n            }\n            return true;\n        });\n        if (ruleSet && ruleSet.isNested()) {\n            var selector = ruleSet.getSelectors().findFirstChildBeforeOffset(this.offset);\n            if (selector && ruleSet.getSelectors().getChildren().indexOf(selector) === 0) {\n                this.getPropertyProposals(null, result);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarations = function (declarations, result) {\n        if (!declarations || this.offset === declarations.offset) {\n            return result;\n        }\n        var node = declarations.findFirstChildBeforeOffset(this.offset);\n        if (!node) {\n            return this.getCompletionsForDeclarationProperty(null, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"AbstractDeclaration\"]) {\n            var declaration = node;\n            if (!isDefined(declaration.colonPosition) || this.offset <= declaration.colonPosition) {\n                // complete property\n                return this.getCompletionsForDeclarationProperty(declaration, result);\n            }\n            else if ((isDefined(declaration.semicolonPosition) && declaration.semicolonPosition < this.offset)) {\n                if (this.offset === declaration.semicolonPosition + 1) {\n                    return result; // don't show new properties right after semicolon (see Bug 15421:[intellisense] [css] Be less aggressive when manually typing CSS)\n                }\n                // complete next property\n                return this.getCompletionsForDeclarationProperty(null, result);\n            }\n            if (declaration instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                // complete value\n                return this.getCompletionsForDeclarationValue(declaration, result);\n            }\n        }\n        else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ExtendsReference\"]) {\n            this.getCompletionsForExtendsReference(node, null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForVariableDeclaration = function (declaration, result) {\n        if (this.offset > declaration.colonPosition) {\n            this.getVariableProposals(declaration.getValue(), result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForExpression = function (expression, result) {\n        if (expression.getParent() instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"]) {\n            this.getCompletionsForFunctionArgument(expression.getParent(), expression.getParent().getParent(), result);\n            return result;\n        }\n        var declaration = expression.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declaration);\n        if (!declaration) {\n            this.getTermProposals(null, null, result);\n            return result;\n        }\n        var node = expression.findChildAtOffset(this.offset, true);\n        if (!node) {\n            return this.getCompletionsForDeclarationValue(declaration, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NumericValue\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n            return this.getCompletionsForDeclarationValue(declaration, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForFunctionArgument = function (arg, func, result) {\n        if (func.getIdentifier().getText() === 'var') {\n            if (!func.getArguments().hasChildren() || func.getArguments().getChild(0) === arg) {\n                this.getVariableProposalsForCSSVarFunction(result);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForFunctionDeclaration = function (decl, result) {\n        var declarations = decl.getDeclarations();\n        if (declarations && this.offset > declarations.offset && this.offset < declarations.end) {\n            this.getTermProposals(null, null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForMixinReference = function (ref, result) {\n        var allMixins = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Mixin);\n        for (var _i = 0, allMixins_1 = allMixins; _i < allMixins_1.length; _i++) {\n            var mixinSymbol = allMixins_1[_i];\n            if (mixinSymbol.node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinDeclaration\"]) {\n                result.items.push(this.makeTermProposal(mixinSymbol, mixinSymbol.node.getParameters(), null));\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var allFunctions = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function);\n        for (var _i = 0, allFunctions_1 = allFunctions; _i < allFunctions_1.length; _i++) {\n            var functionSymbol = allFunctions_1[_i];\n            if (functionSymbol.node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                result.items.push(this.makeTermProposal(functionSymbol, functionSymbol.node.getParameters(), existingNode));\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.makeTermProposal = function (symbol, parameters, existingNode) {\n        var decl = symbol.node;\n        var params = parameters.getChildren().map(function (c) {\n            return (c instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionParameter\"]) ? c.getName() : c.getText();\n        });\n        var insertText = symbol.name + '(' + params.map(function (p, index) { return '${' + (index + 1) + ':' + p + '}'; }).join(', ') + ')';\n        return {\n            label: symbol.name,\n            detail: symbol.name + '(' + params.join(', ') + ')',\n            textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n            insertTextFormat: SnippetFormat,\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n            sortText: 'z'\n        };\n    };\n    CSSCompletion.prototype.getCompletionsForSupportsCondition = function (supportsCondition, result) {\n        var child = supportsCondition.findFirstChildBeforeOffset(this.offset);\n        if (child) {\n            if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                if (!isDefined(child.colonPosition || this.offset <= child.colonPosition)) {\n                    return this.getCompletionsForDeclarationProperty(child, result);\n                }\n                else {\n                    return this.getCompletionsForDeclarationValue(child, result);\n                }\n            }\n            else if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                return this.getCompletionsForSupportsCondition(child, result);\n            }\n        }\n        if (isDefined(supportsCondition.lParent) && this.offset > supportsCondition.lParent && (!isDefined(supportsCondition.rParent) || this.offset <= supportsCondition.rParent)) {\n            return this.getCompletionsForDeclarationProperty(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForSupports = function (supports, result) {\n        var declarations = supports.getDeclarations();\n        var inInCondition = !declarations || this.offset <= declarations.offset;\n        if (inInCondition) {\n            var child = supports.findFirstChildBeforeOffset(this.offset);\n            if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                return this.getCompletionsForSupportsCondition(child, result);\n            }\n            return result;\n        }\n        return this.getCompletionForTopLevel(result);\n    };\n    CSSCompletion.prototype.getCompletionsForExtendsReference = function (extendsRef, existingNode, result) {\n        return result;\n    };\n    return CSSCompletion;\n}());\n\nvar Set = /** @class */ (function () {\n    function Set() {\n        this.entries = {};\n    }\n    Set.prototype.add = function (entry) {\n        this.entries[entry] = true;\n    };\n    Set.prototype.getEntries = function () {\n        return Object.keys(this.entries);\n    };\n    return Set;\n}());\nfunction moveCursorInsideParenthesis(text) {\n    return text.replace(/\\(\\)$/, \"($1)\");\n}\nfunction collectValues(styleSheet, declaration) {\n    var fullPropertyName = declaration.getFullPropertyName();\n    var entries = new Set();\n    function visitValue(node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NumericValue\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"HexColorValue\"]) {\n            entries.add(node.getText());\n        }\n        return true;\n    }\n    function matchesProperty(decl) {\n        var propertyName = decl.getFullPropertyName();\n        return fullPropertyName === propertyName;\n    }\n    function vistNode(node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"] && node !== declaration) {\n            if (matchesProperty(node)) {\n                var value = node.getValue();\n                if (value) {\n                    value.accept(visitValue);\n                }\n            }\n        }\n        return true;\n    }\n    styleSheet.accept(vistNode);\n    return entries;\n}\nvar ColorValueCollector = /** @class */ (function () {\n    function ColorValueCollector(entries) {\n        this.entries = entries;\n        // nothing to do\n    }\n    ColorValueCollector.prototype.visitNode = function (node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"HexColorValue\"] || (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"] && _languageFacts_js__WEBPACK_IMPORTED_MODULE_2__[\"isColorConstructor\"](node))) {\n            this.entries.add(node.getText());\n        }\n        return true;\n    };\n    return ColorValueCollector;\n}());\nfunction isDefined(obj) {\n    return typeof obj !== 'undefined';\n}\nfunction getCurrentWord(document, offset) {\n    var i = offset - 1;\n    var text = document.getText();\n    while (i >= 0 && ' \\t\\n\\r\":{[()]},*>+'.indexOf(text.charAt(i)) === -1) {\n        i--;\n    }\n    return text.substring(i + 1, offset);\n}\n//# sourceMappingURL=cssCompletion.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js ***!
  \**************************************************************************************************************/
/*! exports provided: CSSHover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSHover\", function() { return CSSHover; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _languageFacts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageFacts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _selectorPrinting_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selectorPrinting.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar CSSHover = /** @class */ (function () {\n    function CSSHover() {\n    }\n    CSSHover.prototype.doHover = function (document, position, stylesheet) {\n        function getRange(node) {\n            return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.end));\n        }\n        var offset = document.offsetAt(position);\n        var nodepath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](stylesheet, offset);\n        for (var i = 0; i < nodepath.length; i++) {\n            var node = nodepath[i];\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                return {\n                    contents: Object(_selectorPrinting_js__WEBPACK_IMPORTED_MODULE_3__[\"selectorToMarkedString\"])(node),\n                    range: getRange(node)\n                };\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                return {\n                    contents: Object(_selectorPrinting_js__WEBPACK_IMPORTED_MODULE_3__[\"simpleSelectorToMarkedString\"])(node),\n                    range: getRange(node)\n                };\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                var propertyName = node.getFullPropertyName();\n                var entry = _languageFacts_js__WEBPACK_IMPORTED_MODULE_1__[\"getProperties\"]()[propertyName];\n                if (entry) {\n                    var contents = [];\n                    if (entry.description) {\n                        contents.push(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"MarkedString\"].fromPlainText(entry.description));\n                    }\n                    var browserLabel = _languageFacts_js__WEBPACK_IMPORTED_MODULE_1__[\"getBrowserLabel\"](entry.browsers);\n                    if (browserLabel) {\n                        contents.push(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"MarkedString\"].fromPlainText(browserLabel));\n                    }\n                    if (contents.length) {\n                        return {\n                            contents: contents,\n                            range: getRange(node)\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    return CSSHover;\n}());\n\n//# sourceMappingURL=cssHover.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js ***!
  \*******************************************************************************************************************/
/*! exports provided: CSSNavigation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSNavigation\", function() { return CSSNavigation; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/cssSymbolScope.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\");\n/* harmony import */ var _services_languageFacts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/languageFacts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_4__[\"loadMessageBundle\"]();\nvar CSSNavigation = /** @class */ (function () {\n    function CSSNavigation() {\n    }\n    CSSNavigation.prototype.findDefinition = function (document, position, stylesheet) {\n        var symbols = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_2__[\"Symbols\"](stylesheet);\n        var offset = document.offsetAt(position);\n        var node = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodeAtOffset\"](stylesheet, offset);\n        if (!node) {\n            return null;\n        }\n        var symbol = symbols.findSymbolFromNode(node);\n        if (!symbol) {\n            return null;\n        }\n        return {\n            uri: document.uri,\n            range: getRange(symbol.node, document)\n        };\n    };\n    CSSNavigation.prototype.findReferences = function (document, position, stylesheet) {\n        var highlights = this.findDocumentHighlights(document, position, stylesheet);\n        return highlights.map(function (h) {\n            return {\n                uri: document.uri,\n                range: h.range\n            };\n        });\n    };\n    CSSNavigation.prototype.findDocumentHighlights = function (document, position, stylesheet) {\n        var result = [];\n        var offset = document.offsetAt(position);\n        var node = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodeAtOffset\"](stylesheet, offset);\n        if (!node || node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Stylesheet || node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declarations) {\n            return result;\n        }\n        var symbols = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_2__[\"Symbols\"](stylesheet);\n        var symbol = symbols.findSymbolFromNode(node);\n        var name = node.getText();\n        stylesheet.accept(function (candidate) {\n            if (symbol) {\n                if (symbols.matchesSymbol(candidate, symbol)) {\n                    result.push({\n                        kind: getHighlightKind(candidate),\n                        range: getRange(candidate, document)\n                    });\n                    return false;\n                }\n            }\n            else if (node.type === candidate.type && node.length === candidate.length && name === candidate.getText()) {\n                // Same node type and data\n                result.push({\n                    kind: getHighlightKind(candidate),\n                    range: getRange(candidate, document)\n                });\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentSymbols = function (document, stylesheet) {\n        var result = [];\n        stylesheet.accept(function (node) {\n            var entry = {\n                name: null,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"SymbolKind\"].Class,\n                location: null\n            };\n            var locationNode = node;\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                entry.name = node.getText();\n                locationNode = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset);\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"SymbolKind\"].Variable;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"SymbolKind\"].Method;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"SymbolKind\"].Function;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Keyframe\"]) {\n                entry.name = localize('literal.keyframes', \"@keyframes {0}\", node.getName());\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FontFace\"]) {\n                entry.name = localize('literal.fontface', \"@font-face\");\n            }\n            if (entry.name) {\n                entry.location = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"Location\"].create(document.uri, getRange(locationNode, document));\n                result.push(entry);\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentColors = function (document, stylesheet) {\n        var result = [];\n        stylesheet.accept(function (node) {\n            var colorInfo = getColorInformation(node, document);\n            if (colorInfo) {\n                result.push(colorInfo);\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.getColorPresentations = function (document, stylesheet, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        var label;\n        if (color.alpha === 1) {\n            label = \"rgb(\" + red256 + \", \" + green256 + \", \" + blue256 + \")\";\n        }\n        else {\n            label = \"rgba(\" + red256 + \", \" + green256 + \", \" + blue256 + \", \" + color.alpha + \")\";\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(range, label) });\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(range, label) });\n        var hsl = Object(_services_languageFacts_js__WEBPACK_IMPORTED_MODULE_3__[\"hslFromColor\"])(color);\n        if (hsl.a === 1) {\n            label = \"hsl(\" + hsl.h + \", \" + Math.round(hsl.s * 100) + \"%, \" + Math.round(hsl.l * 100) + \"%)\";\n        }\n        else {\n            label = \"hsla(\" + hsl.h + \", \" + Math.round(hsl.s * 100) + \"%, \" + Math.round(hsl.l * 100) + \"%, \" + hsl.a + \")\";\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(range, label) });\n        return result;\n    };\n    CSSNavigation.prototype.doRename = function (document, position, newName, stylesheet) {\n        var highlights = this.findDocumentHighlights(document, position, stylesheet);\n        var edits = highlights.map(function (h) { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(h.range, newName); });\n        return {\n            changes: (_a = {}, _a[document.uri] = edits, _a)\n        };\n        var _a;\n    };\n    return CSSNavigation;\n}());\n\nfunction getColorInformation(node, document) {\n    var color = Object(_services_languageFacts_js__WEBPACK_IMPORTED_MODULE_3__[\"getColorValue\"])(node);\n    if (color) {\n        var range = getRange(node, document);\n        return { color: color, range: range };\n    }\n    return null;\n}\nfunction getRange(node, document) {\n    return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.end));\n}\nfunction getHighlightKind(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Selector) {\n        return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightKind\"].Write;\n    }\n    if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n        if (node.parent && node.parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Property\"]) {\n            if (node.isCustomProperty) {\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightKind\"].Write;\n            }\n        }\n    }\n    if (node.parent) {\n        switch (node.parent.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Keyframe:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].VariableDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter:\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightKind\"].Write;\n        }\n    }\n    return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightKind\"].Read;\n}\nfunction toTwoDigitHex(n) {\n    var r = n.toString(16);\n    return r.length !== 2 ? '0' + r : r;\n}\n//# sourceMappingURL=cssNavigation.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js ***!
  \*******************************************************************************************************************/
/*! exports provided: CSSValidation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSValidation\", function() { return CSSValidation; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _lintRules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lintRules.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _lint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lint.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar CSSValidation = /** @class */ (function () {\n    function CSSValidation() {\n    }\n    CSSValidation.prototype.configure = function (settings) {\n        this.settings = settings;\n    };\n    CSSValidation.prototype.doValidation = function (document, stylesheet, settings) {\n        if (settings === void 0) { settings = this.settings; }\n        if (settings && settings.validate === false) {\n            return [];\n        }\n        var entries = [];\n        entries.push.apply(entries, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ParseErrorCollector\"].entries(stylesheet));\n        entries.push.apply(entries, _lint_js__WEBPACK_IMPORTED_MODULE_3__[\"LintVisitor\"].entries(stylesheet, document, new _lintRules_js__WEBPACK_IMPORTED_MODULE_2__[\"LintConfigurationSettings\"](settings && settings.lint)));\n        function toDiagnostic(marker) {\n            var range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"].create(document.positionAt(marker.getOffset()), document.positionAt(marker.getOffset() + marker.getLength()));\n            return {\n                code: marker.getRule().id,\n                source: document.languageId,\n                message: marker.getMessage(),\n                severity: marker.getLevel() === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning ? _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticSeverity\"].Warning : _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticSeverity\"].Error,\n                range: range\n            };\n        }\n        return entries.filter(function (entry) { return entry.getLevel() !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore; }).map(toDiagnostic);\n    };\n    return CSSValidation;\n}());\n\n//# sourceMappingURL=cssValidation.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js ***!
  \*******************************************************************************************************************/
/*! exports provided: colors, colorKeywords, positionKeywords, repeatStyleKeywords, lineStyleKeywords, lineWidthKeywords, boxKeywords, geometryBoxKeywords, cssWideKeywords, colorFunctions, imageFunctions, transitionTimingFunctions, basicShapeFunctions, units, html5Tags, svgElements, isColorConstructor, isColorValue, hexDigit, colorFromHex, colorFrom256RGB, colorFromHSL, hslFromColor, getColorValue, isKnownProperty, isCommonValue, getPageBoxDirectives, getEntryDescription, getBrowserLabel, getProperties, getAtDirectives, getPseudoElements, getPseudoClasses, browserNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colors\", function() { return colors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorKeywords\", function() { return colorKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"positionKeywords\", function() { return positionKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeatStyleKeywords\", function() { return repeatStyleKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineStyleKeywords\", function() { return lineStyleKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineWidthKeywords\", function() { return lineWidthKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boxKeywords\", function() { return boxKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"geometryBoxKeywords\", function() { return geometryBoxKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssWideKeywords\", function() { return cssWideKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFunctions\", function() { return colorFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageFunctions\", function() { return imageFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionTimingFunctions\", function() { return transitionTimingFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"basicShapeFunctions\", function() { return basicShapeFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"units\", function() { return units; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html5Tags\", function() { return html5Tags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"svgElements\", function() { return svgElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColorConstructor\", function() { return isColorConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColorValue\", function() { return isColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexDigit\", function() { return hexDigit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHex\", function() { return colorFromHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFrom256RGB\", function() { return colorFrom256RGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHSL\", function() { return colorFromHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hslFromColor\", function() { return hslFromColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColorValue\", function() { return getColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isKnownProperty\", function() { return isKnownProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCommonValue\", function() { return isCommonValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPageBoxDirectives\", function() { return getPageBoxDirectives; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEntryDescription\", function() { return getEntryDescription; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBrowserLabel\", function() { return getBrowserLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getProperties\", function() { return getProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAtDirectives\", function() { return getAtDirectives; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPseudoElements\", function() { return getPseudoElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPseudoClasses\", function() { return getPseudoClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"browserNames\", function() { return browserNames; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/browsers.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/browsers.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar colors = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgrey: '#a9a9a9',\n    darkgreen: '#006400',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgrey: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370d8',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#d87093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    red: '#ff0000',\n    rebeccapurple: '#663399',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\nvar colorKeywords = {\n    'currentColor': 'The value of the \\'color\\' property. The computed value of the \\'currentColor\\' keyword is the computed value of the \\'color\\' property. If the \\'currentColor\\' keyword is set on the \\'color\\' property itself, it is treated as \\'color:inherit\\' at parse time.',\n    'transparent': 'Fully transparent. This keyword can be considered a shorthand for rgba(0,0,0,0) which is its computed value.',\n};\nvar positionKeywords = {\n    'bottom': 'Computes to ‘100%’ for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.',\n    'center': 'Computes to ‘50%’ (‘left 50%’) for the horizontal position if the horizontal position is not otherwise specified, or ‘50%’ (‘top 50%’) for the vertical position if it is.',\n    'left': 'Computes to ‘0%’ for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.',\n    'right': 'Computes to ‘100%’ for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.',\n    'top': 'Computes to ‘0%’ for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset.'\n};\nvar repeatStyleKeywords = {\n    'no-repeat': 'Placed once and not repeated in this direction.',\n    'repeat': 'Repeated in this direction as often as needed to cover the background painting area.',\n    'repeat-x': 'Computes to ‘repeat no-repeat’.',\n    'repeat-y': 'Computes to ‘no-repeat repeat’.',\n    'round': 'Repeated as often as will fit within the background positioning area. If it doesn’t fit a whole number of times, it is rescaled so that it does.',\n    'space': 'Repeated as often as will fit within the background positioning area without being clipped and then the images are spaced out to fill the area.'\n};\nvar lineStyleKeywords = {\n    'dashed': 'A series of square-ended dashes.',\n    'dotted': 'A series of round dots.',\n    'double': 'Two parallel solid lines with some space between them.',\n    'groove': 'Looks as if it were carved in the canvas.',\n    'hidden': 'Same as ‘none’, but has different behavior in the border conflict resolution rules for border-collapsed tables.',\n    'inset': 'Looks as if the content on the inside of the border is sunken into the canvas.',\n    'none': 'No border. Color and width are ignored.',\n    'outset': 'Looks as if the content on the inside of the border is coming out of the canvas.',\n    'ridge': 'Looks as if it were coming out of the canvas.',\n    'solid': 'A single line segment.'\n};\nvar lineWidthKeywords = ['medium', 'thick', 'thin'];\nvar boxKeywords = {\n    'border-box': 'The background is painted within (clipped to) the border box.',\n    'content-box': 'The background is painted within (clipped to) the content box.',\n    'padding-box': 'The background is painted within (clipped to) the padding box.'\n};\nvar geometryBoxKeywords = {\n    'margin-box': 'Uses the margin box as reference box.',\n    'fill-box': 'Uses the object bounding box as reference box.',\n    'stroke-box': 'Uses the stroke bounding box as reference box.',\n    'view-box': 'Uses the nearest SVG viewport as reference box.'\n};\nvar cssWideKeywords = {\n    'initial': 'Represents the value specified as the property’s initial value.',\n    'inherit': 'Represents the computed value of the property on the element’s parent.',\n    'unset': 'Acts as either `inherit` or `initial`, depending on whether the property is inherited or not.'\n};\nvar colorFunctions = [\n    { func: 'rgb($red, $green, $blue)', desc: localize('css.builtin.rgb', 'Creates a Color from red, green, and blue values.') },\n    { func: 'rgba($red, $green, $blue, $alpha)', desc: localize('css.builtin.rgba', 'Creates a Color from red, green, blue, and alpha values.') },\n    { func: 'hsl($hue, $saturation, $lightness)', desc: localize('css.builtin.hsl', 'Creates a Color from hue, saturation, and lightness values.') },\n    { func: 'hsla($hue, $saturation, $lightness, $alpha)', desc: localize('css.builtin.hsla', 'Creates a Color from hue, saturation, lightness, and alpha values.') }\n];\nvar imageFunctions = {\n    'url()': 'Reference an image file by URL',\n    'image()': 'Provide image fallbacks and annotations.',\n    '-webkit-image-set()': 'Provide multiple resolutions. Remember to use unprefixed image-set() in addition.',\n    'image-set()': 'Provide multiple resolutions of an image and let the UA decide which is most appropriate in a given situation.',\n    '-moz-element()': 'Use an element in the document as an image. Remember to use unprefixed element() in addition.',\n    'element()': 'Use an element in the document as an image.',\n    'cross-fade()': 'Indicates the two images to be combined and how far along in the transition the combination is.',\n    '-webkit-gradient()': 'Deprecated. Use modern linear-gradient() or radial-gradient() instead.',\n    '-webkit-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    '-moz-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    '-o-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    'linear-gradient()': 'A linear gradient is created by specifying a straight gradient line, and then several colors placed along that line.',\n    '-webkit-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    '-moz-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    '-o-repeating-linear-gradient()': 'RepeatingLinear gradient. Remember to use unprefixed version in addition.',\n    'repeating-linear-gradient()': 'Same as linear-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.',\n    '-webkit-radial-gradient()': 'Radial gradient. Remember to use unprefixed version in addition.',\n    '-moz-radial-gradient()': 'Radial gradient. Remember to use unprefixed version in addition.',\n    'radial-gradient()': 'Colors emerge from a single point and smoothly spread outward in a circular or elliptical shape.',\n    '-webkit-repeating-radial-gradient()': 'Repeating radial gradient. Remember to use unprefixed version in addition.',\n    '-moz-repeating-radial-gradient()': 'Repeating radial gradient. Remember to use unprefixed version in addition.',\n    'repeating-radial-gradient()': 'Same as radial-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.'\n};\nvar transitionTimingFunctions = {\n    'ease': 'Equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0).',\n    'ease-in': 'Equivalent to cubic-bezier(0.42, 0, 1.0, 1.0).',\n    'ease-in-out': 'Equivalent to cubic-bezier(0.42, 0, 0.58, 1.0).',\n    'ease-out': 'Equivalent to cubic-bezier(0, 0, 0.58, 1.0).',\n    'linear': 'Equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0).',\n    'step-end': 'Equivalent to steps(1, end).',\n    'step-start': 'Equivalent to steps(1, start).',\n    'steps()': 'The first parameter specifies the number of intervals in the function. The second parameter, which is optional, is either the value “start” or “end”.',\n    'cubic-bezier()': 'Specifies a cubic-bezier curve. The four values specify points P1 and P2  of the curve as (x1, y1, x2, y2).',\n    'cubic-bezier(0.6, -0.28, 0.735, 0.045)': 'Ease-in Back. Overshoots.',\n    'cubic-bezier(0.68, -0.55, 0.265, 1.55)': 'Ease-in-out Back. Overshoots.',\n    'cubic-bezier(0.175, 0.885, 0.32, 1.275)': 'Ease-out Back. Overshoots.',\n    'cubic-bezier(0.6, 0.04, 0.98, 0.335)': 'Ease-in Circular. Based on half circle.',\n    'cubic-bezier(0.785, 0.135, 0.15, 0.86)': 'Ease-in-out Circular. Based on half circle.',\n    'cubic-bezier(0.075, 0.82, 0.165, 1)': 'Ease-out Circular. Based on half circle.',\n    'cubic-bezier(0.55, 0.055, 0.675, 0.19)': 'Ease-in Cubic. Based on power of three.',\n    'cubic-bezier(0.645, 0.045, 0.355, 1)': 'Ease-in-out Cubic. Based on power of three.',\n    'cubic-bezier(0.215, 0.610, 0.355, 1)': 'Ease-out Cubic. Based on power of three.',\n    'cubic-bezier(0.95, 0.05, 0.795, 0.035)': 'Ease-in Exponential. Based on two to the power ten.',\n    'cubic-bezier(1, 0, 0, 1)': 'Ease-in-out Exponential. Based on two to the power ten.',\n    'cubic-bezier(0.19, 1, 0.22, 1)': 'Ease-out Exponential. Based on two to the power ten.',\n    'cubic-bezier(0.47, 0, 0.745, 0.715)': 'Ease-in Sine.',\n    'cubic-bezier(0.445, 0.05, 0.55, 0.95)': 'Ease-in-out Sine.',\n    'cubic-bezier(0.39, 0.575, 0.565, 1)': 'Ease-out Sine.',\n    'cubic-bezier(0.55, 0.085, 0.68, 0.53)': 'Ease-in Quadratic. Based on power of two.',\n    'cubic-bezier(0.455, 0.03, 0.515, 0.955)': 'Ease-in-out Quadratic. Based on power of two.',\n    'cubic-bezier(0.25, 0.46, 0.45, 0.94)': 'Ease-out Quadratic. Based on power of two.',\n    'cubic-bezier(0.895, 0.03, 0.685, 0.22)': 'Ease-in Quartic. Based on power of four.',\n    'cubic-bezier(0.77, 0, 0.175, 1)': 'Ease-in-out Quartic. Based on power of four.',\n    'cubic-bezier(0.165, 0.84, 0.44, 1)': 'Ease-out Quartic. Based on power of four.',\n    'cubic-bezier(0.755, 0.05, 0.855, 0.06)': 'Ease-in Quintic. Based on power of five.',\n    'cubic-bezier(0.86, 0, 0.07, 1)': 'Ease-in-out Quintic. Based on power of five.',\n    'cubic-bezier(0.23, 1, 0.320, 1)': 'Ease-out Quintic. Based on power of five.'\n};\nvar basicShapeFunctions = {\n    'circle()': 'Defines a circle.',\n    'ellipse()': 'Defines an ellipse.',\n    'inset()': 'Defines an inset rectangle.',\n    'polygon()': 'Defines a polygon.'\n};\nvar units = {\n    'length': ['em', 'rem', 'ex', 'px', 'cm', 'mm', 'in', 'pt', 'pc', 'ch', 'vw', 'vh', 'vmin', 'vmax'],\n    'angle': ['deg', 'rad', 'grad', 'turn'],\n    'time': ['ms', 's'],\n    'frequency': ['Hz', 'kHz'],\n    'resolution': ['dpi', 'dpcm', 'dppx'],\n    'percentage': ['%']\n};\nvar html5Tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption',\n    'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer',\n    'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link',\n    'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q',\n    'rb', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td',\n    'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'let', 'video', 'wbr'];\nvar svgElements = ['circle', 'clipPath', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',\n    'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology',\n    'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'foreignObject', 'g', 'hatch', 'hatchpath', 'image', 'line', 'linearGradient',\n    'marker', 'mask', 'mesh', 'meshpatch', 'meshrow', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'set', 'solidcolor', 'stop', 'svg', 'switch',\n    'symbol', 'text', 'textPath', 'tspan', 'use', 'view'];\nfunction isColorConstructor(node) {\n    var name = node.getName();\n    if (!name) {\n        return false;\n    }\n    return /^(rgb|rgba|hsl|hsla)$/gi.test(name);\n}\n/**\n * Returns true if the node is a color value - either\n * defined a hex number, as rgb or rgba function, or\n * as color name.\n */\nfunction isColorValue(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue) {\n        return true;\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Function) {\n        return this.isColorConstructor(node);\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier) {\n        if (node.parent && node.parent.type !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            return false;\n        }\n        var candidateColor = node.getText().toLowerCase();\n        if (candidateColor === 'none') {\n            return false;\n        }\n        if (colors[candidateColor]) {\n            return true;\n        }\n    }\n    return false;\n}\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar F = 70;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nfunction colorFromHex(text) {\n    if (text[0] !== '#') {\n        return null;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return null;\n}\nfunction colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\nfunction colorFromHSL(hue, sat, light, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    hue = hue / 60.0;\n    if (sat === 0) {\n        return { red: light, green: light, blue: light, alpha: alpha };\n    }\n    else {\n        var hueToRgb = function (t1, t2, hue) {\n            while (hue < 0) {\n                hue += 6;\n            }\n            while (hue >= 6) {\n                hue -= 6;\n            }\n            if (hue < 1) {\n                return (t2 - t1) * hue + t1;\n            }\n            if (hue < 3) {\n                return t2;\n            }\n            if (hue < 4) {\n                return (t2 - t1) * (4 - hue) + t1;\n            }\n            return t1;\n        };\n        var t2 = light <= 0.5 ? (light * (sat + 1)) : (light + sat - (light * sat));\n        var t1 = light * 2 - t2;\n        return { red: hueToRgb(t1, t2, hue + 2), green: hueToRgb(t1, t2, hue), blue: hueToRgb(t1, t2, hue - 2), alpha: alpha };\n    }\n}\nfunction hslFromColor(rgba) {\n    var r = rgba.red;\n    var g = rgba.green;\n    var b = rgba.blue;\n    var a = rgba.alpha;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (min + max) / 2;\n    var chroma = max - min;\n    if (chroma > 0) {\n        s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n        switch (max) {\n            case r:\n                h = (g - b) / chroma + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / chroma + 2;\n                break;\n            case b:\n                h = (r - g) / chroma + 4;\n                break;\n        }\n        h *= 60;\n        h = Math.round(h);\n    }\n    return { h: h, s: s, l: l, a: a };\n}\nfunction getColorValue(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue) {\n        var text = node.getText();\n        return colorFromHex(text);\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Function) {\n        var functionNode = node;\n        var name = functionNode.getName();\n        var colorValues = functionNode.getArguments().getChildren();\n        if (!name || colorValues.length < 3 || colorValues.length > 4) {\n            return null;\n        }\n        try {\n            var alpha = colorValues.length === 4 ? getNumericValue(colorValues[3], 1) : 1;\n            if (name === 'rgb' || name === 'rgba') {\n                return {\n                    red: getNumericValue(colorValues[0], 255.0),\n                    green: getNumericValue(colorValues[1], 255.0),\n                    blue: getNumericValue(colorValues[2], 255.0),\n                    alpha: alpha\n                };\n            }\n            else if (name === 'hsl' || name === 'hsla') {\n                var h = getAngle(colorValues[0]);\n                var s = getNumericValue(colorValues[1], 100.0);\n                var l = getNumericValue(colorValues[2], 100.0);\n                return colorFromHSL(h, s, l, alpha);\n            }\n        }\n        catch (e) {\n            // parse error on numeric value\n            return null;\n        }\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier) {\n        if (node.parent && node.parent.type !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            return null;\n        }\n        var candidateColor = node.getText().toLowerCase();\n        if (candidateColor === 'none') {\n            return null;\n        }\n        var colorHex = colors[candidateColor];\n        if (colorHex) {\n            return colorFromHex(colorHex);\n        }\n    }\n    return null;\n}\nfunction getNumericValue(node, factor) {\n    var val = node.getText();\n    var m = val.match(/^([-+]?[0-9]*\\.?[0-9]+)(%?)$/);\n    if (m) {\n        if (m[2]) {\n            factor = 100.0;\n        }\n        var result = parseFloat(m[1]) / factor;\n        if (result >= 0 && result <= 1) {\n            return result;\n        }\n    }\n    throw new Error();\n}\nfunction getAngle(node) {\n    var val = node.getText();\n    var m = val.match(/^([-+]?[0-9]*\\.?[0-9]+)(deg)?$/);\n    if (m) {\n        return parseFloat(val) % 360;\n    }\n    throw new Error();\n}\n/**\n * Returns true if the given name is a known property.\n */\nfunction isKnownProperty(name) {\n    if (!name) {\n        return false;\n    }\n    else {\n        name = name.toLowerCase();\n        return getProperties().hasOwnProperty(name);\n    }\n}\nfunction isCommonValue(entry) {\n    return entry.browsers.count > 1;\n}\nfunction getPageBoxDirectives() {\n    return [\n        '@bottom-center', '@bottom-left', '@bottom-left-corner', '@bottom-right', '@bottom-right-corner',\n        '@left-bottom', '@left-middle', '@left-top', '@right-bottom', '@right-middle', '@right-top',\n        '@top-center', '@top-left', '@top-left-corner', '@top-right', '@top-right-corner'\n    ];\n}\nfunction getEntryDescription(entry) {\n    var desc = entry.description || '';\n    var browserLabel = this.getBrowserLabel(entry.browsers);\n    if (browserLabel) {\n        if (desc) {\n            desc = desc + '\\n';\n        }\n        desc = desc + '(' + browserLabel + ')';\n    }\n    return desc;\n}\nfunction getBrowserLabel(b) {\n    var result = '';\n    if (!b || b.all || b.count === 0) {\n        return null;\n    }\n    for (var curr in browserNames) {\n        if (typeof b[curr] === 'string') {\n            if (result.length > 0) {\n                result = result + ', ';\n            }\n            result = result + browserNames[curr];\n            var version = b[curr];\n            if (version.length > 0) {\n                result = result + ' ' + version;\n            }\n        }\n    }\n    return result;\n}\nfunction evalBrowserEntry(browsers) {\n    var browserEntry = { all: false, count: 0, onCodeComplete: false };\n    var count = 0;\n    if (browsers) {\n        for (var _i = 0, _a = browsers.split(','); _i < _a.length; _i++) {\n            var s = _a[_i];\n            s = s.trim();\n            if (s === 'all') {\n                browserEntry.all = true;\n                count = Number.MAX_VALUE;\n            }\n            else if (s !== 'none') {\n                for (var key in browserNames) {\n                    if (s.indexOf(key) === 0) {\n                        browserEntry[key] = s.substring(key.length).trim();\n                        count++;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        browserEntry.all = true;\n        count = Number.MAX_VALUE;\n    }\n    browserEntry.count = count;\n    browserEntry.onCodeComplete = count > 0; // to be refined\n    return browserEntry;\n}\nvar ValueImpl = /** @class */ (function () {\n    function ValueImpl(data) {\n        this.data = data;\n    }\n    Object.defineProperty(ValueImpl.prototype, \"name\", {\n        get: function () {\n            return this.data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValueImpl.prototype, \"description\", {\n        get: function () {\n            return this.data.desc || _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__[\"descriptions\"][this.data.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValueImpl.prototype, \"browsers\", {\n        get: function () {\n            if (!this.browserEntry) {\n                this.browserEntry = evalBrowserEntry(this.data.browsers);\n            }\n            return this.browserEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ValueImpl;\n}());\nvar EntryImpl = /** @class */ (function () {\n    function EntryImpl(data) {\n        this.data = data;\n    }\n    Object.defineProperty(EntryImpl.prototype, \"name\", {\n        get: function () {\n            return this.data.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntryImpl.prototype, \"description\", {\n        get: function () {\n            return this.data.desc || _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__[\"descriptions\"][this.data.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntryImpl.prototype, \"browsers\", {\n        get: function () {\n            if (!this.browserEntry) {\n                this.browserEntry = evalBrowserEntry(this.data.browsers);\n            }\n            return this.browserEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntryImpl.prototype, \"restrictions\", {\n        get: function () {\n            if (this.data.restriction) {\n                return this.data.restriction.split(',').map(function (s) { return s.trim(); });\n            }\n            else {\n                return [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EntryImpl.prototype, \"values\", {\n        get: function () {\n            if (!this.data.values) {\n                return [];\n            }\n            if (!Array.isArray(this.data.values)) {\n                return [new ValueImpl(this.data.values.value)];\n            }\n            return this.data.values.map(function (v) {\n                return new ValueImpl(v);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EntryImpl;\n}());\nvar propertySet;\nvar properties = _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__[\"data\"].css.properties;\nfunction getProperties() {\n    if (!propertySet) {\n        propertySet = {};\n        for (var i = 0, len = properties.length; i < len; i++) {\n            var rawEntry = properties[i];\n            propertySet[rawEntry.name] = new EntryImpl(rawEntry);\n        }\n    }\n    return propertySet;\n}\nvar atDirectives = _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__[\"data\"].css.atdirectives;\nvar atDirectiveList;\nfunction getAtDirectives() {\n    if (!atDirectiveList) {\n        atDirectiveList = [];\n        for (var i = 0, len = atDirectives.length; i < len; i++) {\n            var rawEntry = atDirectives[i];\n            atDirectiveList.push(new EntryImpl(rawEntry));\n        }\n    }\n    return atDirectiveList;\n}\nvar pseudoElements = _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__[\"data\"].css.pseudoelements;\nvar pseudoElementList;\nfunction getPseudoElements() {\n    if (!pseudoElementList) {\n        pseudoElementList = [];\n        for (var i = 0, len = pseudoElements.length; i < len; i++) {\n            var rawEntry = pseudoElements[i];\n            pseudoElementList.push(new EntryImpl(rawEntry));\n        }\n    }\n    return pseudoElementList;\n}\nvar pseudoClasses = _data_browsers_js__WEBPACK_IMPORTED_MODULE_1__[\"data\"].css.pseudoclasses;\nvar pseudoClassesList;\nfunction getPseudoClasses() {\n    if (!pseudoClassesList) {\n        pseudoClassesList = [];\n        for (var i = 0, len = pseudoClasses.length; i < len; i++) {\n            var rawEntry = pseudoClasses[i];\n            pseudoClassesList.push(new EntryImpl(rawEntry));\n        }\n    }\n    return pseudoClassesList;\n}\nvar browserNames = {\n    E: 'Edge',\n    FF: 'Firefox',\n    S: 'Safari',\n    C: 'Chrome',\n    IE: 'IE',\n    O: 'Opera'\n};\n//# sourceMappingURL=languageFacts.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js ***!
  \********************************************************************************************************************/
/*! exports provided: LESSCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSCompletion\", function() { return LESSCompletion; });\n/* harmony import */ var _cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar LESSCompletion = /** @class */ (function (_super) {\n    __extends(LESSCompletion, _super);\n    function LESSCompletion() {\n        return _super.call(this, '@') || this;\n    }\n    LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var item = {\n                label: p.name,\n                detail: p.example,\n                documentation: p.description,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"InsertTextFormat\"].Snippet,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"CompletionItemKind\"].Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = LESSCompletion.builtInProposals;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    LESSCompletion.builtInProposals = [\n        {\n            'name': 'escape',\n            'example': 'escape(@string);',\n            'description': localize('less.builtin.escape', 'URL encodes a string')\n        },\n        {\n            'name': 'e',\n            'example': 'e(@string);',\n            'description': localize('less.builtin.e', 'escape string content')\n        },\n        {\n            'name': 'replace',\n            'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n            'description': localize('less.builtin.replace', 'string replace')\n        },\n        {\n            'name': 'unit',\n            'example': 'unit(@dimension, [@unit: \\'\\']);',\n            'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n        },\n        {\n            'name': 'color',\n            'example': 'color(@string);',\n            'description': localize('less.builtin.color', 'parses a string to a color'),\n            'type': 'color'\n        },\n        {\n            'name': 'convert',\n            'example': 'convert(@value, unit);',\n            'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n        },\n        {\n            'name': 'data-uri',\n            'example': 'data-uri([mimetype,] url);',\n            'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n            'type': 'url'\n        },\n        {\n            'name': 'length',\n            'example': 'length(@list);',\n            'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n        },\n        {\n            'name': 'extract',\n            'example': 'extract(@list, index);',\n            'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n        },\n        {\n            'name': 'abs',\n            'description': localize('less.builtin.abs', 'absolute value of a number'),\n            'example': 'abs(number);'\n        },\n        {\n            'name': 'acos',\n            'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n            'example': 'acos(number);'\n        },\n        {\n            'name': 'asin',\n            'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n            'example': 'asin(number);'\n        },\n        {\n            'name': 'ceil',\n            'example': 'ceil(@number);',\n            'description': localize('less.builtin.ceil', 'rounds up to an integer')\n        },\n        {\n            'name': 'cos',\n            'description': localize('less.builtin.cos', 'cosine function'),\n            'example': 'cos(number);'\n        },\n        {\n            'name': 'floor',\n            'description': localize('less.builtin.floor', 'rounds down to an integer'),\n            'example': 'floor(@number);'\n        },\n        {\n            'name': 'percentage',\n            'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n            'example': 'percentage(@number);',\n            'type': 'percentage'\n        },\n        {\n            'name': 'round',\n            'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n            'example': 'round(number, [places: 0]);'\n        },\n        {\n            'name': 'sqrt',\n            'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n            'example': 'sqrt(number);'\n        },\n        {\n            'name': 'sin',\n            'description': localize('less.builtin.sin', 'sine function'),\n            'example': 'sin(number);'\n        },\n        {\n            'name': 'tan',\n            'description': localize('less.builtin.tan', 'tangent function'),\n            'example': 'tan(number);'\n        },\n        {\n            'name': 'atan',\n            'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n            'example': 'atan(number);'\n        },\n        {\n            'name': 'pi',\n            'description': localize('less.builtin.pi', 'returns pi'),\n            'example': 'pi();'\n        },\n        {\n            'name': 'pow',\n            'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n            'example': 'pow(@base, @exponent);'\n        },\n        {\n            'name': 'mod',\n            'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n            'example': 'mod(number, number);'\n        },\n        {\n            'name': 'min',\n            'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n            'example': 'min(@x, @y);'\n        },\n        {\n            'name': 'max',\n            'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n            'example': 'max(@x, @y);'\n        }\n    ];\n    LESSCompletion.colorProposals = [\n        {\n            'name': 'argb',\n            'example': 'argb(@color);',\n            'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n        },\n        {\n            'name': 'hsl',\n            'example': 'hsl(@hue, @saturation, @lightness);',\n            'description': localize('less.builtin.hsl', 'creates a color')\n        },\n        {\n            'name': 'hsla',\n            'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n            'description': localize('less.builtin.hsla', 'creates a color')\n        },\n        {\n            'name': 'hsv',\n            'example': 'hsv(@hue, @saturation, @value);',\n            'description': localize('less.builtin.hsv', 'creates a color')\n        },\n        {\n            'name': 'hsva',\n            'example': 'hsva(@hue, @saturation, @value, @alpha);',\n            'description': localize('less.builtin.hsva', 'creates a color')\n        },\n        {\n            'name': 'hue',\n            'example': 'hue(@color);',\n            'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'saturation',\n            'example': 'saturation(@color);',\n            'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'lightness',\n            'example': 'lightness(@color);',\n            'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'hsvhue',\n            'example': 'hsvhue(@color);',\n            'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvsaturation',\n            'example': 'hsvsaturation(@color);',\n            'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvvalue',\n            'example': 'hsvvalue(@color);',\n            'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'red',\n            'example': 'red(@color);',\n            'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n        },\n        {\n            'name': 'green',\n            'example': 'green(@color);',\n            'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n        },\n        {\n            'name': 'blue',\n            'example': 'blue(@color);',\n            'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n        },\n        {\n            'name': 'alpha',\n            'example': 'alpha(@color);',\n            'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n        },\n        {\n            'name': 'luma',\n            'example': 'luma(@color);',\n            'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n        },\n        {\n            'name': 'saturate',\n            'example': 'saturate(@color, 10%);',\n            'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n        },\n        {\n            'name': 'desaturate',\n            'example': 'desaturate(@color, 10%);',\n            'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n        },\n        {\n            'name': 'lighten',\n            'example': 'lighten(@color, 10%);',\n            'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n        },\n        {\n            'name': 'darken',\n            'example': 'darken(@color, 10%);',\n            'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n        },\n        {\n            'name': 'fadein',\n            'example': 'fadein(@color, 10%);',\n            'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n        },\n        {\n            'name': 'fadeout',\n            'example': 'fadeout(@color, 10%);',\n            'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n        },\n        {\n            'name': 'fade',\n            'example': 'fade(@color, 50%);',\n            'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n        },\n        {\n            'name': 'spin',\n            'example': 'spin(@color, 10);',\n            'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n        },\n        {\n            'name': 'mix',\n            'example': 'mix(@color1, @color2, [@weight: 50%]);',\n            'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n        },\n        {\n            'name': 'greyscale',\n            'example': 'greyscale(@color);',\n            'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color'),\n        },\n        {\n            'name': 'contrast',\n            'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n            'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n        },\n        {\n            'name': 'multiply',\n            'example': 'multiply(@color1, @color2);'\n        },\n        {\n            'name': 'screen',\n            'example': 'screen(@color1, @color2);'\n        },\n        {\n            'name': 'overlay',\n            'example': 'overlay(@color1, @color2);'\n        },\n        {\n            'name': 'softlight',\n            'example': 'softlight(@color1, @color2);'\n        },\n        {\n            'name': 'hardlight',\n            'example': 'hardlight(@color1, @color2);'\n        },\n        {\n            'name': 'difference',\n            'example': 'difference(@color1, @color2);'\n        },\n        {\n            'name': 'exclusion',\n            'example': 'exclusion(@color1, @color2);'\n        },\n        {\n            'name': 'average',\n            'example': 'average(@color1, @color2);'\n        },\n        {\n            'name': 'negation',\n            'example': 'negation(@color1, @color2);'\n        }\n    ];\n    return LESSCompletion;\n}(_cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSCompletion\"]));\n\n//# sourceMappingURL=lessCompletion.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js ***!
  \**********************************************************************************************************/
/*! exports provided: LintVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LintVisitor\", function() { return LintVisitor; });\n/* harmony import */ var _languageFacts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./languageFacts.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/languageFacts.js\");\n/* harmony import */ var _lintRules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lintRules.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__[\"loadMessageBundle\"]();\nvar Element = /** @class */ (function () {\n    function Element(text, data) {\n        this.name = text;\n        this.node = data;\n    }\n    return Element;\n}());\nvar NodesByRootMap = /** @class */ (function () {\n    function NodesByRootMap() {\n        this.data = {};\n    }\n    NodesByRootMap.prototype.add = function (root, name, node) {\n        var entry = this.data[root];\n        if (!entry) {\n            entry = { nodes: [], names: [] };\n            this.data[root] = entry;\n        }\n        entry.names.push(name);\n        if (node) {\n            entry.nodes.push(node);\n        }\n    };\n    return NodesByRootMap;\n}());\nvar LintVisitor = /** @class */ (function () {\n    function LintVisitor(document, settings) {\n        this.warnings = [];\n        this.settings = settings;\n        this.documentText = document.getText();\n        this.keyframes = new NodesByRootMap();\n    }\n    LintVisitor.entries = function (node, document, settings, entryFilter) {\n        var visitor = new LintVisitor(document, settings);\n        node.acceptVisitor(visitor);\n        visitor.completeValidations();\n        return visitor.getEntries(entryFilter);\n    };\n    LintVisitor.prototype.fetch = function (input, s) {\n        var elements = [];\n        for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\n            var curr = input_1[_i];\n            if (curr.name === s) {\n                elements.push(curr);\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.fetchWithValue = function (input, s, v) {\n        var elements = [];\n        for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\n            var inputElement = input_2[_i];\n            if (inputElement.name === s) {\n                var expression = inputElement.node.getValue();\n                if (expression && this.findValueInExpression(expression, v)) {\n                    elements.push(inputElement);\n                }\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.findValueInExpression = function (expression, v) {\n        var found = false;\n        expression.accept(function (node) {\n            if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Identifier && node.getText() === v) {\n                found = true;\n            }\n            return !found;\n        });\n        return found;\n    };\n    LintVisitor.prototype.getEntries = function (filter) {\n        if (filter === void 0) { filter = (_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Level\"].Warning | _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Level\"].Error); }\n        return this.warnings.filter(function (entry) {\n            return (entry.getLevel() & filter) !== 0;\n        });\n    };\n    LintVisitor.prototype.addEntry = function (node, rule, details) {\n        var entry = new _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Marker\"](node, rule, this.settings.get(rule), details);\n        this.warnings.push(entry);\n    };\n    LintVisitor.prototype.getMissingNames = function (expected, actual) {\n        expected = expected.slice(0); // clone\n        for (var i = 0; i < actual.length; i++) {\n            var k = expected.indexOf(actual[i]);\n            if (k !== -1) {\n                expected[k] = null;\n            }\n        }\n        var result = null;\n        for (var i = 0; i < expected.length; i++) {\n            var curr = expected[i];\n            if (curr) {\n                if (result === null) {\n                    result = localize('namelist.single', \"'{0}'\", curr);\n                }\n                else {\n                    result = localize('namelist.concatenated', \"{0}, '{1}'\", result, curr);\n                }\n            }\n        }\n        return result;\n    };\n    LintVisitor.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Keyframe:\n                return this.visitKeyframe(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FontFace:\n                return this.visitFontFace(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Ruleset:\n                return this.visitRuleSet(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].SimpleSelector:\n                return this.visitSimpleSelector(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Function:\n                return this.visitFunction(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].NumericValue:\n                return this.visitNumericValue(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Import:\n                return this.visitImport(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].HexColorValue:\n                return this.visitHexColorValue(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Prio:\n                return this.visitPrio(node);\n        }\n        return true;\n    };\n    LintVisitor.prototype.completeValidations = function () {\n        this.validateKeyframes();\n    };\n    LintVisitor.prototype.visitKeyframe = function (node) {\n        var keyword = node.getKeyword();\n        var text = keyword.getText();\n        this.keyframes.add(node.getName(), text, (text !== '@keyframes') ? keyword : null);\n        return true;\n    };\n    LintVisitor.prototype.validateKeyframes = function () {\n        // @keyframe and it's vendor specific alternatives\n        // @keyframe should be included\n        var expected = ['@-webkit-keyframes', '@-moz-keyframes', '@-o-keyframes'];\n        for (var name in this.keyframes.data) {\n            var actual = this.keyframes.data[name].names;\n            var needsStandard = (actual.indexOf('@keyframes') === -1);\n            if (!needsStandard && actual.length === 1) {\n                continue; // only the non-vendor specific keyword is used, that's fine, no warning\n            }\n            var missingVendorSpecific = this.getMissingNames(expected, actual);\n            if (missingVendorSpecific || needsStandard) {\n                for (var _i = 0, _a = this.keyframes.data[name].nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    if (needsStandard) {\n                        var message = localize('keyframes.standardrule.missing', \"Always define standard rule '@keyframes' when defining keyframes.\");\n                        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                    }\n                    if (missingVendorSpecific) {\n                        var message = localize('keyframes.vendorspecific.missing', \"Always include all vendor specific rules: Missing: {0}\", missingVendorSpecific);\n                        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AllVendorPrefixes, message);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitSimpleSelector = function (node) {\n        var firstChar = this.documentText.charAt(node.offset);\n        /////////////////////////////////////////////////////////////\n        //\tLint - The universal selector (*) is known to be slow.\n        /////////////////////////////////////////////////////////////\n        if (node.length === 1 && firstChar === '*') {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UniversalSelector);\n        }\n        /////////////////////////////////////////////////////////////\n        //\tLint - Avoid id selectors\n        /////////////////////////////////////////////////////////////\n        if (firstChar === '#') {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidIdSelector);\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitImport = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Import statements shouldn't be used, because they aren't offering parallel downloads.\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ImportStatemement);\n        return true;\n    };\n    LintVisitor.prototype.visitRuleSet = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Don't use empty rulesets.\n        /////////////////////////////////////////////////////////////\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return false;\n        }\n        if (!declarations.hasChildren()) {\n            this.addEntry(node.getSelectors(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].EmptyRuleSet);\n        }\n        var self = this;\n        var propertyTable = [];\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (element instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Declaration\"]) {\n                var decl = element;\n                propertyTable.push(new Element(decl.getFullPropertyName().toLowerCase(), decl));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        // the rule warns when it finds:\n        // width being used with border, border-left, border-right, padding, padding-left, or padding-right\n        // height being used with border, border-top, border-bottom, padding, padding-top, or padding-bottom\n        // No error when box-sizing property is specified, as it assumes the user knows what he's doing.\n        // see https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\n        /////////////////////////////////////////////////////////////\n        if (this.fetch(propertyTable, 'box-sizing').length === 0) {\n            var widthEntries = this.fetch(propertyTable, 'width');\n            if (widthEntries.length > 0) {\n                var problemDetected = false;\n                for (var _b = 0, _c = ['border', 'border-left', 'border-right', 'padding', 'padding-left', 'padding-right']; _b < _c.length; _b++) {\n                    var p = _c[_b];\n                    var elements_1 = this.fetch(propertyTable, p);\n                    for (var _d = 0, elements_2 = elements_1; _d < elements_2.length; _d++) {\n                        var element = elements_2[_d];\n                        var value = element.node.getValue();\n                        if (value && !value.matches('none')) {\n                            this.addEntry(element.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                            problemDetected = true;\n                        }\n                    }\n                }\n                if (problemDetected) {\n                    for (var _e = 0, widthEntries_1 = widthEntries; _e < widthEntries_1.length; _e++) {\n                        var widthEntry = widthEntries_1[_e];\n                        this.addEntry(widthEntry.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                    }\n                }\n            }\n            var heightEntries = this.fetch(propertyTable, 'height');\n            if (heightEntries.length > 0) {\n                var problemDetected = false;\n                for (var _f = 0, _g = ['border', 'border-top', 'border-bottom', 'padding', 'padding-top', 'padding-bottom']; _f < _g.length; _f++) {\n                    var p = _g[_f];\n                    var elements_3 = this.fetch(propertyTable, p);\n                    for (var _h = 0, elements_4 = elements_3; _h < elements_4.length; _h++) {\n                        var element = elements_4[_h];\n                        var value = element.node.getValue();\n                        if (value && !value.matches('none')) {\n                            this.addEntry(element.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                            problemDetected = true;\n                        }\n                    }\n                }\n                if (problemDetected) {\n                    for (var _j = 0, heightEntries_1 = heightEntries; _j < heightEntries_1.length; _j++) {\n                        var heightEntry = heightEntries_1[_j];\n                        this.addEntry(heightEntry.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                    }\n                }\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tProperties ignored due to display\n        /////////////////////////////////////////////////////////////\n        // With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect\n        var displayElems = this.fetchWithValue(propertyTable, 'display', 'inline');\n        if (displayElems.length > 0) {\n            for (var _k = 0, _l = ['width', 'height', 'margin-top', 'margin-bottom', 'float']; _k < _l.length; _k++) {\n                var prop = _l[_k];\n                var elem = self.fetch(propertyTable, prop);\n                for (var index = 0; index < elem.length; index++) {\n                    var node_1 = elem[index].node;\n                    var value = node_1.getValue();\n                    if (prop === 'float' && (!value || value.matches('none'))) {\n                        continue;\n                    }\n                    self.addEntry(node_1, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInline', \"Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect.\"));\n                }\n            }\n        }\n        // With 'display: inline-block', 'float' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'inline-block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'float');\n            for (var index = 0; index < elem.length; index++) {\n                var node_2 = elem[index].node;\n                var value = node_2.getValue();\n                if (value && !value.matches('none')) {\n                    this.addEntry(node_2, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInlineBlock', \"inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'\"));\n                }\n            }\n        }\n        // With 'display: block', 'vertical-align' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'vertical-align');\n            for (var index = 0; index < elem.length; index++) {\n                this.addEntry(elem[index].node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayBlock', \"Property is ignored due to the display. With 'display: block', vertical-align should not be used.\"));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tAvoid 'float'\n        /////////////////////////////////////////////////////////////\n        var elements = this.fetch(propertyTable, 'float');\n        for (var index = 0; index < elements.length; index++) {\n            this.addEntry(elements[index].node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidFloat);\n        }\n        /////////////////////////////////////////////////////////////\n        //\tDon't use duplicate declarations.\n        /////////////////////////////////////////////////////////////\n        for (var i = 0; i < propertyTable.length; i++) {\n            var element = propertyTable[i];\n            if (element.name !== 'background') {\n                var value = element.node.getValue();\n                if (value && this.documentText.charAt(value.offset) !== '-') {\n                    var elements_5 = this.fetch(propertyTable, element.name);\n                    if (elements_5.length > 1) {\n                        for (var k = 0; k < elements_5.length; k++) {\n                            var value_1 = elements_5[k].node.getValue();\n                            if (value_1 && this.documentText.charAt(value_1.offset) !== '-' && elements_5[k] !== element) {\n                                this.addEntry(element.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].DuplicateDeclarations);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tUnknown propery & When using a vendor-prefixed gradient, make sure to use them all.\n        /////////////////////////////////////////////////////////////\n        var propertiesBySuffix = new NodesByRootMap();\n        var containsUnknowns = false;\n        for (var _m = 0, _o = declarations.getChildren(); _m < _o.length; _m++) {\n            var node_3 = _o[_m];\n            if (this.isCSSDeclaration(node_3)) {\n                var decl = node_3;\n                var name = decl.getFullPropertyName();\n                var firstChar = name.charAt(0);\n                if (firstChar === '-') {\n                    if (name.charAt(1) !== '-') {\n                        if (!_languageFacts_js__WEBPACK_IMPORTED_MODULE_0__[\"isKnownProperty\"](name)) {\n                            this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownVendorSpecificProperty);\n                        }\n                        var nonPrefixedName = decl.getNonPrefixedPropertyName();\n                        propertiesBySuffix.add(nonPrefixedName, name, decl.getProperty());\n                    }\n                }\n                else {\n                    if (firstChar === '*' || firstChar === '_') {\n                        this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IEStarHack);\n                        name = name.substr(1);\n                    }\n                    if (!_languageFacts_js__WEBPACK_IMPORTED_MODULE_0__[\"isKnownProperty\"](name)) {\n                        this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownProperty, localize('property.unknownproperty.detailed', \"Unknown property: '{0}'\", name));\n                    }\n                    propertiesBySuffix.add(name, name, null); // don't pass the node as we don't show errors on the standard\n                }\n            }\n            else {\n                containsUnknowns = true;\n            }\n        }\n        if (!containsUnknowns) {\n            for (var suffix in propertiesBySuffix.data) {\n                var entry = propertiesBySuffix.data[suffix];\n                var actual = entry.names;\n                var needsStandard = _languageFacts_js__WEBPACK_IMPORTED_MODULE_0__[\"isKnownProperty\"](suffix) && (actual.indexOf(suffix) === -1);\n                if (!needsStandard && actual.length === 1) {\n                    continue; // only the non-vendor specific rule is used, that's fine, no warning\n                }\n                var expected = [];\n                for (var i = 0, len = LintVisitor.prefixes.length; i < len; i++) {\n                    var prefix = LintVisitor.prefixes[i];\n                    if (_languageFacts_js__WEBPACK_IMPORTED_MODULE_0__[\"isKnownProperty\"](prefix + suffix)) {\n                        expected.push(prefix + suffix);\n                    }\n                }\n                var missingVendorSpecific = this.getMissingNames(expected, actual);\n                if (missingVendorSpecific || needsStandard) {\n                    for (var _p = 0, _q = entry.nodes; _p < _q.length; _p++) {\n                        var node_4 = _q[_p];\n                        if (needsStandard) {\n                            var message = localize('property.standard.missing', \"Also define the standard property '{0}' for compatibility\", suffix);\n                            this.addEntry(node_4, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                        }\n                        if (missingVendorSpecific) {\n                            var message = localize('property.vendorspecific.missing', \"Always include all vendor specific properties: Missing: {0}\", missingVendorSpecific);\n                            this.addEntry(node_4, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AllVendorPrefixes, message);\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitPrio = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tDon't use !important\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidImportant);\n        return true;\n    };\n    LintVisitor.prototype.visitNumericValue = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\t0 has no following unit\n        /////////////////////////////////////////////////////////////\n        var value = node.getValue();\n        if (!value.unit || _languageFacts_js__WEBPACK_IMPORTED_MODULE_0__[\"units\"].length.indexOf(value.unit.toLowerCase()) === -1) {\n            return true;\n        }\n        if (parseFloat(value.value) === 0.0 && !!value.unit) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ZeroWithUnit);\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitFontFace = function (node) {\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return;\n        }\n        var definesSrc = false, definesFontFamily = false;\n        var containsUnknowns = false;\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var node_5 = _a[_i];\n            if (this.isCSSDeclaration(node_5)) {\n                var name = (node_5.getProperty().getName().toLowerCase());\n                if (name === 'src') {\n                    definesSrc = true;\n                }\n                if (name === 'font-family') {\n                    definesFontFamily = true;\n                }\n            }\n            else {\n                containsUnknowns = true;\n            }\n        }\n        if (!containsUnknowns && (!definesSrc || !definesFontFamily)) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].RequiredPropertiesForFontFace);\n        }\n        return true;\n    };\n    LintVisitor.prototype.isCSSDeclaration = function (node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Declaration\"]) {\n            if (!node.getValue()) {\n                return false;\n            }\n            var property = node.getProperty();\n            if (!property || property.getIdentifier().containsInterpolation()) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitHexColorValue = function (node) {\n        // Rule: #eeff0011 or #eeff00 or #ef01 or #ef0 \n        var length = node.length;\n        if (length !== 9 && length !== 7 && length !== 5 && length !== 4) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].HexColorLength);\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitFunction = function (node) {\n        var fnName = node.getName().toLowerCase();\n        var expectedAttrCount = -1;\n        var actualAttrCount = 0;\n        switch (fnName) {\n            case 'rgb(':\n            case 'hsl(':\n                expectedAttrCount = 3;\n                break;\n            case 'rgba(':\n            case 'hsla(':\n                expectedAttrCount = 4;\n                break;\n        }\n        if (expectedAttrCount !== -1) {\n            node.getArguments().accept(function (n) {\n                if (n instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"BinaryExpression\"]) {\n                    actualAttrCount += 1;\n                    return false;\n                }\n                return true;\n            });\n            if (actualAttrCount !== expectedAttrCount) {\n                this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ArgsInColorFunction);\n            }\n        }\n        return true;\n    };\n    LintVisitor.prefixes = [\n        '-ms-', '-moz-', '-o-', '-webkit-',\n    ];\n    return LintVisitor;\n}());\n\n//# sourceMappingURL=lint.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js ***!
  \***************************************************************************************************************/
/*! exports provided: Rule, Rules, LintConfigurationSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rule\", function() { return Rule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rules\", function() { return Rules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LintConfigurationSettings\", function() { return LintConfigurationSettings; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar Warning = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning;\nvar Error = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Error;\nvar Ignore = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore;\nvar Rule = /** @class */ (function () {\n    function Rule(id, message, defaultValue) {\n        this.id = id;\n        this.message = message;\n        this.defaultValue = defaultValue;\n        // nothing to do\n    }\n    return Rule;\n}());\n\nvar Rules = {\n    AllVendorPrefixes: new Rule('compatibleVendorPrefixes', localize('rule.vendorprefixes.all', \"When using a vendor-specific prefix make sure to also include all other vendor-specific properties\"), Ignore),\n    IncludeStandardPropertyWhenUsingVendorPrefix: new Rule('vendorPrefix', localize('rule.standardvendorprefix.all', \"When using a vendor-specific prefix also include the standard property\"), Warning),\n    DuplicateDeclarations: new Rule('duplicateProperties', localize('rule.duplicateDeclarations', \"Do not use duplicate style definitions\"), Ignore),\n    EmptyRuleSet: new Rule('emptyRules', localize('rule.emptyRuleSets', \"Do not use empty rulesets\"), Warning),\n    ImportStatemement: new Rule('importStatement', localize('rule.importDirective', \"Import statements do not load in parallel\"), Ignore),\n    BewareOfBoxModelSize: new Rule('boxModel', localize('rule.bewareOfBoxModelSize', \"Do not use width or height when using padding or border\"), Ignore),\n    UniversalSelector: new Rule('universalSelector', localize('rule.universalSelector', \"The universal selector (*) is known to be slow\"), Ignore),\n    ZeroWithUnit: new Rule('zeroUnits', localize('rule.zeroWidthUnit', \"No unit for zero needed\"), Ignore),\n    RequiredPropertiesForFontFace: new Rule('fontFaceProperties', localize('rule.fontFaceProperties', \"@font-face rule must define 'src' and 'font-family' properties\"), Warning),\n    HexColorLength: new Rule('hexColorLength', localize('rule.hexColor', \"Hex colors must consist of three, four, six or eight hex numbers\"), Error),\n    ArgsInColorFunction: new Rule('argumentsInColorFunction', localize('rule.colorFunction', \"Invalid number of parameters\"), Error),\n    UnknownProperty: new Rule('unknownProperties', localize('rule.unknownProperty', \"Unknown property.\"), Warning),\n    IEStarHack: new Rule('ieHack', localize('rule.ieHack', \"IE hacks are only necessary when supporting IE7 and older\"), Ignore),\n    UnknownVendorSpecificProperty: new Rule('unknownVendorSpecificProperties', localize('rule.unknownVendorSpecificProperty', \"Unknown vendor specific property.\"), Ignore),\n    PropertyIgnoredDueToDisplay: new Rule('propertyIgnoredDueToDisplay', localize('rule.propertyIgnoredDueToDisplay', \"Property is ignored due to the display.\"), Warning),\n    AvoidImportant: new Rule('important', localize('rule.avoidImportant', \"Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.\"), Ignore),\n    AvoidFloat: new Rule('float', localize('rule.avoidFloat', \"Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.\"), Ignore),\n    AvoidIdSelector: new Rule('idSelector', localize('rule.avoidIdSelector', \"Selectors should not contain IDs because these rules are too tightly coupled with the HTML.\"), Ignore),\n};\nvar LintConfigurationSettings = /** @class */ (function () {\n    function LintConfigurationSettings(conf) {\n        if (conf === void 0) { conf = {}; }\n        this.conf = conf;\n    }\n    LintConfigurationSettings.prototype.get = function (rule) {\n        if (this.conf.hasOwnProperty(rule.id)) {\n            var level = toLevel(this.conf[rule.id]);\n            if (level) {\n                return level;\n            }\n        }\n        return rule.defaultValue;\n    };\n    return LintConfigurationSettings;\n}());\n\nfunction toLevel(level) {\n    switch (level) {\n        case 'ignore': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore;\n        case 'warning': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning;\n        case 'error': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Error;\n    }\n    return null;\n}\n//# sourceMappingURL=lintRules.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js ***!
  \********************************************************************************************************************/
/*! exports provided: SCSSCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSCompletion\", function() { return SCSSCompletion; });\n/* harmony import */ var _cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cssCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__[\"loadMessageBundle\"]();\nvar SCSSCompletion = /** @class */ (function (_super) {\n    __extends(SCSSCompletion, _super);\n    function SCSSCompletion() {\n        return _super.call(this, '$') || this;\n    }\n    SCSSCompletion.prototype.createReplaceFunction = function () {\n        var tabStopCounter = 1;\n        return function (match, p1) {\n            return '\\\\' + p1 + ': ${' + tabStopCounter++ + ':' + (SCSSCompletion.variableDefaults[p1] || '') + '}';\n        };\n    };\n    SCSSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var insertText = p.func.replace(/\\[?(\\$\\w+)\\]?/g, this.createReplaceFunction());\n            var label = p.func.substr(0, p.func.indexOf('('));\n            var item = {\n                label: label,\n                detail: p.func,\n                documentation: p.desc,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionsForSelector = function (ruleSet, isNested, result) {\n        this.createFunctionProposals(SCSSCompletion.selectorFuncs, void 0, true, result);\n        return _super.prototype.getCompletionsForSelector.call(this, ruleSet, isNested, result);\n    };\n    SCSSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = SCSSCompletion.builtInFuncs;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    SCSSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(SCSSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    SCSSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    SCSSCompletion.prototype.getCompletionsForExtendsReference = function (extendsRef, existingNode, result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Rule);\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var suggest = {\n                label: symbol.name,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), symbol.name),\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Function,\n            };\n            result.items.push(suggest);\n        }\n        return result;\n    };\n    SCSSCompletion.variableDefaults = {\n        '$red': '1',\n        '$green': '2',\n        '$blue': '3',\n        '$alpha': '1.0',\n        '$color': '#000000',\n        '$weight': '0.5',\n        '$hue': '0',\n        '$saturation': '0%',\n        '$lightness': '0%',\n        '$degrees': '0',\n        '$amount': '0',\n        '$string': '\"\"',\n        '$substring': '\"s\"',\n        '$number': '0',\n        '$limit': '1'\n    };\n    SCSSCompletion.colorProposals = [\n        { func: 'red($color)', desc: localize('scss.builtin.red', 'Gets the red component of a color.') },\n        { func: 'green($color)', desc: localize('scss.builtin.green', 'Gets the green component of a color.') },\n        { func: 'blue($color)', desc: localize('scss.builtin.blue', 'Gets the blue component of a color.') },\n        { func: 'mix($color, $color, [$weight])', desc: localize('scss.builtin.mix', 'Mixes two colors together.') },\n        { func: 'hue($color)', desc: localize('scss.builtin.hue', 'Gets the hue component of a color.') },\n        { func: 'saturation($color)', desc: localize('scss.builtin.saturation', 'Gets the saturation component of a color.') },\n        { func: 'lightness($color)', desc: localize('scss.builtin.lightness', 'Gets the lightness component of a color.') },\n        { func: 'adjust-hue($color, $degrees)', desc: localize('scss.builtin.adjust-hue', 'Changes the hue of a color.') },\n        { func: 'lighten($color, $amount)', desc: localize('scss.builtin.lighten', 'Makes a color lighter.') },\n        { func: 'darken($color, $amount)', desc: localize('scss.builtin.darken', 'Makes a color darker.') },\n        { func: 'saturate($color, $amount)', desc: localize('scss.builtin.saturate', 'Makes a color more saturated.') },\n        { func: 'desaturate($color, $amount)', desc: localize('scss.builtin.desaturate', 'Makes a color less saturated.') },\n        { func: 'grayscale($color)', desc: localize('scss.builtin.grayscale', 'Converts a color to grayscale.') },\n        { func: 'complement($color)', desc: localize('scss.builtin.complement', 'Returns the complement of a color.') },\n        { func: 'invert($color)', desc: localize('scss.builtin.invert', 'Returns the inverse of a color.') },\n        { func: 'alpha($color)', desc: localize('scss.builtin.alpha', 'Gets the opacity component of a color.') },\n        { func: 'opacity($color)', desc: 'Gets the alpha component (opacity) of a color.' },\n        { func: 'rgba($color, $alpha)', desc: localize('scss.builtin.rgba', 'Changes the alpha component for a color.') },\n        { func: 'opacify($color, $amount)', desc: localize('scss.builtin.opacify', 'Makes a color more opaque.') },\n        { func: 'fade-in($color, $amount)', desc: localize('scss.builtin.fade-in', 'Makes a color more opaque.') },\n        { func: 'transparentize($color, $amount)', desc: localize('scss.builtin.transparentize', 'Makes a color more transparent.') },\n        { func: 'fade-out($color, $amount)', desc: localize('scss.builtin.fade-out', 'Makes a color more transparent.') },\n        { func: 'adjust-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.adjust-color', 'Increases or decreases one or more components of a color.') },\n        { func: 'scale-color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.scale-color', 'Fluidly scales one or more properties of a color.') },\n        { func: 'change-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.change-color', 'Changes one or more properties of a color.') },\n        { func: 'ie-hex-str($color)', desc: localize('scss.builtin.ie-hex-str', 'Converts a color into the format understood by IE filters.') }\n    ];\n    SCSSCompletion.selectorFuncs = [\n        { func: 'selector-nest($selectors…)', desc: localize('scss.builtin.selector-nest', 'Nests selector beneath one another like they would be nested in the stylesheet.') },\n        { func: 'selector-append($selectors…)', desc: localize('scss.builtin.selector-append', 'Appends selectors to one another without spaces in between.') },\n        { func: 'selector-extend($selector, $extendee, $extender)', desc: localize('scss.builtin.selector-extend', 'Extends $extendee with $extender within $selector.') },\n        { func: 'selector-replace($selector, $original, $replacement)', desc: localize('scss.builtin.selector-replace', 'Replaces $original with $replacement within $selector.') },\n        { func: 'selector-unify($selector1, $selector2)', desc: localize('scss.builtin.selector-unify', 'Unifies two selectors to produce a selector that matches elements matched by both.') },\n        { func: 'is-superselector($super, $sub)', desc: localize('scss.builtin.is-superselector', 'Returns whether $super matches all the elements $sub does, and possibly more.') },\n        { func: 'simple-selectors($selector)', desc: localize('scss.builtin.simple-selectors', 'Returns the simple selectors that comprise a compound selector.') },\n        { func: 'selector-parse($selector)', desc: localize('scss.builtin.selector-parse', 'Parses a selector into the format returned by &.') }\n    ];\n    SCSSCompletion.builtInFuncs = [\n        { func: 'unquote($string)', desc: localize('scss.builtin.unquote', 'Removes quotes from a string.') },\n        { func: 'quote($string)', desc: localize('scss.builtin.quote', 'Adds quotes to a string.') },\n        { func: 'str-length($string)', desc: localize('scss.builtin.str-length', 'Returns the number of characters in a string.') },\n        { func: 'str-insert($string, $insert, $index)', desc: localize('scss.builtin.str-insert', 'Inserts $insert into $string at $index.') },\n        { func: 'str-index($string, $substring)', desc: localize('scss.builtin.str-index', 'Returns the index of the first occurance of $substring in $string.') },\n        { func: 'str-slice($string, $start-at, [$end-at])', desc: localize('scss.builtin.str-slice', 'Extracts a substring from $string.') },\n        { func: 'to-upper-case($string)', desc: localize('scss.builtin.to-upper-case', 'Converts a string to upper case.') },\n        { func: 'to-lower-case($string)', desc: localize('scss.builtin.to-lower-case', 'Converts a string to lower case.') },\n        { func: 'percentage($number)', desc: localize('scss.builtin.percentage', 'Converts a unitless number to a percentage.'), type: 'percentage' },\n        { func: 'round($number)', desc: localize('scss.builtin.round', 'Rounds a number to the nearest whole number.') },\n        { func: 'ceil($number)', desc: localize('scss.builtin.ceil', 'Rounds a number up to the next whole number.') },\n        { func: 'floor($number)', desc: localize('scss.builtin.floor', 'Rounds a number down to the previous whole number.') },\n        { func: 'abs($number)', desc: localize('scss.builtin.abs', 'Returns the absolute value of a number.') },\n        { func: 'min($numbers)', desc: localize('scss.builtin.min', 'Finds the minimum of several numbers.') },\n        { func: 'max($numbers)', desc: localize('scss.builtin.max', 'Finds the maximum of several numbers.') },\n        { func: 'random([$limit])', desc: localize('scss.builtin.random', 'Returns a random number.') },\n        { func: 'length($list)', desc: localize('scss.builtin.length', 'Returns the length of a list.') },\n        { func: 'nth($list, $n)', desc: localize('scss.builtin.nth', 'Returns a specific item in a list.') },\n        { func: 'set-nth($list, $n, $value)', desc: localize('scss.builtin.set-nth', 'Replaces the nth item in a list.') },\n        { func: 'join($list1, $list2, [$separator])', desc: localize('scss.builtin.join', 'Joins together two lists into one.') },\n        { func: 'append($list1, $val, [$separator])', desc: localize('scss.builtin.append', 'Appends a single value onto the end of a list.') },\n        { func: 'zip($lists)', desc: localize('scss.builtin.zip', 'Combines several lists into a single multidimensional list.') },\n        { func: 'index($list, $value)', desc: localize('scss.builtin.index', 'Returns the position of a value within a list.') },\n        { func: 'list-separator(#list)', desc: localize('scss.builtin.list-separator', 'Returns the separator of a list.') },\n        { func: 'map-get($map, $key)', desc: localize('scss.builtin.map-get', 'Returns the value in a map associated with a given key.') },\n        { func: 'map-merge($map1, $map2)', desc: localize('scss.builtin.map-merge', 'Merges two maps together into a new map.') },\n        { func: 'map-remove($map, $keys)', desc: localize('scss.builtin.map-remove', 'Returns a new map with keys removed.') },\n        { func: 'map-keys($map)', desc: localize('scss.builtin.map-keys', 'Returns a list of all keys in a map.') },\n        { func: 'map-values($map)', desc: localize('scss.builtin.map-values', 'Returns a list of all values in a map.') },\n        { func: 'map-has-key($map, $key)', desc: localize('scss.builtin.map-has-key', 'Returns whether a map has a value associated with a given key.') },\n        { func: 'keywords($args)', desc: localize('scss.builtin.keywords', 'Returns the keywords passed to a function that takes variable arguments.') },\n        { func: 'feature-exists($feature)', desc: localize('scss.builtin.feature-exists', 'Returns whether a feature exists in the current Sass runtime.') },\n        { func: 'variable-exists($name)', desc: localize('scss.builtin.variable-exists', 'Returns whether a variable with the given name exists in the current scope.') },\n        { func: 'global-variable-exists($name)', desc: localize('scss.builtin.global-variable-exists', 'Returns whether a variable with the given name exists in the global scope.') },\n        { func: 'function-exists($name)', desc: localize('scss.builtin.function-exists', 'Returns whether a function with the given name exists.') },\n        { func: 'mixin-exists($name)', desc: localize('scss.builtin.mixin-exists', 'Returns whether a mixin with the given name exists.') },\n        { func: 'inspect($value)', desc: localize('scss.builtin.inspect', 'Returns the string representation of a value as it would be represented in Sass.') },\n        { func: 'type-of($value)', desc: localize('scss.builtin.type-of', 'Returns the type of a value.') },\n        { func: 'unit($number)', desc: localize('scss.builtin.unit', 'Returns the unit(s) associated with a number.') },\n        { func: 'unitless($number)', desc: localize('scss.builtin.unitless', 'Returns whether a number has units.') },\n        { func: 'comparable($number1, $number2)', desc: localize('scss.builtin.comparable', 'Returns whether two numbers can be added, subtracted, or compared.') },\n        { func: 'call($name, $args…)', desc: localize('scss.builtin.call', 'Dynamically calls a Sass function.') }\n    ];\n    return SCSSCompletion;\n}(_cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSCompletion\"]));\n\n//# sourceMappingURL=scssCompletion.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js ***!
  \**********************************************************************************************************************/
/*! exports provided: Element, RootElement, LabelElement, toElement, selectorToMarkedString, simpleSelectorToMarkedString, selectorToElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RootElement\", function() { return RootElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LabelElement\", function() { return LabelElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toElement\", function() { return toElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectorToMarkedString\", function() { return selectorToMarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simpleSelectorToMarkedString\", function() { return simpleSelectorToMarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectorToElement\", function() { return selectorToElement; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/cssNodes.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/cssScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar Element = /** @class */ (function () {\n    function Element() {\n    }\n    Element.prototype.findAttribute = function (name) {\n        if (this.attributes) {\n            for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n                var attribute = _a[_i];\n                if (attribute.name === name) {\n                    return attribute.value;\n                }\n            }\n        }\n        return null;\n    };\n    Element.prototype.addChild = function (child) {\n        if (child instanceof Element) {\n            child.parent = this;\n        }\n        if (!this.children) {\n            this.children = [];\n        }\n        this.children.push(child);\n    };\n    Element.prototype.append = function (text) {\n        if (this.attributes) {\n            var last = this.attributes[this.attributes.length - 1];\n            last.value = last.value + text;\n        }\n    };\n    Element.prototype.prepend = function (text) {\n        if (this.attributes) {\n            var first = this.attributes[0];\n            first.value = text + first.value;\n        }\n    };\n    Element.prototype.findRoot = function () {\n        var curr = this;\n        while (curr.parent && !(curr.parent instanceof RootElement)) {\n            curr = curr.parent;\n        }\n        return curr;\n    };\n    Element.prototype.removeChild = function (child) {\n        if (this.children) {\n            var index = this.children.indexOf(child);\n            if (index !== -1) {\n                this.children.splice(index, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    Element.prototype.addAttr = function (name, value) {\n        if (!this.attributes) {\n            this.attributes = [];\n        }\n        for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n            var attribute = _a[_i];\n            if (attribute.name === name) {\n                attribute.value += ' ' + value;\n                return;\n            }\n        }\n        this.attributes.push({ name: name, value: value });\n    };\n    Element.prototype.clone = function (cloneChildren) {\n        if (cloneChildren === void 0) { cloneChildren = true; }\n        var elem = new Element();\n        if (this.attributes) {\n            elem.attributes = [];\n            for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n                var attribute = _a[_i];\n                elem.addAttr(attribute.name, attribute.value);\n            }\n        }\n        if (cloneChildren && this.children) {\n            elem.children = [];\n            for (var index = 0; index < this.children.length; index++) {\n                elem.addChild(this.children[index].clone());\n            }\n        }\n        return elem;\n    };\n    Element.prototype.cloneWithParent = function () {\n        var clone = this.clone(false);\n        if (this.parent && !(this.parent instanceof RootElement)) {\n            var parentClone = this.parent.cloneWithParent();\n            parentClone.addChild(clone);\n        }\n        return clone;\n    };\n    return Element;\n}());\n\nvar RootElement = /** @class */ (function (_super) {\n    __extends(RootElement, _super);\n    function RootElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RootElement;\n}(Element));\n\nvar LabelElement = /** @class */ (function (_super) {\n    __extends(LabelElement, _super);\n    function LabelElement(label) {\n        var _this = _super.call(this) || this;\n        _this.addAttr('name', label);\n        return _this;\n    }\n    return LabelElement;\n}(Element));\n\nvar MarkedStringPrinter = /** @class */ (function () {\n    function MarkedStringPrinter(quote) {\n        this.quote = quote;\n        // empty\n    }\n    MarkedStringPrinter.prototype.print = function (element) {\n        this.result = [];\n        if (element instanceof RootElement) {\n            this.doPrint(element.children, 0);\n        }\n        else {\n            this.doPrint([element], 0);\n        }\n        var value = this.result.join('\\n');\n        return [{ language: 'html', value: value }];\n    };\n    MarkedStringPrinter.prototype.doPrint = function (elements, indent) {\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            this.doPrintElement(element, indent);\n            if (element.children) {\n                this.doPrint(element.children, indent + 1);\n            }\n        }\n    };\n    MarkedStringPrinter.prototype.writeLine = function (level, content) {\n        var indent = new Array(level + 1).join('  ');\n        this.result.push(indent + content);\n    };\n    MarkedStringPrinter.prototype.doPrintElement = function (element, indent) {\n        var name = element.findAttribute('name');\n        // special case: a simple label\n        if (element instanceof LabelElement || name === '\\u2026') {\n            this.writeLine(indent, name);\n            return;\n        }\n        // the real deal\n        var content = ['<'];\n        // element name\n        if (name) {\n            content.push(name);\n        }\n        else {\n            content.push('element');\n        }\n        // attributes\n        if (element.attributes) {\n            for (var _i = 0, _a = element.attributes; _i < _a.length; _i++) {\n                var attr = _a[_i];\n                if (attr.name !== 'name') {\n                    content.push(' ');\n                    content.push(attr.name);\n                    var value = attr.value;\n                    if (value) {\n                        content.push('=');\n                        content.push(quotes.ensure(value, this.quote));\n                    }\n                }\n            }\n        }\n        content.push('>');\n        this.writeLine(indent, content.join(''));\n    };\n    return MarkedStringPrinter;\n}());\nvar quotes;\n(function (quotes) {\n    function ensure(value, which) {\n        return which + remove(value) + which;\n    }\n    quotes.ensure = ensure;\n    function remove(value) {\n        var match = value.match(/^['\"](.*)[\"']$/);\n        if (match) {\n            return match[1];\n        }\n        return value;\n    }\n    quotes.remove = remove;\n})(quotes || (quotes = {}));\nfunction toElement(node, parentElement) {\n    var result = new Element();\n    for (var _i = 0, _a = node.getChildren(); _i < _a.length; _i++) {\n        var child = _a[_i];\n        switch (child.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinator:\n                if (parentElement) {\n                    var segments = child.getText().split('&');\n                    if (segments.length === 1) {\n                        // should not happen\n                        result.addAttr('name', segments[0]);\n                        break;\n                    }\n                    result = parentElement.cloneWithParent();\n                    if (segments[0]) {\n                        var root = result.findRoot();\n                        root.prepend(segments[0]);\n                    }\n                    for (var i = 1; i < segments.length; i++) {\n                        if (i > 1) {\n                            var clone = parentElement.cloneWithParent();\n                            result.addChild(clone.findRoot());\n                            result = clone;\n                        }\n                        result.append(segments[i]);\n                    }\n                }\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorPlaceholder:\n                if (child.getText() === '@at-root') {\n                    return result;\n                }\n            // fall through\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector:\n                var text = child.getText();\n                result.addAttr('name', text === '*' ? 'element' : unescape(text));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector:\n                result.addAttr('class', unescape(child.getText().substring(1)));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector:\n                result.addAttr('id', unescape(child.getText().substring(1)));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n                result.addAttr('class', child.getName());\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector:\n                result.addAttr(unescape(child.getText()), '');\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].AttributeSelector:\n                var expr = child.getExpression();\n                if (expr) {\n                    var value = void 0;\n                    if (expr.getRight()) {\n                        switch (unescape(expr.getOperator().getText())) {\n                            case '|=':\n                                // excatly or followed by -words\n                                value = quotes.remove(unescape(expr.getRight().getText())) + \"-\\u2026\";\n                                break;\n                            case '^=':\n                                // prefix\n                                value = quotes.remove(unescape(expr.getRight().getText())) + \"\\u2026\";\n                                break;\n                            case '$=':\n                                // suffix\n                                value = \"\\u2026\" + quotes.remove(unescape(expr.getRight().getText()));\n                                break;\n                            case '~=':\n                                // one of a list of words\n                                value = \" \\u2026 \" + quotes.remove(unescape(expr.getRight().getText())) + \" \\u2026 \";\n                                break;\n                            case '*=':\n                                // substring\n                                value = \"\\u2026\" + quotes.remove(unescape(expr.getRight().getText())) + \"\\u2026\";\n                                break;\n                            default:\n                                value = quotes.remove(unescape(expr.getRight().getText()));\n                                break;\n                        }\n                    }\n                    result.addAttr(unescape(expr.getLeft().getText()), value);\n                }\n                break;\n        }\n    }\n    return result;\n}\nfunction unescape(content) {\n    var scanner = new _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"Scanner\"]();\n    scanner.setSource(content);\n    var token = scanner.scanUnquotedString();\n    if (token) {\n        return token.text;\n    }\n    return content;\n}\nfunction selectorToMarkedString(node) {\n    var root = selectorToElement(node);\n    return new MarkedStringPrinter('\"').print(root);\n}\nfunction simpleSelectorToMarkedString(node) {\n    var element = toElement(node);\n    return new MarkedStringPrinter('\"').print(element);\n}\nvar SelectorElementBuilder = /** @class */ (function () {\n    function SelectorElementBuilder(element) {\n        this.prev = null;\n        this.element = element;\n    }\n    SelectorElementBuilder.prototype.processSelector = function (selector) {\n        var parentElement = null;\n        if (!(this.element instanceof RootElement)) {\n            if (selector.getChildren().some(function (c) { return c.hasChildren() && c.getChild(0).type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinator; })) {\n                var curr = this.element.findRoot();\n                if (curr.parent instanceof RootElement) {\n                    parentElement = this.element;\n                    this.element = curr.parent;\n                    this.element.removeChild(curr);\n                    this.prev = null;\n                }\n            }\n        }\n        for (var _i = 0, _a = selector.getChildren(); _i < _a.length; _i++) {\n            var selectorChild = _a[_i];\n            if (selectorChild instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                if (this.prev instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                    var labelElement = new LabelElement('\\u2026');\n                    this.element.addChild(labelElement);\n                    this.element = labelElement;\n                }\n                else if (this.prev && (this.prev.matches('+') || this.prev.matches('~'))) {\n                    this.element = this.element.parent;\n                }\n                if (this.prev && this.prev.matches('~')) {\n                    this.element.addChild(toElement(selectorChild));\n                    this.element.addChild(new LabelElement('\\u22EE'));\n                }\n                var thisElement = toElement(selectorChild, parentElement);\n                var root = thisElement.findRoot();\n                this.element.addChild(root);\n                this.element = thisElement;\n            }\n            if (selectorChild instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"] ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorParent ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorSibling ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorAllSiblings) {\n                this.prev = selectorChild;\n            }\n        }\n    };\n    return SelectorElementBuilder;\n}());\nfunction isNewSelectorContext(node) {\n    switch (node.type) {\n        case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n        case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Stylesheet:\n            return true;\n    }\n    return false;\n}\nfunction selectorToElement(node) {\n    if (node.matches('@at-root')) {\n        return null;\n    }\n    var root = new RootElement();\n    var parentRuleSets = [];\n    if (node.getParent() instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n        var parent = node.getParent().getParent(); // parent of the selector's ruleset\n        while (parent && !isNewSelectorContext(parent)) {\n            if (parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n                if (parent.getSelectors().matches('@at-root')) {\n                    break;\n                }\n                parentRuleSets.push(parent);\n            }\n            parent = parent.getParent();\n        }\n    }\n    var builder = new SelectorElementBuilder(root);\n    for (var i = parentRuleSets.length - 1; i >= 0; i--) {\n        var selector = parentRuleSets[i].getSelectors().getChild(0);\n        if (selector) {\n            builder.processSelector(selector);\n        }\n    }\n    builder.processSelector(node);\n    return root;\n}\n//# sourceMappingURL=selectorPrinting.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js ***!
  \*********************************************************************************************************/
/*! exports provided: findFirst */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findFirst\", function() { return findFirst; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nfunction findFirst(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n//# sourceMappingURL=arrays.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js ***!
  \**********************************************************************************************************/
/*! exports provided: startsWith, endsWith, difference, getLimitedString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"difference\", function() { return difference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLimitedString\", function() { return getLimitedString; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Computes the difference score for two strings. More similar strings have a higher score.\n * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n * Strings that have a large length difference will get a bad default score 0.\n * Complexity - both time and space O(first.length * second.length)\n * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n *\n * @param first a string\n * @param second a string\n */\nfunction difference(first, second, maxLenDelta) {\n    if (maxLenDelta === void 0) { maxLenDelta = 4; }\n    var lengthDifference = Math.abs(first.length - second.length);\n    // We only compute score if length of the currentWord and length of entry.name are similar.\n    if (lengthDifference > maxLenDelta) {\n        return 0;\n    }\n    // Initialize LCS (largest common subsequence) matrix.\n    var LCS = [];\n    var zeroArray = [];\n    var i, j;\n    for (i = 0; i < second.length + 1; ++i) {\n        zeroArray.push(0);\n    }\n    for (i = 0; i < first.length + 1; ++i) {\n        LCS.push(zeroArray);\n    }\n    for (i = 1; i < first.length + 1; ++i) {\n        for (j = 1; j < second.length + 1; ++j) {\n            if (first[i - 1] === second[j - 1]) {\n                LCS[i][j] = LCS[i - 1][j - 1] + 1;\n            }\n            else {\n                LCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n            }\n        }\n    }\n    return LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n}\n/**\n * Limit of string length.\n */\nfunction getLimitedString(str, ellipsis) {\n    if (ellipsis === void 0) { ellipsis = true; }\n    if (!str) {\n        return '';\n    }\n    if (str.length < 140) {\n        return str;\n    }\n    return str.slice(0, 140) + (ellipsis ? '\\u2026' : '');\n}\n//# sourceMappingURL=strings.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js ***!
  \*********************************************************************/
/*! exports provided: CSSWorker, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSWorker\", function() { return CSSWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_deps/vscode-css-languageservice/cssLanguageService.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js\");\n/* harmony import */ var _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_deps/vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\n\n\nvar CSSWorker = /** @class */ (function () {\n    function CSSWorker(ctx, createData) {\n        this._ctx = ctx;\n        this._languageSettings = createData.languageSettings;\n        this._languageId = createData.languageId;\n        switch (this._languageId) {\n            case 'css':\n                this._languageService = _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getCSSLanguageService\"]();\n                break;\n            case 'less':\n                this._languageService = _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getLESSLanguageService\"]();\n                break;\n            case 'scss':\n                this._languageService = _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getSCSSLanguageService\"]();\n                break;\n            default:\n                throw new Error('Invalid language id: ' + this._languageId);\n        }\n        this._languageService.configure(this._languageSettings);\n    }\n    // --- language service host ---------------\n    CSSWorker.prototype.doValidation = function (uri) {\n        var document = this._getTextDocument(uri);\n        if (document) {\n            var stylesheet = this._languageService.parseStylesheet(document);\n            var diagnostics = this._languageService.doValidation(document, stylesheet);\n            return Promise.as(diagnostics);\n        }\n        return Promise.as([]);\n    };\n    CSSWorker.prototype.doComplete = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var completions = this._languageService.doComplete(document, position, stylesheet);\n        return Promise.as(completions);\n    };\n    CSSWorker.prototype.doHover = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var hover = this._languageService.doHover(document, position, stylesheet);\n        return Promise.as(hover);\n    };\n    CSSWorker.prototype.findDefinition = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var definition = this._languageService.findDefinition(document, position, stylesheet);\n        return Promise.as(definition);\n    };\n    CSSWorker.prototype.findReferences = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var references = this._languageService.findReferences(document, position, stylesheet);\n        return Promise.as(references);\n    };\n    CSSWorker.prototype.findDocumentHighlights = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var highlights = this._languageService.findDocumentHighlights(document, position, stylesheet);\n        return Promise.as(highlights);\n    };\n    CSSWorker.prototype.findDocumentSymbols = function (uri) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var symbols = this._languageService.findDocumentSymbols(document, stylesheet);\n        return Promise.as(symbols);\n    };\n    CSSWorker.prototype.doCodeActions = function (uri, range, context) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var actions = this._languageService.doCodeActions(document, range, context, stylesheet);\n        return Promise.as(actions);\n    };\n    CSSWorker.prototype.findDocumentColors = function (uri) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var colorSymbols = this._languageService.findDocumentColors(document, stylesheet);\n        return Promise.as(colorSymbols);\n    };\n    CSSWorker.prototype.getColorPresentations = function (uri, color, range) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var colorPresentations = this._languageService.getColorPresentations(document, stylesheet, color, range);\n        return Promise.as(colorPresentations);\n    };\n    CSSWorker.prototype.doRename = function (uri, position, newName) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseStylesheet(document);\n        var renames = this._languageService.doRename(document, position, newName, stylesheet);\n        return Promise.as(renames);\n    };\n    CSSWorker.prototype._getTextDocument = function (uri) {\n        var models = this._ctx.getMirrorModels();\n        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n            var model = models_1[_i];\n            if (model.uri.toString() === uri) {\n                return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextDocument\"].create(uri, this._languageId, model.version, model.getValue());\n            }\n        }\n        return null;\n    };\n    return CSSWorker;\n}());\n\nfunction create(ctx, createData) {\n    return new CSSWorker(ctx, createData);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/cssWorker.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js":
/*!******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js ***!
  \******************************************************************************/
/*! exports provided: loadMessageBundle, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadMessageBundle\", function() { return loadMessageBundle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction format(message, args) {\n    var result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nfunction localize(key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nfunction loadMessageBundle(file) {\n    return localize;\n}\nfunction config(opt) {\n    return loadMessageBundle;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-css.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-css.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// copied from https://raw.githubusercontent.com/beautify-web/js-beautify/master/js/lib/beautify-css.js\n// https://github.com/beautify-web/js-beautify/commit/2009d250914ba865e81b20b264aa40736e38bf86\n/*jshint curly:false, eqeqeq:true, laxbreak:true, noempty:false */\n/* AUTO-GENERATED. DO NOT MODIFY. */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n\n CSS Beautifier\n---------------\n\n    Written by Harutyun Amirjanyan, (amirjanyan@gmail.com)\n\n    Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n        http://jsbeautifier.org/\n\n    Usage:\n        css_beautify(source_text);\n        css_beautify(source_text, options);\n\n    The options are (default in brackets):\n        indent_size (4)                         — indentation size,\n        indent_char (space)                     — character to indent with,\n        selector_separator_newline (true)       - separate selectors with newline or\n                                                  not (e.g. \"a,\\nbr\" or \"a, br\")\n        end_with_newline (false)                - end with a newline\n        newline_between_rules (true)            - add a new line after every css rule\n        space_around_selector_separator (false) - ensure space around selector separators:\n                                                  '>', '+', '~' (e.g. \"a>b\" -> \"a > b\")\n    e.g\n\n    css_beautify(css_source_text, {\n      'indent_size': 1,\n      'indent_char': '\\t',\n      'selector_separator': ' ',\n      'end_with_newline': false,\n      'newline_between_rules': true,\n      'space_around_selector_separator': true\n    });\n*/\n\n// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n// http://www.w3.org/TR/css3-syntax/\n\n(function() {\nvar legacy_beautify_css =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\nvar mergeOpts = __webpack_require__(2).mergeOpts;\nvar acorn = __webpack_require__(1);\nvar Output = __webpack_require__(3).Output;\n\n\nvar lineBreak = acorn.lineBreak;\nvar allLineBreaks = acorn.allLineBreaks;\n\nfunction Beautifier(source_text, options) {\n    options = options || {};\n\n    // Allow the setting of language/file-type specific options\n    // with inheritance of overall settings\n    options = mergeOpts(options, 'css');\n\n    source_text = source_text || '';\n\n    var newlinesFromLastWSEat = 0;\n    var indentSize = options.indent_size ? parseInt(options.indent_size, 10) : 4;\n    var indentCharacter = options.indent_char || ' ';\n    var preserve_newlines = (options.preserve_newlines === undefined) ? false : options.preserve_newlines;\n    var selectorSeparatorNewline = (options.selector_separator_newline === undefined) ? true : options.selector_separator_newline;\n    var end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n    var newline_between_rules = (options.newline_between_rules === undefined) ? true : options.newline_between_rules;\n    var space_around_combinator = (options.space_around_combinator === undefined) ? false : options.space_around_combinator;\n    space_around_combinator = space_around_combinator || ((options.space_around_selector_separator === undefined) ? false : options.space_around_selector_separator);\n    var eol = options.eol ? options.eol : 'auto';\n\n    if (options.indent_with_tabs) {\n        indentCharacter = '\\t';\n        indentSize = 1;\n    }\n\n    if (eol === 'auto') {\n        eol = '\\n';\n        if (source_text && lineBreak.test(source_text || '')) {\n            eol = source_text.match(lineBreak)[0];\n        }\n    }\n\n    eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\n    // HACK: newline parsing inconsistent. This brute force normalizes the input.\n    source_text = source_text.replace(allLineBreaks, '\\n');\n\n    // tokenizer\n    var whiteRe = /^\\s+$/;\n\n    var pos = -1,\n        ch;\n    var parenLevel = 0;\n\n    function next() {\n        ch = source_text.charAt(++pos);\n        return ch || '';\n    }\n\n    function peek(skipWhitespace) {\n        var result = '';\n        var prev_pos = pos;\n        if (skipWhitespace) {\n            eatWhitespace();\n        }\n        result = source_text.charAt(pos + 1) || '';\n        pos = prev_pos - 1;\n        next();\n        return result;\n    }\n\n    function eatString(endChars) {\n        var start = pos;\n        while (next()) {\n            if (ch === \"\\\\\") {\n                next();\n            } else if (endChars.indexOf(ch) !== -1) {\n                break;\n            } else if (ch === \"\\n\") {\n                break;\n            }\n        }\n        return source_text.substring(start, pos + 1);\n    }\n\n    function peekString(endChar) {\n        var prev_pos = pos;\n        var str = eatString(endChar);\n        pos = prev_pos - 1;\n        next();\n        return str;\n    }\n\n    function eatWhitespace(preserve_newlines_local) {\n        var result = 0;\n        while (whiteRe.test(peek())) {\n            next();\n            if (ch === '\\n' && preserve_newlines_local && preserve_newlines) {\n                output.add_new_line(true);\n                result++;\n            }\n        }\n        newlinesFromLastWSEat = result;\n        return result;\n    }\n\n    function skipWhitespace() {\n        var result = '';\n        if (ch && whiteRe.test(ch)) {\n            result = ch;\n        }\n        while (whiteRe.test(next())) {\n            result += ch;\n        }\n        return result;\n    }\n\n    function eatComment() {\n        var start = pos;\n        var singleLine = peek() === \"/\";\n        next();\n        while (next()) {\n            if (!singleLine && ch === \"*\" && peek() === \"/\") {\n                next();\n                break;\n            } else if (singleLine && ch === \"\\n\") {\n                return source_text.substring(start, pos);\n            }\n        }\n\n        return source_text.substring(start, pos) + ch;\n    }\n\n\n    function lookBack(str) {\n        return source_text.substring(pos - str.length, pos).toLowerCase() ===\n            str;\n    }\n\n    // Nested pseudo-class if we are insideRule\n    // and the next special character found opens\n    // a new block\n    function foundNestedPseudoClass() {\n        var openParen = 0;\n        for (var i = pos + 1; i < source_text.length; i++) {\n            var ch = source_text.charAt(i);\n            if (ch === \"{\") {\n                return true;\n            } else if (ch === '(') {\n                // pseudoclasses can contain ()\n                openParen += 1;\n            } else if (ch === ')') {\n                if (openParen === 0) {\n                    return false;\n                }\n                openParen -= 1;\n            } else if (ch === \";\" || ch === \"}\") {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    // printer\n    var baseIndentString = '';\n    var preindent_index = 0;\n    if (source_text && source_text.length) {\n        while ((source_text.charAt(preindent_index) === ' ' ||\n                source_text.charAt(preindent_index) === '\\t')) {\n            preindent_index += 1;\n        }\n        baseIndentString = source_text.substring(0, preindent_index);\n        js_source_text = source_text.substring(preindent_index);\n    }\n\n\n    var singleIndent = new Array(indentSize + 1).join(indentCharacter);\n    var indentLevel;\n    var nestedLevel;\n    var output;\n\n    function print_string(output_string) {\n        if (output.just_added_newline()) {\n            output.set_indent(indentLevel);\n        }\n        output.add_token(output_string);\n    }\n\n    function preserveSingleSpace(isAfterSpace) {\n        if (isAfterSpace) {\n            output.space_before_token = true;\n        }\n    }\n\n    function indent() {\n        indentLevel++;\n    }\n\n    function outdent() {\n        if (indentLevel > 0) {\n            indentLevel--;\n        }\n    }\n\n    /*_____________________--------------------_____________________*/\n\n    this.beautify = function() {\n        // reset\n        output = new Output(singleIndent, baseIndentString);\n        indentLevel = 0;\n        nestedLevel = 0;\n\n        pos = -1;\n        ch = null;\n        parenLevel = 0;\n\n        var insideRule = false;\n        var insidePropertyValue = false;\n        var enteringConditionalGroup = false;\n        var top_ch = '';\n        var last_top_ch = '';\n\n        while (true) {\n            var whitespace = skipWhitespace();\n            var isAfterSpace = whitespace !== '';\n            var isAfterNewline = whitespace.indexOf('\\n') !== -1;\n            last_top_ch = top_ch;\n            top_ch = ch;\n\n            if (!ch) {\n                break;\n            } else if (ch === '/' && peek() === '*') { /* css comment */\n                var header = indentLevel === 0;\n\n                if (isAfterNewline || header) {\n                    output.add_new_line();\n                }\n\n                print_string(eatComment());\n                output.add_new_line();\n                if (header) {\n                    output.add_new_line(true);\n                }\n            } else if (ch === '/' && peek() === '/') { // single line comment\n                if (!isAfterNewline && last_top_ch !== '{') {\n                    output.trim(true);\n                }\n                output.space_before_token = true;\n                print_string(eatComment());\n                output.add_new_line();\n            } else if (ch === '@') {\n                preserveSingleSpace(isAfterSpace);\n\n                // deal with less propery mixins @{...}\n                if (peek() === '{') {\n                    print_string(eatString('}'));\n                } else {\n                    print_string(ch);\n\n                    // strip trailing space, if present, for hash property checks\n                    var variableOrRule = peekString(\": ,;{}()[]/='\\\"\");\n\n                    if (variableOrRule.match(/[ :]$/)) {\n                        // we have a variable or pseudo-class, add it and insert one space before continuing\n                        next();\n                        variableOrRule = eatString(\": \").replace(/\\s$/, '');\n                        print_string(variableOrRule);\n                        output.space_before_token = true;\n                    }\n\n                    variableOrRule = variableOrRule.replace(/\\s$/, '');\n\n                    // might be a nesting at-rule\n                    if (variableOrRule in this.NESTED_AT_RULE) {\n                        nestedLevel += 1;\n                        if (variableOrRule in this.CONDITIONAL_GROUP_RULE) {\n                            enteringConditionalGroup = true;\n                        }\n                    }\n                }\n            } else if (ch === '#' && peek() === '{') {\n                preserveSingleSpace(isAfterSpace);\n                print_string(eatString('}'));\n            } else if (ch === '{') {\n                if (peek(true) === '}') {\n                    eatWhitespace();\n                    next();\n                    output.space_before_token = true;\n                    print_string(\"{}\");\n                    if (!eatWhitespace(true)) {\n                        output.add_new_line();\n                    }\n\n                    if (newlinesFromLastWSEat < 2 && newline_between_rules && indentLevel === 0) {\n                        output.add_new_line(true);\n                    }\n                } else {\n                    indent();\n                    output.space_before_token = true;\n                    print_string(ch);\n                    if (!eatWhitespace(true)) {\n                        output.add_new_line();\n                    }\n\n                    // when entering conditional groups, only rulesets are allowed\n                    if (enteringConditionalGroup) {\n                        enteringConditionalGroup = false;\n                        insideRule = (indentLevel > nestedLevel);\n                    } else {\n                        // otherwise, declarations are also allowed\n                        insideRule = (indentLevel >= nestedLevel);\n                    }\n                }\n            } else if (ch === '}') {\n                outdent();\n                output.add_new_line();\n                print_string(ch);\n                insideRule = false;\n                insidePropertyValue = false;\n                if (nestedLevel) {\n                    nestedLevel--;\n                }\n\n                if (!eatWhitespace(true)) {\n                    output.add_new_line();\n                }\n\n                if (newlinesFromLastWSEat < 2 && newline_between_rules && indentLevel === 0) {\n                    output.add_new_line(true);\n                }\n            } else if (ch === \":\") {\n                eatWhitespace();\n                if ((insideRule || enteringConditionalGroup) &&\n                    !(lookBack(\"&\") || foundNestedPseudoClass()) &&\n                    !lookBack(\"(\")) {\n                    // 'property: value' delimiter\n                    // which could be in a conditional group query\n                    print_string(':');\n                    if (!insidePropertyValue) {\n                        insidePropertyValue = true;\n                        output.space_before_token = true;\n                    }\n                } else {\n                    // sass/less parent reference don't use a space\n                    // sass nested pseudo-class don't use a space\n\n                    // preserve space before pseudoclasses/pseudoelements, as it means \"in any child\"\n                    if (lookBack(\" \")) {\n                        output.space_before_token = true;\n                    }\n                    if (peek() === \":\") {\n                        // pseudo-element\n                        next();\n                        print_string(\"::\");\n                    } else {\n                        // pseudo-class\n                        print_string(':');\n                    }\n                }\n            } else if (ch === '\"' || ch === '\\'') {\n                preserveSingleSpace(isAfterSpace);\n                print_string(eatString(ch));\n            } else if (ch === ';') {\n                insidePropertyValue = false;\n                print_string(ch);\n                if (!eatWhitespace(true)) {\n                    output.add_new_line();\n                }\n            } else if (ch === '(') { // may be a url\n                if (lookBack(\"url\")) {\n                    print_string(ch);\n                    eatWhitespace();\n                    if (next()) {\n                        if (ch !== ')' && ch !== '\"' && ch !== '\\'') {\n                            print_string(eatString(')'));\n                        } else {\n                            pos--;\n                        }\n                    }\n                } else {\n                    parenLevel++;\n                    preserveSingleSpace(isAfterSpace);\n                    print_string(ch);\n                    eatWhitespace();\n                }\n            } else if (ch === ')') {\n                print_string(ch);\n                parenLevel--;\n            } else if (ch === ',') {\n                print_string(ch);\n                if (!eatWhitespace(true) && selectorSeparatorNewline && !insidePropertyValue && parenLevel < 1) {\n                    output.add_new_line();\n                } else {\n                    output.space_before_token = true;\n                }\n            } else if ((ch === '>' || ch === '+' || ch === '~') &&\n                !insidePropertyValue && parenLevel < 1) {\n                //handle combinator spacing\n                if (space_around_combinator) {\n                    output.space_before_token = true;\n                    print_string(ch);\n                    output.space_before_token = true;\n                } else {\n                    print_string(ch);\n                    eatWhitespace();\n                    // squash extra whitespace\n                    if (ch && whiteRe.test(ch)) {\n                        ch = '';\n                    }\n                }\n            } else if (ch === ']') {\n                print_string(ch);\n            } else if (ch === '[') {\n                preserveSingleSpace(isAfterSpace);\n                print_string(ch);\n            } else if (ch === '=') { // no whitespace before or after\n                eatWhitespace();\n                print_string('=');\n                if (whiteRe.test(ch)) {\n                    ch = '';\n                }\n\n            } else {\n                preserveSingleSpace(isAfterSpace);\n                print_string(ch);\n            }\n        }\n\n        var sweetCode = output.get_code(end_with_newline, eol);\n\n        return sweetCode;\n    };\n\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n    this.NESTED_AT_RULE = {\n        \"@page\": true,\n        \"@font-face\": true,\n        \"@keyframes\": true,\n        // also in CONDITIONAL_GROUP_RULE below\n        \"@media\": true,\n        \"@supports\": true,\n        \"@document\": true\n    };\n    this.CONDITIONAL_GROUP_RULE = {\n        \"@media\": true,\n        \"@supports\": true,\n        \"@document\": true\n    };\n}\n\nmodule.exports.Beautifier = Beautifier;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* jshint curly: false */\n// This section of code is taken from acorn.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// Whether a single character denotes a newline.\n\nexports.newline = /[\\n\\r\\u2028\\u2029]/;\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n// in javascript, these two differ\n// in python they are the same, different methods are called on them\nexports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\nexports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\n\n// Test whether a given character code starts an identifier.\n\nexports.isIdentifierStart = function(code) {\n    // permit $ (36) and @ (64). @ is used in ES7 decorators.\n    if (code < 65) return code === 36 || code === 64;\n    // 65 through 91 are uppercase letters.\n    if (code < 91) return true;\n    // permit _ (95).\n    if (code < 97) return code === 95;\n    // 97 through 123 are lowercase letters.\n    if (code < 123) return true;\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n};\n\n// Test whether a given character is part of an identifier.\n\nexports.isIdentifierChar = function(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123) return true;\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n    The MIT License (MIT)\n\n    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation files\n    (the \"Software\"), to deal in the Software without restriction,\n    including without limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of the Software,\n    and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n*/\n\nfunction mergeOpts(allOptions, targetType) {\n    var finalOpts = {};\n    var name;\n\n    for (name in allOptions) {\n        if (name !== targetType) {\n            finalOpts[name] = allOptions[name];\n        }\n    }\n\n    //merge in the per type settings for the targetType\n    if (targetType in allOptions) {\n        for (name in allOptions[targetType]) {\n            finalOpts[name] = allOptions[targetType][name];\n        }\n    }\n    return finalOpts;\n}\n\nmodule.exports.mergeOpts = mergeOpts;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\nfunction OutputLine(parent) {\n    var _character_count = 0;\n    // use indent_count as a marker for lines that have preserved indentation\n    var _indent_count = -1;\n\n    var _items = [];\n    var _empty = true;\n\n    this.set_indent = function(level) {\n        _character_count = parent.baseIndentLength + level * parent.indent_length;\n        _indent_count = level;\n    };\n\n    this.get_character_count = function() {\n        return _character_count;\n    };\n\n    this.is_empty = function() {\n        return _empty;\n    };\n\n    this.last = function() {\n        if (!this._empty) {\n            return _items[_items.length - 1];\n        } else {\n            return null;\n        }\n    };\n\n    this.push = function(input) {\n        _items.push(input);\n        _character_count += input.length;\n        _empty = false;\n    };\n\n    this.pop = function() {\n        var item = null;\n        if (!_empty) {\n            item = _items.pop();\n            _character_count -= item.length;\n            _empty = _items.length === 0;\n        }\n        return item;\n    };\n\n    this.remove_indent = function() {\n        if (_indent_count > 0) {\n            _indent_count -= 1;\n            _character_count -= parent.indent_length;\n        }\n    };\n\n    this.trim = function() {\n        while (this.last() === ' ') {\n            _items.pop();\n            _character_count -= 1;\n        }\n        _empty = _items.length === 0;\n    };\n\n    this.toString = function() {\n        var result = '';\n        if (!this._empty) {\n            if (_indent_count >= 0) {\n                result = parent.indent_cache[_indent_count];\n            }\n            result += _items.join('');\n        }\n        return result;\n    };\n}\n\nfunction Output(indent_string, baseIndentString) {\n    baseIndentString = baseIndentString || '';\n    this.indent_cache = [baseIndentString];\n    this.baseIndentLength = baseIndentString.length;\n    this.indent_length = indent_string.length;\n    this.raw = false;\n\n    var lines = [];\n    this.baseIndentString = baseIndentString;\n    this.indent_string = indent_string;\n    this.previous_line = null;\n    this.current_line = null;\n    this.space_before_token = false;\n\n    this.add_outputline = function() {\n        this.previous_line = this.current_line;\n        this.current_line = new OutputLine(this);\n        lines.push(this.current_line);\n    };\n\n    // initialize\n    this.add_outputline();\n\n\n    this.get_line_number = function() {\n        return lines.length;\n    };\n\n    // Using object instead of string to allow for later expansion of info about each line\n    this.add_new_line = function(force_newline) {\n        if (this.get_line_number() === 1 && this.just_added_newline()) {\n            return false; // no newline on start of file\n        }\n\n        if (force_newline || !this.just_added_newline()) {\n            if (!this.raw) {\n                this.add_outputline();\n            }\n            return true;\n        }\n\n        return false;\n    };\n\n    this.get_code = function(end_with_newline, eol) {\n        var sweet_code = lines.join('\\n').replace(/[\\r\\n\\t ]+$/, '');\n\n        if (end_with_newline) {\n            sweet_code += '\\n';\n        }\n\n        if (eol !== '\\n') {\n            sweet_code = sweet_code.replace(/[\\n]/g, eol);\n        }\n\n        return sweet_code;\n    };\n\n    this.set_indent = function(level) {\n        // Never indent your first output indent at the start of the file\n        if (lines.length > 1) {\n            while (level >= this.indent_cache.length) {\n                this.indent_cache.push(this.indent_cache[this.indent_cache.length - 1] + this.indent_string);\n            }\n\n            this.current_line.set_indent(level);\n            return true;\n        }\n        this.current_line.set_indent(0);\n        return false;\n    };\n\n    this.add_raw_token = function(token) {\n        for (var x = 0; x < token.newlines; x++) {\n            this.add_outputline();\n        }\n        this.current_line.push(token.whitespace_before);\n        this.current_line.push(token.text);\n        this.space_before_token = false;\n    };\n\n    this.add_token = function(printable_token) {\n        this.add_space_before_token();\n        this.current_line.push(printable_token);\n    };\n\n    this.add_space_before_token = function() {\n        if (this.space_before_token && !this.just_added_newline()) {\n            this.current_line.push(' ');\n        }\n        this.space_before_token = false;\n    };\n\n    this.remove_indent = function(index) {\n        var output_length = lines.length;\n        while (index < output_length) {\n            lines[index].remove_indent();\n            index++;\n        }\n    };\n\n    this.trim = function(eat_newlines) {\n        eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\n        this.current_line.trim(indent_string, baseIndentString);\n\n        while (eat_newlines && lines.length > 1 &&\n            this.current_line.is_empty()) {\n            lines.pop();\n            this.current_line = lines[lines.length - 1];\n            this.current_line.trim();\n        }\n\n        this.previous_line = lines.length > 1 ? lines[lines.length - 2] : null;\n    };\n\n    this.just_added_newline = function() {\n        return this.current_line.is_empty();\n    };\n\n    this.just_added_blankline = function() {\n        if (this.just_added_newline()) {\n            if (lines.length === 1) {\n                return true; // start of the file and newline = blank\n            }\n\n            var line = lines[lines.length - 2];\n            return line.is_empty();\n        }\n        return false;\n    };\n}\n\nmodule.exports.Output = Output;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n    The MIT License (MIT)\n\n    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation files\n    (the \"Software\"), to deal in the Software without restriction,\n    including without limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of the Software,\n    and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n*/\n\nvar Beautifier = __webpack_require__(0).Beautifier;\n\nfunction css_beautify(source_text, options) {\n    var beautifier = new Beautifier(source_text, options);\n    return beautifier.beautify();\n}\n\nmodule.exports = css_beautify;\n\n/***/ })\n/******/ ]);\nvar css_beautify = legacy_beautify_css;\n/* Footer */\nif (true) {\n    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n        return {\n            css_beautify: css_beautify\n        };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {}\n\n}());\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-css.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-html.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-html.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// copied from https://raw.githubusercontent.com/beautify-web/js-beautify/master/js/lib/beautify-html.js\n// https://github.com/beautify-web/js-beautify/commit/2009d250914ba865e81b20b264aa40736e38bf86\n/*jshint curly:false, eqeqeq:true, laxbreak:true, noempty:false */\n/* AUTO-GENERATED. DO NOT MODIFY. */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n\n Style HTML\n---------------\n\n  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\n  Based on code initially developed by: Einar Lielmanis, <einar@jsbeautifier.org>\n    http://jsbeautifier.org/\n\n  Usage:\n    style_html(html_source);\n\n    style_html(html_source, options);\n\n  The options are:\n    indent_inner_html (default false)  — indent <head> and <body> sections,\n    indent_size (default 4)          — indentation size,\n    indent_char (default space)      — character to indent with,\n    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)\n    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n    content_unformatted (defaults to pre tag) - list of tags, that its content shouldn't be reformatted\n    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n    preserve_newlines (default true) - whether existing line breaks before elements should be preserved\n                                        Only works before elements, not inside tags or for text.\n    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk\n    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}\n    end_with_newline (false)          - end with a newline\n    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.\n\n    e.g.\n\n    style_html(html_source, {\n      'indent_inner_html': false,\n      'indent_size': 2,\n      'indent_char': ' ',\n      'wrap_line_length': 78,\n      'brace_style': 'expand',\n      'preserve_newlines': true,\n      'max_preserve_newlines': 5,\n      'indent_handlebars': false,\n      'extra_liners': ['/html']\n    });\n*/\n\n(function() {\nvar legacy_beautify_html =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\nvar mergeOpts = __webpack_require__(2).mergeOpts;\nvar acorn = __webpack_require__(1);\n\n\nvar lineBreak = acorn.lineBreak;\nvar allLineBreaks = acorn.allLineBreaks;\n\n// function trim(s) {\n//     return s.replace(/^\\s+|\\s+$/g, '');\n// }\n\nfunction ltrim(s) {\n    return s.replace(/^\\s+/g, '');\n}\n\nfunction rtrim(s) {\n    return s.replace(/\\s+$/g, '');\n}\n\nfunction Beautifier(html_source, options, js_beautify, css_beautify) {\n    //Wrapper function to invoke all the necessary constructors and deal with the output.\n    html_source = html_source || '';\n\n    var multi_parser,\n        indent_inner_html,\n        indent_body_inner_html,\n        indent_head_inner_html,\n        indent_size,\n        indent_character,\n        wrap_line_length,\n        brace_style,\n        unformatted,\n        content_unformatted,\n        preserve_newlines,\n        max_preserve_newlines,\n        indent_handlebars,\n        wrap_attributes,\n        wrap_attributes_indent_size,\n        is_wrap_attributes_force,\n        is_wrap_attributes_force_expand_multiline,\n        is_wrap_attributes_force_aligned,\n        end_with_newline,\n        extra_liners,\n        eol;\n\n    options = options || {};\n\n    // Allow the setting of language/file-type specific options\n    // with inheritance of overall settings\n    options = mergeOpts(options, 'html');\n\n    // backwards compatibility to 1.3.4\n    if ((options.wrap_line_length === undefined || parseInt(options.wrap_line_length, 10) === 0) &&\n        (options.max_char !== undefined && parseInt(options.max_char, 10) !== 0)) {\n        options.wrap_line_length = options.max_char;\n    }\n\n    indent_inner_html = (options.indent_inner_html === undefined) ? false : options.indent_inner_html;\n    indent_body_inner_html = (options.indent_body_inner_html === undefined) ? true : options.indent_body_inner_html;\n    indent_head_inner_html = (options.indent_head_inner_html === undefined) ? true : options.indent_head_inner_html;\n    indent_size = (options.indent_size === undefined) ? 4 : parseInt(options.indent_size, 10);\n    indent_character = (options.indent_char === undefined) ? ' ' : options.indent_char;\n    brace_style = (options.brace_style === undefined) ? 'collapse' : options.brace_style;\n    wrap_line_length = parseInt(options.wrap_line_length, 10) === 0 ? 32786 : parseInt(options.wrap_line_length || 250, 10);\n    unformatted = options.unformatted || [\n        // https://www.w3.org/TR/html5/dom.html#phrasing-content\n        'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n        'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n        'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n        'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n        'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n        'video', 'wbr', 'text',\n        // prexisting - not sure of full effect of removing, leaving in\n        'acronym', 'address', 'big', 'dt', 'ins', 'strike', 'tt',\n    ];\n    content_unformatted = options.content_unformatted || [\n        'pre',\n    ];\n    preserve_newlines = (options.preserve_newlines === undefined) ? true : options.preserve_newlines;\n    max_preserve_newlines = preserve_newlines ?\n        (isNaN(parseInt(options.max_preserve_newlines, 10)) ? 32786 : parseInt(options.max_preserve_newlines, 10)) :\n        0;\n    indent_handlebars = (options.indent_handlebars === undefined) ? false : options.indent_handlebars;\n    wrap_attributes = (options.wrap_attributes === undefined) ? 'auto' : options.wrap_attributes;\n    wrap_attributes_indent_size = (isNaN(parseInt(options.wrap_attributes_indent_size, 10))) ? indent_size : parseInt(options.wrap_attributes_indent_size, 10);\n    is_wrap_attributes_force = wrap_attributes.substr(0, 'force'.length) === 'force';\n    is_wrap_attributes_force_expand_multiline = (wrap_attributes === 'force-expand-multiline');\n    is_wrap_attributes_force_aligned = (wrap_attributes === 'force-aligned');\n    end_with_newline = (options.end_with_newline === undefined) ? false : options.end_with_newline;\n    extra_liners = (typeof options.extra_liners === 'object') && options.extra_liners ?\n        options.extra_liners.concat() : (typeof options.extra_liners === 'string') ?\n        options.extra_liners.split(',') : 'head,body,/html'.split(',');\n    eol = options.eol ? options.eol : 'auto';\n\n    if (options.indent_with_tabs) {\n        indent_character = '\\t';\n        indent_size = 1;\n    }\n\n    if (eol === 'auto') {\n        eol = '\\n';\n        if (html_source && lineBreak.test(html_source || '')) {\n            eol = html_source.match(lineBreak)[0];\n        }\n    }\n\n    eol = eol.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n');\n\n    // HACK: newline parsing inconsistent. This brute force normalizes the input.\n    html_source = html_source.replace(allLineBreaks, '\\n');\n\n    function Parser() {\n\n        this.pos = 0; //Parser position\n        this.token = '';\n        this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT\n        this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values\n            parent: 'parent1',\n            parentcount: 1,\n            parent1: ''\n        };\n        this.tag_type = '';\n        this.token_text = this.last_token = this.last_text = this.token_type = '';\n        this.newlines = 0;\n        this.indent_content = indent_inner_html;\n        this.indent_body_inner_html = indent_body_inner_html;\n        this.indent_head_inner_html = indent_head_inner_html;\n\n        this.Utils = { //Uilities made available to the various functions\n            whitespace: \"\\n\\r\\t \".split(''),\n\n            single_token: options.void_elements || [\n                // HTLM void elements - aka self-closing tags - aka singletons\n                // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n                'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n                'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n                // NOTE: Optional tags - are not understood.\n                // https://www.w3.org/TR/html5/syntax.html#optional-tags\n                // The rules for optional tags are too complex for a simple list\n                // Also, the content of these tags should still be indented in many cases.\n                // 'li' is a good exmple.\n\n                // Doctype and xml elements\n                '!doctype', '?xml',\n                // ?php tag\n                '?php',\n                // other tags that were in this list, keeping just in case\n                'basefont', 'isindex'\n            ],\n            extra_liners: extra_liners, //for tags that need a line of whitespace before them\n            in_array: function(what, arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    if (what === arr[i]) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        };\n\n        // Return true if the given text is composed entirely of whitespace.\n        this.is_whitespace = function(text) {\n            for (var n = 0; n < text.length; n++) {\n                if (!this.Utils.in_array(text.charAt(n), this.Utils.whitespace)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        this.traverse_whitespace = function() {\n            var input_char = '';\n\n            input_char = this.input.charAt(this.pos);\n            if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n                this.newlines = 0;\n                while (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n                    if (preserve_newlines && input_char === '\\n' && this.newlines <= max_preserve_newlines) {\n                        this.newlines += 1;\n                    }\n\n                    this.pos++;\n                    input_char = this.input.charAt(this.pos);\n                }\n                return true;\n            }\n            return false;\n        };\n\n        // Append a space to the given content (string array) or, if we are\n        // at the wrap_line_length, append a newline/indentation.\n        // return true if a newline was added, false if a space was added\n        this.space_or_wrap = function(content) {\n            if (this.line_char_count >= this.wrap_line_length) { //insert a line when the wrap_line_length is reached\n                this.print_newline(false, content);\n                this.print_indentation(content);\n                return true;\n            } else {\n                this.line_char_count++;\n                content.push(' ');\n                return false;\n            }\n        };\n\n        this.get_content = function() { //function to capture regular content between tags\n            var input_char = '',\n                content = [],\n                handlebarsStarted = 0;\n\n            while (this.input.charAt(this.pos) !== '<' || handlebarsStarted === 2) {\n                if (this.pos >= this.input.length) {\n                    return content.length ? content.join('') : ['', 'TK_EOF'];\n                }\n\n                if (handlebarsStarted < 2 && this.traverse_whitespace()) {\n                    this.space_or_wrap(content);\n                    continue;\n                }\n\n                input_char = this.input.charAt(this.pos);\n\n                if (indent_handlebars) {\n                    if (input_char === '{') {\n                        handlebarsStarted += 1;\n                    } else if (handlebarsStarted < 2) {\n                        handlebarsStarted = 0;\n                    }\n\n                    if (input_char === '}' && handlebarsStarted > 0) {\n                        if (handlebarsStarted-- === 0) {\n                            break;\n                        }\n                    }\n                    // Handlebars parsing is complicated.\n                    // {{#foo}} and {{/foo}} are formatted tags.\n                    // {{something}} should get treated as content, except:\n                    // {{else}} specifically behaves like {{#if}} and {{/if}}\n                    var peek3 = this.input.substr(this.pos, 3);\n                    if (peek3 === '{{#' || peek3 === '{{/') {\n                        // These are tags and not content.\n                        break;\n                    } else if (peek3 === '{{!') {\n                        return [this.get_tag(), 'TK_TAG_HANDLEBARS_COMMENT'];\n                    } else if (this.input.substr(this.pos, 2) === '{{') {\n                        if (this.get_tag(true) === '{{else}}') {\n                            break;\n                        }\n                    }\n                }\n\n                this.pos++;\n                this.line_char_count++;\n                content.push(input_char); //letter at-a-time (or string) inserted to an array\n            }\n            return content.length ? content.join('') : '';\n        };\n\n        this.get_contents_to = function(name) { //get the full content of a script or style to pass to js_beautify\n            if (this.pos === this.input.length) {\n                return ['', 'TK_EOF'];\n            }\n            var content = '';\n            var reg_match = new RegExp('</' + name + '\\\\s*>', 'igm');\n            reg_match.lastIndex = this.pos;\n            var reg_array = reg_match.exec(this.input);\n            var end_script = reg_array ? reg_array.index : this.input.length; //absolute end of script\n            if (this.pos < end_script) { //get everything in between the script tags\n                content = this.input.substring(this.pos, end_script);\n                this.pos = end_script;\n            }\n            return content;\n        };\n\n        this.record_tag = function(tag) { //function to record a tag and its parent in this.tags Object\n            if (this.tags[tag + 'count']) { //check for the existence of this tag type\n                this.tags[tag + 'count']++;\n                this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n            } else { //otherwise initialize this tag type\n                this.tags[tag + 'count'] = 1;\n                this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n            }\n            this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)\n            this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')\n        };\n\n        this.retrieve_tag = function(tag) { //function to retrieve the opening tag to the corresponding closer\n            if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it\n                var temp_parent = this.tags.parent; //check to see if it's a closable tag.\n                while (temp_parent) { //till we reach '' (the initial value);\n                    if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it\n                        break;\n                    }\n                    temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree\n                }\n                if (temp_parent) { //if we caught something\n                    this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly\n                    this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent\n                }\n                delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...\n                delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself\n                if (this.tags[tag + 'count'] === 1) {\n                    delete this.tags[tag + 'count'];\n                } else {\n                    this.tags[tag + 'count']--;\n                }\n            }\n        };\n\n        this.indent_to_tag = function(tag) {\n            // Match the indentation level to the last use of this tag, but don't remove it.\n            if (!this.tags[tag + 'count']) {\n                return;\n            }\n            var temp_parent = this.tags.parent;\n            while (temp_parent) {\n                if (tag + this.tags[tag + 'count'] === temp_parent) {\n                    break;\n                }\n                temp_parent = this.tags[temp_parent + 'parent'];\n            }\n            if (temp_parent) {\n                this.indent_level = this.tags[tag + this.tags[tag + 'count']];\n            }\n        };\n\n        this.get_tag = function(peek) { //function to get a full tag and parse its type\n            var input_char = '',\n                content = [],\n                comment = '',\n                space = false,\n                first_attr = true,\n                has_wrapped_attrs = false,\n                tag_start, tag_end,\n                tag_start_char,\n                orig_pos = this.pos,\n                orig_line_char_count = this.line_char_count,\n                is_tag_closed = false,\n                tail;\n\n            peek = peek !== undefined ? peek : false;\n\n            do {\n                if (this.pos >= this.input.length) {\n                    if (peek) {\n                        this.pos = orig_pos;\n                        this.line_char_count = orig_line_char_count;\n                    }\n                    return content.length ? content.join('') : ['', 'TK_EOF'];\n                }\n\n                input_char = this.input.charAt(this.pos);\n                this.pos++;\n\n                if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space\n                    space = true;\n                    continue;\n                }\n\n                if (input_char === \"'\" || input_char === '\"') {\n                    input_char += this.get_unformatted(input_char);\n                    space = true;\n                }\n\n                if (input_char === '=') { //no space before =\n                    space = false;\n                }\n                tail = this.input.substr(this.pos - 1);\n                if (is_wrap_attributes_force_expand_multiline && has_wrapped_attrs && !is_tag_closed && (input_char === '>' || input_char === '/')) {\n                    if (tail.match(/^\\/?\\s*>/)) {\n                        space = false;\n                        is_tag_closed = true;\n                        this.print_newline(false, content);\n                        this.print_indentation(content);\n                    }\n                }\n                if (content.length && content[content.length - 1] !== '=' && input_char !== '>' && space) {\n                    //no space after = or before >\n                    var wrapped = this.space_or_wrap(content);\n                    var indentAttrs = wrapped && input_char !== '/' && !is_wrap_attributes_force;\n                    space = false;\n\n                    if (is_wrap_attributes_force && input_char !== '/') {\n                        var force_first_attr_wrap = false;\n                        if (is_wrap_attributes_force_expand_multiline && first_attr) {\n                            var is_only_attribute = tail.match(/^\\S*(=\"([^\"]|\\\\\")*\")?\\s*\\/?\\s*>/) !== null;\n                            force_first_attr_wrap = !is_only_attribute;\n                        }\n                        if (!first_attr || force_first_attr_wrap) {\n                            this.print_newline(false, content);\n                            this.print_indentation(content);\n                            indentAttrs = true;\n                        }\n                    }\n                    if (indentAttrs) {\n                        has_wrapped_attrs = true;\n\n                        //indent attributes an auto, forced, or forced-align line-wrap\n                        var alignment_size = wrap_attributes_indent_size;\n                        if (is_wrap_attributes_force_aligned) {\n                            alignment_size = content.indexOf(' ') + 1;\n                        }\n\n                        for (var count = 0; count < alignment_size; count++) {\n                            // only ever further indent with spaces since we're trying to align characters\n                            content.push(' ');\n                        }\n                    }\n                    if (first_attr) {\n                        for (var i = 0; i < content.length; i++) {\n                            if (content[i] === ' ') {\n                                first_attr = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (indent_handlebars && tag_start_char === '<') {\n                    // When inside an angle-bracket tag, put spaces around\n                    // handlebars not inside of strings.\n                    if ((input_char + this.input.charAt(this.pos)) === '{{') {\n                        input_char += this.get_unformatted('}}');\n                        if (content.length && content[content.length - 1] !== ' ' && content[content.length - 1] !== '<') {\n                            input_char = ' ' + input_char;\n                        }\n                        space = true;\n                    }\n                }\n\n                if (input_char === '<' && !tag_start_char) {\n                    tag_start = this.pos - 1;\n                    tag_start_char = '<';\n                }\n\n                if (indent_handlebars && !tag_start_char) {\n                    if (content.length >= 2 && content[content.length - 1] === '{' && content[content.length - 2] === '{') {\n                        if (input_char === '#' || input_char === '/' || input_char === '!') {\n                            tag_start = this.pos - 3;\n                        } else {\n                            tag_start = this.pos - 2;\n                        }\n                        tag_start_char = '{';\n                    }\n                }\n\n                this.line_char_count++;\n                content.push(input_char); //inserts character at-a-time (or string)\n\n                if (content[1] && (content[1] === '!' || content[1] === '?' || content[1] === '%')) { //if we're in a comment, do something special\n                    // We treat all comments as literals, even more than preformatted tags\n                    // we just look for the appropriate close tag\n                    content = [this.get_comment(tag_start)];\n                    break;\n                }\n\n                if (indent_handlebars && content[1] && content[1] === '{' && content[2] && content[2] === '!') { //if we're in a comment, do something special\n                    // We treat all comments as literals, even more than preformatted tags\n                    // we just look for the appropriate close tag\n                    content = [this.get_comment(tag_start)];\n                    break;\n                }\n\n                if (indent_handlebars && tag_start_char === '{' && content.length > 2 && content[content.length - 2] === '}' && content[content.length - 1] === '}') {\n                    break;\n                }\n            } while (input_char !== '>');\n\n            var tag_complete = content.join('');\n            var tag_index;\n            var tag_offset;\n\n            // must check for space first otherwise the tag could have the first attribute included, and\n            // then not un-indent correctly\n            if (tag_complete.indexOf(' ') !== -1) { //if there's whitespace, thats where the tag name ends\n                tag_index = tag_complete.indexOf(' ');\n            } else if (tag_complete.indexOf('\\n') !== -1) { //if there's a line break, thats where the tag name ends\n                tag_index = tag_complete.indexOf('\\n');\n            } else if (tag_complete.charAt(0) === '{') {\n                tag_index = tag_complete.indexOf('}');\n            } else { //otherwise go with the tag ending\n                tag_index = tag_complete.indexOf('>');\n            }\n            if (tag_complete.charAt(0) === '<' || !indent_handlebars) {\n                tag_offset = 1;\n            } else {\n                tag_offset = tag_complete.charAt(2) === '#' ? 3 : 2;\n            }\n            var tag_check = tag_complete.substring(tag_offset, tag_index).toLowerCase();\n            if (tag_complete.charAt(tag_complete.length - 2) === '/' ||\n                this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)\n                if (!peek) {\n                    this.tag_type = 'SINGLE';\n                }\n            } else if (indent_handlebars && tag_complete.charAt(0) === '{' && tag_check === 'else') {\n                if (!peek) {\n                    this.indent_to_tag('if');\n                    this.tag_type = 'HANDLEBARS_ELSE';\n                    this.indent_content = true;\n                    this.traverse_whitespace();\n                }\n            } else if (this.is_unformatted(tag_check, unformatted) ||\n                this.is_unformatted(tag_check, content_unformatted)) {\n                // do not reformat the \"unformatted\" or \"content_unformatted\" tags\n                comment = this.get_unformatted('</' + tag_check + '>', tag_complete); //...delegate to get_unformatted function\n                content.push(comment);\n                tag_end = this.pos - 1;\n                this.tag_type = 'SINGLE';\n            } else if (tag_check === 'script' &&\n                (tag_complete.search('type') === -1 ||\n                    (tag_complete.search('type') > -1 &&\n                        tag_complete.search(/\\b(text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect)/) > -1))) {\n                if (!peek) {\n                    this.record_tag(tag_check);\n                    this.tag_type = 'SCRIPT';\n                }\n            } else if (tag_check === 'style' &&\n                (tag_complete.search('type') === -1 ||\n                    (tag_complete.search('type') > -1 && tag_complete.search('text/css') > -1))) {\n                if (!peek) {\n                    this.record_tag(tag_check);\n                    this.tag_type = 'STYLE';\n                }\n            } else if (tag_check.charAt(0) === '!') { //peek for <! comment\n                // for comments content is already correct.\n                if (!peek) {\n                    this.tag_type = 'SINGLE';\n                    this.traverse_whitespace();\n                }\n            } else if (!peek) {\n                if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending\n                    this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors\n                    this.tag_type = 'END';\n                } else { //otherwise it's a start-tag\n                    this.record_tag(tag_check); //push it on the tag stack\n                    if (tag_check.toLowerCase() !== 'html') {\n                        this.indent_content = true;\n                    }\n                    this.tag_type = 'START';\n                }\n\n                // Allow preserving of newlines after a start or end tag\n                if (this.traverse_whitespace()) {\n                    this.space_or_wrap(content);\n                }\n\n                if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line\n                    this.print_newline(false, this.output);\n                    if (this.output.length && this.output[this.output.length - 2] !== '\\n') {\n                        this.print_newline(true, this.output);\n                    }\n                }\n            }\n\n            if (peek) {\n                this.pos = orig_pos;\n                this.line_char_count = orig_line_char_count;\n            }\n\n            return content.join(''); //returns fully formatted tag\n        };\n\n        this.get_comment = function(start_pos) { //function to return comment content in its entirety\n            // this is will have very poor perf, but will work for now.\n            var comment = '',\n                delimiter = '>',\n                matched = false;\n\n            this.pos = start_pos;\n            var input_char = this.input.charAt(this.pos);\n            this.pos++;\n\n            while (this.pos <= this.input.length) {\n                comment += input_char;\n\n                // only need to check for the delimiter if the last chars match\n                if (comment.charAt(comment.length - 1) === delimiter.charAt(delimiter.length - 1) &&\n                    comment.indexOf(delimiter) !== -1) {\n                    break;\n                }\n\n                // only need to search for custom delimiter for the first few characters\n                if (!matched && comment.length < 10) {\n                    if (comment.indexOf('<![if') === 0) { //peek for <![if conditional comment\n                        delimiter = '<![endif]>';\n                        matched = true;\n                    } else if (comment.indexOf('<![cdata[') === 0) { //if it's a <[cdata[ comment...\n                        delimiter = ']]>';\n                        matched = true;\n                    } else if (comment.indexOf('<![') === 0) { // some other ![ comment? ...\n                        delimiter = ']>';\n                        matched = true;\n                    } else if (comment.indexOf('<!--') === 0) { // <!-- comment ...\n                        delimiter = '-->';\n                        matched = true;\n                    } else if (comment.indexOf('{{!--') === 0) { // {{!-- handlebars comment\n                        delimiter = '--}}';\n                        matched = true;\n                    } else if (comment.indexOf('{{!') === 0) { // {{! handlebars comment\n                        if (comment.length === 5 && comment.indexOf('{{!--') === -1) {\n                            delimiter = '}}';\n                            matched = true;\n                        }\n                    } else if (comment.indexOf('<?') === 0) { // {{! handlebars comment\n                        delimiter = '?>';\n                        matched = true;\n                    } else if (comment.indexOf('<%') === 0) { // {{! handlebars comment\n                        delimiter = '%>';\n                        matched = true;\n                    }\n                }\n\n                input_char = this.input.charAt(this.pos);\n                this.pos++;\n            }\n\n            return comment;\n        };\n\n        function tokenMatcher(delimiter) {\n            var token = '';\n\n            var add = function(str) {\n                var newToken = token + str.toLowerCase();\n                token = newToken.length <= delimiter.length ? newToken : newToken.substr(newToken.length - delimiter.length, delimiter.length);\n            };\n\n            var doesNotMatch = function() {\n                return token.indexOf(delimiter) === -1;\n            };\n\n            return {\n                add: add,\n                doesNotMatch: doesNotMatch\n            };\n        }\n\n        this.get_unformatted = function(delimiter, orig_tag) { //function to return unformatted content in its entirety\n            if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) !== -1) {\n                return '';\n            }\n            var input_char = '';\n            var content = '';\n            var space = true;\n\n            var delimiterMatcher = tokenMatcher(delimiter);\n\n            do {\n\n                if (this.pos >= this.input.length) {\n                    return content;\n                }\n\n                input_char = this.input.charAt(this.pos);\n                this.pos++;\n\n                if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n                    if (!space) {\n                        this.line_char_count--;\n                        continue;\n                    }\n                    if (input_char === '\\n' || input_char === '\\r') {\n                        content += '\\n';\n                        /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'\n            for (var i=0; i<this.indent_level; i++) {\n              content += this.indent_string;\n            }\n            space = false; //...and make sure other indentation is erased\n            */\n                        this.line_char_count = 0;\n                        continue;\n                    }\n                }\n                content += input_char;\n                delimiterMatcher.add(input_char);\n                this.line_char_count++;\n                space = true;\n\n                if (indent_handlebars && input_char === '{' && content.length && content.charAt(content.length - 2) === '{') {\n                    // Handlebars expressions in strings should also be unformatted.\n                    content += this.get_unformatted('}}');\n                    // Don't consider when stopping for delimiters.\n                }\n            } while (delimiterMatcher.doesNotMatch());\n\n            return content;\n        };\n\n        this.get_token = function() { //initial handler for token-retrieval\n            var token;\n\n            if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript\n                var type = this.last_token.substr(7);\n                token = this.get_contents_to(type);\n                if (typeof token !== 'string') {\n                    return token;\n                }\n                return [token, 'TK_' + type];\n            }\n            if (this.current_mode === 'CONTENT') {\n                token = this.get_content();\n                if (typeof token !== 'string') {\n                    return token;\n                } else {\n                    return [token, 'TK_CONTENT'];\n                }\n            }\n\n            if (this.current_mode === 'TAG') {\n                token = this.get_tag();\n                if (typeof token !== 'string') {\n                    return token;\n                } else {\n                    var tag_name_type = 'TK_TAG_' + this.tag_type;\n                    return [token, tag_name_type];\n                }\n            }\n        };\n\n        this.get_full_indent = function(level) {\n            level = this.indent_level + level || 0;\n            if (level < 1) {\n                return '';\n            }\n\n            return Array(level + 1).join(this.indent_string);\n        };\n\n        this.is_unformatted = function(tag_check, unformatted) {\n            //is this an HTML5 block-level link?\n            if (!this.Utils.in_array(tag_check, unformatted)) {\n                return false;\n            }\n\n            if (tag_check.toLowerCase() !== 'a' || !this.Utils.in_array('a', unformatted)) {\n                return true;\n            }\n\n            //at this point we have an  tag; is its first child something we want to remain\n            //unformatted?\n            var next_tag = this.get_tag(true /* peek. */ );\n\n            // test next_tag to see if it is just html tag (no external content)\n            var tag = (next_tag || \"\").match(/^\\s*<\\s*\\/?([a-z]*)\\s*[^>]*>\\s*$/);\n\n            // if next_tag comes back but is not an isolated tag, then\n            // let's treat the 'a' tag as having content\n            // and respect the unformatted option\n            if (!tag || this.Utils.in_array(tag[1], unformatted)) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n\n        this.printer = function(js_source, indent_character, indent_size, wrap_line_length, brace_style) { //handles input/output and some other printing functions\n\n            this.input = js_source || ''; //gets the input for the Parser\n\n            // HACK: newline parsing inconsistent. This brute force normalizes the input.\n            this.input = this.input.replace(/\\r\\n|[\\r\\u2028\\u2029]/g, '\\n');\n\n            this.output = [];\n            this.indent_character = indent_character;\n            this.indent_string = '';\n            this.indent_size = indent_size;\n            this.brace_style = brace_style;\n            this.indent_level = 0;\n            this.wrap_line_length = wrap_line_length;\n            this.line_char_count = 0; //count to see if wrap_line_length was exceeded\n\n            for (var i = 0; i < this.indent_size; i++) {\n                this.indent_string += this.indent_character;\n            }\n\n            this.print_newline = function(force, arr) {\n                this.line_char_count = 0;\n                if (!arr || !arr.length) {\n                    return;\n                }\n                if (force || (arr[arr.length - 1] !== '\\n')) { //we might want the extra line\n                    if ((arr[arr.length - 1] !== '\\n')) {\n                        arr[arr.length - 1] = rtrim(arr[arr.length - 1]);\n                    }\n                    arr.push('\\n');\n                }\n            };\n\n            this.print_indentation = function(arr) {\n                for (var i = 0; i < this.indent_level; i++) {\n                    arr.push(this.indent_string);\n                    this.line_char_count += this.indent_string.length;\n                }\n            };\n\n            this.print_token = function(text) {\n                // Avoid printing initial whitespace.\n                if (this.is_whitespace(text) && !this.output.length) {\n                    return;\n                }\n                if (text || text !== '') {\n                    if (this.output.length && this.output[this.output.length - 1] === '\\n') {\n                        this.print_indentation(this.output);\n                        text = ltrim(text);\n                    }\n                }\n                this.print_token_raw(text);\n            };\n\n            this.print_token_raw = function(text) {\n                // If we are going to print newlines, truncate trailing\n                // whitespace, as the newlines will represent the space.\n                if (this.newlines > 0) {\n                    text = rtrim(text);\n                }\n\n                if (text && text !== '') {\n                    if (text.length > 1 && text.charAt(text.length - 1) === '\\n') {\n                        // unformatted tags can grab newlines as their last character\n                        this.output.push(text.slice(0, -1));\n                        this.print_newline(false, this.output);\n                    } else {\n                        this.output.push(text);\n                    }\n                }\n\n                for (var n = 0; n < this.newlines; n++) {\n                    this.print_newline(n > 0, this.output);\n                }\n                this.newlines = 0;\n            };\n\n            this.indent = function() {\n                this.indent_level++;\n            };\n\n            this.unindent = function() {\n                if (this.indent_level > 0) {\n                    this.indent_level--;\n                }\n            };\n        };\n        return this;\n    }\n\n    /*_____________________--------------------_____________________*/\n\n    this.beautify = function() {\n        multi_parser = new Parser(); //wrapping functions Parser\n        multi_parser.printer(html_source, indent_character, indent_size, wrap_line_length, brace_style); //initialize starting values\n        while (true) {\n            var t = multi_parser.get_token();\n            multi_parser.token_text = t[0];\n            multi_parser.token_type = t[1];\n\n            if (multi_parser.token_type === 'TK_EOF') {\n                break;\n            }\n\n            switch (multi_parser.token_type) {\n                case 'TK_TAG_START':\n                    multi_parser.print_newline(false, multi_parser.output);\n                    multi_parser.print_token(multi_parser.token_text);\n                    if (multi_parser.indent_content) {\n                        if ((multi_parser.indent_body_inner_html || !multi_parser.token_text.match(/<body(?:.*)>/)) &&\n                            (multi_parser.indent_head_inner_html || !multi_parser.token_text.match(/<head(?:.*)>/))) {\n\n                            multi_parser.indent();\n                        }\n\n                        multi_parser.indent_content = false;\n                    }\n                    multi_parser.current_mode = 'CONTENT';\n                    break;\n                case 'TK_TAG_STYLE':\n                case 'TK_TAG_SCRIPT':\n                    multi_parser.print_newline(false, multi_parser.output);\n                    multi_parser.print_token(multi_parser.token_text);\n                    multi_parser.current_mode = 'CONTENT';\n                    break;\n                case 'TK_TAG_END':\n                    //Print new line only if the tag has no content and has child\n                    if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {\n                        var tag_name = (multi_parser.token_text.match(/\\w+/) || [])[0];\n                        var tag_extracted_from_last_output = null;\n                        if (multi_parser.output.length) {\n                            tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length - 1].match(/(?:<|{{#)\\s*(\\w+)/);\n                        }\n                        if (tag_extracted_from_last_output === null ||\n                            (tag_extracted_from_last_output[1] !== tag_name && !multi_parser.Utils.in_array(tag_extracted_from_last_output[1], unformatted))) {\n                            multi_parser.print_newline(false, multi_parser.output);\n                        }\n                    }\n                    multi_parser.print_token(multi_parser.token_text);\n                    multi_parser.current_mode = 'CONTENT';\n                    break;\n                case 'TK_TAG_SINGLE':\n                    // Don't add a newline before elements that should remain unformatted.\n                    var tag_check = multi_parser.token_text.match(/^\\s*<([a-z-]+)/i);\n                    if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)) {\n                        multi_parser.print_newline(false, multi_parser.output);\n                    }\n                    multi_parser.print_token(multi_parser.token_text);\n                    multi_parser.current_mode = 'CONTENT';\n                    break;\n                case 'TK_TAG_HANDLEBARS_ELSE':\n                    // Don't add a newline if opening {{#if}} tag is on the current line\n                    var foundIfOnCurrentLine = false;\n                    for (var lastCheckedOutput = multi_parser.output.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n                        if (multi_parser.output[lastCheckedOutput] === '\\n') {\n                            break;\n                        } else {\n                            if (multi_parser.output[lastCheckedOutput].match(/{{#if/)) {\n                                foundIfOnCurrentLine = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (!foundIfOnCurrentLine) {\n                        multi_parser.print_newline(false, multi_parser.output);\n                    }\n                    multi_parser.print_token(multi_parser.token_text);\n                    if (multi_parser.indent_content) {\n                        multi_parser.indent();\n                        multi_parser.indent_content = false;\n                    }\n                    multi_parser.current_mode = 'CONTENT';\n                    break;\n                case 'TK_TAG_HANDLEBARS_COMMENT':\n                    multi_parser.print_token(multi_parser.token_text);\n                    multi_parser.current_mode = 'TAG';\n                    break;\n                case 'TK_CONTENT':\n                    multi_parser.print_token(multi_parser.token_text);\n                    multi_parser.current_mode = 'TAG';\n                    break;\n                case 'TK_STYLE':\n                case 'TK_SCRIPT':\n                    if (multi_parser.token_text !== '') {\n                        multi_parser.print_newline(false, multi_parser.output);\n                        var text = multi_parser.token_text,\n                            _beautifier,\n                            script_indent_level = 1;\n                        if (multi_parser.token_type === 'TK_SCRIPT') {\n                            _beautifier = typeof js_beautify === 'function' && js_beautify;\n                        } else if (multi_parser.token_type === 'TK_STYLE') {\n                            _beautifier = typeof css_beautify === 'function' && css_beautify;\n                        }\n\n                        if (options.indent_scripts === \"keep\") {\n                            script_indent_level = 0;\n                        } else if (options.indent_scripts === \"separate\") {\n                            script_indent_level = -multi_parser.indent_level;\n                        }\n\n                        var indentation = multi_parser.get_full_indent(script_indent_level);\n                        if (_beautifier) {\n\n                            // call the Beautifier if avaliable\n                            var Child_options = function() {\n                                this.eol = '\\n';\n                            };\n                            Child_options.prototype = options;\n                            var child_options = new Child_options();\n                            text = _beautifier(text.replace(/^\\s*/, indentation), child_options);\n                        } else {\n                            // simply indent the string otherwise\n                            var white = text.match(/^\\s*/)[0];\n                            var _level = white.match(/[^\\n\\r]*$/)[0].split(multi_parser.indent_string).length - 1;\n                            var reindent = multi_parser.get_full_indent(script_indent_level - _level);\n                            text = text.replace(/^\\s*/, indentation)\n                                .replace(/\\r\\n|\\r|\\n/g, '\\n' + reindent)\n                                .replace(/\\s+$/, '');\n                        }\n                        if (text) {\n                            multi_parser.print_token_raw(text);\n                            multi_parser.print_newline(true, multi_parser.output);\n                        }\n                    }\n                    multi_parser.current_mode = 'TAG';\n                    break;\n                default:\n                    // We should not be getting here but we don't want to drop input on the floor\n                    // Just output the text and move on\n                    if (multi_parser.token_text !== '') {\n                        multi_parser.print_token(multi_parser.token_text);\n                    }\n                    break;\n            }\n            multi_parser.last_token = multi_parser.token_type;\n            multi_parser.last_text = multi_parser.token_text;\n        }\n        var sweet_code = multi_parser.output.join('').replace(/[\\r\\n\\t ]+$/, '');\n\n        // establish end_with_newline\n        if (end_with_newline) {\n            sweet_code += '\\n';\n        }\n\n        if (eol !== '\\n') {\n            sweet_code = sweet_code.replace(/[\\n]/g, eol);\n        }\n\n        return sweet_code;\n    };\n}\n\nmodule.exports.Beautifier = Beautifier;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* jshint curly: false */\n// This section of code is taken from acorn.\n//\n// Acorn was written by Marijn Haverbeke and released under an MIT\n// license. The Unicode regexps (for identifiers and whitespace) were\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/marijnh/acorn.git\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/; // jshint ignore:line\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// Whether a single character denotes a newline.\n\nexports.newline = /[\\n\\r\\u2028\\u2029]/;\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\n// in javascript, these two differ\n// in python they are the same, different methods are called on them\nexports.lineBreak = new RegExp('\\r\\n|' + exports.newline.source);\nexports.allLineBreaks = new RegExp(exports.lineBreak.source, 'g');\n\n\n// Test whether a given character code starts an identifier.\n\nexports.isIdentifierStart = function(code) {\n    // permit $ (36) and @ (64). @ is used in ES7 decorators.\n    if (code < 65) return code === 36 || code === 64;\n    // 65 through 91 are uppercase letters.\n    if (code < 91) return true;\n    // permit _ (95).\n    if (code < 97) return code === 95;\n    // 97 through 123 are lowercase letters.\n    if (code < 123) return true;\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n};\n\n// Test whether a given character is part of an identifier.\n\nexports.isIdentifierChar = function(code) {\n    if (code < 48) return code === 36;\n    if (code < 58) return true;\n    if (code < 65) return false;\n    if (code < 91) return true;\n    if (code < 97) return code === 95;\n    if (code < 123) return true;\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n    The MIT License (MIT)\n\n    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation files\n    (the \"Software\"), to deal in the Software without restriction,\n    including without limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of the Software,\n    and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n*/\n\nfunction mergeOpts(allOptions, targetType) {\n    var finalOpts = {};\n    var name;\n\n    for (name in allOptions) {\n        if (name !== targetType) {\n            finalOpts[name] = allOptions[name];\n        }\n    }\n\n    //merge in the per type settings for the targetType\n    if (targetType in allOptions) {\n        for (name in allOptions[targetType]) {\n            finalOpts[name] = allOptions[targetType][name];\n        }\n    }\n    return finalOpts;\n}\n\nmodule.exports.mergeOpts = mergeOpts;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*jshint curly:true, eqeqeq:true, laxbreak:true, noempty:false */\n/*\n\n    The MIT License (MIT)\n\n    Copyright (c) 2007-2017 Einar Lielmanis, Liam Newman, and contributors.\n\n    Permission is hereby granted, free of charge, to any person\n    obtaining a copy of this software and associated documentation files\n    (the \"Software\"), to deal in the Software without restriction,\n    including without limitation the rights to use, copy, modify, merge,\n    publish, distribute, sublicense, and/or sell copies of the Software,\n    and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be\n    included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n    ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n*/\n\nvar Beautifier = __webpack_require__(0).Beautifier;\n\nfunction style_html(html_source, options, js_beautify, css_beautify) {\n    var beautifier = new Beautifier(html_source, options, js_beautify, css_beautify);\n    return beautifier.beautify();\n}\n\nmodule.exports = style_html;\n\n/***/ })\n/******/ ]);\nvar style_html = legacy_beautify_html;\n/* Footer */\nif (true) {\n    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, __webpack_require__(/*! ./beautify */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify.js\"), __webpack_require__(/*! ./beautify-css */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-css.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(requireamd) {\n        var js_beautify = __webpack_require__(/*! ./beautify */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify.js\");\n        var css_beautify = __webpack_require__(/*! ./beautify-css */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-css.js\");\n\n        return {\n            html_beautify: function(html_source, options) {\n                return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n            }\n        };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else { var css_beautify, js_beautify; }\n\n}());\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-html.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify.js ***!
  \****************************************************************************************************************/
/*! exports provided: js_beautify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"js_beautify\", function() { return js_beautify; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*\n * Mock for the JS formatter. Ignore formatting of JS content in HTML.\n */\nfunction js_beautify(js_source_text, options) {\n    // no formatting\n    return js_source_text;\n}\n//# sourceMappingURL=beautify.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/htmlLanguageService.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/htmlLanguageService.js ***!
  \******************************************************************************************************************/
/*! exports provided: TextDocument, Position, CompletionItem, CompletionList, Range, SymbolInformation, Diagnostic, TextEdit, DocumentHighlight, FormattingOptions, MarkedString, DocumentLink, TokenType, ScannerState, getLanguageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenType\", function() { return TokenType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScannerState\", function() { return ScannerState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLanguageService\", function() { return getLanguageService; });\n/* harmony import */ var _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/htmlScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js\");\n/* harmony import */ var _parser_htmlParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser/htmlParser.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlParser.js\");\n/* harmony import */ var _services_htmlCompletion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/htmlCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlCompletion.js\");\n/* harmony import */ var _services_htmlHover_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/htmlHover.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHover.js\");\n/* harmony import */ var _services_htmlFormatter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/htmlFormatter.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlFormatter.js\");\n/* harmony import */ var _services_htmlLinks_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/htmlLinks.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks.js\");\n/* harmony import */ var _services_htmlHighlighting_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/htmlHighlighting.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHighlighting.js\");\n/* harmony import */ var _services_htmlSymbolsProvider_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./services/htmlSymbolsProvider.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlSymbolsProvider.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"TextDocument\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"Position\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"CompletionItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"CompletionList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"Range\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"SymbolInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"Diagnostic\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"DocumentHighlight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"FormattingOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"MarkedString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_8__[\"DocumentLink\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"StartCommentTag\"] = 0] = \"StartCommentTag\";\n    TokenType[TokenType[\"Comment\"] = 1] = \"Comment\";\n    TokenType[TokenType[\"EndCommentTag\"] = 2] = \"EndCommentTag\";\n    TokenType[TokenType[\"StartTagOpen\"] = 3] = \"StartTagOpen\";\n    TokenType[TokenType[\"StartTagClose\"] = 4] = \"StartTagClose\";\n    TokenType[TokenType[\"StartTagSelfClose\"] = 5] = \"StartTagSelfClose\";\n    TokenType[TokenType[\"StartTag\"] = 6] = \"StartTag\";\n    TokenType[TokenType[\"EndTagOpen\"] = 7] = \"EndTagOpen\";\n    TokenType[TokenType[\"EndTagClose\"] = 8] = \"EndTagClose\";\n    TokenType[TokenType[\"EndTag\"] = 9] = \"EndTag\";\n    TokenType[TokenType[\"DelimiterAssign\"] = 10] = \"DelimiterAssign\";\n    TokenType[TokenType[\"AttributeName\"] = 11] = \"AttributeName\";\n    TokenType[TokenType[\"AttributeValue\"] = 12] = \"AttributeValue\";\n    TokenType[TokenType[\"StartDoctypeTag\"] = 13] = \"StartDoctypeTag\";\n    TokenType[TokenType[\"Doctype\"] = 14] = \"Doctype\";\n    TokenType[TokenType[\"EndDoctypeTag\"] = 15] = \"EndDoctypeTag\";\n    TokenType[TokenType[\"Content\"] = 16] = \"Content\";\n    TokenType[TokenType[\"Whitespace\"] = 17] = \"Whitespace\";\n    TokenType[TokenType[\"Unknown\"] = 18] = \"Unknown\";\n    TokenType[TokenType[\"Script\"] = 19] = \"Script\";\n    TokenType[TokenType[\"Styles\"] = 20] = \"Styles\";\n    TokenType[TokenType[\"EOS\"] = 21] = \"EOS\";\n})(TokenType || (TokenType = {}));\nvar ScannerState;\n(function (ScannerState) {\n    ScannerState[ScannerState[\"WithinContent\"] = 0] = \"WithinContent\";\n    ScannerState[ScannerState[\"AfterOpeningStartTag\"] = 1] = \"AfterOpeningStartTag\";\n    ScannerState[ScannerState[\"AfterOpeningEndTag\"] = 2] = \"AfterOpeningEndTag\";\n    ScannerState[ScannerState[\"WithinDoctype\"] = 3] = \"WithinDoctype\";\n    ScannerState[ScannerState[\"WithinTag\"] = 4] = \"WithinTag\";\n    ScannerState[ScannerState[\"WithinEndTag\"] = 5] = \"WithinEndTag\";\n    ScannerState[ScannerState[\"WithinComment\"] = 6] = \"WithinComment\";\n    ScannerState[ScannerState[\"WithinScriptContent\"] = 7] = \"WithinScriptContent\";\n    ScannerState[ScannerState[\"WithinStyleContent\"] = 8] = \"WithinStyleContent\";\n    ScannerState[ScannerState[\"AfterAttributeName\"] = 9] = \"AfterAttributeName\";\n    ScannerState[ScannerState[\"BeforeAttributeValue\"] = 10] = \"BeforeAttributeValue\";\n})(ScannerState || (ScannerState = {}));\nfunction getLanguageService() {\n    var htmlCompletion = new _services_htmlCompletion_js__WEBPACK_IMPORTED_MODULE_2__[\"HTMLCompletion\"]();\n    return {\n        createScanner: _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"createScanner\"],\n        parseHTMLDocument: function (document) { return Object(_parser_htmlParser_js__WEBPACK_IMPORTED_MODULE_1__[\"parse\"])(document.getText()); },\n        doComplete: htmlCompletion.doComplete.bind(htmlCompletion),\n        setCompletionParticipants: htmlCompletion.setCompletionParticipants.bind(htmlCompletion),\n        doHover: _services_htmlHover_js__WEBPACK_IMPORTED_MODULE_3__[\"doHover\"],\n        format: _services_htmlFormatter_js__WEBPACK_IMPORTED_MODULE_4__[\"format\"],\n        findDocumentHighlights: _services_htmlHighlighting_js__WEBPACK_IMPORTED_MODULE_6__[\"findDocumentHighlights\"],\n        findDocumentLinks: _services_htmlLinks_js__WEBPACK_IMPORTED_MODULE_5__[\"findDocumentLinks\"],\n        findDocumentSymbols: _services_htmlSymbolsProvider_js__WEBPACK_IMPORTED_MODULE_7__[\"findDocumentSymbols\"],\n        doTagComplete: htmlCompletion.doTagComplete.bind(htmlCompletion),\n    };\n}\n//# sourceMappingURL=htmlLanguageService.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/htmlLanguageService.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlEntities.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlEntities.js ***!
  \******************************************************************************************************************/
/*! exports provided: entities */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"entities\", function() { return entities; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * HTML 5 character entities\n * https://www.w3.org/TR/html5/syntax.html#named-character-references\n */\nvar entities = {\n    \"Aacute;\": \"\\u00C1\",\n    \"Aacute\": \"\\u00C1\",\n    \"aacute;\": \"\\u00E1\",\n    \"aacute\": \"\\u00E1\",\n    \"Abreve;\": \"\\u0102\",\n    \"abreve;\": \"\\u0103\",\n    \"ac;\": \"\\u223E\",\n    \"acd;\": \"\\u223F\",\n    \"acE;\": \"\\u223E\\u0333\",\n    \"Acirc;\": \"\\u00C2\",\n    \"Acirc\": \"\\u00C2\",\n    \"acirc;\": \"\\u00E2\",\n    \"acirc\": \"\\u00E2\",\n    \"acute;\": \"\\u00B4\",\n    \"acute\": \"\\u00B4\",\n    \"Acy;\": \"\\u0410\",\n    \"acy;\": \"\\u0430\",\n    \"AElig;\": \"\\u00C6\",\n    \"AElig\": \"\\u00C6\",\n    \"aelig;\": \"\\u00E6\",\n    \"aelig\": \"\\u00E6\",\n    \"af;\": \"\\u2061\",\n    \"Afr;\": \"\\uD835\\uDD04\",\n    \"afr;\": \"\\uD835\\uDD1E\",\n    \"Agrave;\": \"\\u00C0\",\n    \"Agrave\": \"\\u00C0\",\n    \"agrave;\": \"\\u00E0\",\n    \"agrave\": \"\\u00E0\",\n    \"alefsym;\": \"\\u2135\",\n    \"aleph;\": \"\\u2135\",\n    \"Alpha;\": \"\\u0391\",\n    \"alpha;\": \"\\u03B1\",\n    \"Amacr;\": \"\\u0100\",\n    \"amacr;\": \"\\u0101\",\n    \"amalg;\": \"\\u2A3F\",\n    \"AMP;\": \"\\u0026\",\n    \"AMP\": \"\\u0026\",\n    \"amp;\": \"\\u0026\",\n    \"amp\": \"\\u0026\",\n    \"And;\": \"\\u2A53\",\n    \"and;\": \"\\u2227\",\n    \"andand;\": \"\\u2A55\",\n    \"andd;\": \"\\u2A5C\",\n    \"andslope;\": \"\\u2A58\",\n    \"andv;\": \"\\u2A5A\",\n    \"ang;\": \"\\u2220\",\n    \"ange;\": \"\\u29A4\",\n    \"angle;\": \"\\u2220\",\n    \"angmsd;\": \"\\u2221\",\n    \"angmsdaa;\": \"\\u29A8\",\n    \"angmsdab;\": \"\\u29A9\",\n    \"angmsdac;\": \"\\u29AA\",\n    \"angmsdad;\": \"\\u29AB\",\n    \"angmsdae;\": \"\\u29AC\",\n    \"angmsdaf;\": \"\\u29AD\",\n    \"angmsdag;\": \"\\u29AE\",\n    \"angmsdah;\": \"\\u29AF\",\n    \"angrt;\": \"\\u221F\",\n    \"angrtvb;\": \"\\u22BE\",\n    \"angrtvbd;\": \"\\u299D\",\n    \"angsph;\": \"\\u2222\",\n    \"angst;\": \"\\u00C5\",\n    \"angzarr;\": \"\\u237C\",\n    \"Aogon;\": \"\\u0104\",\n    \"aogon;\": \"\\u0105\",\n    \"Aopf;\": \"\\uD835\\uDD38\",\n    \"aopf;\": \"\\uD835\\uDD52\",\n    \"ap;\": \"\\u2248\",\n    \"apacir;\": \"\\u2A6F\",\n    \"apE;\": \"\\u2A70\",\n    \"ape;\": \"\\u224A\",\n    \"apid;\": \"\\u224B\",\n    \"apos;\": \"\\u0027\",\n    \"ApplyFunction;\": \"\\u2061\",\n    \"approx;\": \"\\u2248\",\n    \"approxeq;\": \"\\u224A\",\n    \"Aring;\": \"\\u00C5\",\n    \"Aring\": \"\\u00C5\",\n    \"aring;\": \"\\u00E5\",\n    \"aring\": \"\\u00E5\",\n    \"Ascr;\": \"\\uD835\\uDC9C\",\n    \"ascr;\": \"\\uD835\\uDCB6\",\n    \"Assign;\": \"\\u2254\",\n    \"ast;\": \"\\u002A\",\n    \"asymp;\": \"\\u2248\",\n    \"asympeq;\": \"\\u224D\",\n    \"Atilde;\": \"\\u00C3\",\n    \"Atilde\": \"\\u00C3\",\n    \"atilde;\": \"\\u00E3\",\n    \"atilde\": \"\\u00E3\",\n    \"Auml;\": \"\\u00C4\",\n    \"Auml\": \"\\u00C4\",\n    \"auml;\": \"\\u00E4\",\n    \"auml\": \"\\u00E4\",\n    \"awconint;\": \"\\u2233\",\n    \"awint;\": \"\\u2A11\",\n    \"backcong;\": \"\\u224C\",\n    \"backepsilon;\": \"\\u03F6\",\n    \"backprime;\": \"\\u2035\",\n    \"backsim;\": \"\\u223D\",\n    \"backsimeq;\": \"\\u22CD\",\n    \"Backslash;\": \"\\u2216\",\n    \"Barv;\": \"\\u2AE7\",\n    \"barvee;\": \"\\u22BD\",\n    \"Barwed;\": \"\\u2306\",\n    \"barwed;\": \"\\u2305\",\n    \"barwedge;\": \"\\u2305\",\n    \"bbrk;\": \"\\u23B5\",\n    \"bbrktbrk;\": \"\\u23B6\",\n    \"bcong;\": \"\\u224C\",\n    \"Bcy;\": \"\\u0411\",\n    \"bcy;\": \"\\u0431\",\n    \"bdquo;\": \"\\u201E\",\n    \"becaus;\": \"\\u2235\",\n    \"Because;\": \"\\u2235\",\n    \"because;\": \"\\u2235\",\n    \"bemptyv;\": \"\\u29B0\",\n    \"bepsi;\": \"\\u03F6\",\n    \"bernou;\": \"\\u212C\",\n    \"Bernoullis;\": \"\\u212C\",\n    \"Beta;\": \"\\u0392\",\n    \"beta;\": \"\\u03B2\",\n    \"beth;\": \"\\u2136\",\n    \"between;\": \"\\u226C\",\n    \"Bfr;\": \"\\uD835\\uDD05\",\n    \"bfr;\": \"\\uD835\\uDD1F\",\n    \"bigcap;\": \"\\u22C2\",\n    \"bigcirc;\": \"\\u25EF\",\n    \"bigcup;\": \"\\u22C3\",\n    \"bigodot;\": \"\\u2A00\",\n    \"bigoplus;\": \"\\u2A01\",\n    \"bigotimes;\": \"\\u2A02\",\n    \"bigsqcup;\": \"\\u2A06\",\n    \"bigstar;\": \"\\u2605\",\n    \"bigtriangledown;\": \"\\u25BD\",\n    \"bigtriangleup;\": \"\\u25B3\",\n    \"biguplus;\": \"\\u2A04\",\n    \"bigvee;\": \"\\u22C1\",\n    \"bigwedge;\": \"\\u22C0\",\n    \"bkarow;\": \"\\u290D\",\n    \"blacklozenge;\": \"\\u29EB\",\n    \"blacksquare;\": \"\\u25AA\",\n    \"blacktriangle;\": \"\\u25B4\",\n    \"blacktriangledown;\": \"\\u25BE\",\n    \"blacktriangleleft;\": \"\\u25C2\",\n    \"blacktriangleright;\": \"\\u25B8\",\n    \"blank;\": \"\\u2423\",\n    \"blk12;\": \"\\u2592\",\n    \"blk14;\": \"\\u2591\",\n    \"blk34;\": \"\\u2593\",\n    \"block;\": \"\\u2588\",\n    \"bne;\": \"\\u003D\\u20E5\",\n    \"bnequiv;\": \"\\u2261\\u20E5\",\n    \"bNot;\": \"\\u2AED\",\n    \"bnot;\": \"\\u2310\",\n    \"Bopf;\": \"\\uD835\\uDD39\",\n    \"bopf;\": \"\\uD835\\uDD53\",\n    \"bot;\": \"\\u22A5\",\n    \"bottom;\": \"\\u22A5\",\n    \"bowtie;\": \"\\u22C8\",\n    \"boxbox;\": \"\\u29C9\",\n    \"boxDL;\": \"\\u2557\",\n    \"boxDl;\": \"\\u2556\",\n    \"boxdL;\": \"\\u2555\",\n    \"boxdl;\": \"\\u2510\",\n    \"boxDR;\": \"\\u2554\",\n    \"boxDr;\": \"\\u2553\",\n    \"boxdR;\": \"\\u2552\",\n    \"boxdr;\": \"\\u250C\",\n    \"boxH;\": \"\\u2550\",\n    \"boxh;\": \"\\u2500\",\n    \"boxHD;\": \"\\u2566\",\n    \"boxHd;\": \"\\u2564\",\n    \"boxhD;\": \"\\u2565\",\n    \"boxhd;\": \"\\u252C\",\n    \"boxHU;\": \"\\u2569\",\n    \"boxHu;\": \"\\u2567\",\n    \"boxhU;\": \"\\u2568\",\n    \"boxhu;\": \"\\u2534\",\n    \"boxminus;\": \"\\u229F\",\n    \"boxplus;\": \"\\u229E\",\n    \"boxtimes;\": \"\\u22A0\",\n    \"boxUL;\": \"\\u255D\",\n    \"boxUl;\": \"\\u255C\",\n    \"boxuL;\": \"\\u255B\",\n    \"boxul;\": \"\\u2518\",\n    \"boxUR;\": \"\\u255A\",\n    \"boxUr;\": \"\\u2559\",\n    \"boxuR;\": \"\\u2558\",\n    \"boxur;\": \"\\u2514\",\n    \"boxV;\": \"\\u2551\",\n    \"boxv;\": \"\\u2502\",\n    \"boxVH;\": \"\\u256C\",\n    \"boxVh;\": \"\\u256B\",\n    \"boxvH;\": \"\\u256A\",\n    \"boxvh;\": \"\\u253C\",\n    \"boxVL;\": \"\\u2563\",\n    \"boxVl;\": \"\\u2562\",\n    \"boxvL;\": \"\\u2561\",\n    \"boxvl;\": \"\\u2524\",\n    \"boxVR;\": \"\\u2560\",\n    \"boxVr;\": \"\\u255F\",\n    \"boxvR;\": \"\\u255E\",\n    \"boxvr;\": \"\\u251C\",\n    \"bprime;\": \"\\u2035\",\n    \"Breve;\": \"\\u02D8\",\n    \"breve;\": \"\\u02D8\",\n    \"brvbar;\": \"\\u00A6\",\n    \"brvbar\": \"\\u00A6\",\n    \"Bscr;\": \"\\u212C\",\n    \"bscr;\": \"\\uD835\\uDCB7\",\n    \"bsemi;\": \"\\u204F\",\n    \"bsim;\": \"\\u223D\",\n    \"bsime;\": \"\\u22CD\",\n    \"bsol;\": \"\\u005C\",\n    \"bsolb;\": \"\\u29C5\",\n    \"bsolhsub;\": \"\\u27C8\",\n    \"bull;\": \"\\u2022\",\n    \"bullet;\": \"\\u2022\",\n    \"bump;\": \"\\u224E\",\n    \"bumpE;\": \"\\u2AAE\",\n    \"bumpe;\": \"\\u224F\",\n    \"Bumpeq;\": \"\\u224E\",\n    \"bumpeq;\": \"\\u224F\",\n    \"Cacute;\": \"\\u0106\",\n    \"cacute;\": \"\\u0107\",\n    \"Cap;\": \"\\u22D2\",\n    \"cap;\": \"\\u2229\",\n    \"capand;\": \"\\u2A44\",\n    \"capbrcup;\": \"\\u2A49\",\n    \"capcap;\": \"\\u2A4B\",\n    \"capcup;\": \"\\u2A47\",\n    \"capdot;\": \"\\u2A40\",\n    \"CapitalDifferentialD;\": \"\\u2145\",\n    \"caps;\": \"\\u2229\\uFE00\",\n    \"caret;\": \"\\u2041\",\n    \"caron;\": \"\\u02C7\",\n    \"Cayleys;\": \"\\u212D\",\n    \"ccaps;\": \"\\u2A4D\",\n    \"Ccaron;\": \"\\u010C\",\n    \"ccaron;\": \"\\u010D\",\n    \"Ccedil;\": \"\\u00C7\",\n    \"Ccedil\": \"\\u00C7\",\n    \"ccedil;\": \"\\u00E7\",\n    \"ccedil\": \"\\u00E7\",\n    \"Ccirc;\": \"\\u0108\",\n    \"ccirc;\": \"\\u0109\",\n    \"Cconint;\": \"\\u2230\",\n    \"ccups;\": \"\\u2A4C\",\n    \"ccupssm;\": \"\\u2A50\",\n    \"Cdot;\": \"\\u010A\",\n    \"cdot;\": \"\\u010B\",\n    \"cedil;\": \"\\u00B8\",\n    \"cedil\": \"\\u00B8\",\n    \"Cedilla;\": \"\\u00B8\",\n    \"cemptyv;\": \"\\u29B2\",\n    \"cent;\": \"\\u00A2\",\n    \"cent\": \"\\u00A2\",\n    \"CenterDot;\": \"\\u00B7\",\n    \"centerdot;\": \"\\u00B7\",\n    \"Cfr;\": \"\\u212D\",\n    \"cfr;\": \"\\uD835\\uDD20\",\n    \"CHcy;\": \"\\u0427\",\n    \"chcy;\": \"\\u0447\",\n    \"check;\": \"\\u2713\",\n    \"checkmark;\": \"\\u2713\",\n    \"Chi;\": \"\\u03A7\",\n    \"chi;\": \"\\u03C7\",\n    \"cir;\": \"\\u25CB\",\n    \"circ;\": \"\\u02C6\",\n    \"circeq;\": \"\\u2257\",\n    \"circlearrowleft;\": \"\\u21BA\",\n    \"circlearrowright;\": \"\\u21BB\",\n    \"circledast;\": \"\\u229B\",\n    \"circledcirc;\": \"\\u229A\",\n    \"circleddash;\": \"\\u229D\",\n    \"CircleDot;\": \"\\u2299\",\n    \"circledR;\": \"\\u00AE\",\n    \"circledS;\": \"\\u24C8\",\n    \"CircleMinus;\": \"\\u2296\",\n    \"CirclePlus;\": \"\\u2295\",\n    \"CircleTimes;\": \"\\u2297\",\n    \"cirE;\": \"\\u29C3\",\n    \"cire;\": \"\\u2257\",\n    \"cirfnint;\": \"\\u2A10\",\n    \"cirmid;\": \"\\u2AEF\",\n    \"cirscir;\": \"\\u29C2\",\n    \"ClockwiseContourIntegral;\": \"\\u2232\",\n    \"CloseCurlyDoubleQuote;\": \"\\u201D\",\n    \"CloseCurlyQuote;\": \"\\u2019\",\n    \"clubs;\": \"\\u2663\",\n    \"clubsuit;\": \"\\u2663\",\n    \"Colon;\": \"\\u2237\",\n    \"colon;\": \"\\u003A\",\n    \"Colone;\": \"\\u2A74\",\n    \"colone;\": \"\\u2254\",\n    \"coloneq;\": \"\\u2254\",\n    \"comma;\": \"\\u002C\",\n    \"commat;\": \"\\u0040\",\n    \"comp;\": \"\\u2201\",\n    \"compfn;\": \"\\u2218\",\n    \"complement;\": \"\\u2201\",\n    \"complexes;\": \"\\u2102\",\n    \"cong;\": \"\\u2245\",\n    \"congdot;\": \"\\u2A6D\",\n    \"Congruent;\": \"\\u2261\",\n    \"Conint;\": \"\\u222F\",\n    \"conint;\": \"\\u222E\",\n    \"ContourIntegral;\": \"\\u222E\",\n    \"Copf;\": \"\\u2102\",\n    \"copf;\": \"\\uD835\\uDD54\",\n    \"coprod;\": \"\\u2210\",\n    \"Coproduct;\": \"\\u2210\",\n    \"COPY;\": \"\\u00A9\",\n    \"COPY\": \"\\u00A9\",\n    \"copy;\": \"\\u00A9\",\n    \"copy\": \"\\u00A9\",\n    \"copysr;\": \"\\u2117\",\n    \"CounterClockwiseContourIntegral;\": \"\\u2233\",\n    \"crarr;\": \"\\u21B5\",\n    \"Cross;\": \"\\u2A2F\",\n    \"cross;\": \"\\u2717\",\n    \"Cscr;\": \"\\uD835\\uDC9E\",\n    \"cscr;\": \"\\uD835\\uDCB8\",\n    \"csub;\": \"\\u2ACF\",\n    \"csube;\": \"\\u2AD1\",\n    \"csup;\": \"\\u2AD0\",\n    \"csupe;\": \"\\u2AD2\",\n    \"ctdot;\": \"\\u22EF\",\n    \"cudarrl;\": \"\\u2938\",\n    \"cudarrr;\": \"\\u2935\",\n    \"cuepr;\": \"\\u22DE\",\n    \"cuesc;\": \"\\u22DF\",\n    \"cularr;\": \"\\u21B6\",\n    \"cularrp;\": \"\\u293D\",\n    \"Cup;\": \"\\u22D3\",\n    \"cup;\": \"\\u222A\",\n    \"cupbrcap;\": \"\\u2A48\",\n    \"CupCap;\": \"\\u224D\",\n    \"cupcap;\": \"\\u2A46\",\n    \"cupcup;\": \"\\u2A4A\",\n    \"cupdot;\": \"\\u228D\",\n    \"cupor;\": \"\\u2A45\",\n    \"cups;\": \"\\u222A\\uFE00\",\n    \"curarr;\": \"\\u21B7\",\n    \"curarrm;\": \"\\u293C\",\n    \"curlyeqprec;\": \"\\u22DE\",\n    \"curlyeqsucc;\": \"\\u22DF\",\n    \"curlyvee;\": \"\\u22CE\",\n    \"curlywedge;\": \"\\u22CF\",\n    \"curren;\": \"\\u00A4\",\n    \"curren\": \"\\u00A4\",\n    \"curvearrowleft;\": \"\\u21B6\",\n    \"curvearrowright;\": \"\\u21B7\",\n    \"cuvee;\": \"\\u22CE\",\n    \"cuwed;\": \"\\u22CF\",\n    \"cwconint;\": \"\\u2232\",\n    \"cwint;\": \"\\u2231\",\n    \"cylcty;\": \"\\u232D\",\n    \"Dagger;\": \"\\u2021\",\n    \"dagger;\": \"\\u2020\",\n    \"daleth;\": \"\\u2138\",\n    \"Darr;\": \"\\u21A1\",\n    \"dArr;\": \"\\u21D3\",\n    \"darr;\": \"\\u2193\",\n    \"dash;\": \"\\u2010\",\n    \"Dashv;\": \"\\u2AE4\",\n    \"dashv;\": \"\\u22A3\",\n    \"dbkarow;\": \"\\u290F\",\n    \"dblac;\": \"\\u02DD\",\n    \"Dcaron;\": \"\\u010E\",\n    \"dcaron;\": \"\\u010F\",\n    \"Dcy;\": \"\\u0414\",\n    \"dcy;\": \"\\u0434\",\n    \"DD;\": \"\\u2145\",\n    \"dd;\": \"\\u2146\",\n    \"ddagger;\": \"\\u2021\",\n    \"ddarr;\": \"\\u21CA\",\n    \"DDotrahd;\": \"\\u2911\",\n    \"ddotseq;\": \"\\u2A77\",\n    \"deg;\": \"\\u00B0\",\n    \"deg\": \"\\u00B0\",\n    \"Del;\": \"\\u2207\",\n    \"Delta;\": \"\\u0394\",\n    \"delta;\": \"\\u03B4\",\n    \"demptyv;\": \"\\u29B1\",\n    \"dfisht;\": \"\\u297F\",\n    \"Dfr;\": \"\\uD835\\uDD07\",\n    \"dfr;\": \"\\uD835\\uDD21\",\n    \"dHar;\": \"\\u2965\",\n    \"dharl;\": \"\\u21C3\",\n    \"dharr;\": \"\\u21C2\",\n    \"DiacriticalAcute;\": \"\\u00B4\",\n    \"DiacriticalDot;\": \"\\u02D9\",\n    \"DiacriticalDoubleAcute;\": \"\\u02DD\",\n    \"DiacriticalGrave;\": \"\\u0060\",\n    \"DiacriticalTilde;\": \"\\u02DC\",\n    \"diam;\": \"\\u22C4\",\n    \"Diamond;\": \"\\u22C4\",\n    \"diamond;\": \"\\u22C4\",\n    \"diamondsuit;\": \"\\u2666\",\n    \"diams;\": \"\\u2666\",\n    \"die;\": \"\\u00A8\",\n    \"DifferentialD;\": \"\\u2146\",\n    \"digamma;\": \"\\u03DD\",\n    \"disin;\": \"\\u22F2\",\n    \"div;\": \"\\u00F7\",\n    \"divide;\": \"\\u00F7\",\n    \"divide\": \"\\u00F7\",\n    \"divideontimes;\": \"\\u22C7\",\n    \"divonx;\": \"\\u22C7\",\n    \"DJcy;\": \"\\u0402\",\n    \"djcy;\": \"\\u0452\",\n    \"dlcorn;\": \"\\u231E\",\n    \"dlcrop;\": \"\\u230D\",\n    \"dollar;\": \"\\u0024\",\n    \"Dopf;\": \"\\uD835\\uDD3B\",\n    \"dopf;\": \"\\uD835\\uDD55\",\n    \"Dot;\": \"\\u00A8\",\n    \"dot;\": \"\\u02D9\",\n    \"DotDot;\": \"\\u20DC\",\n    \"doteq;\": \"\\u2250\",\n    \"doteqdot;\": \"\\u2251\",\n    \"DotEqual;\": \"\\u2250\",\n    \"dotminus;\": \"\\u2238\",\n    \"dotplus;\": \"\\u2214\",\n    \"dotsquare;\": \"\\u22A1\",\n    \"doublebarwedge;\": \"\\u2306\",\n    \"DoubleContourIntegral;\": \"\\u222F\",\n    \"DoubleDot;\": \"\\u00A8\",\n    \"DoubleDownArrow;\": \"\\u21D3\",\n    \"DoubleLeftArrow;\": \"\\u21D0\",\n    \"DoubleLeftRightArrow;\": \"\\u21D4\",\n    \"DoubleLeftTee;\": \"\\u2AE4\",\n    \"DoubleLongLeftArrow;\": \"\\u27F8\",\n    \"DoubleLongLeftRightArrow;\": \"\\u27FA\",\n    \"DoubleLongRightArrow;\": \"\\u27F9\",\n    \"DoubleRightArrow;\": \"\\u21D2\",\n    \"DoubleRightTee;\": \"\\u22A8\",\n    \"DoubleUpArrow;\": \"\\u21D1\",\n    \"DoubleUpDownArrow;\": \"\\u21D5\",\n    \"DoubleVerticalBar;\": \"\\u2225\",\n    \"DownArrow;\": \"\\u2193\",\n    \"Downarrow;\": \"\\u21D3\",\n    \"downarrow;\": \"\\u2193\",\n    \"DownArrowBar;\": \"\\u2913\",\n    \"DownArrowUpArrow;\": \"\\u21F5\",\n    \"DownBreve;\": \"\\u0311\",\n    \"downdownarrows;\": \"\\u21CA\",\n    \"downharpoonleft;\": \"\\u21C3\",\n    \"downharpoonright;\": \"\\u21C2\",\n    \"DownLeftRightVector;\": \"\\u2950\",\n    \"DownLeftTeeVector;\": \"\\u295E\",\n    \"DownLeftVector;\": \"\\u21BD\",\n    \"DownLeftVectorBar;\": \"\\u2956\",\n    \"DownRightTeeVector;\": \"\\u295F\",\n    \"DownRightVector;\": \"\\u21C1\",\n    \"DownRightVectorBar;\": \"\\u2957\",\n    \"DownTee;\": \"\\u22A4\",\n    \"DownTeeArrow;\": \"\\u21A7\",\n    \"drbkarow;\": \"\\u2910\",\n    \"drcorn;\": \"\\u231F\",\n    \"drcrop;\": \"\\u230C\",\n    \"Dscr;\": \"\\uD835\\uDC9F\",\n    \"dscr;\": \"\\uD835\\uDCB9\",\n    \"DScy;\": \"\\u0405\",\n    \"dscy;\": \"\\u0455\",\n    \"dsol;\": \"\\u29F6\",\n    \"Dstrok;\": \"\\u0110\",\n    \"dstrok;\": \"\\u0111\",\n    \"dtdot;\": \"\\u22F1\",\n    \"dtri;\": \"\\u25BF\",\n    \"dtrif;\": \"\\u25BE\",\n    \"duarr;\": \"\\u21F5\",\n    \"duhar;\": \"\\u296F\",\n    \"dwangle;\": \"\\u29A6\",\n    \"DZcy;\": \"\\u040F\",\n    \"dzcy;\": \"\\u045F\",\n    \"dzigrarr;\": \"\\u27FF\",\n    \"Eacute;\": \"\\u00C9\",\n    \"Eacute\": \"\\u00C9\",\n    \"eacute;\": \"\\u00E9\",\n    \"eacute\": \"\\u00E9\",\n    \"easter;\": \"\\u2A6E\",\n    \"Ecaron;\": \"\\u011A\",\n    \"ecaron;\": \"\\u011B\",\n    \"ecir;\": \"\\u2256\",\n    \"Ecirc;\": \"\\u00CA\",\n    \"Ecirc\": \"\\u00CA\",\n    \"ecirc;\": \"\\u00EA\",\n    \"ecirc\": \"\\u00EA\",\n    \"ecolon;\": \"\\u2255\",\n    \"Ecy;\": \"\\u042D\",\n    \"ecy;\": \"\\u044D\",\n    \"eDDot;\": \"\\u2A77\",\n    \"Edot;\": \"\\u0116\",\n    \"eDot;\": \"\\u2251\",\n    \"edot;\": \"\\u0117\",\n    \"ee;\": \"\\u2147\",\n    \"efDot;\": \"\\u2252\",\n    \"Efr;\": \"\\uD835\\uDD08\",\n    \"efr;\": \"\\uD835\\uDD22\",\n    \"eg;\": \"\\u2A9A\",\n    \"Egrave;\": \"\\u00C8\",\n    \"Egrave\": \"\\u00C8\",\n    \"egrave;\": \"\\u00E8\",\n    \"egrave\": \"\\u00E8\",\n    \"egs;\": \"\\u2A96\",\n    \"egsdot;\": \"\\u2A98\",\n    \"el;\": \"\\u2A99\",\n    \"Element;\": \"\\u2208\",\n    \"elinters;\": \"\\u23E7\",\n    \"ell;\": \"\\u2113\",\n    \"els;\": \"\\u2A95\",\n    \"elsdot;\": \"\\u2A97\",\n    \"Emacr;\": \"\\u0112\",\n    \"emacr;\": \"\\u0113\",\n    \"empty;\": \"\\u2205\",\n    \"emptyset;\": \"\\u2205\",\n    \"EmptySmallSquare;\": \"\\u25FB\",\n    \"emptyv;\": \"\\u2205\",\n    \"EmptyVerySmallSquare;\": \"\\u25AB\",\n    \"emsp;\": \"\\u2003\",\n    \"emsp13;\": \"\\u2004\",\n    \"emsp14;\": \"\\u2005\",\n    \"ENG;\": \"\\u014A\",\n    \"eng;\": \"\\u014B\",\n    \"ensp;\": \"\\u2002\",\n    \"Eogon;\": \"\\u0118\",\n    \"eogon;\": \"\\u0119\",\n    \"Eopf;\": \"\\uD835\\uDD3C\",\n    \"eopf;\": \"\\uD835\\uDD56\",\n    \"epar;\": \"\\u22D5\",\n    \"eparsl;\": \"\\u29E3\",\n    \"eplus;\": \"\\u2A71\",\n    \"epsi;\": \"\\u03B5\",\n    \"Epsilon;\": \"\\u0395\",\n    \"epsilon;\": \"\\u03B5\",\n    \"epsiv;\": \"\\u03F5\",\n    \"eqcirc;\": \"\\u2256\",\n    \"eqcolon;\": \"\\u2255\",\n    \"eqsim;\": \"\\u2242\",\n    \"eqslantgtr;\": \"\\u2A96\",\n    \"eqslantless;\": \"\\u2A95\",\n    \"Equal;\": \"\\u2A75\",\n    \"equals;\": \"\\u003D\",\n    \"EqualTilde;\": \"\\u2242\",\n    \"equest;\": \"\\u225F\",\n    \"Equilibrium;\": \"\\u21CC\",\n    \"equiv;\": \"\\u2261\",\n    \"equivDD;\": \"\\u2A78\",\n    \"eqvparsl;\": \"\\u29E5\",\n    \"erarr;\": \"\\u2971\",\n    \"erDot;\": \"\\u2253\",\n    \"Escr;\": \"\\u2130\",\n    \"escr;\": \"\\u212F\",\n    \"esdot;\": \"\\u2250\",\n    \"Esim;\": \"\\u2A73\",\n    \"esim;\": \"\\u2242\",\n    \"Eta;\": \"\\u0397\",\n    \"eta;\": \"\\u03B7\",\n    \"ETH;\": \"\\u00D0\",\n    \"ETH\": \"\\u00D0\",\n    \"eth;\": \"\\u00F0\",\n    \"eth\": \"\\u00F0\",\n    \"Euml;\": \"\\u00CB\",\n    \"Euml\": \"\\u00CB\",\n    \"euml;\": \"\\u00EB\",\n    \"euml\": \"\\u00EB\",\n    \"euro;\": \"\\u20AC\",\n    \"excl;\": \"\\u0021\",\n    \"exist;\": \"\\u2203\",\n    \"Exists;\": \"\\u2203\",\n    \"expectation;\": \"\\u2130\",\n    \"ExponentialE;\": \"\\u2147\",\n    \"exponentiale;\": \"\\u2147\",\n    \"fallingdotseq;\": \"\\u2252\",\n    \"Fcy;\": \"\\u0424\",\n    \"fcy;\": \"\\u0444\",\n    \"female;\": \"\\u2640\",\n    \"ffilig;\": \"\\uFB03\",\n    \"fflig;\": \"\\uFB00\",\n    \"ffllig;\": \"\\uFB04\",\n    \"Ffr;\": \"\\uD835\\uDD09\",\n    \"ffr;\": \"\\uD835\\uDD23\",\n    \"filig;\": \"\\uFB01\",\n    \"FilledSmallSquare;\": \"\\u25FC\",\n    \"FilledVerySmallSquare;\": \"\\u25AA\",\n    \"fjlig;\": \"\\u0066\\u006A\",\n    \"flat;\": \"\\u266D\",\n    \"fllig;\": \"\\uFB02\",\n    \"fltns;\": \"\\u25B1\",\n    \"fnof;\": \"\\u0192\",\n    \"Fopf;\": \"\\uD835\\uDD3D\",\n    \"fopf;\": \"\\uD835\\uDD57\",\n    \"ForAll;\": \"\\u2200\",\n    \"forall;\": \"\\u2200\",\n    \"fork;\": \"\\u22D4\",\n    \"forkv;\": \"\\u2AD9\",\n    \"Fouriertrf;\": \"\\u2131\",\n    \"fpartint;\": \"\\u2A0D\",\n    \"frac12;\": \"\\u00BD\",\n    \"frac12\": \"\\u00BD\",\n    \"frac13;\": \"\\u2153\",\n    \"frac14;\": \"\\u00BC\",\n    \"frac14\": \"\\u00BC\",\n    \"frac15;\": \"\\u2155\",\n    \"frac16;\": \"\\u2159\",\n    \"frac18;\": \"\\u215B\",\n    \"frac23;\": \"\\u2154\",\n    \"frac25;\": \"\\u2156\",\n    \"frac34;\": \"\\u00BE\",\n    \"frac34\": \"\\u00BE\",\n    \"frac35;\": \"\\u2157\",\n    \"frac38;\": \"\\u215C\",\n    \"frac45;\": \"\\u2158\",\n    \"frac56;\": \"\\u215A\",\n    \"frac58;\": \"\\u215D\",\n    \"frac78;\": \"\\u215E\",\n    \"frasl;\": \"\\u2044\",\n    \"frown;\": \"\\u2322\",\n    \"Fscr;\": \"\\u2131\",\n    \"fscr;\": \"\\uD835\\uDCBB\",\n    \"gacute;\": \"\\u01F5\",\n    \"Gamma;\": \"\\u0393\",\n    \"gamma;\": \"\\u03B3\",\n    \"Gammad;\": \"\\u03DC\",\n    \"gammad;\": \"\\u03DD\",\n    \"gap;\": \"\\u2A86\",\n    \"Gbreve;\": \"\\u011E\",\n    \"gbreve;\": \"\\u011F\",\n    \"Gcedil;\": \"\\u0122\",\n    \"Gcirc;\": \"\\u011C\",\n    \"gcirc;\": \"\\u011D\",\n    \"Gcy;\": \"\\u0413\",\n    \"gcy;\": \"\\u0433\",\n    \"Gdot;\": \"\\u0120\",\n    \"gdot;\": \"\\u0121\",\n    \"gE;\": \"\\u2267\",\n    \"ge;\": \"\\u2265\",\n    \"gEl;\": \"\\u2A8C\",\n    \"gel;\": \"\\u22DB\",\n    \"geq;\": \"\\u2265\",\n    \"geqq;\": \"\\u2267\",\n    \"geqslant;\": \"\\u2A7E\",\n    \"ges;\": \"\\u2A7E\",\n    \"gescc;\": \"\\u2AA9\",\n    \"gesdot;\": \"\\u2A80\",\n    \"gesdoto;\": \"\\u2A82\",\n    \"gesdotol;\": \"\\u2A84\",\n    \"gesl;\": \"\\u22DB\\uFE00\",\n    \"gesles;\": \"\\u2A94\",\n    \"Gfr;\": \"\\uD835\\uDD0A\",\n    \"gfr;\": \"\\uD835\\uDD24\",\n    \"Gg;\": \"\\u22D9\",\n    \"gg;\": \"\\u226B\",\n    \"ggg;\": \"\\u22D9\",\n    \"gimel;\": \"\\u2137\",\n    \"GJcy;\": \"\\u0403\",\n    \"gjcy;\": \"\\u0453\",\n    \"gl;\": \"\\u2277\",\n    \"gla;\": \"\\u2AA5\",\n    \"glE;\": \"\\u2A92\",\n    \"glj;\": \"\\u2AA4\",\n    \"gnap;\": \"\\u2A8A\",\n    \"gnapprox;\": \"\\u2A8A\",\n    \"gnE;\": \"\\u2269\",\n    \"gne;\": \"\\u2A88\",\n    \"gneq;\": \"\\u2A88\",\n    \"gneqq;\": \"\\u2269\",\n    \"gnsim;\": \"\\u22E7\",\n    \"Gopf;\": \"\\uD835\\uDD3E\",\n    \"gopf;\": \"\\uD835\\uDD58\",\n    \"grave;\": \"\\u0060\",\n    \"GreaterEqual;\": \"\\u2265\",\n    \"GreaterEqualLess;\": \"\\u22DB\",\n    \"GreaterFullEqual;\": \"\\u2267\",\n    \"GreaterGreater;\": \"\\u2AA2\",\n    \"GreaterLess;\": \"\\u2277\",\n    \"GreaterSlantEqual;\": \"\\u2A7E\",\n    \"GreaterTilde;\": \"\\u2273\",\n    \"Gscr;\": \"\\uD835\\uDCA2\",\n    \"gscr;\": \"\\u210A\",\n    \"gsim;\": \"\\u2273\",\n    \"gsime;\": \"\\u2A8E\",\n    \"gsiml;\": \"\\u2A90\",\n    \"GT;\": \"\\u003E\",\n    \"GT\": \"\\u003E\",\n    \"Gt;\": \"\\u226B\",\n    \"gt;\": \"\\u003E\",\n    \"gt\": \"\\u003E\",\n    \"gtcc;\": \"\\u2AA7\",\n    \"gtcir;\": \"\\u2A7A\",\n    \"gtdot;\": \"\\u22D7\",\n    \"gtlPar;\": \"\\u2995\",\n    \"gtquest;\": \"\\u2A7C\",\n    \"gtrapprox;\": \"\\u2A86\",\n    \"gtrarr;\": \"\\u2978\",\n    \"gtrdot;\": \"\\u22D7\",\n    \"gtreqless;\": \"\\u22DB\",\n    \"gtreqqless;\": \"\\u2A8C\",\n    \"gtrless;\": \"\\u2277\",\n    \"gtrsim;\": \"\\u2273\",\n    \"gvertneqq;\": \"\\u2269\\uFE00\",\n    \"gvnE;\": \"\\u2269\\uFE00\",\n    \"Hacek;\": \"\\u02C7\",\n    \"hairsp;\": \"\\u200A\",\n    \"half;\": \"\\u00BD\",\n    \"hamilt;\": \"\\u210B\",\n    \"HARDcy;\": \"\\u042A\",\n    \"hardcy;\": \"\\u044A\",\n    \"hArr;\": \"\\u21D4\",\n    \"harr;\": \"\\u2194\",\n    \"harrcir;\": \"\\u2948\",\n    \"harrw;\": \"\\u21AD\",\n    \"Hat;\": \"\\u005E\",\n    \"hbar;\": \"\\u210F\",\n    \"Hcirc;\": \"\\u0124\",\n    \"hcirc;\": \"\\u0125\",\n    \"hearts;\": \"\\u2665\",\n    \"heartsuit;\": \"\\u2665\",\n    \"hellip;\": \"\\u2026\",\n    \"hercon;\": \"\\u22B9\",\n    \"Hfr;\": \"\\u210C\",\n    \"hfr;\": \"\\uD835\\uDD25\",\n    \"HilbertSpace;\": \"\\u210B\",\n    \"hksearow;\": \"\\u2925\",\n    \"hkswarow;\": \"\\u2926\",\n    \"hoarr;\": \"\\u21FF\",\n    \"homtht;\": \"\\u223B\",\n    \"hookleftarrow;\": \"\\u21A9\",\n    \"hookrightarrow;\": \"\\u21AA\",\n    \"Hopf;\": \"\\u210D\",\n    \"hopf;\": \"\\uD835\\uDD59\",\n    \"horbar;\": \"\\u2015\",\n    \"HorizontalLine;\": \"\\u2500\",\n    \"Hscr;\": \"\\u210B\",\n    \"hscr;\": \"\\uD835\\uDCBD\",\n    \"hslash;\": \"\\u210F\",\n    \"Hstrok;\": \"\\u0126\",\n    \"hstrok;\": \"\\u0127\",\n    \"HumpDownHump;\": \"\\u224E\",\n    \"HumpEqual;\": \"\\u224F\",\n    \"hybull;\": \"\\u2043\",\n    \"hyphen;\": \"\\u2010\",\n    \"Iacute;\": \"\\u00CD\",\n    \"Iacute\": \"\\u00CD\",\n    \"iacute;\": \"\\u00ED\",\n    \"iacute\": \"\\u00ED\",\n    \"ic;\": \"\\u2063\",\n    \"Icirc;\": \"\\u00CE\",\n    \"Icirc\": \"\\u00CE\",\n    \"icirc;\": \"\\u00EE\",\n    \"icirc\": \"\\u00EE\",\n    \"Icy;\": \"\\u0418\",\n    \"icy;\": \"\\u0438\",\n    \"Idot;\": \"\\u0130\",\n    \"IEcy;\": \"\\u0415\",\n    \"iecy;\": \"\\u0435\",\n    \"iexcl;\": \"\\u00A1\",\n    \"iexcl\": \"\\u00A1\",\n    \"iff;\": \"\\u21D4\",\n    \"Ifr;\": \"\\u2111\",\n    \"ifr;\": \"\\uD835\\uDD26\",\n    \"Igrave;\": \"\\u00CC\",\n    \"Igrave\": \"\\u00CC\",\n    \"igrave;\": \"\\u00EC\",\n    \"igrave\": \"\\u00EC\",\n    \"ii;\": \"\\u2148\",\n    \"iiiint;\": \"\\u2A0C\",\n    \"iiint;\": \"\\u222D\",\n    \"iinfin;\": \"\\u29DC\",\n    \"iiota;\": \"\\u2129\",\n    \"IJlig;\": \"\\u0132\",\n    \"ijlig;\": \"\\u0133\",\n    \"Im;\": \"\\u2111\",\n    \"Imacr;\": \"\\u012A\",\n    \"imacr;\": \"\\u012B\",\n    \"image;\": \"\\u2111\",\n    \"ImaginaryI;\": \"\\u2148\",\n    \"imagline;\": \"\\u2110\",\n    \"imagpart;\": \"\\u2111\",\n    \"imath;\": \"\\u0131\",\n    \"imof;\": \"\\u22B7\",\n    \"imped;\": \"\\u01B5\",\n    \"Implies;\": \"\\u21D2\",\n    \"in;\": \"\\u2208\",\n    \"incare;\": \"\\u2105\",\n    \"infin;\": \"\\u221E\",\n    \"infintie;\": \"\\u29DD\",\n    \"inodot;\": \"\\u0131\",\n    \"Int;\": \"\\u222C\",\n    \"int;\": \"\\u222B\",\n    \"intcal;\": \"\\u22BA\",\n    \"integers;\": \"\\u2124\",\n    \"Integral;\": \"\\u222B\",\n    \"intercal;\": \"\\u22BA\",\n    \"Intersection;\": \"\\u22C2\",\n    \"intlarhk;\": \"\\u2A17\",\n    \"intprod;\": \"\\u2A3C\",\n    \"InvisibleComma;\": \"\\u2063\",\n    \"InvisibleTimes;\": \"\\u2062\",\n    \"IOcy;\": \"\\u0401\",\n    \"iocy;\": \"\\u0451\",\n    \"Iogon;\": \"\\u012E\",\n    \"iogon;\": \"\\u012F\",\n    \"Iopf;\": \"\\uD835\\uDD40\",\n    \"iopf;\": \"\\uD835\\uDD5A\",\n    \"Iota;\": \"\\u0399\",\n    \"iota;\": \"\\u03B9\",\n    \"iprod;\": \"\\u2A3C\",\n    \"iquest;\": \"\\u00BF\",\n    \"iquest\": \"\\u00BF\",\n    \"Iscr;\": \"\\u2110\",\n    \"iscr;\": \"\\uD835\\uDCBE\",\n    \"isin;\": \"\\u2208\",\n    \"isindot;\": \"\\u22F5\",\n    \"isinE;\": \"\\u22F9\",\n    \"isins;\": \"\\u22F4\",\n    \"isinsv;\": \"\\u22F3\",\n    \"isinv;\": \"\\u2208\",\n    \"it;\": \"\\u2062\",\n    \"Itilde;\": \"\\u0128\",\n    \"itilde;\": \"\\u0129\",\n    \"Iukcy;\": \"\\u0406\",\n    \"iukcy;\": \"\\u0456\",\n    \"Iuml;\": \"\\u00CF\",\n    \"Iuml\": \"\\u00CF\",\n    \"iuml;\": \"\\u00EF\",\n    \"iuml\": \"\\u00EF\",\n    \"Jcirc;\": \"\\u0134\",\n    \"jcirc;\": \"\\u0135\",\n    \"Jcy;\": \"\\u0419\",\n    \"jcy;\": \"\\u0439\",\n    \"Jfr;\": \"\\uD835\\uDD0D\",\n    \"jfr;\": \"\\uD835\\uDD27\",\n    \"jmath;\": \"\\u0237\",\n    \"Jopf;\": \"\\uD835\\uDD41\",\n    \"jopf;\": \"\\uD835\\uDD5B\",\n    \"Jscr;\": \"\\uD835\\uDCA5\",\n    \"jscr;\": \"\\uD835\\uDCBF\",\n    \"Jsercy;\": \"\\u0408\",\n    \"jsercy;\": \"\\u0458\",\n    \"Jukcy;\": \"\\u0404\",\n    \"jukcy;\": \"\\u0454\",\n    \"Kappa;\": \"\\u039A\",\n    \"kappa;\": \"\\u03BA\",\n    \"kappav;\": \"\\u03F0\",\n    \"Kcedil;\": \"\\u0136\",\n    \"kcedil;\": \"\\u0137\",\n    \"Kcy;\": \"\\u041A\",\n    \"kcy;\": \"\\u043A\",\n    \"Kfr;\": \"\\uD835\\uDD0E\",\n    \"kfr;\": \"\\uD835\\uDD28\",\n    \"kgreen;\": \"\\u0138\",\n    \"KHcy;\": \"\\u0425\",\n    \"khcy;\": \"\\u0445\",\n    \"KJcy;\": \"\\u040C\",\n    \"kjcy;\": \"\\u045C\",\n    \"Kopf;\": \"\\uD835\\uDD42\",\n    \"kopf;\": \"\\uD835\\uDD5C\",\n    \"Kscr;\": \"\\uD835\\uDCA6\",\n    \"kscr;\": \"\\uD835\\uDCC0\",\n    \"lAarr;\": \"\\u21DA\",\n    \"Lacute;\": \"\\u0139\",\n    \"lacute;\": \"\\u013A\",\n    \"laemptyv;\": \"\\u29B4\",\n    \"lagran;\": \"\\u2112\",\n    \"Lambda;\": \"\\u039B\",\n    \"lambda;\": \"\\u03BB\",\n    \"Lang;\": \"\\u27EA\",\n    \"lang;\": \"\\u27E8\",\n    \"langd;\": \"\\u2991\",\n    \"langle;\": \"\\u27E8\",\n    \"lap;\": \"\\u2A85\",\n    \"Laplacetrf;\": \"\\u2112\",\n    \"laquo;\": \"\\u00AB\",\n    \"laquo\": \"\\u00AB\",\n    \"Larr;\": \"\\u219E\",\n    \"lArr;\": \"\\u21D0\",\n    \"larr;\": \"\\u2190\",\n    \"larrb;\": \"\\u21E4\",\n    \"larrbfs;\": \"\\u291F\",\n    \"larrfs;\": \"\\u291D\",\n    \"larrhk;\": \"\\u21A9\",\n    \"larrlp;\": \"\\u21AB\",\n    \"larrpl;\": \"\\u2939\",\n    \"larrsim;\": \"\\u2973\",\n    \"larrtl;\": \"\\u21A2\",\n    \"lat;\": \"\\u2AAB\",\n    \"lAtail;\": \"\\u291B\",\n    \"latail;\": \"\\u2919\",\n    \"late;\": \"\\u2AAD\",\n    \"lates;\": \"\\u2AAD\\uFE00\",\n    \"lBarr;\": \"\\u290E\",\n    \"lbarr;\": \"\\u290C\",\n    \"lbbrk;\": \"\\u2772\",\n    \"lbrace;\": \"\\u007B\",\n    \"lbrack;\": \"\\u005B\",\n    \"lbrke;\": \"\\u298B\",\n    \"lbrksld;\": \"\\u298F\",\n    \"lbrkslu;\": \"\\u298D\",\n    \"Lcaron;\": \"\\u013D\",\n    \"lcaron;\": \"\\u013E\",\n    \"Lcedil;\": \"\\u013B\",\n    \"lcedil;\": \"\\u013C\",\n    \"lceil;\": \"\\u2308\",\n    \"lcub;\": \"\\u007B\",\n    \"Lcy;\": \"\\u041B\",\n    \"lcy;\": \"\\u043B\",\n    \"ldca;\": \"\\u2936\",\n    \"ldquo;\": \"\\u201C\",\n    \"ldquor;\": \"\\u201E\",\n    \"ldrdhar;\": \"\\u2967\",\n    \"ldrushar;\": \"\\u294B\",\n    \"ldsh;\": \"\\u21B2\",\n    \"lE;\": \"\\u2266\",\n    \"le;\": \"\\u2264\",\n    \"LeftAngleBracket;\": \"\\u27E8\",\n    \"LeftArrow;\": \"\\u2190\",\n    \"Leftarrow;\": \"\\u21D0\",\n    \"leftarrow;\": \"\\u2190\",\n    \"LeftArrowBar;\": \"\\u21E4\",\n    \"LeftArrowRightArrow;\": \"\\u21C6\",\n    \"leftarrowtail;\": \"\\u21A2\",\n    \"LeftCeiling;\": \"\\u2308\",\n    \"LeftDoubleBracket;\": \"\\u27E6\",\n    \"LeftDownTeeVector;\": \"\\u2961\",\n    \"LeftDownVector;\": \"\\u21C3\",\n    \"LeftDownVectorBar;\": \"\\u2959\",\n    \"LeftFloor;\": \"\\u230A\",\n    \"leftharpoondown;\": \"\\u21BD\",\n    \"leftharpoonup;\": \"\\u21BC\",\n    \"leftleftarrows;\": \"\\u21C7\",\n    \"LeftRightArrow;\": \"\\u2194\",\n    \"Leftrightarrow;\": \"\\u21D4\",\n    \"leftrightarrow;\": \"\\u2194\",\n    \"leftrightarrows;\": \"\\u21C6\",\n    \"leftrightharpoons;\": \"\\u21CB\",\n    \"leftrightsquigarrow;\": \"\\u21AD\",\n    \"LeftRightVector;\": \"\\u294E\",\n    \"LeftTee;\": \"\\u22A3\",\n    \"LeftTeeArrow;\": \"\\u21A4\",\n    \"LeftTeeVector;\": \"\\u295A\",\n    \"leftthreetimes;\": \"\\u22CB\",\n    \"LeftTriangle;\": \"\\u22B2\",\n    \"LeftTriangleBar;\": \"\\u29CF\",\n    \"LeftTriangleEqual;\": \"\\u22B4\",\n    \"LeftUpDownVector;\": \"\\u2951\",\n    \"LeftUpTeeVector;\": \"\\u2960\",\n    \"LeftUpVector;\": \"\\u21BF\",\n    \"LeftUpVectorBar;\": \"\\u2958\",\n    \"LeftVector;\": \"\\u21BC\",\n    \"LeftVectorBar;\": \"\\u2952\",\n    \"lEg;\": \"\\u2A8B\",\n    \"leg;\": \"\\u22DA\",\n    \"leq;\": \"\\u2264\",\n    \"leqq;\": \"\\u2266\",\n    \"leqslant;\": \"\\u2A7D\",\n    \"les;\": \"\\u2A7D\",\n    \"lescc;\": \"\\u2AA8\",\n    \"lesdot;\": \"\\u2A7F\",\n    \"lesdoto;\": \"\\u2A81\",\n    \"lesdotor;\": \"\\u2A83\",\n    \"lesg;\": \"\\u22DA\\uFE00\",\n    \"lesges;\": \"\\u2A93\",\n    \"lessapprox;\": \"\\u2A85\",\n    \"lessdot;\": \"\\u22D6\",\n    \"lesseqgtr;\": \"\\u22DA\",\n    \"lesseqqgtr;\": \"\\u2A8B\",\n    \"LessEqualGreater;\": \"\\u22DA\",\n    \"LessFullEqual;\": \"\\u2266\",\n    \"LessGreater;\": \"\\u2276\",\n    \"lessgtr;\": \"\\u2276\",\n    \"LessLess;\": \"\\u2AA1\",\n    \"lesssim;\": \"\\u2272\",\n    \"LessSlantEqual;\": \"\\u2A7D\",\n    \"LessTilde;\": \"\\u2272\",\n    \"lfisht;\": \"\\u297C\",\n    \"lfloor;\": \"\\u230A\",\n    \"Lfr;\": \"\\uD835\\uDD0F\",\n    \"lfr;\": \"\\uD835\\uDD29\",\n    \"lg;\": \"\\u2276\",\n    \"lgE;\": \"\\u2A91\",\n    \"lHar;\": \"\\u2962\",\n    \"lhard;\": \"\\u21BD\",\n    \"lharu;\": \"\\u21BC\",\n    \"lharul;\": \"\\u296A\",\n    \"lhblk;\": \"\\u2584\",\n    \"LJcy;\": \"\\u0409\",\n    \"ljcy;\": \"\\u0459\",\n    \"Ll;\": \"\\u22D8\",\n    \"ll;\": \"\\u226A\",\n    \"llarr;\": \"\\u21C7\",\n    \"llcorner;\": \"\\u231E\",\n    \"Lleftarrow;\": \"\\u21DA\",\n    \"llhard;\": \"\\u296B\",\n    \"lltri;\": \"\\u25FA\",\n    \"Lmidot;\": \"\\u013F\",\n    \"lmidot;\": \"\\u0140\",\n    \"lmoust;\": \"\\u23B0\",\n    \"lmoustache;\": \"\\u23B0\",\n    \"lnap;\": \"\\u2A89\",\n    \"lnapprox;\": \"\\u2A89\",\n    \"lnE;\": \"\\u2268\",\n    \"lne;\": \"\\u2A87\",\n    \"lneq;\": \"\\u2A87\",\n    \"lneqq;\": \"\\u2268\",\n    \"lnsim;\": \"\\u22E6\",\n    \"loang;\": \"\\u27EC\",\n    \"loarr;\": \"\\u21FD\",\n    \"lobrk;\": \"\\u27E6\",\n    \"LongLeftArrow;\": \"\\u27F5\",\n    \"Longleftarrow;\": \"\\u27F8\",\n    \"longleftarrow;\": \"\\u27F5\",\n    \"LongLeftRightArrow;\": \"\\u27F7\",\n    \"Longleftrightarrow;\": \"\\u27FA\",\n    \"longleftrightarrow;\": \"\\u27F7\",\n    \"longmapsto;\": \"\\u27FC\",\n    \"LongRightArrow;\": \"\\u27F6\",\n    \"Longrightarrow;\": \"\\u27F9\",\n    \"longrightarrow;\": \"\\u27F6\",\n    \"looparrowleft;\": \"\\u21AB\",\n    \"looparrowright;\": \"\\u21AC\",\n    \"lopar;\": \"\\u2985\",\n    \"Lopf;\": \"\\uD835\\uDD43\",\n    \"lopf;\": \"\\uD835\\uDD5D\",\n    \"loplus;\": \"\\u2A2D\",\n    \"lotimes;\": \"\\u2A34\",\n    \"lowast;\": \"\\u2217\",\n    \"lowbar;\": \"\\u005F\",\n    \"LowerLeftArrow;\": \"\\u2199\",\n    \"LowerRightArrow;\": \"\\u2198\",\n    \"loz;\": \"\\u25CA\",\n    \"lozenge;\": \"\\u25CA\",\n    \"lozf;\": \"\\u29EB\",\n    \"lpar;\": \"\\u0028\",\n    \"lparlt;\": \"\\u2993\",\n    \"lrarr;\": \"\\u21C6\",\n    \"lrcorner;\": \"\\u231F\",\n    \"lrhar;\": \"\\u21CB\",\n    \"lrhard;\": \"\\u296D\",\n    \"lrm;\": \"\\u200E\",\n    \"lrtri;\": \"\\u22BF\",\n    \"lsaquo;\": \"\\u2039\",\n    \"Lscr;\": \"\\u2112\",\n    \"lscr;\": \"\\uD835\\uDCC1\",\n    \"Lsh;\": \"\\u21B0\",\n    \"lsh;\": \"\\u21B0\",\n    \"lsim;\": \"\\u2272\",\n    \"lsime;\": \"\\u2A8D\",\n    \"lsimg;\": \"\\u2A8F\",\n    \"lsqb;\": \"\\u005B\",\n    \"lsquo;\": \"\\u2018\",\n    \"lsquor;\": \"\\u201A\",\n    \"Lstrok;\": \"\\u0141\",\n    \"lstrok;\": \"\\u0142\",\n    \"LT;\": \"\\u003C\",\n    \"LT\": \"\\u003C\",\n    \"Lt;\": \"\\u226A\",\n    \"lt;\": \"\\u003C\",\n    \"lt\": \"\\u003C\",\n    \"ltcc;\": \"\\u2AA6\",\n    \"ltcir;\": \"\\u2A79\",\n    \"ltdot;\": \"\\u22D6\",\n    \"lthree;\": \"\\u22CB\",\n    \"ltimes;\": \"\\u22C9\",\n    \"ltlarr;\": \"\\u2976\",\n    \"ltquest;\": \"\\u2A7B\",\n    \"ltri;\": \"\\u25C3\",\n    \"ltrie;\": \"\\u22B4\",\n    \"ltrif;\": \"\\u25C2\",\n    \"ltrPar;\": \"\\u2996\",\n    \"lurdshar;\": \"\\u294A\",\n    \"luruhar;\": \"\\u2966\",\n    \"lvertneqq;\": \"\\u2268\\uFE00\",\n    \"lvnE;\": \"\\u2268\\uFE00\",\n    \"macr;\": \"\\u00AF\",\n    \"macr\": \"\\u00AF\",\n    \"male;\": \"\\u2642\",\n    \"malt;\": \"\\u2720\",\n    \"maltese;\": \"\\u2720\",\n    \"Map;\": \"\\u2905\",\n    \"map;\": \"\\u21A6\",\n    \"mapsto;\": \"\\u21A6\",\n    \"mapstodown;\": \"\\u21A7\",\n    \"mapstoleft;\": \"\\u21A4\",\n    \"mapstoup;\": \"\\u21A5\",\n    \"marker;\": \"\\u25AE\",\n    \"mcomma;\": \"\\u2A29\",\n    \"Mcy;\": \"\\u041C\",\n    \"mcy;\": \"\\u043C\",\n    \"mdash;\": \"\\u2014\",\n    \"mDDot;\": \"\\u223A\",\n    \"measuredangle;\": \"\\u2221\",\n    \"MediumSpace;\": \"\\u205F\",\n    \"Mellintrf;\": \"\\u2133\",\n    \"Mfr;\": \"\\uD835\\uDD10\",\n    \"mfr;\": \"\\uD835\\uDD2A\",\n    \"mho;\": \"\\u2127\",\n    \"micro;\": \"\\u00B5\",\n    \"micro\": \"\\u00B5\",\n    \"mid;\": \"\\u2223\",\n    \"midast;\": \"\\u002A\",\n    \"midcir;\": \"\\u2AF0\",\n    \"middot;\": \"\\u00B7\",\n    \"middot\": \"\\u00B7\",\n    \"minus;\": \"\\u2212\",\n    \"minusb;\": \"\\u229F\",\n    \"minusd;\": \"\\u2238\",\n    \"minusdu;\": \"\\u2A2A\",\n    \"MinusPlus;\": \"\\u2213\",\n    \"mlcp;\": \"\\u2ADB\",\n    \"mldr;\": \"\\u2026\",\n    \"mnplus;\": \"\\u2213\",\n    \"models;\": \"\\u22A7\",\n    \"Mopf;\": \"\\uD835\\uDD44\",\n    \"mopf;\": \"\\uD835\\uDD5E\",\n    \"mp;\": \"\\u2213\",\n    \"Mscr;\": \"\\u2133\",\n    \"mscr;\": \"\\uD835\\uDCC2\",\n    \"mstpos;\": \"\\u223E\",\n    \"Mu;\": \"\\u039C\",\n    \"mu;\": \"\\u03BC\",\n    \"multimap;\": \"\\u22B8\",\n    \"mumap;\": \"\\u22B8\",\n    \"nabla;\": \"\\u2207\",\n    \"Nacute;\": \"\\u0143\",\n    \"nacute;\": \"\\u0144\",\n    \"nang;\": \"\\u2220\\u20D2\",\n    \"nap;\": \"\\u2249\",\n    \"napE;\": \"\\u2A70\\u0338\",\n    \"napid;\": \"\\u224B\\u0338\",\n    \"napos;\": \"\\u0149\",\n    \"napprox;\": \"\\u2249\",\n    \"natur;\": \"\\u266E\",\n    \"natural;\": \"\\u266E\",\n    \"naturals;\": \"\\u2115\",\n    \"nbsp;\": \"\\u00A0\",\n    \"nbsp\": \"\\u00A0\",\n    \"nbump;\": \"\\u224E\\u0338\",\n    \"nbumpe;\": \"\\u224F\\u0338\",\n    \"ncap;\": \"\\u2A43\",\n    \"Ncaron;\": \"\\u0147\",\n    \"ncaron;\": \"\\u0148\",\n    \"Ncedil;\": \"\\u0145\",\n    \"ncedil;\": \"\\u0146\",\n    \"ncong;\": \"\\u2247\",\n    \"ncongdot;\": \"\\u2A6D\\u0338\",\n    \"ncup;\": \"\\u2A42\",\n    \"Ncy;\": \"\\u041D\",\n    \"ncy;\": \"\\u043D\",\n    \"ndash;\": \"\\u2013\",\n    \"ne;\": \"\\u2260\",\n    \"nearhk;\": \"\\u2924\",\n    \"neArr;\": \"\\u21D7\",\n    \"nearr;\": \"\\u2197\",\n    \"nearrow;\": \"\\u2197\",\n    \"nedot;\": \"\\u2250\\u0338\",\n    \"NegativeMediumSpace;\": \"\\u200B\",\n    \"NegativeThickSpace;\": \"\\u200B\",\n    \"NegativeThinSpace;\": \"\\u200B\",\n    \"NegativeVeryThinSpace;\": \"\\u200B\",\n    \"nequiv;\": \"\\u2262\",\n    \"nesear;\": \"\\u2928\",\n    \"nesim;\": \"\\u2242\\u0338\",\n    \"NestedGreaterGreater;\": \"\\u226B\",\n    \"NestedLessLess;\": \"\\u226A\",\n    \"NewLine;\": \"\\u000A\",\n    \"nexist;\": \"\\u2204\",\n    \"nexists;\": \"\\u2204\",\n    \"Nfr;\": \"\\uD835\\uDD11\",\n    \"nfr;\": \"\\uD835\\uDD2B\",\n    \"ngE;\": \"\\u2267\\u0338\",\n    \"nge;\": \"\\u2271\",\n    \"ngeq;\": \"\\u2271\",\n    \"ngeqq;\": \"\\u2267\\u0338\",\n    \"ngeqslant;\": \"\\u2A7E\\u0338\",\n    \"nges;\": \"\\u2A7E\\u0338\",\n    \"nGg;\": \"\\u22D9\\u0338\",\n    \"ngsim;\": \"\\u2275\",\n    \"nGt;\": \"\\u226B\\u20D2\",\n    \"ngt;\": \"\\u226F\",\n    \"ngtr;\": \"\\u226F\",\n    \"nGtv;\": \"\\u226B\\u0338\",\n    \"nhArr;\": \"\\u21CE\",\n    \"nharr;\": \"\\u21AE\",\n    \"nhpar;\": \"\\u2AF2\",\n    \"ni;\": \"\\u220B\",\n    \"nis;\": \"\\u22FC\",\n    \"nisd;\": \"\\u22FA\",\n    \"niv;\": \"\\u220B\",\n    \"NJcy;\": \"\\u040A\",\n    \"njcy;\": \"\\u045A\",\n    \"nlArr;\": \"\\u21CD\",\n    \"nlarr;\": \"\\u219A\",\n    \"nldr;\": \"\\u2025\",\n    \"nlE;\": \"\\u2266\\u0338\",\n    \"nle;\": \"\\u2270\",\n    \"nLeftarrow;\": \"\\u21CD\",\n    \"nleftarrow;\": \"\\u219A\",\n    \"nLeftrightarrow;\": \"\\u21CE\",\n    \"nleftrightarrow;\": \"\\u21AE\",\n    \"nleq;\": \"\\u2270\",\n    \"nleqq;\": \"\\u2266\\u0338\",\n    \"nleqslant;\": \"\\u2A7D\\u0338\",\n    \"nles;\": \"\\u2A7D\\u0338\",\n    \"nless;\": \"\\u226E\",\n    \"nLl;\": \"\\u22D8\\u0338\",\n    \"nlsim;\": \"\\u2274\",\n    \"nLt;\": \"\\u226A\\u20D2\",\n    \"nlt;\": \"\\u226E\",\n    \"nltri;\": \"\\u22EA\",\n    \"nltrie;\": \"\\u22EC\",\n    \"nLtv;\": \"\\u226A\\u0338\",\n    \"nmid;\": \"\\u2224\",\n    \"NoBreak;\": \"\\u2060\",\n    \"NonBreakingSpace;\": \"\\u00A0\",\n    \"Nopf;\": \"\\u2115\",\n    \"nopf;\": \"\\uD835\\uDD5F\",\n    \"Not;\": \"\\u2AEC\",\n    \"not;\": \"\\u00AC\",\n    \"not\": \"\\u00AC\",\n    \"NotCongruent;\": \"\\u2262\",\n    \"NotCupCap;\": \"\\u226D\",\n    \"NotDoubleVerticalBar;\": \"\\u2226\",\n    \"NotElement;\": \"\\u2209\",\n    \"NotEqual;\": \"\\u2260\",\n    \"NotEqualTilde;\": \"\\u2242\\u0338\",\n    \"NotExists;\": \"\\u2204\",\n    \"NotGreater;\": \"\\u226F\",\n    \"NotGreaterEqual;\": \"\\u2271\",\n    \"NotGreaterFullEqual;\": \"\\u2267\\u0338\",\n    \"NotGreaterGreater;\": \"\\u226B\\u0338\",\n    \"NotGreaterLess;\": \"\\u2279\",\n    \"NotGreaterSlantEqual;\": \"\\u2A7E\\u0338\",\n    \"NotGreaterTilde;\": \"\\u2275\",\n    \"NotHumpDownHump;\": \"\\u224E\\u0338\",\n    \"NotHumpEqual;\": \"\\u224F\\u0338\",\n    \"notin;\": \"\\u2209\",\n    \"notindot;\": \"\\u22F5\\u0338\",\n    \"notinE;\": \"\\u22F9\\u0338\",\n    \"notinva;\": \"\\u2209\",\n    \"notinvb;\": \"\\u22F7\",\n    \"notinvc;\": \"\\u22F6\",\n    \"NotLeftTriangle;\": \"\\u22EA\",\n    \"NotLeftTriangleBar;\": \"\\u29CF\\u0338\",\n    \"NotLeftTriangleEqual;\": \"\\u22EC\",\n    \"NotLess;\": \"\\u226E\",\n    \"NotLessEqual;\": \"\\u2270\",\n    \"NotLessGreater;\": \"\\u2278\",\n    \"NotLessLess;\": \"\\u226A\\u0338\",\n    \"NotLessSlantEqual;\": \"\\u2A7D\\u0338\",\n    \"NotLessTilde;\": \"\\u2274\",\n    \"NotNestedGreaterGreater;\": \"\\u2AA2\\u0338\",\n    \"NotNestedLessLess;\": \"\\u2AA1\\u0338\",\n    \"notni;\": \"\\u220C\",\n    \"notniva;\": \"\\u220C\",\n    \"notnivb;\": \"\\u22FE\",\n    \"notnivc;\": \"\\u22FD\",\n    \"NotPrecedes;\": \"\\u2280\",\n    \"NotPrecedesEqual;\": \"\\u2AAF\\u0338\",\n    \"NotPrecedesSlantEqual;\": \"\\u22E0\",\n    \"NotReverseElement;\": \"\\u220C\",\n    \"NotRightTriangle;\": \"\\u22EB\",\n    \"NotRightTriangleBar;\": \"\\u29D0\\u0338\",\n    \"NotRightTriangleEqual;\": \"\\u22ED\",\n    \"NotSquareSubset;\": \"\\u228F\\u0338\",\n    \"NotSquareSubsetEqual;\": \"\\u22E2\",\n    \"NotSquareSuperset;\": \"\\u2290\\u0338\",\n    \"NotSquareSupersetEqual;\": \"\\u22E3\",\n    \"NotSubset;\": \"\\u2282\\u20D2\",\n    \"NotSubsetEqual;\": \"\\u2288\",\n    \"NotSucceeds;\": \"\\u2281\",\n    \"NotSucceedsEqual;\": \"\\u2AB0\\u0338\",\n    \"NotSucceedsSlantEqual;\": \"\\u22E1\",\n    \"NotSucceedsTilde;\": \"\\u227F\\u0338\",\n    \"NotSuperset;\": \"\\u2283\\u20D2\",\n    \"NotSupersetEqual;\": \"\\u2289\",\n    \"NotTilde;\": \"\\u2241\",\n    \"NotTildeEqual;\": \"\\u2244\",\n    \"NotTildeFullEqual;\": \"\\u2247\",\n    \"NotTildeTilde;\": \"\\u2249\",\n    \"NotVerticalBar;\": \"\\u2224\",\n    \"npar;\": \"\\u2226\",\n    \"nparallel;\": \"\\u2226\",\n    \"nparsl;\": \"\\u2AFD\\u20E5\",\n    \"npart;\": \"\\u2202\\u0338\",\n    \"npolint;\": \"\\u2A14\",\n    \"npr;\": \"\\u2280\",\n    \"nprcue;\": \"\\u22E0\",\n    \"npre;\": \"\\u2AAF\\u0338\",\n    \"nprec;\": \"\\u2280\",\n    \"npreceq;\": \"\\u2AAF\\u0338\",\n    \"nrArr;\": \"\\u21CF\",\n    \"nrarr;\": \"\\u219B\",\n    \"nrarrc;\": \"\\u2933\\u0338\",\n    \"nrarrw;\": \"\\u219D\\u0338\",\n    \"nRightarrow;\": \"\\u21CF\",\n    \"nrightarrow;\": \"\\u219B\",\n    \"nrtri;\": \"\\u22EB\",\n    \"nrtrie;\": \"\\u22ED\",\n    \"nsc;\": \"\\u2281\",\n    \"nsccue;\": \"\\u22E1\",\n    \"nsce;\": \"\\u2AB0\\u0338\",\n    \"Nscr;\": \"\\uD835\\uDCA9\",\n    \"nscr;\": \"\\uD835\\uDCC3\",\n    \"nshortmid;\": \"\\u2224\",\n    \"nshortparallel;\": \"\\u2226\",\n    \"nsim;\": \"\\u2241\",\n    \"nsime;\": \"\\u2244\",\n    \"nsimeq;\": \"\\u2244\",\n    \"nsmid;\": \"\\u2224\",\n    \"nspar;\": \"\\u2226\",\n    \"nsqsube;\": \"\\u22E2\",\n    \"nsqsupe;\": \"\\u22E3\",\n    \"nsub;\": \"\\u2284\",\n    \"nsubE;\": \"\\u2AC5\\u0338\",\n    \"nsube;\": \"\\u2288\",\n    \"nsubset;\": \"\\u2282\\u20D2\",\n    \"nsubseteq;\": \"\\u2288\",\n    \"nsubseteqq;\": \"\\u2AC5\\u0338\",\n    \"nsucc;\": \"\\u2281\",\n    \"nsucceq;\": \"\\u2AB0\\u0338\",\n    \"nsup;\": \"\\u2285\",\n    \"nsupE;\": \"\\u2AC6\\u0338\",\n    \"nsupe;\": \"\\u2289\",\n    \"nsupset;\": \"\\u2283\\u20D2\",\n    \"nsupseteq;\": \"\\u2289\",\n    \"nsupseteqq;\": \"\\u2AC6\\u0338\",\n    \"ntgl;\": \"\\u2279\",\n    \"Ntilde;\": \"\\u00D1\",\n    \"Ntilde\": \"\\u00D1\",\n    \"ntilde;\": \"\\u00F1\",\n    \"ntilde\": \"\\u00F1\",\n    \"ntlg;\": \"\\u2278\",\n    \"ntriangleleft;\": \"\\u22EA\",\n    \"ntrianglelefteq;\": \"\\u22EC\",\n    \"ntriangleright;\": \"\\u22EB\",\n    \"ntrianglerighteq;\": \"\\u22ED\",\n    \"Nu;\": \"\\u039D\",\n    \"nu;\": \"\\u03BD\",\n    \"num;\": \"\\u0023\",\n    \"numero;\": \"\\u2116\",\n    \"numsp;\": \"\\u2007\",\n    \"nvap;\": \"\\u224D\\u20D2\",\n    \"nVDash;\": \"\\u22AF\",\n    \"nVdash;\": \"\\u22AE\",\n    \"nvDash;\": \"\\u22AD\",\n    \"nvdash;\": \"\\u22AC\",\n    \"nvge;\": \"\\u2265\\u20D2\",\n    \"nvgt;\": \"\\u003E\\u20D2\",\n    \"nvHarr;\": \"\\u2904\",\n    \"nvinfin;\": \"\\u29DE\",\n    \"nvlArr;\": \"\\u2902\",\n    \"nvle;\": \"\\u2264\\u20D2\",\n    \"nvlt;\": \"\\u003C\\u20D2\",\n    \"nvltrie;\": \"\\u22B4\\u20D2\",\n    \"nvrArr;\": \"\\u2903\",\n    \"nvrtrie;\": \"\\u22B5\\u20D2\",\n    \"nvsim;\": \"\\u223C\\u20D2\",\n    \"nwarhk;\": \"\\u2923\",\n    \"nwArr;\": \"\\u21D6\",\n    \"nwarr;\": \"\\u2196\",\n    \"nwarrow;\": \"\\u2196\",\n    \"nwnear;\": \"\\u2927\",\n    \"Oacute;\": \"\\u00D3\",\n    \"Oacute\": \"\\u00D3\",\n    \"oacute;\": \"\\u00F3\",\n    \"oacute\": \"\\u00F3\",\n    \"oast;\": \"\\u229B\",\n    \"ocir;\": \"\\u229A\",\n    \"Ocirc;\": \"\\u00D4\",\n    \"Ocirc\": \"\\u00D4\",\n    \"ocirc;\": \"\\u00F4\",\n    \"ocirc\": \"\\u00F4\",\n    \"Ocy;\": \"\\u041E\",\n    \"ocy;\": \"\\u043E\",\n    \"odash;\": \"\\u229D\",\n    \"Odblac;\": \"\\u0150\",\n    \"odblac;\": \"\\u0151\",\n    \"odiv;\": \"\\u2A38\",\n    \"odot;\": \"\\u2299\",\n    \"odsold;\": \"\\u29BC\",\n    \"OElig;\": \"\\u0152\",\n    \"oelig;\": \"\\u0153\",\n    \"ofcir;\": \"\\u29BF\",\n    \"Ofr;\": \"\\uD835\\uDD12\",\n    \"ofr;\": \"\\uD835\\uDD2C\",\n    \"ogon;\": \"\\u02DB\",\n    \"Ograve;\": \"\\u00D2\",\n    \"Ograve\": \"\\u00D2\",\n    \"ograve;\": \"\\u00F2\",\n    \"ograve\": \"\\u00F2\",\n    \"ogt;\": \"\\u29C1\",\n    \"ohbar;\": \"\\u29B5\",\n    \"ohm;\": \"\\u03A9\",\n    \"oint;\": \"\\u222E\",\n    \"olarr;\": \"\\u21BA\",\n    \"olcir;\": \"\\u29BE\",\n    \"olcross;\": \"\\u29BB\",\n    \"oline;\": \"\\u203E\",\n    \"olt;\": \"\\u29C0\",\n    \"Omacr;\": \"\\u014C\",\n    \"omacr;\": \"\\u014D\",\n    \"Omega;\": \"\\u03A9\",\n    \"omega;\": \"\\u03C9\",\n    \"Omicron;\": \"\\u039F\",\n    \"omicron;\": \"\\u03BF\",\n    \"omid;\": \"\\u29B6\",\n    \"ominus;\": \"\\u2296\",\n    \"Oopf;\": \"\\uD835\\uDD46\",\n    \"oopf;\": \"\\uD835\\uDD60\",\n    \"opar;\": \"\\u29B7\",\n    \"OpenCurlyDoubleQuote;\": \"\\u201C\",\n    \"OpenCurlyQuote;\": \"\\u2018\",\n    \"operp;\": \"\\u29B9\",\n    \"oplus;\": \"\\u2295\",\n    \"Or;\": \"\\u2A54\",\n    \"or;\": \"\\u2228\",\n    \"orarr;\": \"\\u21BB\",\n    \"ord;\": \"\\u2A5D\",\n    \"order;\": \"\\u2134\",\n    \"orderof;\": \"\\u2134\",\n    \"ordf;\": \"\\u00AA\",\n    \"ordf\": \"\\u00AA\",\n    \"ordm;\": \"\\u00BA\",\n    \"ordm\": \"\\u00BA\",\n    \"origof;\": \"\\u22B6\",\n    \"oror;\": \"\\u2A56\",\n    \"orslope;\": \"\\u2A57\",\n    \"orv;\": \"\\u2A5B\",\n    \"oS;\": \"\\u24C8\",\n    \"Oscr;\": \"\\uD835\\uDCAA\",\n    \"oscr;\": \"\\u2134\",\n    \"Oslash;\": \"\\u00D8\",\n    \"Oslash\": \"\\u00D8\",\n    \"oslash;\": \"\\u00F8\",\n    \"oslash\": \"\\u00F8\",\n    \"osol;\": \"\\u2298\",\n    \"Otilde;\": \"\\u00D5\",\n    \"Otilde\": \"\\u00D5\",\n    \"otilde;\": \"\\u00F5\",\n    \"otilde\": \"\\u00F5\",\n    \"Otimes;\": \"\\u2A37\",\n    \"otimes;\": \"\\u2297\",\n    \"otimesas;\": \"\\u2A36\",\n    \"Ouml;\": \"\\u00D6\",\n    \"Ouml\": \"\\u00D6\",\n    \"ouml;\": \"\\u00F6\",\n    \"ouml\": \"\\u00F6\",\n    \"ovbar;\": \"\\u233D\",\n    \"OverBar;\": \"\\u203E\",\n    \"OverBrace;\": \"\\u23DE\",\n    \"OverBracket;\": \"\\u23B4\",\n    \"OverParenthesis;\": \"\\u23DC\",\n    \"par;\": \"\\u2225\",\n    \"para;\": \"\\u00B6\",\n    \"para\": \"\\u00B6\",\n    \"parallel;\": \"\\u2225\",\n    \"parsim;\": \"\\u2AF3\",\n    \"parsl;\": \"\\u2AFD\",\n    \"part;\": \"\\u2202\",\n    \"PartialD;\": \"\\u2202\",\n    \"Pcy;\": \"\\u041F\",\n    \"pcy;\": \"\\u043F\",\n    \"percnt;\": \"\\u0025\",\n    \"period;\": \"\\u002E\",\n    \"permil;\": \"\\u2030\",\n    \"perp;\": \"\\u22A5\",\n    \"pertenk;\": \"\\u2031\",\n    \"Pfr;\": \"\\uD835\\uDD13\",\n    \"pfr;\": \"\\uD835\\uDD2D\",\n    \"Phi;\": \"\\u03A6\",\n    \"phi;\": \"\\u03C6\",\n    \"phiv;\": \"\\u03D5\",\n    \"phmmat;\": \"\\u2133\",\n    \"phone;\": \"\\u260E\",\n    \"Pi;\": \"\\u03A0\",\n    \"pi;\": \"\\u03C0\",\n    \"pitchfork;\": \"\\u22D4\",\n    \"piv;\": \"\\u03D6\",\n    \"planck;\": \"\\u210F\",\n    \"planckh;\": \"\\u210E\",\n    \"plankv;\": \"\\u210F\",\n    \"plus;\": \"\\u002B\",\n    \"plusacir;\": \"\\u2A23\",\n    \"plusb;\": \"\\u229E\",\n    \"pluscir;\": \"\\u2A22\",\n    \"plusdo;\": \"\\u2214\",\n    \"plusdu;\": \"\\u2A25\",\n    \"pluse;\": \"\\u2A72\",\n    \"PlusMinus;\": \"\\u00B1\",\n    \"plusmn;\": \"\\u00B1\",\n    \"plusmn\": \"\\u00B1\",\n    \"plussim;\": \"\\u2A26\",\n    \"plustwo;\": \"\\u2A27\",\n    \"pm;\": \"\\u00B1\",\n    \"Poincareplane;\": \"\\u210C\",\n    \"pointint;\": \"\\u2A15\",\n    \"Popf;\": \"\\u2119\",\n    \"popf;\": \"\\uD835\\uDD61\",\n    \"pound;\": \"\\u00A3\",\n    \"pound\": \"\\u00A3\",\n    \"Pr;\": \"\\u2ABB\",\n    \"pr;\": \"\\u227A\",\n    \"prap;\": \"\\u2AB7\",\n    \"prcue;\": \"\\u227C\",\n    \"prE;\": \"\\u2AB3\",\n    \"pre;\": \"\\u2AAF\",\n    \"prec;\": \"\\u227A\",\n    \"precapprox;\": \"\\u2AB7\",\n    \"preccurlyeq;\": \"\\u227C\",\n    \"Precedes;\": \"\\u227A\",\n    \"PrecedesEqual;\": \"\\u2AAF\",\n    \"PrecedesSlantEqual;\": \"\\u227C\",\n    \"PrecedesTilde;\": \"\\u227E\",\n    \"preceq;\": \"\\u2AAF\",\n    \"precnapprox;\": \"\\u2AB9\",\n    \"precneqq;\": \"\\u2AB5\",\n    \"precnsim;\": \"\\u22E8\",\n    \"precsim;\": \"\\u227E\",\n    \"Prime;\": \"\\u2033\",\n    \"prime;\": \"\\u2032\",\n    \"primes;\": \"\\u2119\",\n    \"prnap;\": \"\\u2AB9\",\n    \"prnE;\": \"\\u2AB5\",\n    \"prnsim;\": \"\\u22E8\",\n    \"prod;\": \"\\u220F\",\n    \"Product;\": \"\\u220F\",\n    \"profalar;\": \"\\u232E\",\n    \"profline;\": \"\\u2312\",\n    \"profsurf;\": \"\\u2313\",\n    \"prop;\": \"\\u221D\",\n    \"Proportion;\": \"\\u2237\",\n    \"Proportional;\": \"\\u221D\",\n    \"propto;\": \"\\u221D\",\n    \"prsim;\": \"\\u227E\",\n    \"prurel;\": \"\\u22B0\",\n    \"Pscr;\": \"\\uD835\\uDCAB\",\n    \"pscr;\": \"\\uD835\\uDCC5\",\n    \"Psi;\": \"\\u03A8\",\n    \"psi;\": \"\\u03C8\",\n    \"puncsp;\": \"\\u2008\",\n    \"Qfr;\": \"\\uD835\\uDD14\",\n    \"qfr;\": \"\\uD835\\uDD2E\",\n    \"qint;\": \"\\u2A0C\",\n    \"Qopf;\": \"\\u211A\",\n    \"qopf;\": \"\\uD835\\uDD62\",\n    \"qprime;\": \"\\u2057\",\n    \"Qscr;\": \"\\uD835\\uDCAC\",\n    \"qscr;\": \"\\uD835\\uDCC6\",\n    \"quaternions;\": \"\\u210D\",\n    \"quatint;\": \"\\u2A16\",\n    \"quest;\": \"\\u003F\",\n    \"questeq;\": \"\\u225F\",\n    \"QUOT;\": \"\\u0022\",\n    \"QUOT\": \"\\u0022\",\n    \"quot;\": \"\\u0022\",\n    \"quot\": \"\\u0022\",\n    \"rAarr;\": \"\\u21DB\",\n    \"race;\": \"\\u223D\\u0331\",\n    \"Racute;\": \"\\u0154\",\n    \"racute;\": \"\\u0155\",\n    \"radic;\": \"\\u221A\",\n    \"raemptyv;\": \"\\u29B3\",\n    \"Rang;\": \"\\u27EB\",\n    \"rang;\": \"\\u27E9\",\n    \"rangd;\": \"\\u2992\",\n    \"range;\": \"\\u29A5\",\n    \"rangle;\": \"\\u27E9\",\n    \"raquo;\": \"\\u00BB\",\n    \"raquo\": \"\\u00BB\",\n    \"Rarr;\": \"\\u21A0\",\n    \"rArr;\": \"\\u21D2\",\n    \"rarr;\": \"\\u2192\",\n    \"rarrap;\": \"\\u2975\",\n    \"rarrb;\": \"\\u21E5\",\n    \"rarrbfs;\": \"\\u2920\",\n    \"rarrc;\": \"\\u2933\",\n    \"rarrfs;\": \"\\u291E\",\n    \"rarrhk;\": \"\\u21AA\",\n    \"rarrlp;\": \"\\u21AC\",\n    \"rarrpl;\": \"\\u2945\",\n    \"rarrsim;\": \"\\u2974\",\n    \"Rarrtl;\": \"\\u2916\",\n    \"rarrtl;\": \"\\u21A3\",\n    \"rarrw;\": \"\\u219D\",\n    \"rAtail;\": \"\\u291C\",\n    \"ratail;\": \"\\u291A\",\n    \"ratio;\": \"\\u2236\",\n    \"rationals;\": \"\\u211A\",\n    \"RBarr;\": \"\\u2910\",\n    \"rBarr;\": \"\\u290F\",\n    \"rbarr;\": \"\\u290D\",\n    \"rbbrk;\": \"\\u2773\",\n    \"rbrace;\": \"\\u007D\",\n    \"rbrack;\": \"\\u005D\",\n    \"rbrke;\": \"\\u298C\",\n    \"rbrksld;\": \"\\u298E\",\n    \"rbrkslu;\": \"\\u2990\",\n    \"Rcaron;\": \"\\u0158\",\n    \"rcaron;\": \"\\u0159\",\n    \"Rcedil;\": \"\\u0156\",\n    \"rcedil;\": \"\\u0157\",\n    \"rceil;\": \"\\u2309\",\n    \"rcub;\": \"\\u007D\",\n    \"Rcy;\": \"\\u0420\",\n    \"rcy;\": \"\\u0440\",\n    \"rdca;\": \"\\u2937\",\n    \"rdldhar;\": \"\\u2969\",\n    \"rdquo;\": \"\\u201D\",\n    \"rdquor;\": \"\\u201D\",\n    \"rdsh;\": \"\\u21B3\",\n    \"Re;\": \"\\u211C\",\n    \"real;\": \"\\u211C\",\n    \"realine;\": \"\\u211B\",\n    \"realpart;\": \"\\u211C\",\n    \"reals;\": \"\\u211D\",\n    \"rect;\": \"\\u25AD\",\n    \"REG;\": \"\\u00AE\",\n    \"REG\": \"\\u00AE\",\n    \"reg;\": \"\\u00AE\",\n    \"reg\": \"\\u00AE\",\n    \"ReverseElement;\": \"\\u220B\",\n    \"ReverseEquilibrium;\": \"\\u21CB\",\n    \"ReverseUpEquilibrium;\": \"\\u296F\",\n    \"rfisht;\": \"\\u297D\",\n    \"rfloor;\": \"\\u230B\",\n    \"Rfr;\": \"\\u211C\",\n    \"rfr;\": \"\\uD835\\uDD2F\",\n    \"rHar;\": \"\\u2964\",\n    \"rhard;\": \"\\u21C1\",\n    \"rharu;\": \"\\u21C0\",\n    \"rharul;\": \"\\u296C\",\n    \"Rho;\": \"\\u03A1\",\n    \"rho;\": \"\\u03C1\",\n    \"rhov;\": \"\\u03F1\",\n    \"RightAngleBracket;\": \"\\u27E9\",\n    \"RightArrow;\": \"\\u2192\",\n    \"Rightarrow;\": \"\\u21D2\",\n    \"rightarrow;\": \"\\u2192\",\n    \"RightArrowBar;\": \"\\u21E5\",\n    \"RightArrowLeftArrow;\": \"\\u21C4\",\n    \"rightarrowtail;\": \"\\u21A3\",\n    \"RightCeiling;\": \"\\u2309\",\n    \"RightDoubleBracket;\": \"\\u27E7\",\n    \"RightDownTeeVector;\": \"\\u295D\",\n    \"RightDownVector;\": \"\\u21C2\",\n    \"RightDownVectorBar;\": \"\\u2955\",\n    \"RightFloor;\": \"\\u230B\",\n    \"rightharpoondown;\": \"\\u21C1\",\n    \"rightharpoonup;\": \"\\u21C0\",\n    \"rightleftarrows;\": \"\\u21C4\",\n    \"rightleftharpoons;\": \"\\u21CC\",\n    \"rightrightarrows;\": \"\\u21C9\",\n    \"rightsquigarrow;\": \"\\u219D\",\n    \"RightTee;\": \"\\u22A2\",\n    \"RightTeeArrow;\": \"\\u21A6\",\n    \"RightTeeVector;\": \"\\u295B\",\n    \"rightthreetimes;\": \"\\u22CC\",\n    \"RightTriangle;\": \"\\u22B3\",\n    \"RightTriangleBar;\": \"\\u29D0\",\n    \"RightTriangleEqual;\": \"\\u22B5\",\n    \"RightUpDownVector;\": \"\\u294F\",\n    \"RightUpTeeVector;\": \"\\u295C\",\n    \"RightUpVector;\": \"\\u21BE\",\n    \"RightUpVectorBar;\": \"\\u2954\",\n    \"RightVector;\": \"\\u21C0\",\n    \"RightVectorBar;\": \"\\u2953\",\n    \"ring;\": \"\\u02DA\",\n    \"risingdotseq;\": \"\\u2253\",\n    \"rlarr;\": \"\\u21C4\",\n    \"rlhar;\": \"\\u21CC\",\n    \"rlm;\": \"\\u200F\",\n    \"rmoust;\": \"\\u23B1\",\n    \"rmoustache;\": \"\\u23B1\",\n    \"rnmid;\": \"\\u2AEE\",\n    \"roang;\": \"\\u27ED\",\n    \"roarr;\": \"\\u21FE\",\n    \"robrk;\": \"\\u27E7\",\n    \"ropar;\": \"\\u2986\",\n    \"Ropf;\": \"\\u211D\",\n    \"ropf;\": \"\\uD835\\uDD63\",\n    \"roplus;\": \"\\u2A2E\",\n    \"rotimes;\": \"\\u2A35\",\n    \"RoundImplies;\": \"\\u2970\",\n    \"rpar;\": \"\\u0029\",\n    \"rpargt;\": \"\\u2994\",\n    \"rppolint;\": \"\\u2A12\",\n    \"rrarr;\": \"\\u21C9\",\n    \"Rrightarrow;\": \"\\u21DB\",\n    \"rsaquo;\": \"\\u203A\",\n    \"Rscr;\": \"\\u211B\",\n    \"rscr;\": \"\\uD835\\uDCC7\",\n    \"Rsh;\": \"\\u21B1\",\n    \"rsh;\": \"\\u21B1\",\n    \"rsqb;\": \"\\u005D\",\n    \"rsquo;\": \"\\u2019\",\n    \"rsquor;\": \"\\u2019\",\n    \"rthree;\": \"\\u22CC\",\n    \"rtimes;\": \"\\u22CA\",\n    \"rtri;\": \"\\u25B9\",\n    \"rtrie;\": \"\\u22B5\",\n    \"rtrif;\": \"\\u25B8\",\n    \"rtriltri;\": \"\\u29CE\",\n    \"RuleDelayed;\": \"\\u29F4\",\n    \"ruluhar;\": \"\\u2968\",\n    \"rx;\": \"\\u211E\",\n    \"Sacute;\": \"\\u015A\",\n    \"sacute;\": \"\\u015B\",\n    \"sbquo;\": \"\\u201A\",\n    \"Sc;\": \"\\u2ABC\",\n    \"sc;\": \"\\u227B\",\n    \"scap;\": \"\\u2AB8\",\n    \"Scaron;\": \"\\u0160\",\n    \"scaron;\": \"\\u0161\",\n    \"sccue;\": \"\\u227D\",\n    \"scE;\": \"\\u2AB4\",\n    \"sce;\": \"\\u2AB0\",\n    \"Scedil;\": \"\\u015E\",\n    \"scedil;\": \"\\u015F\",\n    \"Scirc;\": \"\\u015C\",\n    \"scirc;\": \"\\u015D\",\n    \"scnap;\": \"\\u2ABA\",\n    \"scnE;\": \"\\u2AB6\",\n    \"scnsim;\": \"\\u22E9\",\n    \"scpolint;\": \"\\u2A13\",\n    \"scsim;\": \"\\u227F\",\n    \"Scy;\": \"\\u0421\",\n    \"scy;\": \"\\u0441\",\n    \"sdot;\": \"\\u22C5\",\n    \"sdotb;\": \"\\u22A1\",\n    \"sdote;\": \"\\u2A66\",\n    \"searhk;\": \"\\u2925\",\n    \"seArr;\": \"\\u21D8\",\n    \"searr;\": \"\\u2198\",\n    \"searrow;\": \"\\u2198\",\n    \"sect;\": \"\\u00A7\",\n    \"sect\": \"\\u00A7\",\n    \"semi;\": \"\\u003B\",\n    \"seswar;\": \"\\u2929\",\n    \"setminus;\": \"\\u2216\",\n    \"setmn;\": \"\\u2216\",\n    \"sext;\": \"\\u2736\",\n    \"Sfr;\": \"\\uD835\\uDD16\",\n    \"sfr;\": \"\\uD835\\uDD30\",\n    \"sfrown;\": \"\\u2322\",\n    \"sharp;\": \"\\u266F\",\n    \"SHCHcy;\": \"\\u0429\",\n    \"shchcy;\": \"\\u0449\",\n    \"SHcy;\": \"\\u0428\",\n    \"shcy;\": \"\\u0448\",\n    \"ShortDownArrow;\": \"\\u2193\",\n    \"ShortLeftArrow;\": \"\\u2190\",\n    \"shortmid;\": \"\\u2223\",\n    \"shortparallel;\": \"\\u2225\",\n    \"ShortRightArrow;\": \"\\u2192\",\n    \"ShortUpArrow;\": \"\\u2191\",\n    \"shy;\": \"\\u00AD\",\n    \"shy\": \"\\u00AD\",\n    \"Sigma;\": \"\\u03A3\",\n    \"sigma;\": \"\\u03C3\",\n    \"sigmaf;\": \"\\u03C2\",\n    \"sigmav;\": \"\\u03C2\",\n    \"sim;\": \"\\u223C\",\n    \"simdot;\": \"\\u2A6A\",\n    \"sime;\": \"\\u2243\",\n    \"simeq;\": \"\\u2243\",\n    \"simg;\": \"\\u2A9E\",\n    \"simgE;\": \"\\u2AA0\",\n    \"siml;\": \"\\u2A9D\",\n    \"simlE;\": \"\\u2A9F\",\n    \"simne;\": \"\\u2246\",\n    \"simplus;\": \"\\u2A24\",\n    \"simrarr;\": \"\\u2972\",\n    \"slarr;\": \"\\u2190\",\n    \"SmallCircle;\": \"\\u2218\",\n    \"smallsetminus;\": \"\\u2216\",\n    \"smashp;\": \"\\u2A33\",\n    \"smeparsl;\": \"\\u29E4\",\n    \"smid;\": \"\\u2223\",\n    \"smile;\": \"\\u2323\",\n    \"smt;\": \"\\u2AAA\",\n    \"smte;\": \"\\u2AAC\",\n    \"smtes;\": \"\\u2AAC\\uFE00\",\n    \"SOFTcy;\": \"\\u042C\",\n    \"softcy;\": \"\\u044C\",\n    \"sol;\": \"\\u002F\",\n    \"solb;\": \"\\u29C4\",\n    \"solbar;\": \"\\u233F\",\n    \"Sopf;\": \"\\uD835\\uDD4A\",\n    \"sopf;\": \"\\uD835\\uDD64\",\n    \"spades;\": \"\\u2660\",\n    \"spadesuit;\": \"\\u2660\",\n    \"spar;\": \"\\u2225\",\n    \"sqcap;\": \"\\u2293\",\n    \"sqcaps;\": \"\\u2293\\uFE00\",\n    \"sqcup;\": \"\\u2294\",\n    \"sqcups;\": \"\\u2294\\uFE00\",\n    \"Sqrt;\": \"\\u221A\",\n    \"sqsub;\": \"\\u228F\",\n    \"sqsube;\": \"\\u2291\",\n    \"sqsubset;\": \"\\u228F\",\n    \"sqsubseteq;\": \"\\u2291\",\n    \"sqsup;\": \"\\u2290\",\n    \"sqsupe;\": \"\\u2292\",\n    \"sqsupset;\": \"\\u2290\",\n    \"sqsupseteq;\": \"\\u2292\",\n    \"squ;\": \"\\u25A1\",\n    \"Square;\": \"\\u25A1\",\n    \"square;\": \"\\u25A1\",\n    \"SquareIntersection;\": \"\\u2293\",\n    \"SquareSubset;\": \"\\u228F\",\n    \"SquareSubsetEqual;\": \"\\u2291\",\n    \"SquareSuperset;\": \"\\u2290\",\n    \"SquareSupersetEqual;\": \"\\u2292\",\n    \"SquareUnion;\": \"\\u2294\",\n    \"squarf;\": \"\\u25AA\",\n    \"squf;\": \"\\u25AA\",\n    \"srarr;\": \"\\u2192\",\n    \"Sscr;\": \"\\uD835\\uDCAE\",\n    \"sscr;\": \"\\uD835\\uDCC8\",\n    \"ssetmn;\": \"\\u2216\",\n    \"ssmile;\": \"\\u2323\",\n    \"sstarf;\": \"\\u22C6\",\n    \"Star;\": \"\\u22C6\",\n    \"star;\": \"\\u2606\",\n    \"starf;\": \"\\u2605\",\n    \"straightepsilon;\": \"\\u03F5\",\n    \"straightphi;\": \"\\u03D5\",\n    \"strns;\": \"\\u00AF\",\n    \"Sub;\": \"\\u22D0\",\n    \"sub;\": \"\\u2282\",\n    \"subdot;\": \"\\u2ABD\",\n    \"subE;\": \"\\u2AC5\",\n    \"sube;\": \"\\u2286\",\n    \"subedot;\": \"\\u2AC3\",\n    \"submult;\": \"\\u2AC1\",\n    \"subnE;\": \"\\u2ACB\",\n    \"subne;\": \"\\u228A\",\n    \"subplus;\": \"\\u2ABF\",\n    \"subrarr;\": \"\\u2979\",\n    \"Subset;\": \"\\u22D0\",\n    \"subset;\": \"\\u2282\",\n    \"subseteq;\": \"\\u2286\",\n    \"subseteqq;\": \"\\u2AC5\",\n    \"SubsetEqual;\": \"\\u2286\",\n    \"subsetneq;\": \"\\u228A\",\n    \"subsetneqq;\": \"\\u2ACB\",\n    \"subsim;\": \"\\u2AC7\",\n    \"subsub;\": \"\\u2AD5\",\n    \"subsup;\": \"\\u2AD3\",\n    \"succ;\": \"\\u227B\",\n    \"succapprox;\": \"\\u2AB8\",\n    \"succcurlyeq;\": \"\\u227D\",\n    \"Succeeds;\": \"\\u227B\",\n    \"SucceedsEqual;\": \"\\u2AB0\",\n    \"SucceedsSlantEqual;\": \"\\u227D\",\n    \"SucceedsTilde;\": \"\\u227F\",\n    \"succeq;\": \"\\u2AB0\",\n    \"succnapprox;\": \"\\u2ABA\",\n    \"succneqq;\": \"\\u2AB6\",\n    \"succnsim;\": \"\\u22E9\",\n    \"succsim;\": \"\\u227F\",\n    \"SuchThat;\": \"\\u220B\",\n    \"Sum;\": \"\\u2211\",\n    \"sum;\": \"\\u2211\",\n    \"sung;\": \"\\u266A\",\n    \"Sup;\": \"\\u22D1\",\n    \"sup;\": \"\\u2283\",\n    \"sup1;\": \"\\u00B9\",\n    \"sup1\": \"\\u00B9\",\n    \"sup2;\": \"\\u00B2\",\n    \"sup2\": \"\\u00B2\",\n    \"sup3;\": \"\\u00B3\",\n    \"sup3\": \"\\u00B3\",\n    \"supdot;\": \"\\u2ABE\",\n    \"supdsub;\": \"\\u2AD8\",\n    \"supE;\": \"\\u2AC6\",\n    \"supe;\": \"\\u2287\",\n    \"supedot;\": \"\\u2AC4\",\n    \"Superset;\": \"\\u2283\",\n    \"SupersetEqual;\": \"\\u2287\",\n    \"suphsol;\": \"\\u27C9\",\n    \"suphsub;\": \"\\u2AD7\",\n    \"suplarr;\": \"\\u297B\",\n    \"supmult;\": \"\\u2AC2\",\n    \"supnE;\": \"\\u2ACC\",\n    \"supne;\": \"\\u228B\",\n    \"supplus;\": \"\\u2AC0\",\n    \"Supset;\": \"\\u22D1\",\n    \"supset;\": \"\\u2283\",\n    \"supseteq;\": \"\\u2287\",\n    \"supseteqq;\": \"\\u2AC6\",\n    \"supsetneq;\": \"\\u228B\",\n    \"supsetneqq;\": \"\\u2ACC\",\n    \"supsim;\": \"\\u2AC8\",\n    \"supsub;\": \"\\u2AD4\",\n    \"supsup;\": \"\\u2AD6\",\n    \"swarhk;\": \"\\u2926\",\n    \"swArr;\": \"\\u21D9\",\n    \"swarr;\": \"\\u2199\",\n    \"swarrow;\": \"\\u2199\",\n    \"swnwar;\": \"\\u292A\",\n    \"szlig;\": \"\\u00DF\",\n    \"szlig\": \"\\u00DF\",\n    \"Tab;\": \"\\u0009\",\n    \"target;\": \"\\u2316\",\n    \"Tau;\": \"\\u03A4\",\n    \"tau;\": \"\\u03C4\",\n    \"tbrk;\": \"\\u23B4\",\n    \"Tcaron;\": \"\\u0164\",\n    \"tcaron;\": \"\\u0165\",\n    \"Tcedil;\": \"\\u0162\",\n    \"tcedil;\": \"\\u0163\",\n    \"Tcy;\": \"\\u0422\",\n    \"tcy;\": \"\\u0442\",\n    \"tdot;\": \"\\u20DB\",\n    \"telrec;\": \"\\u2315\",\n    \"Tfr;\": \"\\uD835\\uDD17\",\n    \"tfr;\": \"\\uD835\\uDD31\",\n    \"there4;\": \"\\u2234\",\n    \"Therefore;\": \"\\u2234\",\n    \"therefore;\": \"\\u2234\",\n    \"Theta;\": \"\\u0398\",\n    \"theta;\": \"\\u03B8\",\n    \"thetasym;\": \"\\u03D1\",\n    \"thetav;\": \"\\u03D1\",\n    \"thickapprox;\": \"\\u2248\",\n    \"thicksim;\": \"\\u223C\",\n    \"ThickSpace;\": \"\\u205F\\u200A\",\n    \"thinsp;\": \"\\u2009\",\n    \"ThinSpace;\": \"\\u2009\",\n    \"thkap;\": \"\\u2248\",\n    \"thksim;\": \"\\u223C\",\n    \"THORN;\": \"\\u00DE\",\n    \"THORN\": \"\\u00DE\",\n    \"thorn;\": \"\\u00FE\",\n    \"thorn\": \"\\u00FE\",\n    \"Tilde;\": \"\\u223C\",\n    \"tilde;\": \"\\u02DC\",\n    \"TildeEqual;\": \"\\u2243\",\n    \"TildeFullEqual;\": \"\\u2245\",\n    \"TildeTilde;\": \"\\u2248\",\n    \"times;\": \"\\u00D7\",\n    \"times\": \"\\u00D7\",\n    \"timesb;\": \"\\u22A0\",\n    \"timesbar;\": \"\\u2A31\",\n    \"timesd;\": \"\\u2A30\",\n    \"tint;\": \"\\u222D\",\n    \"toea;\": \"\\u2928\",\n    \"top;\": \"\\u22A4\",\n    \"topbot;\": \"\\u2336\",\n    \"topcir;\": \"\\u2AF1\",\n    \"Topf;\": \"\\uD835\\uDD4B\",\n    \"topf;\": \"\\uD835\\uDD65\",\n    \"topfork;\": \"\\u2ADA\",\n    \"tosa;\": \"\\u2929\",\n    \"tprime;\": \"\\u2034\",\n    \"TRADE;\": \"\\u2122\",\n    \"trade;\": \"\\u2122\",\n    \"triangle;\": \"\\u25B5\",\n    \"triangledown;\": \"\\u25BF\",\n    \"triangleleft;\": \"\\u25C3\",\n    \"trianglelefteq;\": \"\\u22B4\",\n    \"triangleq;\": \"\\u225C\",\n    \"triangleright;\": \"\\u25B9\",\n    \"trianglerighteq;\": \"\\u22B5\",\n    \"tridot;\": \"\\u25EC\",\n    \"trie;\": \"\\u225C\",\n    \"triminus;\": \"\\u2A3A\",\n    \"TripleDot;\": \"\\u20DB\",\n    \"triplus;\": \"\\u2A39\",\n    \"trisb;\": \"\\u29CD\",\n    \"tritime;\": \"\\u2A3B\",\n    \"trpezium;\": \"\\u23E2\",\n    \"Tscr;\": \"\\uD835\\uDCAF\",\n    \"tscr;\": \"\\uD835\\uDCC9\",\n    \"TScy;\": \"\\u0426\",\n    \"tscy;\": \"\\u0446\",\n    \"TSHcy;\": \"\\u040B\",\n    \"tshcy;\": \"\\u045B\",\n    \"Tstrok;\": \"\\u0166\",\n    \"tstrok;\": \"\\u0167\",\n    \"twixt;\": \"\\u226C\",\n    \"twoheadleftarrow;\": \"\\u219E\",\n    \"twoheadrightarrow;\": \"\\u21A0\",\n    \"Uacute;\": \"\\u00DA\",\n    \"Uacute\": \"\\u00DA\",\n    \"uacute;\": \"\\u00FA\",\n    \"uacute\": \"\\u00FA\",\n    \"Uarr;\": \"\\u219F\",\n    \"uArr;\": \"\\u21D1\",\n    \"uarr;\": \"\\u2191\",\n    \"Uarrocir;\": \"\\u2949\",\n    \"Ubrcy;\": \"\\u040E\",\n    \"ubrcy;\": \"\\u045E\",\n    \"Ubreve;\": \"\\u016C\",\n    \"ubreve;\": \"\\u016D\",\n    \"Ucirc;\": \"\\u00DB\",\n    \"Ucirc\": \"\\u00DB\",\n    \"ucirc;\": \"\\u00FB\",\n    \"ucirc\": \"\\u00FB\",\n    \"Ucy;\": \"\\u0423\",\n    \"ucy;\": \"\\u0443\",\n    \"udarr;\": \"\\u21C5\",\n    \"Udblac;\": \"\\u0170\",\n    \"udblac;\": \"\\u0171\",\n    \"udhar;\": \"\\u296E\",\n    \"ufisht;\": \"\\u297E\",\n    \"Ufr;\": \"\\uD835\\uDD18\",\n    \"ufr;\": \"\\uD835\\uDD32\",\n    \"Ugrave;\": \"\\u00D9\",\n    \"Ugrave\": \"\\u00D9\",\n    \"ugrave;\": \"\\u00F9\",\n    \"ugrave\": \"\\u00F9\",\n    \"uHar;\": \"\\u2963\",\n    \"uharl;\": \"\\u21BF\",\n    \"uharr;\": \"\\u21BE\",\n    \"uhblk;\": \"\\u2580\",\n    \"ulcorn;\": \"\\u231C\",\n    \"ulcorner;\": \"\\u231C\",\n    \"ulcrop;\": \"\\u230F\",\n    \"ultri;\": \"\\u25F8\",\n    \"Umacr;\": \"\\u016A\",\n    \"umacr;\": \"\\u016B\",\n    \"uml;\": \"\\u00A8\",\n    \"uml\": \"\\u00A8\",\n    \"UnderBar;\": \"\\u005F\",\n    \"UnderBrace;\": \"\\u23DF\",\n    \"UnderBracket;\": \"\\u23B5\",\n    \"UnderParenthesis;\": \"\\u23DD\",\n    \"Union;\": \"\\u22C3\",\n    \"UnionPlus;\": \"\\u228E\",\n    \"Uogon;\": \"\\u0172\",\n    \"uogon;\": \"\\u0173\",\n    \"Uopf;\": \"\\uD835\\uDD4C\",\n    \"uopf;\": \"\\uD835\\uDD66\",\n    \"UpArrow;\": \"\\u2191\",\n    \"Uparrow;\": \"\\u21D1\",\n    \"uparrow;\": \"\\u2191\",\n    \"UpArrowBar;\": \"\\u2912\",\n    \"UpArrowDownArrow;\": \"\\u21C5\",\n    \"UpDownArrow;\": \"\\u2195\",\n    \"Updownarrow;\": \"\\u21D5\",\n    \"updownarrow;\": \"\\u2195\",\n    \"UpEquilibrium;\": \"\\u296E\",\n    \"upharpoonleft;\": \"\\u21BF\",\n    \"upharpoonright;\": \"\\u21BE\",\n    \"uplus;\": \"\\u228E\",\n    \"UpperLeftArrow;\": \"\\u2196\",\n    \"UpperRightArrow;\": \"\\u2197\",\n    \"Upsi;\": \"\\u03D2\",\n    \"upsi;\": \"\\u03C5\",\n    \"upsih;\": \"\\u03D2\",\n    \"Upsilon;\": \"\\u03A5\",\n    \"upsilon;\": \"\\u03C5\",\n    \"UpTee;\": \"\\u22A5\",\n    \"UpTeeArrow;\": \"\\u21A5\",\n    \"upuparrows;\": \"\\u21C8\",\n    \"urcorn;\": \"\\u231D\",\n    \"urcorner;\": \"\\u231D\",\n    \"urcrop;\": \"\\u230E\",\n    \"Uring;\": \"\\u016E\",\n    \"uring;\": \"\\u016F\",\n    \"urtri;\": \"\\u25F9\",\n    \"Uscr;\": \"\\uD835\\uDCB0\",\n    \"uscr;\": \"\\uD835\\uDCCA\",\n    \"utdot;\": \"\\u22F0\",\n    \"Utilde;\": \"\\u0168\",\n    \"utilde;\": \"\\u0169\",\n    \"utri;\": \"\\u25B5\",\n    \"utrif;\": \"\\u25B4\",\n    \"uuarr;\": \"\\u21C8\",\n    \"Uuml;\": \"\\u00DC\",\n    \"Uuml\": \"\\u00DC\",\n    \"uuml;\": \"\\u00FC\",\n    \"uuml\": \"\\u00FC\",\n    \"uwangle;\": \"\\u29A7\",\n    \"vangrt;\": \"\\u299C\",\n    \"varepsilon;\": \"\\u03F5\",\n    \"varkappa;\": \"\\u03F0\",\n    \"varnothing;\": \"\\u2205\",\n    \"varphi;\": \"\\u03D5\",\n    \"varpi;\": \"\\u03D6\",\n    \"varpropto;\": \"\\u221D\",\n    \"vArr;\": \"\\u21D5\",\n    \"varr;\": \"\\u2195\",\n    \"varrho;\": \"\\u03F1\",\n    \"varsigma;\": \"\\u03C2\",\n    \"varsubsetneq;\": \"\\u228A\\uFE00\",\n    \"varsubsetneqq;\": \"\\u2ACB\\uFE00\",\n    \"varsupsetneq;\": \"\\u228B\\uFE00\",\n    \"varsupsetneqq;\": \"\\u2ACC\\uFE00\",\n    \"vartheta;\": \"\\u03D1\",\n    \"vartriangleleft;\": \"\\u22B2\",\n    \"vartriangleright;\": \"\\u22B3\",\n    \"Vbar;\": \"\\u2AEB\",\n    \"vBar;\": \"\\u2AE8\",\n    \"vBarv;\": \"\\u2AE9\",\n    \"Vcy;\": \"\\u0412\",\n    \"vcy;\": \"\\u0432\",\n    \"VDash;\": \"\\u22AB\",\n    \"Vdash;\": \"\\u22A9\",\n    \"vDash;\": \"\\u22A8\",\n    \"vdash;\": \"\\u22A2\",\n    \"Vdashl;\": \"\\u2AE6\",\n    \"Vee;\": \"\\u22C1\",\n    \"vee;\": \"\\u2228\",\n    \"veebar;\": \"\\u22BB\",\n    \"veeeq;\": \"\\u225A\",\n    \"vellip;\": \"\\u22EE\",\n    \"Verbar;\": \"\\u2016\",\n    \"verbar;\": \"\\u007C\",\n    \"Vert;\": \"\\u2016\",\n    \"vert;\": \"\\u007C\",\n    \"VerticalBar;\": \"\\u2223\",\n    \"VerticalLine;\": \"\\u007C\",\n    \"VerticalSeparator;\": \"\\u2758\",\n    \"VerticalTilde;\": \"\\u2240\",\n    \"VeryThinSpace;\": \"\\u200A\",\n    \"Vfr;\": \"\\uD835\\uDD19\",\n    \"vfr;\": \"\\uD835\\uDD33\",\n    \"vltri;\": \"\\u22B2\",\n    \"vnsub;\": \"\\u2282\\u20D2\",\n    \"vnsup;\": \"\\u2283\\u20D2\",\n    \"Vopf;\": \"\\uD835\\uDD4D\",\n    \"vopf;\": \"\\uD835\\uDD67\",\n    \"vprop;\": \"\\u221D\",\n    \"vrtri;\": \"\\u22B3\",\n    \"Vscr;\": \"\\uD835\\uDCB1\",\n    \"vscr;\": \"\\uD835\\uDCCB\",\n    \"vsubnE;\": \"\\u2ACB\\uFE00\",\n    \"vsubne;\": \"\\u228A\\uFE00\",\n    \"vsupnE;\": \"\\u2ACC\\uFE00\",\n    \"vsupne;\": \"\\u228B\\uFE00\",\n    \"Vvdash;\": \"\\u22AA\",\n    \"vzigzag;\": \"\\u299A\",\n    \"Wcirc;\": \"\\u0174\",\n    \"wcirc;\": \"\\u0175\",\n    \"wedbar;\": \"\\u2A5F\",\n    \"Wedge;\": \"\\u22C0\",\n    \"wedge;\": \"\\u2227\",\n    \"wedgeq;\": \"\\u2259\",\n    \"weierp;\": \"\\u2118\",\n    \"Wfr;\": \"\\uD835\\uDD1A\",\n    \"wfr;\": \"\\uD835\\uDD34\",\n    \"Wopf;\": \"\\uD835\\uDD4E\",\n    \"wopf;\": \"\\uD835\\uDD68\",\n    \"wp;\": \"\\u2118\",\n    \"wr;\": \"\\u2240\",\n    \"wreath;\": \"\\u2240\",\n    \"Wscr;\": \"\\uD835\\uDCB2\",\n    \"wscr;\": \"\\uD835\\uDCCC\",\n    \"xcap;\": \"\\u22C2\",\n    \"xcirc;\": \"\\u25EF\",\n    \"xcup;\": \"\\u22C3\",\n    \"xdtri;\": \"\\u25BD\",\n    \"Xfr;\": \"\\uD835\\uDD1B\",\n    \"xfr;\": \"\\uD835\\uDD35\",\n    \"xhArr;\": \"\\u27FA\",\n    \"xharr;\": \"\\u27F7\",\n    \"Xi;\": \"\\u039E\",\n    \"xi;\": \"\\u03BE\",\n    \"xlArr;\": \"\\u27F8\",\n    \"xlarr;\": \"\\u27F5\",\n    \"xmap;\": \"\\u27FC\",\n    \"xnis;\": \"\\u22FB\",\n    \"xodot;\": \"\\u2A00\",\n    \"Xopf;\": \"\\uD835\\uDD4F\",\n    \"xopf;\": \"\\uD835\\uDD69\",\n    \"xoplus;\": \"\\u2A01\",\n    \"xotime;\": \"\\u2A02\",\n    \"xrArr;\": \"\\u27F9\",\n    \"xrarr;\": \"\\u27F6\",\n    \"Xscr;\": \"\\uD835\\uDCB3\",\n    \"xscr;\": \"\\uD835\\uDCCD\",\n    \"xsqcup;\": \"\\u2A06\",\n    \"xuplus;\": \"\\u2A04\",\n    \"xutri;\": \"\\u25B3\",\n    \"xvee;\": \"\\u22C1\",\n    \"xwedge;\": \"\\u22C0\",\n    \"Yacute;\": \"\\u00DD\",\n    \"Yacute\": \"\\u00DD\",\n    \"yacute;\": \"\\u00FD\",\n    \"yacute\": \"\\u00FD\",\n    \"YAcy;\": \"\\u042F\",\n    \"yacy;\": \"\\u044F\",\n    \"Ycirc;\": \"\\u0176\",\n    \"ycirc;\": \"\\u0177\",\n    \"Ycy;\": \"\\u042B\",\n    \"ycy;\": \"\\u044B\",\n    \"yen;\": \"\\u00A5\",\n    \"yen\": \"\\u00A5\",\n    \"Yfr;\": \"\\uD835\\uDD1C\",\n    \"yfr;\": \"\\uD835\\uDD36\",\n    \"YIcy;\": \"\\u0407\",\n    \"yicy;\": \"\\u0457\",\n    \"Yopf;\": \"\\uD835\\uDD50\",\n    \"yopf;\": \"\\uD835\\uDD6A\",\n    \"Yscr;\": \"\\uD835\\uDCB4\",\n    \"yscr;\": \"\\uD835\\uDCCE\",\n    \"YUcy;\": \"\\u042E\",\n    \"yucy;\": \"\\u044E\",\n    \"Yuml;\": \"\\u0178\",\n    \"yuml;\": \"\\u00FF\",\n    \"yuml\": \"\\u00FF\",\n    \"Zacute;\": \"\\u0179\",\n    \"zacute;\": \"\\u017A\",\n    \"Zcaron;\": \"\\u017D\",\n    \"zcaron;\": \"\\u017E\",\n    \"Zcy;\": \"\\u0417\",\n    \"zcy;\": \"\\u0437\",\n    \"Zdot;\": \"\\u017B\",\n    \"zdot;\": \"\\u017C\",\n    \"zeetrf;\": \"\\u2128\",\n    \"ZeroWidthSpace;\": \"\\u200B\",\n    \"Zeta;\": \"\\u0396\",\n    \"zeta;\": \"\\u03B6\",\n    \"Zfr;\": \"\\u2128\",\n    \"zfr;\": \"\\uD835\\uDD37\",\n    \"ZHcy;\": \"\\u0416\",\n    \"zhcy;\": \"\\u0436\",\n    \"zigrarr;\": \"\\u21DD\",\n    \"Zopf;\": \"\\u2124\",\n    \"zopf;\": \"\\uD835\\uDD6B\",\n    \"Zscr;\": \"\\uD835\\uDCB5\",\n    \"zscr;\": \"\\uD835\\uDCCF\",\n    \"zwj;\": \"\\u200D\",\n    \"zwnj;\": \"\\u200C\"\n};\n//# sourceMappingURL=htmlEntities.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlEntities.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlParser.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlParser.js ***!
  \****************************************************************************************************************/
/*! exports provided: Node, parse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return parse; });\n/* harmony import */ var _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./htmlScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/arrays.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js\");\n/* harmony import */ var _htmlTags_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./htmlTags.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlTags.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar Node = /** @class */ (function () {\n    function Node(start, end, children, parent) {\n        this.start = start;\n        this.end = end;\n        this.children = children;\n        this.parent = parent;\n        this.closed = false;\n    }\n    Object.defineProperty(Node.prototype, \"attributeNames\", {\n        get: function () { return this.attributes ? Object.keys(this.attributes) : []; },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.isSameTag = function (tagInLowerCase) {\n        return this.tag && tagInLowerCase && this.tag.length === tagInLowerCase.length && this.tag.toLowerCase() === tagInLowerCase;\n    };\n    Object.defineProperty(Node.prototype, \"firstChild\", {\n        get: function () { return this.children[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"lastChild\", {\n        get: function () { return this.children.length ? this.children[this.children.length - 1] : void 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.findNodeBefore = function (offset) {\n        var idx = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__[\"findFirst\"])(this.children, function (c) { return offset <= c.start; }) - 1;\n        if (idx >= 0) {\n            var child = this.children[idx];\n            if (offset > child.start) {\n                if (offset < child.end) {\n                    return child.findNodeBefore(offset);\n                }\n                var lastChild = child.lastChild;\n                if (lastChild && lastChild.end === child.end) {\n                    return child.findNodeBefore(offset);\n                }\n                return child;\n            }\n        }\n        return this;\n    };\n    Node.prototype.findNodeAt = function (offset) {\n        var idx = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__[\"findFirst\"])(this.children, function (c) { return offset <= c.start; }) - 1;\n        if (idx >= 0) {\n            var child = this.children[idx];\n            if (offset > child.start && offset <= child.end) {\n                return child.findNodeAt(offset);\n            }\n        }\n        return this;\n    };\n    return Node;\n}());\n\nfunction parse(text) {\n    var scanner = Object(_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"createScanner\"])(text);\n    var htmlDocument = new Node(0, text.length, [], void 0);\n    var curr = htmlDocument;\n    var endTagStart = -1;\n    var pendingAttribute = null;\n    var token = scanner.scan();\n    while (token !== _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOS) {\n        switch (token) {\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTagOpen:\n                var child = new Node(scanner.getTokenOffset(), text.length, [], curr);\n                curr.children.push(child);\n                curr = child;\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTag:\n                curr.tag = scanner.getTokenText();\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTagClose:\n                curr.end = scanner.getTokenEnd(); // might be later set to end tag position\n                if (curr.tag && Object(_htmlTags_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmptyElement\"])(curr.tag) && curr.parent) {\n                    curr.closed = true;\n                    curr = curr.parent;\n                }\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EndTagOpen:\n                endTagStart = scanner.getTokenOffset();\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EndTag:\n                var closeTag = scanner.getTokenText().toLowerCase();\n                while (!curr.isSameTag(closeTag) && curr.parent) {\n                    curr.end = endTagStart;\n                    curr.closed = false;\n                    curr = curr.parent;\n                }\n                if (curr !== htmlDocument) {\n                    curr.closed = true;\n                    curr.endTagStart = endTagStart;\n                }\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTagSelfClose:\n                if (curr.parent) {\n                    curr.closed = true;\n                    curr.end = scanner.getTokenEnd();\n                    curr = curr.parent;\n                }\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EndTagClose:\n                if (curr.parent) {\n                    curr.end = scanner.getTokenEnd();\n                    curr = curr.parent;\n                }\n                break;\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AttributeName: {\n                var attributeName = pendingAttribute = scanner.getTokenText();\n                var attributes = curr.attributes;\n                if (!attributes) {\n                    curr.attributes = attributes = {};\n                }\n                attributes[pendingAttribute] = null; // Support valueless attributes such as 'checked'\n                break;\n            }\n            case _htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AttributeValue: {\n                var value = scanner.getTokenText();\n                var attributes = curr.attributes;\n                if (attributes && pendingAttribute) {\n                    attributes[pendingAttribute] = value;\n                    pendingAttribute = null;\n                }\n                break;\n            }\n        }\n        token = scanner.scan();\n    }\n    while (curr.parent) {\n        curr.end = text.length;\n        curr.closed = false;\n        curr = curr.parent;\n    }\n    return {\n        roots: htmlDocument.children,\n        findNodeBefore: htmlDocument.findNodeBefore.bind(htmlDocument),\n        findNodeAt: htmlDocument.findNodeAt.bind(htmlDocument)\n    };\n}\n//# sourceMappingURL=htmlParser.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlParser.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js ***!
  \*****************************************************************************************************************/
/*! exports provided: TokenType, ScannerState, createScanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenType\", function() { return TokenType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScannerState\", function() { return ScannerState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createScanner\", function() { return createScanner; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/html/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"StartCommentTag\"] = 0] = \"StartCommentTag\";\n    TokenType[TokenType[\"Comment\"] = 1] = \"Comment\";\n    TokenType[TokenType[\"EndCommentTag\"] = 2] = \"EndCommentTag\";\n    TokenType[TokenType[\"StartTagOpen\"] = 3] = \"StartTagOpen\";\n    TokenType[TokenType[\"StartTagClose\"] = 4] = \"StartTagClose\";\n    TokenType[TokenType[\"StartTagSelfClose\"] = 5] = \"StartTagSelfClose\";\n    TokenType[TokenType[\"StartTag\"] = 6] = \"StartTag\";\n    TokenType[TokenType[\"EndTagOpen\"] = 7] = \"EndTagOpen\";\n    TokenType[TokenType[\"EndTagClose\"] = 8] = \"EndTagClose\";\n    TokenType[TokenType[\"EndTag\"] = 9] = \"EndTag\";\n    TokenType[TokenType[\"DelimiterAssign\"] = 10] = \"DelimiterAssign\";\n    TokenType[TokenType[\"AttributeName\"] = 11] = \"AttributeName\";\n    TokenType[TokenType[\"AttributeValue\"] = 12] = \"AttributeValue\";\n    TokenType[TokenType[\"StartDoctypeTag\"] = 13] = \"StartDoctypeTag\";\n    TokenType[TokenType[\"Doctype\"] = 14] = \"Doctype\";\n    TokenType[TokenType[\"EndDoctypeTag\"] = 15] = \"EndDoctypeTag\";\n    TokenType[TokenType[\"Content\"] = 16] = \"Content\";\n    TokenType[TokenType[\"Whitespace\"] = 17] = \"Whitespace\";\n    TokenType[TokenType[\"Unknown\"] = 18] = \"Unknown\";\n    TokenType[TokenType[\"Script\"] = 19] = \"Script\";\n    TokenType[TokenType[\"Styles\"] = 20] = \"Styles\";\n    TokenType[TokenType[\"EOS\"] = 21] = \"EOS\";\n})(TokenType || (TokenType = {}));\nvar MultiLineStream = /** @class */ (function () {\n    function MultiLineStream(source, position) {\n        this.source = source;\n        this.len = source.length;\n        this.position = position;\n    }\n    MultiLineStream.prototype.eos = function () {\n        return this.len <= this.position;\n    };\n    MultiLineStream.prototype.getSource = function () {\n        return this.source;\n    };\n    MultiLineStream.prototype.pos = function () {\n        return this.position;\n    };\n    MultiLineStream.prototype.goBackTo = function (pos) {\n        this.position = pos;\n    };\n    MultiLineStream.prototype.goBack = function (n) {\n        this.position -= n;\n    };\n    MultiLineStream.prototype.advance = function (n) {\n        this.position += n;\n    };\n    MultiLineStream.prototype.goToEnd = function () {\n        this.position = this.source.length;\n    };\n    MultiLineStream.prototype.nextChar = function () {\n        return this.source.charCodeAt(this.position++) || 0;\n    };\n    MultiLineStream.prototype.peekChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position + n) || 0;\n    };\n    MultiLineStream.prototype.advanceIfChar = function (ch) {\n        if (ch === this.source.charCodeAt(this.position)) {\n            this.position++;\n            return true;\n        }\n        return false;\n    };\n    MultiLineStream.prototype.advanceIfChars = function (ch) {\n        var i;\n        if (this.position + ch.length > this.source.length) {\n            return false;\n        }\n        for (i = 0; i < ch.length; i++) {\n            if (this.source.charCodeAt(this.position + i) !== ch[i]) {\n                return false;\n            }\n        }\n        this.advance(i);\n        return true;\n    };\n    MultiLineStream.prototype.advanceIfRegExp = function (regex) {\n        var str = this.source.substr(this.position);\n        var match = str.match(regex);\n        if (match) {\n            this.position = this.position + match.index + match[0].length;\n            return match[0];\n        }\n        return '';\n    };\n    MultiLineStream.prototype.advanceUntilRegExp = function (regex) {\n        var str = this.source.substr(this.position);\n        var match = str.match(regex);\n        if (match) {\n            this.position = this.position + match.index;\n            return match[0];\n        }\n        else {\n            this.goToEnd();\n        }\n        return '';\n    };\n    MultiLineStream.prototype.advanceUntilChar = function (ch) {\n        while (this.position < this.source.length) {\n            if (this.source.charCodeAt(this.position) === ch) {\n                return true;\n            }\n            this.advance(1);\n        }\n        return false;\n    };\n    MultiLineStream.prototype.advanceUntilChars = function (ch) {\n        while (this.position + ch.length <= this.source.length) {\n            var i = 0;\n            for (; i < ch.length && this.source.charCodeAt(this.position + i) === ch[i]; i++) {\n            }\n            if (i === ch.length) {\n                return true;\n            }\n            this.advance(1);\n        }\n        this.goToEnd();\n        return false;\n    };\n    MultiLineStream.prototype.skipWhitespace = function () {\n        var n = this.advanceWhileChar(function (ch) {\n            return ch === _WSP || ch === _TAB || ch === _NWL || ch === _LFD || ch === _CAR;\n        });\n        return n > 0;\n    };\n    MultiLineStream.prototype.advanceWhileChar = function (condition) {\n        var posNow = this.position;\n        while (this.position < this.len && condition(this.source.charCodeAt(this.position))) {\n            this.position++;\n        }\n        return this.position - posNow;\n    };\n    return MultiLineStream;\n}());\nvar _BNG = '!'.charCodeAt(0);\nvar _MIN = '-'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _FSL = '/'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _DQO = '\"'.charCodeAt(0);\nvar _SQO = '\\''.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _WSP = ' '.charCodeAt(0);\nvar _TAB = '\\t'.charCodeAt(0);\nvar ScannerState;\n(function (ScannerState) {\n    ScannerState[ScannerState[\"WithinContent\"] = 0] = \"WithinContent\";\n    ScannerState[ScannerState[\"AfterOpeningStartTag\"] = 1] = \"AfterOpeningStartTag\";\n    ScannerState[ScannerState[\"AfterOpeningEndTag\"] = 2] = \"AfterOpeningEndTag\";\n    ScannerState[ScannerState[\"WithinDoctype\"] = 3] = \"WithinDoctype\";\n    ScannerState[ScannerState[\"WithinTag\"] = 4] = \"WithinTag\";\n    ScannerState[ScannerState[\"WithinEndTag\"] = 5] = \"WithinEndTag\";\n    ScannerState[ScannerState[\"WithinComment\"] = 6] = \"WithinComment\";\n    ScannerState[ScannerState[\"WithinScriptContent\"] = 7] = \"WithinScriptContent\";\n    ScannerState[ScannerState[\"WithinStyleContent\"] = 8] = \"WithinStyleContent\";\n    ScannerState[ScannerState[\"AfterAttributeName\"] = 9] = \"AfterAttributeName\";\n    ScannerState[ScannerState[\"BeforeAttributeValue\"] = 10] = \"BeforeAttributeValue\";\n})(ScannerState || (ScannerState = {}));\nvar htmlScriptContents = {\n    'text/x-handlebars-template': true\n};\nfunction createScanner(input, initialOffset, initialState) {\n    if (initialOffset === void 0) { initialOffset = 0; }\n    if (initialState === void 0) { initialState = ScannerState.WithinContent; }\n    var stream = new MultiLineStream(input, initialOffset);\n    var state = initialState;\n    var tokenOffset = 0;\n    var tokenType = TokenType.Unknown;\n    var tokenError;\n    var hasSpaceAfterTag;\n    var lastTag;\n    var lastAttributeName;\n    var lastTypeValue;\n    function nextElementName() {\n        return stream.advanceIfRegExp(/^[_:\\w][_:\\w-.\\d]*/).toLowerCase();\n    }\n    function nextAttributeName() {\n        return stream.advanceIfRegExp(/^[^\\s\"'>/=\\x00-\\x0F\\x7F\\x80-\\x9F]*/).toLowerCase();\n    }\n    function finishToken(offset, type, errorMessage) {\n        tokenType = type;\n        tokenOffset = offset;\n        tokenError = errorMessage;\n        return type;\n    }\n    function scan() {\n        var offset = stream.pos();\n        var oldState = state;\n        var token = internalScan();\n        if (token !== TokenType.EOS && offset === stream.pos()) {\n            console.log('Scanner.scan has not advanced at offset ' + offset + ', state before: ' + oldState + ' after: ' + state);\n            stream.advance(1);\n            return finishToken(offset, TokenType.Unknown);\n        }\n        return token;\n    }\n    function internalScan() {\n        var offset = stream.pos();\n        if (stream.eos()) {\n            return finishToken(offset, TokenType.EOS);\n        }\n        var errorMessage;\n        switch (state) {\n            case ScannerState.WithinComment:\n                if (stream.advanceIfChars([_MIN, _MIN, _RAN])) {\n                    state = ScannerState.WithinContent;\n                    return finishToken(offset, TokenType.EndCommentTag);\n                }\n                stream.advanceUntilChars([_MIN, _MIN, _RAN]); // -->\n                return finishToken(offset, TokenType.Comment);\n            case ScannerState.WithinDoctype:\n                if (stream.advanceIfChar(_RAN)) {\n                    state = ScannerState.WithinContent;\n                    return finishToken(offset, TokenType.EndDoctypeTag);\n                }\n                stream.advanceUntilChar(_RAN); // >\n                return finishToken(offset, TokenType.Doctype);\n            case ScannerState.WithinContent:\n                if (stream.advanceIfChar(_LAN)) {\n                    if (!stream.eos() && stream.peekChar() === _BNG) {\n                        if (stream.advanceIfChars([_BNG, _MIN, _MIN])) {\n                            state = ScannerState.WithinComment;\n                            return finishToken(offset, TokenType.StartCommentTag);\n                        }\n                        if (stream.advanceIfRegExp(/^!doctype/i)) {\n                            state = ScannerState.WithinDoctype;\n                            return finishToken(offset, TokenType.StartDoctypeTag);\n                        }\n                    }\n                    if (stream.advanceIfChar(_FSL)) {\n                        state = ScannerState.AfterOpeningEndTag;\n                        return finishToken(offset, TokenType.EndTagOpen);\n                    }\n                    state = ScannerState.AfterOpeningStartTag;\n                    return finishToken(offset, TokenType.StartTagOpen);\n                }\n                stream.advanceUntilChar(_LAN);\n                return finishToken(offset, TokenType.Content);\n            case ScannerState.AfterOpeningEndTag:\n                var tagName = nextElementName();\n                if (tagName.length > 0) {\n                    state = ScannerState.WithinEndTag;\n                    return finishToken(offset, TokenType.EndTag);\n                }\n                if (stream.skipWhitespace()) {\n                    return finishToken(offset, TokenType.Whitespace, localize('error.unexpectedWhitespace', 'Tag name must directly follow the open bracket.'));\n                }\n                state = ScannerState.WithinEndTag;\n                stream.advanceUntilChar(_RAN);\n                if (offset < stream.pos()) {\n                    return finishToken(offset, TokenType.Unknown, localize('error.endTagNameExpected', 'End tag name expected.'));\n                }\n                return internalScan();\n            case ScannerState.WithinEndTag:\n                if (stream.skipWhitespace()) {\n                    return finishToken(offset, TokenType.Whitespace);\n                }\n                if (stream.advanceIfChar(_RAN)) {\n                    state = ScannerState.WithinContent;\n                    return finishToken(offset, TokenType.EndTagClose);\n                }\n                errorMessage = localize('error.tagNameExpected', 'Closing bracket expected.');\n                break;\n            case ScannerState.AfterOpeningStartTag:\n                lastTag = nextElementName();\n                lastTypeValue = void 0;\n                lastAttributeName = void 0;\n                if (lastTag.length > 0) {\n                    hasSpaceAfterTag = false;\n                    state = ScannerState.WithinTag;\n                    return finishToken(offset, TokenType.StartTag);\n                }\n                if (stream.skipWhitespace()) {\n                    return finishToken(offset, TokenType.Whitespace, localize('error.unexpectedWhitespace', 'Tag name must directly follow the open bracket.'));\n                }\n                state = ScannerState.WithinTag;\n                stream.advanceUntilChar(_RAN);\n                if (offset < stream.pos()) {\n                    return finishToken(offset, TokenType.Unknown, localize('error.startTagNameExpected', 'Start tag name expected.'));\n                }\n                return internalScan();\n            case ScannerState.WithinTag:\n                if (stream.skipWhitespace()) {\n                    hasSpaceAfterTag = true; // remember that we have seen a whitespace\n                    return finishToken(offset, TokenType.Whitespace);\n                }\n                if (hasSpaceAfterTag) {\n                    lastAttributeName = nextAttributeName();\n                    if (lastAttributeName.length > 0) {\n                        state = ScannerState.AfterAttributeName;\n                        hasSpaceAfterTag = false;\n                        return finishToken(offset, TokenType.AttributeName);\n                    }\n                }\n                if (stream.advanceIfChars([_FSL, _RAN])) {\n                    state = ScannerState.WithinContent;\n                    return finishToken(offset, TokenType.StartTagSelfClose);\n                }\n                if (stream.advanceIfChar(_RAN)) {\n                    if (lastTag === 'script') {\n                        if (lastTypeValue && htmlScriptContents[lastTypeValue]) {\n                            // stay in html\n                            state = ScannerState.WithinContent;\n                        }\n                        else {\n                            state = ScannerState.WithinScriptContent;\n                        }\n                    }\n                    else if (lastTag === 'style') {\n                        state = ScannerState.WithinStyleContent;\n                    }\n                    else {\n                        state = ScannerState.WithinContent;\n                    }\n                    return finishToken(offset, TokenType.StartTagClose);\n                }\n                stream.advance(1);\n                return finishToken(offset, TokenType.Unknown, localize('error.unexpectedCharacterInTag', 'Unexpected character in tag.'));\n            case ScannerState.AfterAttributeName:\n                if (stream.skipWhitespace()) {\n                    hasSpaceAfterTag = true;\n                    return finishToken(offset, TokenType.Whitespace);\n                }\n                if (stream.advanceIfChar(_EQS)) {\n                    state = ScannerState.BeforeAttributeValue;\n                    return finishToken(offset, TokenType.DelimiterAssign);\n                }\n                state = ScannerState.WithinTag;\n                return internalScan(); // no advance yet - jump to WithinTag\n            case ScannerState.BeforeAttributeValue:\n                if (stream.skipWhitespace()) {\n                    return finishToken(offset, TokenType.Whitespace);\n                }\n                var attributeValue = stream.advanceIfRegExp(/^[^\\s\"'`=<>\\/]+/);\n                if (attributeValue.length > 0) {\n                    if (lastAttributeName === 'type') {\n                        lastTypeValue = attributeValue;\n                    }\n                    state = ScannerState.WithinTag;\n                    hasSpaceAfterTag = false;\n                    return finishToken(offset, TokenType.AttributeValue);\n                }\n                var ch = stream.peekChar();\n                if (ch === _SQO || ch === _DQO) {\n                    stream.advance(1); // consume quote\n                    if (stream.advanceUntilChar(ch)) {\n                        stream.advance(1); // consume quote\n                    }\n                    if (lastAttributeName === 'type') {\n                        lastTypeValue = stream.getSource().substring(offset + 1, stream.pos() - 1);\n                    }\n                    state = ScannerState.WithinTag;\n                    hasSpaceAfterTag = false;\n                    return finishToken(offset, TokenType.AttributeValue);\n                }\n                state = ScannerState.WithinTag;\n                hasSpaceAfterTag = false;\n                return internalScan(); // no advance yet - jump to WithinTag\n            case ScannerState.WithinScriptContent:\n                // see http://stackoverflow.com/questions/14574471/how-do-browsers-parse-a-script-tag-exactly\n                var sciptState = 1;\n                while (!stream.eos()) {\n                    var match = stream.advanceIfRegExp(/<!--|-->|<\\/?script\\s*\\/?>?/i);\n                    if (match.length === 0) {\n                        stream.goToEnd();\n                        return finishToken(offset, TokenType.Script);\n                    }\n                    else if (match === '<!--') {\n                        if (sciptState === 1) {\n                            sciptState = 2;\n                        }\n                    }\n                    else if (match === '-->') {\n                        sciptState = 1;\n                    }\n                    else if (match[1] !== '/') {\n                        if (sciptState === 2) {\n                            sciptState = 3;\n                        }\n                    }\n                    else {\n                        if (sciptState === 3) {\n                            sciptState = 2;\n                        }\n                        else {\n                            stream.goBack(match.length); // to the beginning of the closing tag\n                            break;\n                        }\n                    }\n                }\n                state = ScannerState.WithinContent;\n                if (offset < stream.pos()) {\n                    return finishToken(offset, TokenType.Script);\n                }\n                return internalScan(); // no advance yet - jump to content\n            case ScannerState.WithinStyleContent:\n                stream.advanceUntilRegExp(/<\\/style/i);\n                state = ScannerState.WithinContent;\n                if (offset < stream.pos()) {\n                    return finishToken(offset, TokenType.Styles);\n                }\n                return internalScan(); // no advance yet - jump to content\n        }\n        stream.advance(1);\n        state = ScannerState.WithinContent;\n        return finishToken(offset, TokenType.Unknown, errorMessage);\n    }\n    return {\n        scan: scan,\n        getTokenType: function () { return tokenType; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return stream.pos() - tokenOffset; },\n        getTokenEnd: function () { return stream.pos(); },\n        getTokenText: function () { return stream.getSource().substring(tokenOffset, stream.pos()); },\n        getScannerState: function () { return state; },\n        getTokenError: function () { return tokenError; }\n    };\n}\n//# sourceMappingURL=htmlScanner.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlTags.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlTags.js ***!
  \**************************************************************************************************************/
/*! exports provided: EMPTY_ELEMENTS, isEmptyElement, HTMLTagSpecification, HTML_TAGS, IONIC_TAGS, getHTML5TagProvider, getAngularTagProvider, getIonicTagProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EMPTY_ELEMENTS\", function() { return EMPTY_ELEMENTS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmptyElement\", function() { return isEmptyElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTMLTagSpecification\", function() { return HTMLTagSpecification; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTML_TAGS\", function() { return HTML_TAGS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IONIC_TAGS\", function() { return IONIC_TAGS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHTML5TagProvider\", function() { return getHTML5TagProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAngularTagProvider\", function() { return getAngularTagProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIonicTagProvider\", function() { return getIonicTagProvider; });\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/arrays.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/html/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*!\nBEGIN THIRD PARTY\n*/\n/*--------------------------------------------------------------------------------------------\n *  This file is based on or incorporates material from the projects listed below (Third Party IP).\n *  The original copyright notice and the license under which Microsoft received such Third Party IP,\n *  are set forth below. Such licenses and notices are provided for informational purposes only.\n *  Microsoft licenses the Third Party IP to you under the licensing terms for the Microsoft product.\n *  Microsoft reserves all other rights not expressly granted under this agreement, whether by implication,\n *  estoppel or otherwise.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *  Copyright © 2015 W3C® (MIT, ERCIM, Keio, Beihang). This software or document includes includes material copied\n *  from or derived from HTML 5.1 W3C Working Draft (http://www.w3.org/TR/2015/WD-html51-20151008/.)\"\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *  Ionic Main Site (https://github.com/driftyco/ionic-site).\n *  Copyright Drifty Co. http://drifty.com/.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\n *  except in compliance with the License. You may obtain a copy of the License at\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n *  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n *  MERCHANTABLITY OR NON-INFRINGEMENT.\n *\n *  See the Apache Version 2.0 License for specific language governing permissions\n *  and limitations under the License.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nfunction isEmptyElement(e) {\n    return !!e && _utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__[\"binarySearch\"](EMPTY_ELEMENTS, e.toLowerCase(), function (s1, s2) { return s1.localeCompare(s2); }) >= 0;\n}\nvar HTMLTagSpecification = /** @class */ (function () {\n    function HTMLTagSpecification(label, attributes) {\n        if (attributes === void 0) { attributes = []; }\n        this.label = label;\n        this.attributes = attributes;\n    }\n    return HTMLTagSpecification;\n}());\n\n// HTML tag information sourced from http://www.w3.org/TR/2015/WD-html51-20151008/\nvar HTML_TAGS = {\n    // The root element\n    html: new HTMLTagSpecification(localize('tags.html', 'The html element represents the root of an HTML document.'), ['manifest']),\n    // Document metadata\n    head: new HTMLTagSpecification(localize('tags.head', 'The head element represents a collection of metadata for the Document.')),\n    title: new HTMLTagSpecification(localize('tags.title', 'The title element represents the document\\'s title or name. Authors should use titles that identify their documents even when they are used out of context, for example in a user\\'s history or bookmarks, or in search results. The document\\'s title is often different from its first heading, since the first heading does not have to stand alone when taken out of context.')),\n    base: new HTMLTagSpecification(localize('tags.base', 'The base element allows authors to specify the document base URL for the purposes of resolving relative URLs, and the name of the default browsing context for the purposes of following hyperlinks. The element does not represent any content beyond this information.'), ['href', 'target']),\n    link: new HTMLTagSpecification(localize('tags.link', 'The link element allows authors to link their document to other resources.'), ['href', 'crossorigin:xo', 'rel', 'media', 'hreflang', 'type', 'sizes']),\n    meta: new HTMLTagSpecification(localize('tags.meta', 'The meta element represents various kinds of metadata that cannot be expressed using the title, base, link, style, and script elements.'), ['name', 'http-equiv', 'content', 'charset']),\n    style: new HTMLTagSpecification(localize('tags.style', 'The style element allows authors to embed style information in their documents. The style element is one of several inputs to the styling processing model. The element does not represent content for the user.'), ['media', 'nonce', 'type', 'scoped:v']),\n    // Sections\n    body: new HTMLTagSpecification(localize('tags.body', 'The body element represents the content of the document.'), ['onafterprint', 'onbeforeprint', 'onbeforeunload', 'onhashchange', 'onlanguagechange', 'onmessage', 'onoffline', 'ononline', 'onpagehide', 'onpageshow', 'onpopstate', 'onstorage', 'onunload']),\n    article: new HTMLTagSpecification(localize('tags.article', 'The article element represents a complete, or self-contained, composition in a document, page, application, or site and that is, in principle, independently distributable or reusable, e.g. in syndication. This could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment, an interactive widget or gadget, or any other independent item of content. Each article should be identified, typically by including a heading (h1–h6 element) as a child of the article element.')),\n    section: new HTMLTagSpecification(localize('tags.section', 'The section element represents a generic section of a document or application. A section, in this context, is a thematic grouping of content. Each section should be identified, typically by including a heading ( h1- h6 element) as a child of the section element.')),\n    nav: new HTMLTagSpecification(localize('tags.nav', 'The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links.')),\n    aside: new HTMLTagSpecification(localize('tags.aside', 'The aside element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content. Such sections are often represented as sidebars in printed typography.')),\n    h1: new HTMLTagSpecification(localize('tags.h1', 'The h1 element represents a section heading.')),\n    h2: new HTMLTagSpecification(localize('tags.h2', 'The h2 element represents a section heading.')),\n    h3: new HTMLTagSpecification(localize('tags.h3', 'The h3 element represents a section heading.')),\n    h4: new HTMLTagSpecification(localize('tags.h4', 'The h4 element represents a section heading.')),\n    h5: new HTMLTagSpecification(localize('tags.h5', 'The h5 element represents a section heading.')),\n    h6: new HTMLTagSpecification(localize('tags.h6', 'The h6 element represents a section heading.')),\n    header: new HTMLTagSpecification(localize('tags.header', 'The header element represents introductory content for its nearest ancestor sectioning content or sectioning root element. A header typically contains a group of introductory or navigational aids. When the nearest ancestor sectioning content or sectioning root element is the body element, then it applies to the whole page.')),\n    footer: new HTMLTagSpecification(localize('tags.footer', 'The footer element represents a footer for its nearest ancestor sectioning content or sectioning root element. A footer typically contains information about its section such as who wrote it, links to related documents, copyright data, and the like.')),\n    address: new HTMLTagSpecification(localize('tags.address', 'The address element represents the contact information for its nearest article or body element ancestor. If that is the body element, then the contact information applies to the document as a whole.')),\n    // Grouping content\n    p: new HTMLTagSpecification(localize('tags.p', 'The p element represents a paragraph.')),\n    hr: new HTMLTagSpecification(localize('tags.hr', 'The hr element represents a paragraph-level thematic break, e.g. a scene change in a story, or a transition to another topic within a section of a reference book.')),\n    pre: new HTMLTagSpecification(localize('tags.pre', 'The pre element represents a block of preformatted text, in which structure is represented by typographic conventions rather than by elements.')),\n    blockquote: new HTMLTagSpecification(localize('tags.blockquote', 'The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.'), ['cite']),\n    ol: new HTMLTagSpecification(localize('tags.ol', 'The ol element represents a list of items, where the items have been intentionally ordered, such that changing the order would change the meaning of the document.'), ['reversed:v', 'start', 'type:lt']),\n    ul: new HTMLTagSpecification(localize('tags.ul', 'The ul element represents a list of items, where the order of the items is not important — that is, where changing the order would not materially change the meaning of the document.')),\n    li: new HTMLTagSpecification(localize('tags.li', 'The li element represents a list item. If its parent element is an ol, ul, or menu element, then the element is an item of the parent element\\'s list, as defined for those elements. Otherwise, the list item has no defined list-related relationship to any other li element.'), ['value']),\n    dl: new HTMLTagSpecification(localize('tags.dl', 'The dl element represents an association list consisting of zero or more name-value groups (a description list). A name-value group consists of one or more names (dt elements) followed by one or more values (dd elements), ignoring any nodes other than dt and dd elements. Within a single dl element, there should not be more than one dt element for each name.')),\n    dt: new HTMLTagSpecification(localize('tags.dt', 'The dt element represents the term, or name, part of a term-description group in a description list (dl element).')),\n    dd: new HTMLTagSpecification(localize('tags.dd', 'The dd element represents the description, definition, or value, part of a term-description group in a description list (dl element).')),\n    figure: new HTMLTagSpecification(localize('tags.figure', 'The figure element represents some flow content, optionally with a caption, that is self-contained (like a complete sentence) and is typically referenced as a single unit from the main flow of the document.')),\n    figcaption: new HTMLTagSpecification(localize('tags.figcaption', 'The figcaption element represents a caption or legend for the rest of the contents of the figcaption element\\'s parent figure element, if any.')),\n    main: new HTMLTagSpecification(localize('tags.main', 'The main element represents the main content of the body of a document or application. The main content area consists of content that is directly related to or expands upon the central topic of a document or central functionality of an application.')),\n    div: new HTMLTagSpecification(localize('tags.div', 'The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements.')),\n    // Text-level semantics\n    a: new HTMLTagSpecification(localize('tags.a', 'If the a element has an href attribute, then it represents a hyperlink (a hypertext anchor) labeled by its contents.'), ['href', 'target', 'download', 'ping', 'rel', 'hreflang', 'type']),\n    em: new HTMLTagSpecification(localize('tags.em', 'The em element represents stress emphasis of its contents.')),\n    strong: new HTMLTagSpecification(localize('tags.strong', 'The strong element represents strong importance, seriousness, or urgency for its contents.')),\n    small: new HTMLTagSpecification(localize('tags.small', 'The small element represents side comments such as small print.')),\n    s: new HTMLTagSpecification(localize('tags.s', 'The s element represents contents that are no longer accurate or no longer relevant.')),\n    cite: new HTMLTagSpecification(localize('tags.cite', 'The cite element represents a reference to a creative work. It must include the title of the work or the name of the author(person, people or organization) or an URL reference, or a reference in abbreviated form as per the conventions used for the addition of citation metadata.')),\n    q: new HTMLTagSpecification(localize('tags.q', 'The q element represents some phrasing content quoted from another source.'), ['cite']),\n    dfn: new HTMLTagSpecification(localize('tags.dfn', 'The dfn element represents the defining instance of a term. The paragraph, description list group, or section that is the nearest ancestor of the dfn element must also contain the definition(s) for the term given by the dfn element.')),\n    abbr: new HTMLTagSpecification(localize('tags.abbr', 'The abbr element represents an abbreviation or acronym, optionally with its expansion. The title attribute may be used to provide an expansion of the abbreviation. The attribute, if specified, must contain an expansion of the abbreviation, and nothing else.')),\n    ruby: new HTMLTagSpecification(localize('tags.ruby', 'The ruby element allows one or more spans of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of text presented alongside base text, primarily used in East Asian typography as a guide for pronunciation or to include other annotations. In Japanese, this form of typography is also known as furigana. Ruby text can appear on either side, and sometimes both sides, of the base text, and it is possible to control its position using CSS. A more complete introduction to ruby can be found in the Use Cases & Exploratory Approaches for Ruby Markup document as well as in CSS Ruby Module Level 1. [RUBY-UC] [CSSRUBY]')),\n    rb: new HTMLTagSpecification(localize('tags.rb', 'The rb element marks the base text component of a ruby annotation. When it is the child of a ruby element, it doesn\\'t represent anything itself, but its parent ruby element uses it as part of determining what it represents.')),\n    rt: new HTMLTagSpecification(localize('tags.rt', 'The rt element marks the ruby text component of a ruby annotation. When it is the child of a ruby element or of an rtc element that is itself the child of a ruby element, it doesn\\'t represent anything itself, but its ancestor ruby element uses it as part of determining what it represents.')),\n    // <rtc> is not yet supported by 2+ browsers\n    //rtc: new HTMLTagSpecification(\n    //\tlocalize('tags.rtc', 'The rtc element marks a ruby text container for ruby text components in a ruby annotation. When it is the child of a ruby element it doesn\\'t represent anything itself, but its parent ruby element uses it as part of determining what it represents.')),\n    rp: new HTMLTagSpecification(localize('tags.rp', 'The rp element is used to provide fallback text to be shown by user agents that don\\'t support ruby annotations. One widespread convention is to provide parentheses around the ruby text component of a ruby annotation.')),\n    // <data> is not yet supported by 2+ browsers\n    //data: new HTMLTagSpecification(\n    //\tlocalize('tags.data', 'The data element represents its contents, along with a machine-readable form of those contents in the value attribute.')),\n    time: new HTMLTagSpecification(localize('tags.time', 'The time element represents its contents, along with a machine-readable form of those contents in the datetime attribute. The kind of content is limited to various kinds of dates, times, time-zone offsets, and durations, as described below.'), ['datetime']),\n    code: new HTMLTagSpecification(localize('tags.code', 'The code element represents a fragment of computer code. This could be an XML element name, a file name, a computer program, or any other string that a computer would recognize.')),\n    var: new HTMLTagSpecification(localize('tags.var', 'The var element represents a variable. This could be an actual variable in a mathematical expression or programming context, an identifier representing a constant, a symbol identifying a physical quantity, a function parameter, or just be a term used as a placeholder in prose.')),\n    samp: new HTMLTagSpecification(localize('tags.samp', 'The samp element represents sample or quoted output from another program or computing system.')),\n    kbd: new HTMLTagSpecification(localize('tags.kbd', 'The kbd element represents user input (typically keyboard input, although it may also be used to represent other input, such as voice commands).')),\n    sub: new HTMLTagSpecification(localize('tags.sub', 'The sub element represents a subscript.')),\n    sup: new HTMLTagSpecification(localize('tags.sup', 'The sup element represents a superscript.')),\n    i: new HTMLTagSpecification(localize('tags.i', 'The i element represents a span of text in an alternate voice or mood, or otherwise offset from the normal prose in a manner indicating a different quality of text, such as a taxonomic designation, a technical term, an idiomatic phrase from another language, transliteration, a thought, or a ship name in Western texts.')),\n    b: new HTMLTagSpecification(localize('tags.b', 'The b element represents a span of text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood, such as key words in a document abstract, product names in a review, actionable words in interactive text-driven software, or an article lede.')),\n    u: new HTMLTagSpecification(localize('tags.u', 'The u element represents a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labeling the text as being a proper name in Chinese text (a Chinese proper name mark), or labeling the text as being misspelt.')),\n    mark: new HTMLTagSpecification(localize('tags.mark', 'The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context. When used in a quotation or other block of text referred to from the prose, it indicates a highlight that was not originally present but which has been added to bring the reader\\'s attention to a part of the text that might not have been considered important by the original author when the block was originally written, but which is now under previously unexpected scrutiny. When used in the main prose of a document, it indicates a part of the document that has been highlighted due to its likely relevance to the user\\'s current activity.')),\n    bdi: new HTMLTagSpecification(localize('tags.bdi', 'The bdi element represents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting. [BIDI]')),\n    bdo: new HTMLTagSpecification(localize('tags.dbo', 'The bdo element represents explicit text directionality formatting control for its children. It allows authors to override the Unicode bidirectional algorithm by explicitly specifying a direction override. [BIDI]')),\n    span: new HTMLTagSpecification(localize('tags.span', 'The span element doesn\\'t mean anything on its own, but can be useful when used together with the global attributes, e.g. class, lang, or dir. It represents its children.')),\n    br: new HTMLTagSpecification(localize('tags.br', 'The br element represents a line break.')),\n    wbr: new HTMLTagSpecification(localize('tags.wbr', 'The wbr element represents a line break opportunity.')),\n    // Edits\n    ins: new HTMLTagSpecification(localize('tags.ins', 'The ins element represents an addition to the document.')),\n    del: new HTMLTagSpecification(localize('tags.del', 'The del element represents a removal from the document.'), ['cite', 'datetime']),\n    // Embedded content\n    picture: new HTMLTagSpecification(localize('tags.picture', 'The picture element is a container which provides multiple sources to its contained img element to allow authors to declaratively control or give hints to the user agent about which image resource to use, based on the screen pixel density, viewport size, image format, and other factors. It represents its children.')),\n    img: new HTMLTagSpecification(localize('tags.img', 'An img element represents an image.'), ['alt', 'src', 'srcset', 'crossorigin:xo', 'usemap', 'ismap:v', 'width', 'height']),\n    iframe: new HTMLTagSpecification(localize('tags.iframe', 'The iframe element represents a nested browsing context.'), ['src', 'srcdoc', 'name', 'sandbox:sb', 'seamless:v', 'allowfullscreen:v', 'width', 'height']),\n    embed: new HTMLTagSpecification(localize('tags.embed', 'The embed element provides an integration point for an external (typically non-HTML) application or interactive content.'), ['src', 'type', 'width', 'height']),\n    object: new HTMLTagSpecification(localize('tags.object', 'The object element can represent an external resource, which, depending on the type of the resource, will either be treated as an image, as a nested browsing context, or as an external resource to be processed by a plugin.'), ['data', 'type', 'typemustmatch:v', 'name', 'usemap', 'form', 'width', 'height']),\n    param: new HTMLTagSpecification(localize('tags.param', 'The param element defines parameters for plugins invoked by object elements. It does not represent anything on its own.'), ['name', 'value']),\n    video: new HTMLTagSpecification(localize('tags.video', 'A video element is used for playing videos or movies, and audio files with captions.'), ['src', 'crossorigin:xo', 'poster', 'preload:pl', 'autoplay:v', 'mediagroup', 'loop:v', 'muted:v', 'controls:v', 'width', 'height']),\n    audio: new HTMLTagSpecification(localize('tags.audio', 'An audio element represents a sound or audio stream.'), ['src', 'crossorigin:xo', 'preload:pl', 'autoplay:v', 'mediagroup', 'loop:v', 'muted:v', 'controls:v']),\n    source: new HTMLTagSpecification(localize('tags.source', 'The source element allows authors to specify multiple alternative media resources for media elements. It does not represent anything on its own.'), \n    // 'When the source element has a parent that is a picture element, the source element allows authors to specify multiple alternative source sets for img elements.'\n    ['src', 'type']),\n    track: new HTMLTagSpecification(localize('tags.track', 'The track element allows authors to specify explicit external timed text tracks for media elements. It does not represent anything on its own.'), ['default:v', 'kind:tk', 'label', 'src', 'srclang']),\n    map: new HTMLTagSpecification(localize('tags.map', 'The map element, in conjunction with an img element and any area element descendants, defines an image map. The element represents its children.'), ['name']),\n    area: new HTMLTagSpecification(localize('tags.area', 'The area element represents either a hyperlink with some text and a corresponding area on an image map, or a dead area on an image map.'), ['alt', 'coords', 'shape:sh', 'href', 'target', 'download', 'ping', 'rel', 'hreflang', 'type']),\n    // Tabular data\n    table: new HTMLTagSpecification(localize('tags.table', 'The table element represents data with more than one dimension, in the form of a table.'), ['sortable:v', 'border']),\n    caption: new HTMLTagSpecification(localize('tags.caption', 'The caption element represents the title of the table that is its parent, if it has a parent and that is a table element.')),\n    colgroup: new HTMLTagSpecification(localize('tags.colgroup', 'The colgroup element represents a group of one or more columns in the table that is its parent, if it has a parent and that is a table element.'), ['span']),\n    col: new HTMLTagSpecification(localize('tags.col', 'If a col element has a parent and that is a colgroup element that itself has a parent that is a table element, then the col element represents one or more columns in the column group represented by that colgroup.'), ['span']),\n    tbody: new HTMLTagSpecification(localize('tags.tbody', 'The tbody element represents a block of rows that consist of a body of data for the parent table element, if the tbody element has a parent and it is a table.')),\n    thead: new HTMLTagSpecification(localize('tags.thead', 'The thead element represents the block of rows that consist of the column labels (headers) for the parent table element, if the thead element has a parent and it is a table.')),\n    tfoot: new HTMLTagSpecification(localize('tags.tfoot', 'The tfoot element represents the block of rows that consist of the column summaries (footers) for the parent table element, if the tfoot element has a parent and it is a table.')),\n    tr: new HTMLTagSpecification(localize('tags.tr', 'The tr element represents a row of cells in a table.')),\n    td: new HTMLTagSpecification(localize('tags.td', 'The td element represents a data cell in a table.'), ['colspan', 'rowspan', 'headers']),\n    th: new HTMLTagSpecification(localize('tags.th', 'The th element represents a header cell in a table.'), ['colspan', 'rowspan', 'headers', 'scope:s', 'sorted', 'abbr']),\n    // Forms\n    form: new HTMLTagSpecification(localize('tags.form', 'The form element represents a collection of form-associated elements, some of which can represent editable values that can be submitted to a server for processing.'), ['accept-charset', 'action', 'autocomplete:o', 'enctype:et', 'method:m', 'name', 'novalidate:v', 'target']),\n    label: new HTMLTagSpecification(localize('tags.label', 'The label element represents a caption in a user interface. The caption can be associated with a specific form control, known as the label element\\'s labeled control, either using the for attribute, or by putting the form control inside the label element itself.'), ['form', 'for']),\n    input: new HTMLTagSpecification(localize('tags.input', 'The input element represents a typed data field, usually with a form control to allow the user to edit the data.'), ['accept', 'alt', 'autocomplete:inputautocomplete', 'autofocus:v', 'checked:v', 'dirname', 'disabled:v', 'form', 'formaction', 'formenctype:et', 'formmethod:fm', 'formnovalidate:v', 'formtarget', 'height', 'inputmode:im', 'list', 'max', 'maxlength', 'min', 'minlength', 'multiple:v', 'name', 'pattern', 'placeholder', 'readonly:v', 'required:v', 'size', 'src', 'step', 'type:t', 'value', 'width']),\n    button: new HTMLTagSpecification(localize('tags.button', 'The button element represents a button labeled by its contents.'), ['autofocus:v', 'disabled:v', 'form', 'formaction', 'formenctype:et', 'formmethod:fm', 'formnovalidate:v', 'formtarget', 'name', 'type:bt', 'value']),\n    select: new HTMLTagSpecification(localize('tags.select', 'The select element represents a control for selecting amongst a set of options.'), ['autocomplete:inputautocomplete', 'autofocus:v', 'disabled:v', 'form', 'multiple:v', 'name', 'required:v', 'size']),\n    datalist: new HTMLTagSpecification(localize('tags.datalist', 'The datalist element represents a set of option elements that represent predefined options for other controls. In the rendering, the datalist element represents nothing and it, along with its children, should be hidden.')),\n    optgroup: new HTMLTagSpecification(localize('tags.optgroup', 'The optgroup element represents a group of option elements with a common label.'), ['disabled:v', 'label']),\n    option: new HTMLTagSpecification(localize('tags.option', 'The option element represents an option in a select element or as part of a list of suggestions in a datalist element.'), ['disabled:v', 'label', 'selected:v', 'value']),\n    textarea: new HTMLTagSpecification(localize('tags.textarea', 'The textarea element represents a multiline plain text edit control for the element\\'s raw value. The contents of the control represent the control\\'s default value.'), ['autocomplete:inputautocomplete', 'autofocus:v', 'cols', 'dirname', 'disabled:v', 'form', 'inputmode:im', 'maxlength', 'minlength', 'name', 'placeholder', 'readonly:v', 'required:v', 'rows', 'wrap:w']),\n    output: new HTMLTagSpecification(localize('tags.output', 'The output element represents the result of a calculation performed by the application, or the result of a user action.'), ['for', 'form', 'name']),\n    progress: new HTMLTagSpecification(localize('tags.progress', 'The progress element represents the completion progress of a task. The progress is either indeterminate, indicating that progress is being made but that it is not clear how much more work remains to be done before the task is complete (e.g. because the task is waiting for a remote host to respond), or the progress is a number in the range zero to a maximum, giving the fraction of work that has so far been completed.'), ['value', 'max']),\n    meter: new HTMLTagSpecification(localize('tags.meter', 'The meter element represents a scalar measurement within a known range, or a fractional value; for example disk usage, the relevance of a query result, or the fraction of a voting population to have selected a particular candidate.'), ['value', 'min', 'max', 'low', 'high', 'optimum']),\n    fieldset: new HTMLTagSpecification(localize('tags.fieldset', 'The fieldset element represents a set of form controls optionally grouped under a common name.'), ['disabled:v', 'form', 'name']),\n    legend: new HTMLTagSpecification(localize('tags.legend', 'The legend element represents a caption for the rest of the contents of the legend element\\'s parent fieldset element, if any.')),\n    // Interactive elements\n    details: new HTMLTagSpecification(localize('tags.details', 'The details element represents a disclosure widget from which the user can obtain additional information or controls.'), ['open:v']),\n    summary: new HTMLTagSpecification(localize('tags.summary', 'The summary element represents a summary, caption, or legend for the rest of the contents of the summary element\\'s parent details element, if any.')),\n    // <menu> and <menuitem> are not yet supported by 2+ browsers\n    //menu: new HTMLTagSpecification(\n    //\tlocalize('tags.menu', 'The menu element represents a list of commands.'),\n    //\t['type:mt', 'label']),\n    //menuitem: new HTMLTagSpecification(\n    //\tlocalize('tags.menuitem', 'The menuitem element represents a command that the user can invoke from a popup menu (either a context menu or the menu of a menu button).')),\n    dialog: new HTMLTagSpecification(localize('tags.dialog', 'The dialog element represents a part of an application that a user interacts with to perform a task, for example a dialog box, inspector, or window.')),\n    // Scripting\n    script: new HTMLTagSpecification(localize('tags.script', 'The script element allows authors to include dynamic script and data blocks in their documents. The element does not represent content for the user.'), ['src', 'type', 'charset', 'async:v', 'defer:v', 'crossorigin:xo', 'nonce']),\n    noscript: new HTMLTagSpecification(localize('tags.noscript', 'The noscript element represents nothing if scripting is enabled, and represents its children if scripting is disabled. It is used to present different markup to user agents that support scripting and those that don\\'t support scripting, by affecting how the document is parsed.')),\n    template: new HTMLTagSpecification(localize('tags.template', 'The template element is used to declare fragments of HTML that can be cloned and inserted in the document by script.')),\n    canvas: new HTMLTagSpecification(localize('tags.canvas', 'The canvas element provides scripts with a resolution-dependent bitmap canvas, which can be used for rendering graphs, game graphics, art, or other visual images on the fly.'), ['width', 'height'])\n};\n// Ionic tag information sourced from Ionic main website (https://github.com/driftyco/ionic-site)\nvar IONIC_TAGS = {\n    'ion-checkbox': new HTMLTagSpecification(localize('tags.ion.checkbox', 'The checkbox is no different than the HTML checkbox input, except it\\'s styled differently. The checkbox behaves like any AngularJS checkbox.'), ['name', 'ng-false-value', 'ng-model', 'ng-true-value']),\n    'ion-content': new HTMLTagSpecification(localize('tags.ion.content', 'The ionContent directive provides an easy to use content area that can be configured to use Ionic\\'s custom Scroll View, or the built-in overflow scrolling of the browser.'), ['delegate-handle', 'direction:scrolldir', 'has-bouncing:b', 'locking:b', 'on-scroll', 'on-scroll-complete', 'overflow-scroll:b', 'padding:b', 'scroll:b', 'scrollbar-x:b', 'scrollbar-y:b', 'start-x', 'start-y']),\n    'ion-delete-button': new HTMLTagSpecification(localize('tags.ion.deletebutton', 'Child of ionItem'), []),\n    'ion-footer-bar': new HTMLTagSpecification(localize('tags.ion.footerbar', 'Adds a fixed footer bar below some content. Can also be a subfooter (higher up) if the \"bar-subfooter\" class is applied.'), ['align-title:align', 'keyboard-attach:v']),\n    'ion-header-bar': new HTMLTagSpecification(localize('tags.ion.headerbar', 'Adds a fixed header bar above some content. Can also be a subheader (lower down) if the \"bar-subheader\" class is applied.'), ['align-title:align', 'no-tap-scroll:b']),\n    'ion-infinite-scroll': new HTMLTagSpecification(localize('tags.ion.infinitescroll', 'Child of ionContent or ionScroll. The ionInfiniteScroll directive allows you to call a function whenever the user gets to the bottom of the page or near the bottom of the page.'), ['distance', 'icon', 'immediate-check:b', 'on-infinite', 'spinner']),\n    'ion-input': new HTMLTagSpecification(localize('tags.ion.input', 'ionInput is meant for text type inputs only. Ionic uses an actual <input type=\"text\"> HTML element within the component, with Ionic wrapping to better handle the user experience and interactivity.'), ['type:inputtype', 'clearInput:v']),\n    'ion-item': new HTMLTagSpecification(localize('tags.ion.item', 'Child of ionList.'), []),\n    'ion-list': new HTMLTagSpecification(localize('tags.ion.list', 'The List is a widely used interface element in almost any mobile app, and can include content ranging from basic text all the way to buttons, toggles, icons, and thumbnails.'), ['can-swipe:b', 'delegate-handle', 'show-delete:b', 'show-reorder:b', 'type:listtype']),\n    'ion-modal-view': new HTMLTagSpecification(localize('tags.ion.modalview', 'The Modal is a content pane that can go over the user\\'s main view temporarily. Usually used for making a choice or editing an item.'), []),\n    'ion-nav-back-button': new HTMLTagSpecification(localize('tags.ion.navbackbutton', 'Child of ionNavBar. Creates a back button inside an ionNavBar. The back button will appear when the user is able to go back in the current navigation stack.'), []),\n    'ion-nav-bar': new HTMLTagSpecification(localize('tags.ion.navbar', 'If you have an ionNavView directive, you can also create an <ion-nav-bar>, which will create a topbar that updates as the application state changes.'), ['align-title:align', 'delegate-handle', 'no-tap-scroll:b']),\n    'ion-nav-buttons': new HTMLTagSpecification(localize('tags.ion.navbuttons', 'Child of ionNavView. Use ionNavButtons to set the buttons on your ionNavBar from within an ionView.'), ['side:navsides']),\n    'ion-nav-title': new HTMLTagSpecification(localize('tags.ion.navtitle', 'Child of ionNavView. The ionNavTitle directive replaces an ionNavBar title text with custom HTML from within an ionView template.'), []),\n    'ion-nav-view': new HTMLTagSpecification(localize('tags.ion.navview', 'The ionNavView directive is used to render templates in your application. Each template is part of a state. States are usually mapped to a url, and are defined programatically using angular-ui-router.'), ['name']),\n    'ion-option-button': new HTMLTagSpecification(localize('tags.ion.optionbutton', 'Child of ionItem. Creates an option button inside a list item, that is visible when the item is swiped to the left by the user.'), []),\n    'ion-pane': new HTMLTagSpecification(localize('tags.ion.pane', 'A simple container that fits content, with no side effects. Adds the \"pane\" class to the element.'), []),\n    'ion-popover-view': new HTMLTagSpecification(localize('tags.ion.popoverview', 'The Popover is a view that floats above an app\\'s content. Popovers provide an easy way to present or gather information from the user.'), []),\n    'ion-radio': new HTMLTagSpecification(localize('tags.ion.radio', 'The radio ionRirective is no different than the HTML radio input, except it\\'s styled differently. The ionRadio behaves like AngularJS radio input.'), ['disabled:b', 'icon', 'name', 'ng-disabled:b', 'ng-model', 'ng-value', 'value']),\n    'ion-refresher': new HTMLTagSpecification(localize('tags.ion.refresher', 'Child of ionContent or ionScroll. Allows you to add pull-to-refresh to a scrollView. Place it as the first child of your ionContent or ionScroll element.'), ['disable-pulling-rotation:b', 'on-pulling', 'on-refresh', 'pulling-icon', 'pulling-text', 'refreshing-icon', 'spinner']),\n    'ion-reorder-button': new HTMLTagSpecification(localize('tags.ion.reorderbutton', 'Child of ionItem.'), ['on-reorder']),\n    'ion-scroll': new HTMLTagSpecification(localize('tags.ion.scroll', 'Creates a scrollable container for all content inside.'), ['delegate-handle', 'direction:scrolldir', 'has-bouncing:b', 'locking:b', 'max-zoom', 'min-zoom', 'on-refresh', 'on-scroll', 'paging:b', 'scrollbar-x:b', 'scrollbar-y:b', 'zooming:b']),\n    'ion-side-menu': new HTMLTagSpecification(localize('tags.ion.sidemenu', 'Child of ionSideMenus. A container for a side menu, sibling to an ionSideMenuContent directive.'), ['is-enabled:b', 'expose-aside-when', 'side:navsides', 'width']),\n    'ion-side-menu-content': new HTMLTagSpecification(localize('tags.ion.sidemenucontent', 'Child of ionSideMenus. A container for the main visible content, sibling to one or more ionSideMenu directives.'), ['drag-content:b', 'edge-drag-threshold']),\n    'ion-side-menus': new HTMLTagSpecification(localize('tags.ion.sidemenus', 'A container element for side menu(s) and the main content. Allows the left and/or right side menu to be toggled by dragging the main content area side to side.'), ['delegate-handle', 'enable-menu-with-back-views:b']),\n    'ion-slide': new HTMLTagSpecification(localize('tags.ion.slide', 'Child of ionSlideBox. Displays a slide inside of a slidebox.'), []),\n    'ion-slide-box': new HTMLTagSpecification(localize('tags.ion.slidebox', 'The Slide Box is a multi-page container where each page can be swiped or dragged between.'), ['active-slide', 'auto-play:b', 'delegate-handle', 'does-continue:b', 'on-slide-changed', 'pager-click', 'show-pager:b', 'slide-interval']),\n    'ion-spinner': new HTMLTagSpecification(localize('tags.ion.spinner', 'The ionSpinner directive provides a variety of animated spinners.'), ['icon']),\n    'ion-tab': new HTMLTagSpecification(localize('tags.ion.tab', 'Child of ionTabs. Contains a tab\\'s content. The content only exists while the given tab is selected.'), ['badge', 'badge-style', 'disabled', 'hidden', 'href', 'icon', 'icon-off', 'icon-on', 'ng-click', 'on-deselect', 'on-select', 'title']),\n    'ion-tabs': new HTMLTagSpecification(localize('tags.ion.tabs', 'Powers a multi-tabbed interface with a tab bar and a set of \"pages\" that can be tabbed through.'), ['delegate-handle']),\n    'ion-title': new HTMLTagSpecification(localize('tags.ion.title', 'ion-title is a component that sets the title of the ionNavbar'), []),\n    'ion-toggle': new HTMLTagSpecification(localize('tags.ion.toggle', 'A toggle is an animated switch which binds a given model to a boolean. Allows dragging of the switch\\'s nub. The toggle behaves like any AngularJS checkbox otherwise.'), ['name', 'ng-false-value', 'ng-model', 'ng-true-value', 'toggle-class']),\n    'ion-view ': new HTMLTagSpecification(localize('tags.ion.view', 'Child of ionNavView. A container for view content and any navigational and header bar information.'), ['cache-view:b', 'can-swipe-back:b', 'hide-back-button:b', 'hide-nav-bar:b', 'view-title'])\n};\nfunction getHTML5TagProvider() {\n    var globalAttributes = [\n        'aria-activedescendant', 'aria-atomic:b', 'aria-autocomplete:autocomplete', 'aria-busy:b', 'aria-checked:tristate', 'aria-colcount', 'aria-colindex', 'aria-colspan', 'aria-controls', 'aria-current:current', 'aria-describedat',\n        'aria-describedby', 'aria-disabled:b', 'aria-dropeffect:dropeffect', 'aria-errormessage', 'aria-expanded:u', 'aria-flowto', 'aria-grabbed:u', 'aria-haspopup:b', 'aria-hidden:b', 'aria-invalid:invalid', 'aria-kbdshortcuts',\n        'aria-label', 'aria-labelledby', 'aria-level', 'aria-live:live', 'aria-modal:b', 'aria-multiline:b', 'aria-multiselectable:b', 'aria-orientation:orientation', 'aria-owns', 'aria-placeholder', 'aria-posinset', 'aria-pressed:tristate',\n        'aria-readonly:b', 'aria-relevant:relevant', 'aria-required:b', 'aria-roledescription', 'aria-rowcount', 'aria-rowindex', 'aria-rowspan', 'aria-selected:u', 'aria-setsize', 'aria-sort:sort', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext',\n        'accesskey', 'class', 'contenteditable:b', 'contextmenu', 'dir:d', 'draggable:b', 'dropzone', 'hidden:v', 'id', 'itemid', 'itemprop', 'itemref', 'itemscope:v', 'itemtype', 'lang', 'role:roles', 'spellcheck:b', 'style', 'tabindex',\n        'title', 'translate:y'\n    ];\n    var eventHandlers = ['onabort', 'onblur', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'oncontextmenu', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart',\n        'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'onformchange', 'onforminput', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata', 'onloadedmetadata',\n        'onloadstart', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onpause', 'onplay', 'onplaying', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onreadystatechange', 'onscroll',\n        'onseeked', 'onseeking', 'onselect', 'onshow', 'onstalled', 'onsubmit', 'onsuspend', 'ontimeupdate', 'onvolumechange', 'onwaiting'];\n    var valueSets = {\n        b: ['true', 'false'],\n        u: ['true', 'false', 'undefined'],\n        o: ['on', 'off'],\n        y: ['yes', 'no'],\n        w: ['soft', 'hard'],\n        d: ['ltr', 'rtl', 'auto'],\n        m: ['GET', 'POST', 'dialog'],\n        fm: ['GET', 'POST'],\n        s: ['row', 'col', 'rowgroup', 'colgroup'],\n        t: ['hidden', 'text', 'search', 'tel', 'url', 'email', 'password', 'datetime', 'date', 'month', 'week', 'time', 'datetime-local', 'number', 'range', 'color', 'checkbox', 'radio', 'file', 'submit', 'image', 'reset', 'button'],\n        im: ['verbatim', 'latin', 'latin-name', 'latin-prose', 'full-width-latin', 'kana', 'kana-name', 'katakana', 'numeric', 'tel', 'email', 'url'],\n        bt: ['button', 'submit', 'reset', 'menu'],\n        lt: ['1', 'a', 'A', 'i', 'I'],\n        mt: ['context', 'toolbar'],\n        mit: ['command', 'checkbox', 'radio'],\n        et: ['application/x-www-form-urlencoded', 'multipart/form-data', 'text/plain'],\n        tk: ['subtitles', 'captions', 'descriptions', 'chapters', 'metadata'],\n        pl: ['none', 'metadata', 'auto'],\n        sh: ['circle', 'default', 'poly', 'rect'],\n        xo: ['anonymous', 'use-credentials'],\n        sb: ['allow-forms', 'allow-modals', 'allow-pointer-lock', 'allow-popups', 'allow-popups-to-escape-sandbox', 'allow-same-origin', 'allow-scripts', 'allow-top-navigation'],\n        tristate: ['true', 'false', 'mixed', 'undefined'],\n        inputautocomplete: ['additional-name', 'address-level1', 'address-level2', 'address-level3', 'address-level4', 'address-line1', 'address-line2', 'address-line3', 'bday', 'bday-year', 'bday-day', 'bday-month', 'billing', 'cc-additional-name', 'cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-family-name', 'cc-given-name', 'cc-name', 'cc-number', 'cc-type', 'country', 'country-name', 'current-password', 'email', 'family-name', 'fax', 'given-name', 'home', 'honorific-prefix', 'honorific-suffix', 'impp', 'language', 'mobile', 'name', 'new-password', 'nickname', 'organization', 'organization-title', 'pager', 'photo', 'postal-code', 'sex', 'shipping', 'street-address', 'tel-area-code', 'tel', 'tel-country-code', 'tel-extension', 'tel-local', 'tel-local-prefix', 'tel-local-suffix', 'tel-national', 'transaction-amount', 'transaction-currency', 'url', 'username', 'work'],\n        autocomplete: ['inline', 'list', 'both', 'none'],\n        current: ['page', 'step', 'location', 'date', 'time', 'true', 'false'],\n        dropeffect: ['copy', 'move', 'link', 'execute', 'popup', 'none'],\n        invalid: ['grammar', 'false', 'spelling', 'true'],\n        live: ['off', 'polite', 'assertive'],\n        orientation: ['vertical', 'horizontal', 'undefined'],\n        relevant: ['additions', 'removals', 'text', 'all', 'additions text'],\n        sort: ['ascending', 'descending', 'none', 'other'],\n        roles: ['alert', 'alertdialog', 'button', 'checkbox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'scrollbar', 'searchbox', 'slider',\n            'spinbutton', 'status', 'switch', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid',\n            'application', 'article', 'cell', 'columnheader', 'definition', 'directory', 'document', 'feed', 'figure', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'none', 'note', 'presentation', 'region', 'row', 'rowgroup',\n            'rowheader', 'separator', 'table', 'term', 'text', 'toolbar',\n            'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'region', 'search',\n            'doc-abstract', 'doc-acknowledgments', 'doc-afterword', 'doc-appendix', 'doc-backlink', 'doc-biblioentry', 'doc-bibliography', 'doc-biblioref', 'doc-chapter', 'doc-colophon', 'doc-conclusion', 'doc-cover', 'doc-credit', 'doc-credits', 'doc-dedication', 'doc-endnote', 'doc-endnotes', 'doc-epigraph', 'doc-epilogue', 'doc-errata', 'doc-example', 'doc-footnote', 'doc-foreword', 'doc-glossary', 'doc-glossref', 'doc-index', 'doc-introduction', 'doc-noteref', 'doc-notice', 'doc-pagebreak', 'doc-pagelist', 'doc-part', 'doc-preface', 'doc-prologue', 'doc-pullquote', 'doc-qna', 'doc-subtitle', 'doc-tip', 'doc-toc']\n    };\n    return {\n        getId: function () { return 'html5'; },\n        isApplicable: function () { return true; },\n        collectTags: function (collector) { return collectTagsDefault(collector, HTML_TAGS); },\n        collectAttributes: function (tag, collector) {\n            collectAttributesDefault(tag, collector, HTML_TAGS, globalAttributes);\n            eventHandlers.forEach(function (handler) {\n                collector(handler, 'event');\n            });\n        },\n        collectValues: function (tag, attribute, collector) { return collectValuesDefault(tag, attribute, collector, HTML_TAGS, globalAttributes, valueSets); }\n    };\n}\nfunction getAngularTagProvider() {\n    var customTags = {\n        input: ['ng-model', 'ng-required', 'ng-minlength', 'ng-maxlength', 'ng-pattern', 'ng-trim'],\n        select: ['ng-model'],\n        textarea: ['ng-model', 'ng-required', 'ng-minlength', 'ng-maxlength', 'ng-pattern', 'ng-trim']\n    };\n    var globalAttributes = ['ng-app', 'ng-strict-di', 'ng-bind', 'ng-bind-html', 'ng-bind-template', 'ng-blur', 'ng-change', 'ng-checked', 'ng-class', 'ng-class-even', 'ng-class-odd',\n        'ng-click', 'ng-cloak', 'ng-controller', 'ng-copy', 'ng-csp', 'ng-cut', 'ng-dblclick', 'ng-disabled', 'ng-focus', 'ng-form', 'ng-hide', 'ng-href', 'ng-if',\n        'ng-include', 'ng-init', 'ng-jq', 'ng-keydown', 'ng-keypress', 'ng-keyup', 'ng-list', 'ng-model-options', 'ng-mousedown', 'ng-mouseenter', 'ng-mouseleave',\n        'ng-mousemove', 'ng-mouseover', 'ng-mouseup', 'ng-non-bindable', 'ng-open', 'ng-options', 'ng-paste', 'ng-pluralize', 'ng-readonly', 'ng-repeat', 'ng-selected',\n        'ng-show', 'ng-src', 'ng-srcset', 'ng-style', 'ng-submit', 'ng-switch', 'ng-transclude', 'ng-value'\n    ];\n    return {\n        getId: function () { return 'angular1'; },\n        isApplicable: function (languageId) { return languageId === 'html'; },\n        collectTags: function (collector) {\n            // no extra tags\n        },\n        collectAttributes: function (tag, collector) {\n            if (tag) {\n                var attributes = customTags[tag];\n                if (attributes) {\n                    attributes.forEach(function (a) {\n                        collector(a);\n                        collector('data-' + a);\n                    });\n                }\n            }\n            globalAttributes.forEach(function (a) {\n                collector(a);\n                collector('data-' + a);\n            });\n        },\n        collectValues: function (tag, attribute, collector) {\n            // no values\n        }\n    };\n}\nfunction getIonicTagProvider() {\n    var customTags = {\n        a: ['nav-direction:navdir', 'nav-transition:trans'],\n        button: ['menu-toggle:menusides']\n    };\n    var globalAttributes = ['collection-repeat', 'force-refresh-images:b', 'ion-stop-event', 'item-height', 'item-render-buffer', 'item-width', 'menu-close:v',\n        'on-double-tap', 'on-drag', 'on-drag-down', 'on-drag-left', 'on-drag-right', 'on-drag-up', 'on-hold', 'on-release', 'on-swipe', 'on-swipe-down', 'on-swipe-left',\n        'on-swipe-right', 'on-swipe-up', 'on-tap', 'on-touch'];\n    var valueSets = {\n        align: ['center', 'left', 'right'],\n        b: ['true', 'false'],\n        inputtype: ['email', 'number', 'password', 'search', 'tel', 'text', 'url'],\n        listtype: ['card', 'list-inset'],\n        menusides: ['left', 'right'],\n        navdir: ['back', 'enter', 'exit', 'forward', 'swap'],\n        navsides: ['left', 'primary', 'right', 'secondary'],\n        scrolldir: ['x', 'xy', 'y'],\n        trans: ['android', 'ios', 'none']\n    };\n    return {\n        getId: function () { return 'ionic'; },\n        isApplicable: function (languageId) { return languageId === 'html'; },\n        collectTags: function (collector) { return collectTagsDefault(collector, IONIC_TAGS); },\n        collectAttributes: function (tag, collector) {\n            collectAttributesDefault(tag, collector, IONIC_TAGS, globalAttributes);\n            if (tag) {\n                var attributes = customTags[tag];\n                if (attributes) {\n                    attributes.forEach(function (a) {\n                        var segments = a.split(':');\n                        collector(segments[0], segments[1]);\n                    });\n                }\n            }\n        },\n        collectValues: function (tag, attribute, collector) { return collectValuesDefault(tag, attribute, collector, IONIC_TAGS, globalAttributes, valueSets, customTags); }\n    };\n}\nfunction collectTagsDefault(collector, tagSet) {\n    for (var tag in tagSet) {\n        collector(tag, tagSet[tag].label);\n    }\n}\nfunction collectAttributesDefault(tag, collector, tagSet, globalAttributes) {\n    globalAttributes.forEach(function (attr) {\n        var segments = attr.split(':');\n        collector(segments[0], segments[1]);\n    });\n    if (tag) {\n        var tags = tagSet[tag];\n        if (tags) {\n            var attributes = tags.attributes;\n            if (attributes) {\n                attributes.forEach(function (attr) {\n                    var segments = attr.split(':');\n                    collector(segments[0], segments[1]);\n                });\n            }\n        }\n    }\n}\nfunction collectValuesDefault(tag, attribute, collector, tagSet, globalAttributes, valueSets, customTags) {\n    var prefix = attribute + ':';\n    var processAttributes = function (attributes) {\n        attributes.forEach(function (attr) {\n            if (attr.length > prefix.length && _utils_strings_js__WEBPACK_IMPORTED_MODULE_0__[\"startsWith\"](attr, prefix)) {\n                var typeInfo = attr.substr(prefix.length);\n                if (typeInfo === 'v') {\n                    collector(attribute);\n                }\n                else {\n                    var values = valueSets[typeInfo];\n                    if (values) {\n                        values.forEach(collector);\n                    }\n                }\n            }\n        });\n    };\n    if (tag) {\n        var tags = tagSet[tag];\n        if (tags) {\n            var attributes = tags.attributes;\n            if (attributes) {\n                processAttributes(attributes);\n            }\n        }\n    }\n    processAttributes(globalAttributes);\n    if (customTags) {\n        var customTagAttributes = customTags[tag];\n        if (customTagAttributes) {\n            processAttributes(customTagAttributes);\n        }\n    }\n}\n/*!\nEND THIRD PARTY\n*/\n//# sourceMappingURL=htmlTags.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlTags.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/razorTags.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/razorTags.js ***!
  \***************************************************************************************************************/
/*! exports provided: getRazorTagProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRazorTagProvider\", function() { return getRazorTagProvider; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction getRazorTagProvider() {\n    var customTags = {\n        a: ['asp-action', 'asp-controller', 'asp-fragment', 'asp-host', 'asp-protocol', 'asp-route'],\n        div: ['asp-validation-summary'],\n        form: ['asp-action', 'asp-controller', 'asp-anti-forgery'],\n        input: ['asp-for', 'asp-format'],\n        label: ['asp-for'],\n        select: ['asp-for', 'asp-items'],\n        span: ['asp-validation-for']\n    };\n    return {\n        getId: function () { return 'razor'; },\n        isApplicable: function (languageId) { return languageId === 'razor'; },\n        collectTags: function (collector) {\n            // no extra tags\n        },\n        collectAttributes: function (tag, collector) {\n            if (tag) {\n                var attributes = customTags[tag];\n                if (attributes) {\n                    attributes.forEach(function (a) { return collector(a); });\n                }\n            }\n        },\n        collectValues: function (tag, attribute, collector) {\n            // no values\n        }\n    };\n}\n//# sourceMappingURL=razorTags.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/razorTags.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlCompletion.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlCompletion.js ***!
  \**********************************************************************************************************************/
/*! exports provided: HTMLCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTMLCompletion\", function() { return HTMLCompletion; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/htmlScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js\");\n/* harmony import */ var _parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/htmlTags.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlTags.js\");\n/* harmony import */ var _tagProviders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tagProviders.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/tagProviders.js\");\n/* harmony import */ var _parser_htmlEntities_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/htmlEntities.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlEntities.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/html/fillers/vscode-nls.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar HTMLCompletion = /** @class */ (function () {\n    function HTMLCompletion() {\n        this.completionParticipants = [];\n    }\n    HTMLCompletion.prototype.setCompletionParticipants = function (registeredCompletionParticipants) {\n        this.completionParticipants = registeredCompletionParticipants || [];\n    };\n    HTMLCompletion.prototype.doComplete = function (document, position, htmlDocument, settings) {\n        var result = {\n            isIncomplete: false,\n            items: []\n        };\n        var completionParticipants = this.completionParticipants;\n        var tagProviders = _tagProviders_js__WEBPACK_IMPORTED_MODULE_3__[\"allTagProviders\"].filter(function (p) { return p.isApplicable(document.languageId) && (!settings || settings[p.getId()] !== false); });\n        var text = document.getText();\n        var offset = document.offsetAt(position);\n        var node = htmlDocument.findNodeBefore(offset);\n        if (!node) {\n            return result;\n        }\n        var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"])(text, node.start);\n        var currentTag = '';\n        var currentAttributeName;\n        function getReplaceRange(replaceStart, replaceEnd) {\n            if (replaceEnd === void 0) { replaceEnd = offset; }\n            if (replaceStart > offset) {\n                replaceStart = offset;\n            }\n            return { start: document.positionAt(replaceStart), end: document.positionAt(replaceEnd) };\n        }\n        function collectOpenTagSuggestions(afterOpenBracket, tagNameEnd) {\n            var range = getReplaceRange(afterOpenBracket, tagNameEnd);\n            tagProviders.forEach(function (provider) {\n                provider.collectTags(function (tag, label) {\n                    result.items.push({\n                        label: tag,\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Property,\n                        documentation: label,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, tag),\n                        insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].PlainText\n                    });\n                });\n            });\n            return result;\n        }\n        function getLineIndent(offset) {\n            var start = offset;\n            while (start > 0) {\n                var ch = text.charAt(start - 1);\n                if (\"\\n\\r\".indexOf(ch) >= 0) {\n                    return text.substring(start, offset);\n                }\n                if (!isWhiteSpace(ch)) {\n                    return null;\n                }\n                start--;\n            }\n            return text.substring(0, offset);\n        }\n        function collectCloseTagSuggestions(afterOpenBracket, inOpenTag, tagNameEnd) {\n            if (tagNameEnd === void 0) { tagNameEnd = offset; }\n            var range = getReplaceRange(afterOpenBracket, tagNameEnd);\n            var closeTag = isFollowedBy(text, tagNameEnd, _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].WithinEndTag, _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EndTagClose) ? '' : '>';\n            var curr = node;\n            if (inOpenTag) {\n                curr = curr.parent; // don't suggest the own tag, it's not yet open\n            }\n            while (curr) {\n                var tag = curr.tag;\n                if (tag && (!curr.closed || curr.endTagStart && (curr.endTagStart > offset))) {\n                    var item = {\n                        label: '/' + tag,\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Property,\n                        filterText: '/' + tag + closeTag,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, '/' + tag + closeTag),\n                        insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].PlainText\n                    };\n                    var startIndent = getLineIndent(curr.start);\n                    var endIndent = getLineIndent(afterOpenBracket - 1);\n                    if (startIndent !== null && endIndent !== null && startIndent !== endIndent) {\n                        var insertText = startIndent + '</' + tag + closeTag;\n                        item.textEdit = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(getReplaceRange(afterOpenBracket - 1 - endIndent.length), insertText);\n                        item.filterText = endIndent + '</' + tag + closeTag;\n                    }\n                    result.items.push(item);\n                    return result;\n                }\n                curr = curr.parent;\n            }\n            if (inOpenTag) {\n                return result;\n            }\n            tagProviders.forEach(function (provider) {\n                provider.collectTags(function (tag, label) {\n                    result.items.push({\n                        label: '/' + tag,\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Property,\n                        documentation: label,\n                        filterText: '/' + tag + closeTag,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, '/' + tag + closeTag),\n                        insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].PlainText\n                    });\n                });\n            });\n            return result;\n        }\n        function collectAutoCloseTagSuggestion(tagCloseEnd, tag) {\n            if (settings && settings.hideAutoCompleteProposals) {\n                return result;\n            }\n            if (!Object(_parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmptyElement\"])(tag)) {\n                var pos = document.positionAt(tagCloseEnd);\n                result.items.push({\n                    label: '</' + tag + '>',\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Property,\n                    filterText: '</' + tag + '>',\n                    textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].insert(pos, '$0</' + tag + '>'),\n                    insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].Snippet\n                });\n            }\n            return result;\n        }\n        function collectTagSuggestions(tagStart, tagEnd) {\n            collectOpenTagSuggestions(tagStart, tagEnd);\n            collectCloseTagSuggestions(tagStart, true, tagEnd);\n            return result;\n        }\n        function collectAttributeNameSuggestions(nameStart, nameEnd) {\n            if (nameEnd === void 0) { nameEnd = offset; }\n            var replaceEnd = offset;\n            while (replaceEnd < nameEnd && text[replaceEnd] !== '<') {\n                replaceEnd++;\n            }\n            var range = getReplaceRange(nameStart, replaceEnd);\n            var value = isFollowedBy(text, nameEnd, _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].AfterAttributeName, _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].DelimiterAssign) ? '' : '=\"$1\"';\n            var tag = currentTag.toLowerCase();\n            var seenAttributes = Object.create(null);\n            tagProviders.forEach(function (provider) {\n                provider.collectAttributes(tag, function (attribute, type) {\n                    if (seenAttributes[attribute]) {\n                        return;\n                    }\n                    seenAttributes[attribute] = true;\n                    var codeSnippet = attribute;\n                    var command;\n                    if (type !== 'v' && value.length) {\n                        codeSnippet = codeSnippet + value;\n                        if (type) {\n                            command = {\n                                title: 'Suggest',\n                                command: 'editor.action.triggerSuggest'\n                            };\n                        }\n                    }\n                    result.items.push({\n                        label: attribute,\n                        kind: type === 'handler' ? _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Function : _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Value,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, codeSnippet),\n                        insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].Snippet,\n                        command: command\n                    });\n                });\n            });\n            collectDataAttributesSuggestions(range, seenAttributes);\n            return result;\n        }\n        function collectDataAttributesSuggestions(range, seenAttributes) {\n            var dataAttr = 'data-';\n            var dataAttributes = {};\n            dataAttributes[dataAttr] = dataAttr + \"$1=\\\"$2\\\"\";\n            function addNodeDataAttributes(node) {\n                node.attributeNames.forEach(function (attr) {\n                    if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_6__[\"startsWith\"])(attr, dataAttr) && !dataAttributes[attr] && !seenAttributes[attr]) {\n                        dataAttributes[attr] = attr + '=\"$1\"';\n                    }\n                });\n                node.children.forEach(function (child) { return addNodeDataAttributes(child); });\n            }\n            if (htmlDocument) {\n                htmlDocument.roots.forEach(function (root) { return addNodeDataAttributes(root); });\n            }\n            Object.keys(dataAttributes).forEach(function (attr) { return result.items.push({\n                label: attr,\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Value,\n                textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, dataAttributes[attr]),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].Snippet\n            }); });\n        }\n        function collectAttributeValueSuggestions(valueStart, valueEnd) {\n            if (valueEnd === void 0) { valueEnd = offset; }\n            var range;\n            var addQuotes;\n            var valuePrefix;\n            if (offset > valueStart && offset <= valueEnd && isQuote(text[valueStart])) {\n                // inside quoted attribute\n                var valueContentStart = valueStart + 1;\n                var valueContentEnd = valueEnd;\n                // valueEnd points to the char after quote, which encloses the replace range\n                if (valueEnd > valueStart && text[valueEnd - 1] === text[valueStart]) {\n                    valueContentEnd--;\n                }\n                var wsBefore = getWordStart(text, offset, valueContentStart);\n                var wsAfter = getWordEnd(text, offset, valueContentEnd);\n                range = getReplaceRange(wsBefore, wsAfter);\n                valuePrefix = offset >= valueContentStart && offset <= valueContentEnd ? text.substring(valueContentStart, offset) : '';\n                addQuotes = false;\n            }\n            else {\n                range = getReplaceRange(valueStart, valueEnd);\n                valuePrefix = text.substring(valueStart, offset);\n                addQuotes = true;\n            }\n            var tag = currentTag.toLowerCase();\n            var attribute = currentAttributeName.toLowerCase();\n            if (completionParticipants.length > 0) {\n                var fullRange = getReplaceRange(valueStart, valueEnd);\n                for (var _i = 0, completionParticipants_1 = completionParticipants; _i < completionParticipants_1.length; _i++) {\n                    var participant = completionParticipants_1[_i];\n                    if (participant.onHtmlAttributeValue) {\n                        participant.onHtmlAttributeValue({ document: document, position: position, tag: tag, attribute: attribute, value: valuePrefix, range: fullRange });\n                    }\n                }\n            }\n            var value = scanner.getTokenText();\n            tagProviders.forEach(function (provider) {\n                provider.collectValues(tag, attribute, function (value) {\n                    var insertText = addQuotes ? '\"' + value + '\"' : value;\n                    result.items.push({\n                        label: value,\n                        filterText: insertText,\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Unit,\n                        textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, insertText),\n                        insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].PlainText\n                    });\n                });\n            });\n            collectCharacterEntityProposals();\n            return result;\n        }\n        function scanNextForEndPos(nextToken) {\n            if (offset === scanner.getTokenEnd()) {\n                token = scanner.scan();\n                if (token === nextToken && scanner.getTokenOffset() === offset) {\n                    return scanner.getTokenEnd();\n                }\n            }\n            return offset;\n        }\n        function collectInsideContent() {\n            for (var _i = 0, completionParticipants_2 = completionParticipants; _i < completionParticipants_2.length; _i++) {\n                var participant = completionParticipants_2[_i];\n                if (participant.onHtmlContent) {\n                    participant.onHtmlContent({ document: document, position: position });\n                }\n            }\n            return collectCharacterEntityProposals();\n        }\n        function collectCharacterEntityProposals() {\n            // character entities\n            var k = offset - 1;\n            var characterStart = position.character;\n            while (k >= 0 && Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_6__[\"isLetterOrDigit\"])(text, k)) {\n                k--;\n                characterStart--;\n            }\n            if (k >= 0 && text[k] === '&') {\n                var range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"].create(position.line, characterStart - 1), position);\n                for (var entity in _parser_htmlEntities_js__WEBPACK_IMPORTED_MODULE_4__[\"entities\"]) {\n                    if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_6__[\"endsWith\"])(entity, ';')) {\n                        var label = '&' + entity;\n                        result.items.push({\n                            label: label,\n                            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Keyword,\n                            documentation: localize('entity.propose', \"Character entity representing '\" + _parser_htmlEntities_js__WEBPACK_IMPORTED_MODULE_4__[\"entities\"][entity] + \"'\"),\n                            textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label),\n                            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].PlainText\n                        });\n                    }\n                }\n            }\n            return result;\n        }\n        var token = scanner.scan();\n        while (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOS && scanner.getTokenOffset() <= offset) {\n            switch (token) {\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].StartTagOpen:\n                    if (scanner.getTokenEnd() === offset) {\n                        var endPos = scanNextForEndPos(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].StartTag);\n                        return collectTagSuggestions(offset, endPos);\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].StartTag:\n                    if (scanner.getTokenOffset() <= offset && offset <= scanner.getTokenEnd()) {\n                        return collectOpenTagSuggestions(scanner.getTokenOffset(), scanner.getTokenEnd());\n                    }\n                    currentTag = scanner.getTokenText();\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AttributeName:\n                    if (scanner.getTokenOffset() <= offset && offset <= scanner.getTokenEnd()) {\n                        return collectAttributeNameSuggestions(scanner.getTokenOffset(), scanner.getTokenEnd());\n                    }\n                    currentAttributeName = scanner.getTokenText();\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].DelimiterAssign:\n                    if (scanner.getTokenEnd() === offset) {\n                        var endPos = scanNextForEndPos(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AttributeValue);\n                        return collectAttributeValueSuggestions(offset, endPos);\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AttributeValue:\n                    if (scanner.getTokenOffset() <= offset && offset <= scanner.getTokenEnd()) {\n                        return collectAttributeValueSuggestions(scanner.getTokenOffset(), scanner.getTokenEnd());\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Whitespace:\n                    if (offset <= scanner.getTokenEnd()) {\n                        switch (scanner.getScannerState()) {\n                            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].AfterOpeningStartTag:\n                                var startPos = scanner.getTokenOffset();\n                                var endTagPos = scanNextForEndPos(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].StartTag);\n                                return collectTagSuggestions(startPos, endTagPos);\n                            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].WithinTag:\n                            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].AfterAttributeName:\n                                return collectAttributeNameSuggestions(scanner.getTokenEnd());\n                            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].BeforeAttributeValue:\n                                return collectAttributeValueSuggestions(scanner.getTokenEnd());\n                            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].AfterOpeningEndTag:\n                                return collectCloseTagSuggestions(scanner.getTokenOffset() - 1, false);\n                            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"ScannerState\"].WithinContent:\n                                return collectInsideContent();\n                        }\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EndTagOpen:\n                    if (offset <= scanner.getTokenEnd()) {\n                        var afterOpenBracket = scanner.getTokenOffset() + 1;\n                        var endOffset = scanNextForEndPos(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EndTag);\n                        return collectCloseTagSuggestions(afterOpenBracket, false, endOffset);\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EndTag:\n                    if (offset <= scanner.getTokenEnd()) {\n                        var start = scanner.getTokenOffset() - 1;\n                        while (start >= 0) {\n                            var ch = text.charAt(start);\n                            if (ch === '/') {\n                                return collectCloseTagSuggestions(start, false, scanner.getTokenEnd());\n                            }\n                            else if (!isWhiteSpace(ch)) {\n                                break;\n                            }\n                            start--;\n                        }\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].StartTagClose:\n                    if (offset <= scanner.getTokenEnd()) {\n                        if (currentTag) {\n                            return collectAutoCloseTagSuggestion(scanner.getTokenEnd(), currentTag);\n                        }\n                    }\n                    break;\n                case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Content:\n                    if (offset <= scanner.getTokenEnd()) {\n                        return collectInsideContent();\n                    }\n                    break;\n                default:\n                    if (offset <= scanner.getTokenEnd()) {\n                        return result;\n                    }\n                    break;\n            }\n            token = scanner.scan();\n        }\n        return result;\n    };\n    HTMLCompletion.prototype.doTagComplete = function (document, position, htmlDocument) {\n        var offset = document.offsetAt(position);\n        if (offset <= 0) {\n            return null;\n        }\n        var char = document.getText().charAt(offset - 1);\n        if (char === '>') {\n            var node = htmlDocument.findNodeBefore(offset);\n            if (node && node.tag && !Object(_parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmptyElement\"])(node.tag) && node.start < offset && (!node.endTagStart || node.endTagStart > offset)) {\n                var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"])(document.getText(), node.start);\n                var token = scanner.scan();\n                while (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOS && scanner.getTokenEnd() <= offset) {\n                    if (token === _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].StartTagClose && scanner.getTokenEnd() === offset) {\n                        return \"$0</\" + node.tag + \">\";\n                    }\n                    token = scanner.scan();\n                }\n            }\n        }\n        else if (char === '/') {\n            var node = htmlDocument.findNodeBefore(offset);\n            while (node && node.closed) {\n                node = node.parent;\n            }\n            if (node && node.tag) {\n                var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"])(document.getText(), node.start);\n                var token = scanner.scan();\n                while (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOS && scanner.getTokenEnd() <= offset) {\n                    if (token === _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EndTagOpen && scanner.getTokenEnd() === offset) {\n                        return node.tag + \">\";\n                    }\n                    token = scanner.scan();\n                }\n            }\n        }\n        return null;\n    };\n    return HTMLCompletion;\n}());\n\nfunction isQuote(s) {\n    return /^[\"']*$/.test(s);\n}\nfunction isWhiteSpace(s) {\n    return /^\\s*$/.test(s);\n}\nfunction isFollowedBy(s, offset, intialState, expectedToken) {\n    var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"])(s, offset, intialState);\n    var token = scanner.scan();\n    while (token === _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Whitespace) {\n        token = scanner.scan();\n    }\n    return token === expectedToken;\n}\nfunction getWordStart(s, offset, limit) {\n    while (offset > limit && !isWhiteSpace(s[offset - 1])) {\n        offset--;\n    }\n    return offset;\n}\nfunction getWordEnd(s, offset, limit) {\n    while (offset < limit && !isWhiteSpace(s[offset])) {\n        offset++;\n    }\n    return offset;\n}\n//# sourceMappingURL=htmlCompletion.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlCompletion.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlFormatter.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlFormatter.js ***!
  \*********************************************************************************************************************/
/*! exports provided: format */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"format\", function() { return format; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _beautify_beautify_html_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../beautify/beautify-html.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/beautify/beautify-html.js\");\n/* harmony import */ var _beautify_beautify_html_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_beautify_beautify_html_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction format(document, range, options) {\n    var value = document.getText();\n    var includesEnd = true;\n    var initialIndentLevel = 0;\n    var tabSize = options.tabSize || 4;\n    if (range) {\n        var startOffset = document.offsetAt(range.start);\n        // include all leading whitespace iff at the beginning of the line\n        var extendedStart = startOffset;\n        while (extendedStart > 0 && isWhitespace(value, extendedStart - 1)) {\n            extendedStart--;\n        }\n        if (extendedStart === 0 || isEOL(value, extendedStart - 1)) {\n            startOffset = extendedStart;\n        }\n        else {\n            // else keep at least one whitespace\n            if (extendedStart < startOffset) {\n                startOffset = extendedStart + 1;\n            }\n        }\n        // include all following whitespace until the end of the line\n        var endOffset = document.offsetAt(range.end);\n        var extendedEnd = endOffset;\n        while (extendedEnd < value.length && isWhitespace(value, extendedEnd)) {\n            extendedEnd++;\n        }\n        if (extendedEnd === value.length || isEOL(value, extendedEnd)) {\n            endOffset = extendedEnd;\n        }\n        range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(document.positionAt(startOffset), document.positionAt(endOffset));\n        includesEnd = endOffset === value.length;\n        value = value.substring(startOffset, endOffset);\n        if (startOffset !== 0) {\n            var startOfLineOffset = document.offsetAt(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"].create(range.start.line, 0));\n            initialIndentLevel = computeIndentLevel(document.getText(), startOfLineOffset, options);\n        }\n    }\n    else {\n        range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"].create(0, 0), document.positionAt(value.length));\n    }\n    var htmlOptions = {\n        indent_size: options.insertSpaces ? tabSize : 1,\n        indent_char: options.insertSpaces ? ' ' : '\\t',\n        wrap_line_length: getFormatOption(options, 'wrapLineLength', 120),\n        unformatted: getTagsFormatOption(options, 'unformatted', void 0),\n        content_unformatted: getTagsFormatOption(options, 'contentUnformatted', void 0),\n        indent_inner_html: getFormatOption(options, 'indentInnerHtml', false),\n        preserve_newlines: getFormatOption(options, 'preserveNewLines', true),\n        max_preserve_newlines: getFormatOption(options, 'maxPreserveNewLines', 32786),\n        indent_handlebars: getFormatOption(options, 'indentHandlebars', false),\n        end_with_newline: includesEnd && getFormatOption(options, 'endWithNewline', false),\n        extra_liners: getTagsFormatOption(options, 'extraLiners', void 0),\n        wrap_attributes: getFormatOption(options, 'wrapAttributes', 'auto'),\n        eol: '\\n'\n    };\n    var result = Object(_beautify_beautify_html_js__WEBPACK_IMPORTED_MODULE_1__[\"html_beautify\"])(value, htmlOptions);\n    if (initialIndentLevel > 0) {\n        var indent = options.insertSpaces ? Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"repeat\"])(' ', tabSize * initialIndentLevel) : Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"repeat\"])('\\t', initialIndentLevel);\n        result = result.split('\\n').join('\\n' + indent);\n        if (range.start.character === 0) {\n            result = indent + result; // keep the indent\n        }\n    }\n    return [{\n            range: range,\n            newText: result\n        }];\n}\nfunction getFormatOption(options, key, dflt) {\n    if (options && options.hasOwnProperty(key)) {\n        var value = options[key];\n        if (value !== null) {\n            return value;\n        }\n    }\n    return dflt;\n}\nfunction getTagsFormatOption(options, key, dflt) {\n    var list = getFormatOption(options, key, null);\n    if (typeof list === 'string') {\n        if (list.length > 0) {\n            return list.split(',').map(function (t) { return t.trim().toLowerCase(); });\n        }\n        return [];\n    }\n    return dflt;\n}\nfunction computeIndentLevel(content, offset, options) {\n    var i = offset;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(document) {\n    var text = document.getText();\n    if (document.lineCount > 1) {\n        var to = document.offsetAt(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"].create(1, 0));\n        var from = to;\n        while (from > 0 && isEOL(text, from - 1)) {\n            from--;\n        }\n        return text.substr(from, to - from);\n    }\n    return '\\n';\n}\nfunction isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\nfunction isWhitespace(text, offset) {\n    return ' \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n//# sourceMappingURL=htmlFormatter.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlFormatter.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHighlighting.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHighlighting.js ***!
  \************************************************************************************************************************/
/*! exports provided: findDocumentHighlights */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findDocumentHighlights\", function() { return findDocumentHighlights; });\n/* harmony import */ var _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/htmlScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction findDocumentHighlights(document, position, htmlDocument) {\n    var offset = document.offsetAt(position);\n    var node = htmlDocument.findNodeAt(offset);\n    if (!node.tag) {\n        return [];\n    }\n    var result = [];\n    var startTagRange = getTagNameRange(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTag, document, node.start);\n    var endTagRange = typeof node.endTagStart === 'number' && getTagNameRange(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EndTag, document, node.endTagStart);\n    if (startTagRange && covers(startTagRange, position) || endTagRange && covers(endTagRange, position)) {\n        if (startTagRange) {\n            result.push({ kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightKind\"].Read, range: startTagRange });\n        }\n        if (endTagRange) {\n            result.push({ kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightKind\"].Read, range: endTagRange });\n        }\n    }\n    return result;\n}\nfunction isBeforeOrEqual(pos1, pos2) {\n    return pos1.line < pos2.line || (pos1.line === pos2.line && pos1.character <= pos2.character);\n}\nfunction covers(range, position) {\n    return isBeforeOrEqual(range.start, position) && isBeforeOrEqual(position, range.end);\n}\nfunction getTagNameRange(tokenType, document, startOffset) {\n    var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"createScanner\"])(document.getText(), startOffset);\n    var token = scanner.scan();\n    while (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOS && token !== tokenType) {\n        token = scanner.scan();\n    }\n    if (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOS) {\n        return { start: document.positionAt(scanner.getTokenOffset()), end: document.positionAt(scanner.getTokenEnd()) };\n    }\n    return null;\n}\n//# sourceMappingURL=htmlHighlighting.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHighlighting.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHover.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHover.js ***!
  \*****************************************************************************************************************/
/*! exports provided: doHover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"doHover\", function() { return doHover; });\n/* harmony import */ var _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/htmlScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _tagProviders_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tagProviders.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/tagProviders.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction doHover(document, position, htmlDocument) {\n    var offset = document.offsetAt(position);\n    var node = htmlDocument.findNodeAt(offset);\n    if (!node || !node.tag) {\n        return null;\n    }\n    var tagProviders = _tagProviders_js__WEBPACK_IMPORTED_MODULE_2__[\"allTagProviders\"].filter(function (p) { return p.isApplicable(document.languageId); });\n    function getTagHover(tag, range, open) {\n        tag = tag.toLowerCase();\n        var _loop_1 = function (provider) {\n            var hover = null;\n            provider.collectTags(function (t, label) {\n                if (t === tag) {\n                    var tagLabel = open ? '<' + tag + '>' : '</' + tag + '>';\n                    hover = { contents: [{ language: 'html', value: tagLabel }, _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"MarkedString\"].fromPlainText(label)], range: range };\n                }\n            });\n            if (hover) {\n                return { value: hover };\n            }\n        };\n        for (var _i = 0, tagProviders_1 = tagProviders; _i < tagProviders_1.length; _i++) {\n            var provider = tagProviders_1[_i];\n            var state_1 = _loop_1(provider);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        return null;\n    }\n    function getTagNameRange(tokenType, startOffset) {\n        var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"createScanner\"])(document.getText(), startOffset);\n        var token = scanner.scan();\n        while (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOS && (scanner.getTokenEnd() < offset || scanner.getTokenEnd() === offset && token !== tokenType)) {\n            token = scanner.scan();\n        }\n        if (token === tokenType && offset <= scanner.getTokenEnd()) {\n            return { start: document.positionAt(scanner.getTokenOffset()), end: document.positionAt(scanner.getTokenEnd()) };\n        }\n        return null;\n    }\n    if (node.endTagStart && offset >= node.endTagStart) {\n        var tagRange_1 = getTagNameRange(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EndTag, node.endTagStart);\n        if (tagRange_1) {\n            return getTagHover(node.tag, tagRange_1, false);\n        }\n        return null;\n    }\n    var tagRange = getTagNameRange(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTag, node.start);\n    if (tagRange) {\n        return getTagHover(node.tag, tagRange, true);\n    }\n    return null;\n}\n//# sourceMappingURL=htmlHover.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHover.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks.js ***!
  \*****************************************************************************************************************/
/*! exports provided: findDocumentLinks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findDocumentLinks\", function() { return findDocumentLinks; });\n/* harmony import */ var _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/htmlScanner.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js\");\n/* harmony import */ var _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vscode-uri/index.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-uri/index.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nfunction normalizeRef(url, languageId) {\n    var first = url[0];\n    var last = url[url.length - 1];\n    if (first === last && (first === '\\'' || first === '\\\"')) {\n        url = url.substr(1, url.length - 2);\n    }\n    if (languageId === 'razor' && url[0] === '~') {\n        url = url.substr(1);\n    }\n    return url;\n}\nfunction validateRef(url, languageId) {\n    if (!url.length) {\n        return false;\n    }\n    if (languageId === 'handlebars' && /{{.*}}/.test(url)) {\n        return false;\n    }\n    if (languageId === 'razor' && /@/.test(url)) {\n        return false;\n    }\n    try {\n        return !!_vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parse(url);\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction getWorkspaceUrl(documentUri, tokenContent, documentContext, base) {\n    if (/^\\s*javascript\\:/i.test(tokenContent) || /^\\s*\\#/i.test(tokenContent) || /[\\n\\r]/.test(tokenContent)) {\n        return null;\n    }\n    tokenContent = tokenContent.replace(/^\\s*/g, '');\n    if (/^https?:\\/\\//i.test(tokenContent) || /^file:\\/\\//i.test(tokenContent)) {\n        // Absolute link that needs no treatment\n        return tokenContent;\n    }\n    if (/^\\/\\//i.test(tokenContent)) {\n        // Absolute link (that does not name the protocol)\n        var pickedScheme = _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"startsWith\"](documentUri, 'https://') ? 'https' : 'http';\n        return pickedScheme + ':' + tokenContent.replace(/^\\s*/g, '');\n    }\n    if (documentContext) {\n        return documentContext.resolveReference(tokenContent, base || documentUri);\n    }\n    return tokenContent;\n}\nfunction createLink(document, documentContext, attributeValue, startOffset, endOffset, base) {\n    var tokenContent = normalizeRef(attributeValue, document.languageId);\n    if (!validateRef(tokenContent, document.languageId)) {\n        return null;\n    }\n    if (tokenContent.length < attributeValue.length) {\n        startOffset++;\n        endOffset--;\n    }\n    var workspaceUrl = getWorkspaceUrl(document.uri, tokenContent, documentContext, base);\n    if (!workspaceUrl || !isValidURI(workspaceUrl)) {\n        return null;\n    }\n    return {\n        range: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"].create(document.positionAt(startOffset), document.positionAt(endOffset)),\n        target: workspaceUrl\n    };\n}\nfunction isValidURI(uri) {\n    try {\n        _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parse(uri);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction findDocumentLinks(document, documentContext) {\n    var newLinks = [];\n    var rootAbsoluteUrl = null;\n    var scanner = Object(_parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"createScanner\"])(document.getText(), 0);\n    var token = scanner.scan();\n    var afterHrefOrSrc = false;\n    var afterBase = false;\n    var base = void 0;\n    while (token !== _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOS) {\n        switch (token) {\n            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].StartTag:\n                if (!base) {\n                    var tagName = scanner.getTokenText().toLowerCase();\n                    afterBase = tagName === 'base';\n                }\n                break;\n            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AttributeName:\n                var attributeName = scanner.getTokenText().toLowerCase();\n                afterHrefOrSrc = attributeName === 'src' || attributeName === 'href';\n                break;\n            case _parser_htmlScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AttributeValue:\n                if (afterHrefOrSrc) {\n                    var attributeValue = scanner.getTokenText();\n                    if (!afterBase) {\n                        var link = createLink(document, documentContext, attributeValue, scanner.getTokenOffset(), scanner.getTokenEnd(), base);\n                        if (link) {\n                            newLinks.push(link);\n                        }\n                    }\n                    if (afterBase && typeof base === 'undefined') {\n                        base = normalizeRef(attributeValue, document.languageId);\n                        if (base && documentContext) {\n                            base = documentContext.resolveReference(base, document.uri);\n                        }\n                    }\n                    afterBase = false;\n                    afterHrefOrSrc = false;\n                }\n                break;\n        }\n        token = scanner.scan();\n    }\n    return newLinks;\n}\n//# sourceMappingURL=htmlLinks.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlSymbolsProvider.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlSymbolsProvider.js ***!
  \***************************************************************************************************************************/
/*! exports provided: findDocumentSymbols */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findDocumentSymbols\", function() { return findDocumentSymbols; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nfunction findDocumentSymbols(document, htmlDocument) {\n    var symbols = [];\n    htmlDocument.roots.forEach(function (node) {\n        provideFileSymbolsInternal(document, node, '', symbols);\n    });\n    return symbols;\n}\nfunction provideFileSymbolsInternal(document, node, container, symbols) {\n    var name = nodeToName(node);\n    var location = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Location\"].create(document.uri, _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(document.positionAt(node.start), document.positionAt(node.end)));\n    var symbol = {\n        name: name,\n        location: location,\n        containerName: container,\n        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Field\n    };\n    symbols.push(symbol);\n    node.children.forEach(function (child) {\n        provideFileSymbolsInternal(document, child, name, symbols);\n    });\n}\nfunction nodeToName(node) {\n    var name = node.tag;\n    if (node.attributes) {\n        var id = node.attributes['id'];\n        var classes = node.attributes['class'];\n        if (id) {\n            name += \"#\" + id.replace(/[\\\"\\']/g, '');\n        }\n        if (classes) {\n            name += classes.replace(/[\\\"\\']/g, '').split(/\\s+/).map(function (className) { return \".\" + className; }).join('');\n        }\n    }\n    return name || '?';\n}\n//# sourceMappingURL=htmlSymbolsProvider.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlSymbolsProvider.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/tagProviders.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/tagProviders.js ***!
  \********************************************************************************************************************/
/*! exports provided: allTagProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"allTagProviders\", function() { return allTagProviders; });\n/* harmony import */ var _parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/htmlTags.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlTags.js\");\n/* harmony import */ var _parser_razorTags_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/razorTags.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/razorTags.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar allTagProviders = [\n    Object(_parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_0__[\"getHTML5TagProvider\"])(),\n    Object(_parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_0__[\"getAngularTagProvider\"])(),\n    Object(_parser_htmlTags_js__WEBPACK_IMPORTED_MODULE_0__[\"getIonicTagProvider\"])(),\n    Object(_parser_razorTags_js__WEBPACK_IMPORTED_MODULE_1__[\"getRazorTagProvider\"])()\n];\n//# sourceMappingURL=tagProviders.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/tagProviders.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js ***!
  \***********************************************************************************************************/
/*! exports provided: findFirst, binarySearch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findFirst\", function() { return findFirst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"binarySearch\", function() { return binarySearch; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nfunction findFirst(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nfunction binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n//# sourceMappingURL=arrays.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/arrays.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js ***!
  \************************************************************************************************************/
/*! exports provided: startsWith, endsWith, commonPrefixLength, repeat, isLetterOrDigit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commonPrefixLength\", function() { return commonPrefixLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeat\", function() { return repeat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLetterOrDigit\", function() { return isLetterOrDigit; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nfunction commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\nvar _a = 'a'.charCodeAt(0);\nvar _z = 'z'.charCodeAt(0);\nvar _A = 'A'.charCodeAt(0);\nvar _Z = 'Z'.charCodeAt(0);\nvar _0 = '0'.charCodeAt(0);\nvar _9 = '9'.charCodeAt(0);\nfunction isLetterOrDigit(text, index) {\n    var c = text.charCodeAt(index);\n    return (_a <= c && c <= _z) || (_A <= c && c <= _Z) || (_0 <= c && c <= _9);\n}\n//# sourceMappingURL=strings.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/utils/strings.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-uri/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-uri/index.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction _encode(ch) {\n    return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\nfunction encodeNoop(str) {\n    return str.replace(/[#?]/, _encode);\n}\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = (function () {\n    function URI() {\n        this._scheme = URI._empty;\n        this._authority = URI._empty;\n        this._path = URI._empty;\n        this._query = URI._empty;\n        this._fragment = URI._empty;\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"scheme\", {\n        /**\n         * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n         * The part before the first colon.\n         */\n        get: function () {\n            return this._scheme;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"authority\", {\n        /**\n         * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n         * The part between the first double slashes and the next slash.\n         */\n        get: function () {\n            return this._authority;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"path\", {\n        /**\n         * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n         */\n        get: function () {\n            return this._path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"query\", {\n        /**\n         * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"fragment\", {\n        /**\n         * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n         */\n        get: function () {\n            return this._fragment;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            if (!this._fsPath) {\n                var value;\n                if (this._authority && this._path && this.scheme === 'file') {\n                    // unc path: file://shares/c$/far/boo\n                    value = \"//\" + this._authority + this._path;\n                }\n                else if (URI._driveLetterPath.test(this._path)) {\n                    // windows drive letter: file:///c:/far/boo\n                    value = this._path[1].toLowerCase() + this._path.substr(2);\n                }\n                else {\n                    // other path\n                    value = this._path;\n                }\n                if (isWindows) {\n                    value = value.replace(/\\//g, '\\\\');\n                }\n                this._fsPath = value;\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = '';\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = '';\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = '';\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = '';\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = '';\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        var ret = new URI();\n        ret._scheme = scheme;\n        ret._authority = authority;\n        ret._path = path;\n        ret._query = query;\n        ret._fragment = fragment;\n        URI._validate(ret);\n        return ret;\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var ret = new URI();\n        var data = URI._parseComponents(value);\n        ret._scheme = data.scheme;\n        ret._authority = decodeURIComponent(data.authority);\n        ret._path = decodeURIComponent(data.path);\n        ret._query = decodeURIComponent(data.query);\n        ret._fragment = decodeURIComponent(data.fragment);\n        URI._validate(ret);\n        return ret;\n    };\n    URI.file = function (path) {\n        var ret = new URI();\n        ret._scheme = 'file';\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slaches are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, URI._slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === URI._slash && path[0] === path[1]) {\n            var idx = path.indexOf(URI._slash, 2);\n            if (idx === -1) {\n                ret._authority = path.substring(2);\n            }\n            else {\n                ret._authority = path.substring(2, idx);\n                ret._path = path.substring(idx);\n            }\n        }\n        else {\n            ret._path = path;\n        }\n        // Ensure that path starts with a slash\n        // or that it is at least a slash\n        if (ret._path[0] !== URI._slash) {\n            ret._path = URI._slash + ret._path;\n        }\n        URI._validate(ret);\n        return ret;\n    };\n    URI._parseComponents = function (value) {\n        var ret = {\n            scheme: URI._empty,\n            authority: URI._empty,\n            path: URI._empty,\n            query: URI._empty,\n            fragment: URI._empty,\n        };\n        var match = URI._regexp.exec(value);\n        if (match) {\n            ret.scheme = match[2] || ret.scheme;\n            ret.authority = match[4] || ret.authority;\n            ret.path = match[5] || ret.path;\n            ret.query = match[7] || ret.query;\n            ret.fragment = match[9] || ret.fragment;\n        }\n        return ret;\n    };\n    URI.from = function (components) {\n        return new URI().with(components);\n    };\n    URI._validate = function (ret) {\n        // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n        // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n        if (ret.scheme && !URI._schemePattern.test(ret.scheme)) {\n            throw new Error('[UriError]: Scheme contains illegal characters.');\n        }\n        // path, http://tools.ietf.org/html/rfc3986#section-3.3\n        // If a URI contains an authority component, then the path component\n        // must either be empty or begin with a slash (\"/\") character.  If a URI\n        // does not contain an authority component, then the path cannot begin\n        // with two slash characters (\"//\").\n        if (ret.path) {\n            if (ret.authority) {\n                if (!URI._singleSlashStart.test(ret.path)) {\n                    throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n                }\n            }\n            else {\n                if (URI._doubleSlashStart.test(ret.path)) {\n                    throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n                }\n            }\n        }\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = URI._asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return URI._asFormatted(this, true);\n        }\n    };\n    URI._asFormatted = function (uri, skipEncoding) {\n        var encoder = !skipEncoding\n            ? encodeURIComponent2\n            : encodeNoop;\n        var parts = [];\n        var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n        if (scheme) {\n            parts.push(scheme, ':');\n        }\n        if (authority || scheme === 'file') {\n            parts.push('//');\n        }\n        if (authority) {\n            authority = authority.toLowerCase();\n            var idx = authority.indexOf(':');\n            if (idx === -1) {\n                parts.push(encoder(authority));\n            }\n            else {\n                parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n            }\n        }\n        if (path) {\n            // lower-case windows drive letters in /C:/fff or C:/fff\n            var m = URI._upperCaseDrive.exec(path);\n            if (m) {\n                if (m[1]) {\n                    path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n                }\n                else {\n                    path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n                }\n            }\n            // encode every segement but not slashes\n            // make sure that # and ? are always encoded\n            // when occurring in paths - otherwise the result\n            // cannot be parsed back again\n            var lastIdx = 0;\n            while (true) {\n                var idx = path.indexOf(URI._slash, lastIdx);\n                if (idx === -1) {\n                    parts.push(encoder(path.substring(lastIdx)));\n                    break;\n                }\n                parts.push(encoder(path.substring(lastIdx, idx)), URI._slash);\n                lastIdx = idx + 1;\n            }\n            ;\n        }\n        if (query) {\n            parts.push('?', encoder(query));\n        }\n        if (fragment) {\n            parts.push('#', encoder(fragment));\n        }\n        return parts.join(URI._empty);\n    };\n    URI.prototype.toJSON = function () {\n        var res = {\n            fsPath: this.fsPath,\n            external: this.toString(),\n            $mid: 1\n        };\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    URI.revive = function (data) {\n        var result = new URI();\n        result._scheme = data.scheme || URI._empty;\n        result._authority = data.authority || URI._empty;\n        result._path = data.path || URI._empty;\n        result._query = data.query || URI._empty;\n        result._fragment = data.fragment || URI._empty;\n        result._fsPath = data.fsPath;\n        result._formatted = data.external;\n        URI._validate(result);\n        return result;\n    };\n    return URI;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (URI);\nURI._empty = '';\nURI._slash = '/';\nURI._regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nURI._driveLetterPath = /^\\/[a-zA-z]:/;\nURI._upperCaseDrive = /^(\\/)?([A-Z]:)/;\nURI._schemePattern = /^\\w[\\w\\d+.-]*$/;\nURI._singleSlashStart = /^\\//;\nURI._doubleSlashStart = /^\\/\\//;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-uri/index.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/fillers/vscode-nls.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/fillers/vscode-nls.js ***!
  \*******************************************************************************/
/*! exports provided: loadMessageBundle, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadMessageBundle\", function() { return loadMessageBundle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction format(message, args) {\n    var result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nfunction localize(key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nfunction loadMessageBundle(file) {\n    return localize;\n}\nfunction config(opt) {\n    return loadMessageBundle;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/fillers/vscode-nls.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/html/htmlWorker.js":
/*!***********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/htmlWorker.js ***!
  \***********************************************************************/
/*! exports provided: HTMLWorker, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTMLWorker\", function() { return HTMLWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _deps_vscode_html_languageservice_htmlLanguageService_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_deps/vscode-html-languageservice/htmlLanguageService.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/htmlLanguageService.js\");\n/* harmony import */ var _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_deps/vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\n\n\nvar HTMLWorker = /** @class */ (function () {\n    function HTMLWorker(ctx, createData) {\n        this._ctx = ctx;\n        this._languageSettings = createData.languageSettings;\n        this._languageId = createData.languageId;\n        this._languageService = _deps_vscode_html_languageservice_htmlLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getLanguageService\"]();\n    }\n    HTMLWorker.prototype.doValidation = function (uri) {\n        // not yet suported\n        return Promise.as([]);\n    };\n    HTMLWorker.prototype.doComplete = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var htmlDocument = this._languageService.parseHTMLDocument(document);\n        return Promise.as(this._languageService.doComplete(document, position, htmlDocument, this._languageSettings && this._languageSettings.suggest));\n    };\n    HTMLWorker.prototype.format = function (uri, range, options) {\n        var document = this._getTextDocument(uri);\n        var textEdits = this._languageService.format(document, range, this._languageSettings && this._languageSettings.format);\n        return Promise.as(textEdits);\n    };\n    HTMLWorker.prototype.findDocumentHighlights = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var htmlDocument = this._languageService.parseHTMLDocument(document);\n        var highlights = this._languageService.findDocumentHighlights(document, position, htmlDocument);\n        return Promise.as(highlights);\n    };\n    HTMLWorker.prototype.findDocumentLinks = function (uri) {\n        var document = this._getTextDocument(uri);\n        var links = this._languageService.findDocumentLinks(document, null);\n        return Promise.as(links);\n    };\n    HTMLWorker.prototype._getTextDocument = function (uri) {\n        var models = this._ctx.getMirrorModels();\n        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n            var model = models_1[_i];\n            if (model.uri.toString() === uri) {\n                return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextDocument\"].create(uri, this._languageId, model.version, model.getValue());\n            }\n        }\n        return null;\n    };\n    return HTMLWorker;\n}());\n\nfunction create(ctx, createData) {\n    return new HTMLWorker(ctx, createData);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/html/htmlWorker.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/jsonLanguageService.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/jsonLanguageService.js ***!
  \******************************************************************************************************************/
/*! exports provided: TextDocument, Position, CompletionItem, CompletionList, Range, SymbolInformation, Diagnostic, TextEdit, FormattingOptions, MarkedString, getLanguageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLanguageService\", function() { return getLanguageService; });\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextDocument\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Diagnostic\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"FormattingOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkedString\"]; });\n\n/* harmony import */ var _services_jsonCompletion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/jsonCompletion.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonCompletion.js\");\n/* harmony import */ var _services_jsonHover_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services/jsonHover.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonHover.js\");\n/* harmony import */ var _services_jsonValidation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services/jsonValidation.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js\");\n/* harmony import */ var _services_jsonDocumentSymbols_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/jsonDocumentSymbols.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonDocumentSymbols.js\");\n/* harmony import */ var _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parser/jsonParser.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js\");\n/* harmony import */ var _services_configuration_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/configuration.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/configuration.js\");\n/* harmony import */ var _services_jsonSchemaService_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./services/jsonSchemaService.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js\");\n/* harmony import */ var _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../jsonc-parser/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\nfunction getLanguageService(params) {\n    var promise = params.promiseConstructor || Promise;\n    var jsonSchemaService = new _services_jsonSchemaService_js__WEBPACK_IMPORTED_MODULE_7__[\"JSONSchemaService\"](params.schemaRequestService, params.workspaceContext, promise);\n    jsonSchemaService.setSchemaContributions(_services_configuration_js__WEBPACK_IMPORTED_MODULE_6__[\"schemaContributions\"]);\n    var jsonCompletion = new _services_jsonCompletion_js__WEBPACK_IMPORTED_MODULE_1__[\"JSONCompletion\"](jsonSchemaService, params.contributions, promise);\n    var jsonHover = new _services_jsonHover_js__WEBPACK_IMPORTED_MODULE_2__[\"JSONHover\"](jsonSchemaService, params.contributions, promise);\n    var jsonDocumentSymbols = new _services_jsonDocumentSymbols_js__WEBPACK_IMPORTED_MODULE_4__[\"JSONDocumentSymbols\"](jsonSchemaService);\n    var jsonValidation = new _services_jsonValidation_js__WEBPACK_IMPORTED_MODULE_3__[\"JSONValidation\"](jsonSchemaService, promise);\n    return {\n        configure: function (settings) {\n            jsonSchemaService.clearExternalSchemas();\n            if (settings.schemas) {\n                settings.schemas.forEach(function (settings) {\n                    jsonSchemaService.registerExternalSchema(settings.uri, settings.fileMatch, settings.schema);\n                });\n            }\n            jsonValidation.configure(settings);\n        },\n        resetSchema: function (uri) { return jsonSchemaService.onResourceChange(uri); },\n        doValidation: jsonValidation.doValidation.bind(jsonValidation),\n        parseJSONDocument: function (document) { return Object(_parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_5__[\"parse\"])(document, { collectComments: true }); },\n        newJSONDocument: function (root, diagnostics) { return Object(_parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_5__[\"newJSONDocument\"])(root, diagnostics); },\n        doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n        doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n        findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n        findColorSymbols: function (d, s) { return jsonDocumentSymbols.findDocumentColors(d, s).then(function (s) { return s.map(function (s) { return s.range; }); }); },\n        findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n        getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n        doHover: jsonHover.doHover.bind(jsonHover),\n        format: function (d, r, o) {\n            var range = void 0;\n            if (r) {\n                var offset = d.offsetAt(r.start);\n                var length = d.offsetAt(r.end) - offset;\n                range = { offset: offset, length: length };\n            }\n            var options = { tabSize: o ? o.tabSize : 4, insertSpaces: o ? o.insertSpaces : true, eol: '\\n' };\n            return Object(_jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_8__[\"format\"])(d.getText(), range, options).map(function (e) {\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(d.positionAt(e.offset), d.positionAt(e.offset + e.length)), e.content);\n            });\n        }\n    };\n}\n//# sourceMappingURL=jsonLanguageService.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/jsonLanguageService.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js ***!
  \****************************************************************************************************************/
/*! exports provided: ErrorCode, ProblemSeverity, ASTNodeImpl, NullASTNodeImpl, BooleanASTNodeImpl, ArrayASTNodeImpl, NumberASTNodeImpl, StringASTNodeImpl, PropertyASTNodeImpl, ObjectASTNodeImpl, asSchema, EnumMatch, ValidationResult, newJSONDocument, getNodeValue, getNodePath, contains, JSONDocument, parse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrorCode\", function() { return ErrorCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProblemSeverity\", function() { return ProblemSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ASTNodeImpl\", function() { return ASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NullASTNodeImpl\", function() { return NullASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BooleanASTNodeImpl\", function() { return BooleanASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrayASTNodeImpl\", function() { return ArrayASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumberASTNodeImpl\", function() { return NumberASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StringASTNodeImpl\", function() { return StringASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PropertyASTNodeImpl\", function() { return PropertyASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObjectASTNodeImpl\", function() { return ObjectASTNodeImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asSchema\", function() { return asSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EnumMatch\", function() { return EnumMatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ValidationResult\", function() { return ValidationResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newJSONDocument\", function() { return newJSONDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodeValue\", function() { return getNodeValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodePath\", function() { return getNodePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contains\", function() { return contains; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONDocument\", function() { return JSONDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return parse; });\n/* harmony import */ var _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsonc-parser/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/objects.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/objects.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js\");\n/* harmony import */ var _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vscode-uri/index.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-uri/index.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[ErrorCode[\"Undefined\"] = 0] = \"Undefined\";\n    ErrorCode[ErrorCode[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n    ErrorCode[ErrorCode[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n    ErrorCode[ErrorCode[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n    ErrorCode[ErrorCode[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n    ErrorCode[ErrorCode[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n    ErrorCode[ErrorCode[\"CommaExpected\"] = 514] = \"CommaExpected\";\n    ErrorCode[ErrorCode[\"ColonExpected\"] = 515] = \"ColonExpected\";\n    ErrorCode[ErrorCode[\"ValueExpected\"] = 516] = \"ValueExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n    ErrorCode[ErrorCode[\"TrailingComma\"] = 519] = \"TrailingComma\";\n})(ErrorCode || (ErrorCode = {}));\nvar colorHexPattern = /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/;\nvar emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nvar ProblemSeverity;\n(function (ProblemSeverity) {\n    ProblemSeverity[\"Ignore\"] = \"ignore\";\n    ProblemSeverity[\"Error\"] = \"error\";\n    ProblemSeverity[\"Warning\"] = \"warning\";\n})(ProblemSeverity || (ProblemSeverity = {}));\nvar ASTNodeImpl = /** @class */ (function () {\n    function ASTNodeImpl(parent, offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.parent = parent;\n    }\n    Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ASTNodeImpl.prototype.toString = function () {\n        return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n    };\n    return ASTNodeImpl;\n}());\n\nvar NullASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NullASTNodeImpl, _super);\n    function NullASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'null';\n        return _this;\n    }\n    return NullASTNodeImpl;\n}(ASTNodeImpl));\n\nvar BooleanASTNodeImpl = /** @class */ (function (_super) {\n    __extends(BooleanASTNodeImpl, _super);\n    function BooleanASTNodeImpl(parent, boolValue, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'boolean';\n        _this.value = boolValue;\n        return _this;\n    }\n    return BooleanASTNodeImpl;\n}(ASTNodeImpl));\n\nvar ArrayASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ArrayASTNodeImpl, _super);\n    function ArrayASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'array';\n        _this.items = [];\n        return _this;\n    }\n    Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArrayASTNodeImpl;\n}(ASTNodeImpl));\n\nvar NumberASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NumberASTNodeImpl, _super);\n    function NumberASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'number';\n        _this.isInteger = true;\n        _this.value = Number.NaN;\n        return _this;\n    }\n    return NumberASTNodeImpl;\n}(ASTNodeImpl));\n\nvar StringASTNodeImpl = /** @class */ (function (_super) {\n    __extends(StringASTNodeImpl, _super);\n    function StringASTNodeImpl(parent, offset, length) {\n        var _this = _super.call(this, parent, offset, length) || this;\n        _this.type = 'string';\n        _this.value = '';\n        return _this;\n    }\n    return StringASTNodeImpl;\n}(ASTNodeImpl));\n\nvar PropertyASTNodeImpl = /** @class */ (function (_super) {\n    __extends(PropertyASTNodeImpl, _super);\n    function PropertyASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'property';\n        _this.colonOffset = -1;\n        return _this;\n    }\n    Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyASTNodeImpl;\n}(ASTNodeImpl));\n\nvar ObjectASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ObjectASTNodeImpl, _super);\n    function ObjectASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'object';\n        _this.properties = [];\n        return _this;\n    }\n    Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ObjectASTNodeImpl;\n}(ASTNodeImpl));\n\nfunction asSchema(schema) {\n    if (typeof schema === 'boolean') {\n        return schema ? {} : { \"not\": {} };\n    }\n    return schema;\n}\nvar EnumMatch;\n(function (EnumMatch) {\n    EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n    EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */ (function () {\n    function SchemaCollector(focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        this.focusOffset = focusOffset;\n        this.exclude = exclude;\n        this.schemas = [];\n    }\n    SchemaCollector.prototype.add = function (schema) {\n        this.schemas.push(schema);\n    };\n    SchemaCollector.prototype.merge = function (other) {\n        (_a = this.schemas).push.apply(_a, other.schemas);\n        var _a;\n    };\n    SchemaCollector.prototype.include = function (node) {\n        return (this.focusOffset === -1 || contains(node, this.focusOffset)) && (node !== this.exclude);\n    };\n    SchemaCollector.prototype.newSub = function () {\n        return new SchemaCollector(-1, this.exclude);\n    };\n    return SchemaCollector;\n}());\nvar NoOpSchemaCollector = /** @class */ (function () {\n    function NoOpSchemaCollector() {\n    }\n    Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    NoOpSchemaCollector.prototype.add = function (schema) { };\n    NoOpSchemaCollector.prototype.merge = function (other) { };\n    NoOpSchemaCollector.prototype.include = function (node) { return true; };\n    NoOpSchemaCollector.prototype.newSub = function () { return this; };\n    NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n    return NoOpSchemaCollector;\n}());\nvar ValidationResult = /** @class */ (function () {\n    function ValidationResult() {\n        this.problems = [];\n        this.propertiesMatches = 0;\n        this.propertiesValueMatches = 0;\n        this.primaryValueMatches = 0;\n        this.enumValueMatch = false;\n        this.enumValues = null;\n    }\n    ValidationResult.prototype.hasProblems = function () {\n        return !!this.problems.length;\n    };\n    ValidationResult.prototype.mergeAll = function (validationResults) {\n        var _this = this;\n        validationResults.forEach(function (validationResult) {\n            _this.merge(validationResult);\n        });\n    };\n    ValidationResult.prototype.merge = function (validationResult) {\n        this.problems = this.problems.concat(validationResult.problems);\n    };\n    ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n        if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n            this.enumValues = this.enumValues.concat(validationResult.enumValues);\n            for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n                var error = _a[_i];\n                if (error.code === ErrorCode.EnumValueMismatch) {\n                    error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) { return JSON.stringify(v); }).join(', '));\n                }\n            }\n        }\n    };\n    ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n        this.merge(propertyValidationResult);\n        this.propertiesMatches++;\n        if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n            this.propertiesValueMatches++;\n        }\n        if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n            this.primaryValueMatches++;\n        }\n    };\n    ValidationResult.prototype.compare = function (other) {\n        var hasProblems = this.hasProblems();\n        if (hasProblems !== other.hasProblems()) {\n            return hasProblems ? -1 : 1;\n        }\n        if (this.enumValueMatch !== other.enumValueMatch) {\n            return other.enumValueMatch ? -1 : 1;\n        }\n        if (this.primaryValueMatches !== other.primaryValueMatches) {\n            return this.primaryValueMatches - other.primaryValueMatches;\n        }\n        if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n            return this.propertiesValueMatches - other.propertiesValueMatches;\n        }\n        return this.propertiesMatches - other.propertiesMatches;\n    };\n    return ValidationResult;\n}());\n\nfunction toProblemSeverity(diagnosticsSeverity) {\n    switch (diagnosticsSeverity) {\n        case _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"DiagnosticSeverity\"].Error: return ProblemSeverity.Error;\n        case _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"DiagnosticSeverity\"].Warning: return ProblemSeverity.Warning;\n        case _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"DiagnosticSeverity\"].Information: return ProblemSeverity.Warning;\n    }\n    return ProblemSeverity.Ignore;\n}\nfunction newJSONDocument(root, diagnostics) {\n    if (diagnostics === void 0) { diagnostics = []; }\n    return new JSONDocument(root, [], [], diagnostics);\n}\nfunction getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.items.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                obj[prop.keyNode.value] = getNodeValue(prop.valueNode);\n            }\n            return obj;\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n    }\n    return null;\n}\nfunction getNodePath(node) {\n    if (!node.parent) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.keyNode.value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.items.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\nfunction contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return offset >= node.offset && offset < (node.offset + node.length) || includeRightBound && offset === (node.offset + node.length);\n}\nvar JSONDocument = /** @class */ (function () {\n    function JSONDocument(root, syntaxErrors, comments, externalDiagnostic) {\n        if (syntaxErrors === void 0) { syntaxErrors = []; }\n        if (comments === void 0) { comments = []; }\n        if (externalDiagnostic === void 0) { externalDiagnostic = []; }\n        this.root = root;\n        this.syntaxErrors = syntaxErrors;\n        this.comments = comments;\n        this.externalDiagnostic = externalDiagnostic;\n    }\n    JSONDocument.prototype.getNodeFromOffset = function (offset) {\n        var findNode = function (node) {\n            if (offset >= node.offset && offset < (node.offset + node.length)) {\n                var children = node.children;\n                for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                    var item = findNode(children[i]);\n                    if (item) {\n                        return item;\n                    }\n                }\n                return node;\n            }\n            return null;\n        };\n        return this.root && findNode(this.root);\n    };\n    JSONDocument.prototype.getNodeFromOffsetEndInclusive = function (offset) {\n        var findNode = function (node) {\n            if (offset >= node.offset && offset <= (node.offset + node.length)) {\n                var children = node.children;\n                for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                    var item = findNode(children[i]);\n                    if (item) {\n                        return item;\n                    }\n                }\n                return node;\n            }\n            return null;\n        };\n        return this.root && findNode(this.root);\n    };\n    JSONDocument.prototype.visit = function (visitor) {\n        if (this.root) {\n            var doVisit_1 = function (node) {\n                var ctn = visitor(node);\n                var children = node.children;\n                for (var i = 0; i < children.length && ctn; i++) {\n                    ctn = doVisit_1(children[i]);\n                }\n                return ctn;\n            };\n            doVisit_1(this.root);\n        }\n    };\n    JSONDocument.prototype.validate = function (schema) {\n        if (this.root && schema) {\n            var validationResult = new ValidationResult();\n            validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n            return validationResult.problems;\n        }\n        return null;\n    };\n    JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n        if (this.root && schema) {\n            validate(this.root, schema, new ValidationResult(), matchingSchemas);\n        }\n        return matchingSchemas.schemas;\n    };\n    return JSONDocument;\n}());\n\nfunction validate(node, schema, validationResult, matchingSchemas) {\n    if (!node || !matchingSchemas.include(node)) {\n        return;\n    }\n    switch (node.type) {\n        case 'object':\n            _validateObjectNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'array':\n            _validateArrayNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'string':\n            _validateStringNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'number':\n            _validateNumberNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'property':\n            return validate(node.valueNode, schema, validationResult, matchingSchemas);\n    }\n    _validateNode();\n    matchingSchemas.add({ node: node, schema: schema });\n    function _validateNode() {\n        function matchesType(type) {\n            return node.type === type || (type === 'integer' && node.type === 'number' && node.isInteger);\n        }\n        if (Array.isArray(schema.type)) {\n            if (!schema.type.some(matchesType)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n                });\n            }\n        }\n        else if (schema.type) {\n            if (!matchesType(schema.type)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n                });\n            }\n        }\n        if (Array.isArray(schema.allOf)) {\n            schema.allOf.forEach(function (subSchemaRef) {\n                validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n            });\n        }\n        var notSchema = asSchema(schema.not);\n        if (notSchema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, notSchema, subValidationResult, subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n                });\n            }\n            subMatchingSchemas.schemas.forEach(function (ms) {\n                ms.inverted = !ms.inverted;\n                matchingSchemas.add(ms);\n            });\n        }\n        var testAlternatives = function (alternatives, maxOneMatch) {\n            var matches = [];\n            // remember the best match that is used for error messages\n            var bestMatch = null;\n            alternatives.forEach(function (subSchemaRef) {\n                var subSchema = asSchema(subSchemaRef);\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = matchingSchemas.newSub();\n                validate(node, subSchema, subValidationResult, subMatchingSchemas);\n                if (!subValidationResult.hasProblems()) {\n                    matches.push(subSchema);\n                }\n                if (!bestMatch) {\n                    bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                }\n                else {\n                    if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n                        // no errors, both are equally good matches\n                        bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                        bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                        bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                    }\n                    else {\n                        var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                        if (compareResult > 0) {\n                            // our node is the best matching so far\n                            bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                        }\n                        else if (compareResult === 0) {\n                            // there's already a best matching but we are as good\n                            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                            bestMatch.validationResult.mergeEnumValues(subValidationResult);\n                        }\n                    }\n                }\n            });\n            if (matches.length > 1 && maxOneMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: 1 },\n                    severity: ProblemSeverity.Warning,\n                    message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n                });\n            }\n            if (bestMatch !== null) {\n                validationResult.merge(bestMatch.validationResult);\n                validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                matchingSchemas.merge(bestMatch.matchingSchemas);\n            }\n            return matches.length;\n        };\n        if (Array.isArray(schema.anyOf)) {\n            testAlternatives(schema.anyOf, false);\n        }\n        if (Array.isArray(schema.oneOf)) {\n            testAlternatives(schema.oneOf, true);\n        }\n        if (Array.isArray(schema.enum)) {\n            var val = getNodeValue(node);\n            var enumValueMatch = false;\n            for (var _i = 0, _a = schema.enum; _i < _a.length; _i++) {\n                var e = _a[_i];\n                if (_utils_objects_js__WEBPACK_IMPORTED_MODULE_1__[\"equals\"](val, e)) {\n                    enumValueMatch = true;\n                    break;\n                }\n            }\n            validationResult.enumValues = schema.enum;\n            validationResult.enumValueMatch = enumValueMatch;\n            if (!enumValueMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) { return JSON.stringify(v); }).join(', '))\n                });\n            }\n        }\n        if (schema.const) {\n            var val = getNodeValue(node);\n            if (!_utils_objects_js__WEBPACK_IMPORTED_MODULE_1__[\"equals\"](val, schema.const)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n                });\n                validationResult.enumValueMatch = false;\n            }\n            else {\n                validationResult.enumValueMatch = true;\n            }\n            validationResult.enumValues = [schema.const];\n        }\n        if (schema.deprecationMessage && node.parent) {\n            validationResult.problems.push({\n                location: { offset: node.parent.offset, length: node.parent.length },\n                severity: ProblemSeverity.Warning,\n                message: schema.deprecationMessage\n            });\n        }\n    }\n    function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n        var val = node.value;\n        if (typeof schema.multipleOf === 'number') {\n            if (val % schema.multipleOf !== 0) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n                });\n            }\n        }\n        function getExclusiveLimit(limit, exclusive) {\n            if (typeof exclusive === 'number') {\n                return exclusive;\n            }\n            if (typeof exclusive === 'boolean' && exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        function getLimit(limit, exclusive) {\n            if (typeof exclusive !== 'boolean' || !exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n        if (typeof exclusiveMinimum === 'number' && val <= exclusiveMinimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n            });\n        }\n        var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n        if (typeof exclusiveMaximum === 'number' && val >= exclusiveMaximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n            });\n        }\n        var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n        if (typeof minimum === 'number' && val < minimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n            });\n        }\n        var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n        if (typeof maximum === 'number' && val > maximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n            });\n        }\n    }\n    function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n        if (schema.minLength && node.value.length < schema.minLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n            });\n        }\n        if (schema.maxLength && node.value.length > schema.maxLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n            });\n        }\n        if (schema.pattern) {\n            var regex = new RegExp(schema.pattern);\n            if (!regex.test(node.value)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n                });\n            }\n        }\n        if (schema.format) {\n            switch (schema.format) {\n                case 'uri':\n                case 'uri-reference':\n                    {\n                        var errorMessage = void 0;\n                        if (!node.value) {\n                            errorMessage = localize('uriEmpty', 'URI expected.');\n                        }\n                        else {\n                            try {\n                                var uri = _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parse(node.value);\n                                if (!uri.scheme && schema.format === 'uri') {\n                                    errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n                                }\n                            }\n                            catch (e) {\n                                errorMessage = e.message;\n                            }\n                        }\n                        if (errorMessage) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: ProblemSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n                            });\n                        }\n                    }\n                    break;\n                case 'email':\n                    {\n                        if (!node.value.match(emailPattern)) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: ProblemSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('emailFormatWarning', 'String is not an e-mail address.')\n                            });\n                        }\n                    }\n                    break;\n                case 'color-hex':\n                    {\n                        if (!node.value.match(colorHexPattern)) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: ProblemSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.')\n                            });\n                        }\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n    function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n        if (Array.isArray(schema.items)) {\n            var subSchemas_1 = schema.items;\n            subSchemas_1.forEach(function (subSchemaRef, index) {\n                var subSchema = asSchema(subSchemaRef);\n                var itemValidationResult = new ValidationResult();\n                var item = node.items[index];\n                if (item) {\n                    validate(item, subSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n                else if (node.items.length >= subSchemas_1.length) {\n                    validationResult.propertiesValueMatches++;\n                }\n            });\n            if (node.items.length > subSchemas_1.length) {\n                if (typeof schema.additionalItems === 'object') {\n                    for (var i = subSchemas_1.length; i < node.items.length; i++) {\n                        var itemValidationResult = new ValidationResult();\n                        validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                }\n                else if (schema.additionalItems === false) {\n                    validationResult.problems.push({\n                        location: { offset: node.offset, length: node.length },\n                        severity: ProblemSeverity.Warning,\n                        message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas_1.length)\n                    });\n                }\n            }\n        }\n        else {\n            var itemSchema_1 = asSchema(schema.items);\n            if (itemSchema_1) {\n                node.items.forEach(function (item) {\n                    var itemValidationResult = new ValidationResult();\n                    validate(item, itemSchema_1, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                });\n            }\n        }\n        var containsSchema = asSchema(schema.contains);\n        if (containsSchema) {\n            var doesContain = node.items.some(function (item) {\n                var itemValidationResult = new ValidationResult();\n                validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n                return !itemValidationResult.hasProblems();\n            });\n            if (!doesContain) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.', schema.minItems)\n                });\n            }\n        }\n        if (schema.minItems && node.items.length < schema.minItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n            });\n        }\n        if (schema.maxItems && node.items.length > schema.maxItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: ProblemSeverity.Warning,\n                message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.minItems)\n            });\n        }\n        if (schema.uniqueItems === true) {\n            var values_1 = getNodeValue(node);\n            var duplicates = values_1.some(function (value, index) {\n                return index !== values_1.lastIndexOf(value);\n            });\n            if (duplicates) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n                });\n            }\n        }\n    }\n    function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n        var seenKeys = Object.create(null);\n        var unprocessedProperties = [];\n        node.properties.forEach(function (node) {\n            var key = node.keyNode.value;\n            seenKeys[key] = node.valueNode;\n            unprocessedProperties.push(key);\n        });\n        if (Array.isArray(schema.required)) {\n            schema.required.forEach(function (propertyName) {\n                if (!seenKeys[propertyName]) {\n                    var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n                    var location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node.offset, length: 1 };\n                    validationResult.problems.push({\n                        location: location,\n                        severity: ProblemSeverity.Warning,\n                        message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n                    });\n                }\n            });\n        }\n        var propertyProcessed = function (prop) {\n            var index = unprocessedProperties.indexOf(prop);\n            while (index >= 0) {\n                unprocessedProperties.splice(index, 1);\n                index = unprocessedProperties.indexOf(prop);\n            }\n        };\n        if (schema.properties) {\n            Object.keys(schema.properties).forEach(function (propertyName) {\n                propertyProcessed(propertyName);\n                var propertySchema = schema.properties[propertyName];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    if (typeof propertySchema === 'boolean') {\n                        if (!propertySchema) {\n                            var propertyNode = child.parent;\n                            validationResult.problems.push({\n                                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                severity: ProblemSeverity.Warning,\n                                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                            });\n                        }\n                        else {\n                            validationResult.propertiesMatches++;\n                            validationResult.propertiesValueMatches++;\n                        }\n                    }\n                    else {\n                        var propertyValidationResult = new ValidationResult();\n                        validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(propertyValidationResult);\n                    }\n                }\n            });\n        }\n        if (schema.patternProperties) {\n            Object.keys(schema.patternProperties).forEach(function (propertyPattern) {\n                var regex = new RegExp(propertyPattern);\n                unprocessedProperties.slice(0).forEach(function (propertyName) {\n                    if (regex.test(propertyName)) {\n                        propertyProcessed(propertyName);\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertySchema = schema.patternProperties[propertyPattern];\n                            if (typeof propertySchema === 'boolean') {\n                                if (!propertySchema) {\n                                    var propertyNode = child.parent;\n                                    validationResult.problems.push({\n                                        location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                        severity: ProblemSeverity.Warning,\n                                        message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesMatches++;\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            }\n                            else {\n                                var propertyValidationResult = new ValidationResult();\n                                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                                validationResult.mergePropertyMatch(propertyValidationResult);\n                            }\n                        }\n                    }\n                });\n            });\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            unprocessedProperties.forEach(function (propertyName) {\n                var child = seenKeys[propertyName];\n                if (child) {\n                    var propertyValidationResult = new ValidationResult();\n                    validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n            });\n        }\n        else if (schema.additionalProperties === false) {\n            if (unprocessedProperties.length > 0) {\n                unprocessedProperties.forEach(function (propertyName) {\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyNode = child.parent;\n                        validationResult.problems.push({\n                            location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                            severity: ProblemSeverity.Warning,\n                            message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                        });\n                    }\n                });\n            }\n        }\n        if (schema.maxProperties) {\n            if (node.properties.length > schema.maxProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n                });\n            }\n        }\n        if (schema.minProperties) {\n            if (node.properties.length < schema.minProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: ProblemSeverity.Warning,\n                    message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n                });\n            }\n        }\n        if (schema.dependencies) {\n            Object.keys(schema.dependencies).forEach(function (key) {\n                var prop = seenKeys[key];\n                if (prop) {\n                    var propertyDep = schema.dependencies[key];\n                    if (Array.isArray(propertyDep)) {\n                        propertyDep.forEach(function (requiredProp) {\n                            if (!seenKeys[requiredProp]) {\n                                validationResult.problems.push({\n                                    location: { offset: node.offset, length: node.length },\n                                    severity: ProblemSeverity.Warning,\n                                    message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                                });\n                            }\n                            else {\n                                validationResult.propertiesValueMatches++;\n                            }\n                        });\n                    }\n                    else {\n                        var propertySchema = asSchema(propertyDep);\n                        if (propertySchema) {\n                            var propertyValidationResult = new ValidationResult();\n                            validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n                            validationResult.mergePropertyMatch(propertyValidationResult);\n                        }\n                    }\n                }\n            });\n        }\n        var propertyNames = asSchema(schema.propertyNames);\n        if (propertyNames) {\n            node.properties.forEach(function (f) {\n                var key = f.keyNode;\n                if (key) {\n                    validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n                }\n            });\n        }\n    }\n}\nfunction parse(textDocument, config) {\n    var problems = [];\n    var text = textDocument.getText();\n    var scanner = _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_0__[\"createScanner\"](text, false);\n    var comments = config && config.collectComments ? [] : void 0;\n    function _scanNext() {\n        while (true) {\n            var token_1 = scanner.scan();\n            _checkScanError();\n            switch (token_1) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (Array.isArray(comments)) {\n                        comments.push({ offset: scanner.getTokenOffset(), length: scanner.getTokenLength() });\n                    }\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token_1;\n            }\n        }\n    }\n    function _accept(token) {\n        if (scanner.getToken() === token) {\n            _scanNext();\n            return true;\n        }\n        return false;\n    }\n    function _errorAtRange(message, code, location) {\n        if (problems.length === 0 || problems[problems.length - 1].location.offset !== location.offset) {\n            problems.push({ message: message, location: location, code: code, severity: ProblemSeverity.Error });\n        }\n    }\n    function _error(message, code, node, skipUntilAfter, skipUntil) {\n        if (node === void 0) { node = null; }\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        var start = scanner.getTokenOffset();\n        var end = scanner.getTokenOffset() + scanner.getTokenLength();\n        if (start === end && start > 0) {\n            start--;\n            while (start > 0 && /\\s/.test(text.charAt(start))) {\n                start--;\n            }\n            end = start + 1;\n        }\n        _errorAtRange(message, code, { offset: start, length: end - start });\n        if (node) {\n            _finalize(node, false);\n        }\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token_2 = scanner.getToken();\n            while (token_2 !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token_2) !== -1) {\n                    _scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token_2) !== -1) {\n                    break;\n                }\n                token_2 = _scanNext();\n            }\n        }\n        return node;\n    }\n    function _checkScanError() {\n        switch (scanner.getTokenError()) {\n            case 4 /* InvalidUnicode */:\n                _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n                return true;\n            case 5 /* InvalidEscapeCharacter */:\n                _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n                return true;\n            case 3 /* UnexpectedEndOfNumber */:\n                _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n                return true;\n            case 1 /* UnexpectedEndOfComment */:\n                _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n                return true;\n            case 2 /* UnexpectedEndOfString */:\n                _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n                return true;\n            case 6 /* InvalidCharacter */:\n                _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n                return true;\n        }\n        return false;\n    }\n    function _finalize(node, scanNext) {\n        node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n        if (scanNext) {\n            _scanNext();\n        }\n        return node;\n    }\n    function _parseArray(parent) {\n        if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n            return null;\n        }\n        var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n        _scanNext(); // consume OpenBracketToken\n        var count = 0;\n        var needsComma = false;\n        while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 4 /* CloseBracketToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, { offset: commaOffset, length: 1 });\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var item = _parseValue(node, count++);\n            if (!item) {\n                _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, null, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.items.push(item);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n            return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseProperty(parent, keysSeen) {\n        var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset());\n        var key = _parseString(node);\n        if (!key) {\n            if (scanner.getToken() === 16 /* Unknown */) {\n                // give a more helpful error message\n                _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n                var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n                keyNode.value = scanner.getTokenValue();\n                key = keyNode;\n                _scanNext(); // consume Unknown\n            }\n            else {\n                return null;\n            }\n        }\n        node.keyNode = key;\n        var seen = keysSeen[key.value];\n        if (seen) {\n            problems.push({ location: { offset: node.keyNode.offset, length: node.keyNode.length }, message: localize('DuplicateKeyWarning', \"Duplicate object key\"), code: ErrorCode.Undefined, severity: ProblemSeverity.Warning });\n            if (typeof seen === 'object') {\n                problems.push({ location: { offset: seen.keyNode.offset, length: seen.keyNode.length }, message: localize('DuplicateKeyWarning', \"Duplicate object key\"), code: ErrorCode.Undefined, severity: ProblemSeverity.Warning });\n            }\n            keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n        }\n        else {\n            keysSeen[key.value] = node;\n        }\n        if (scanner.getToken() === 6 /* ColonToken */) {\n            node.colonOffset = scanner.getTokenOffset();\n            _scanNext(); // consume ColonToken\n        }\n        else {\n            _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n            if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n                node.length = key.length;\n                return node;\n            }\n        }\n        var value = _parseValue(node, key.value);\n        if (!value) {\n            return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        node.valueNode = value;\n        node.length = value.offset + value.length - node.offset;\n        return node;\n    }\n    function _parseObject(parent) {\n        if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n            return null;\n        }\n        var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n        var keysSeen = Object.create(null);\n        _scanNext(); // consume OpenBraceToken\n        var needsComma = false;\n        while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 2 /* CloseBraceToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, { offset: commaOffset, length: 1 });\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var property = _parseProperty(node, keysSeen);\n            if (!property) {\n                _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, null, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.properties.push(property);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n            return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseString(parent) {\n        if (scanner.getToken() !== 10 /* StringLiteral */) {\n            return null;\n        }\n        var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n        node.value = scanner.getTokenValue();\n        return _finalize(node, true);\n    }\n    function _parseNumber(parent) {\n        if (scanner.getToken() !== 11 /* NumericLiteral */) {\n            return null;\n        }\n        var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n        if (scanner.getTokenError() === 0 /* None */) {\n            var tokenValue = scanner.getTokenValue();\n            try {\n                var numberValue = JSON.parse(tokenValue);\n                if (typeof numberValue !== 'number') {\n                    return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n                }\n                node.value = numberValue;\n            }\n            catch (e) {\n                return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n            }\n            node.isInteger = tokenValue.indexOf('.') === -1;\n        }\n        return _finalize(node, true);\n    }\n    function _parseLiteral(parent) {\n        var node;\n        switch (scanner.getToken()) {\n            case 7 /* NullKeyword */:\n                return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n            case 8 /* TrueKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n            case 9 /* FalseKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n            default:\n                return null;\n        }\n    }\n    function _parseValue(parent, name) {\n        return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n    }\n    var _root = null;\n    var token = _scanNext();\n    if (token !== 17 /* EOF */) {\n        _root = _parseValue(null, null);\n        if (!_root) {\n            _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n        }\n        else if (scanner.getToken() !== 17 /* EOF */) {\n            _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n    return new JSONDocument(_root, problems, comments);\n}\n//# sourceMappingURL=jsonParser.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/configuration.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/configuration.js ***!
  \*********************************************************************************************************************/
/*! exports provided: schemaContributions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"schemaContributions\", function() { return schemaContributions; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar schemaContributions = {\n    schemaAssociations: {},\n    schemas: {\n        // bundle the schema-schema to include (localized) descriptions\n        'http://json-schema.org/draft-04/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            '$schema': 'http://json-schema.org/draft-04/schema#',\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': { '$ref': '#' }\n                },\n                'positiveInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'positiveIntegerDefault0': {\n                    'allOf': [{ '$ref': '#/definitions/positiveInteger' }, { 'default': 0 }]\n                },\n                'simpleTypes': {\n                    'type': 'string',\n                    'enum': ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string']\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': { 'type': 'string' },\n                    'minItems': 1,\n                    'uniqueItems': true\n                }\n            },\n            'type': 'object',\n            'properties': {\n                'id': {\n                    'type': 'string',\n                    'format': 'uri',\n                    'description': localize('schema.json.id', 'A unique identifier for the schema.')\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri',\n                    'description': localize('schema.json.$schema', 'The schema to verify this document against ')\n                },\n                'title': {\n                    'type': 'string',\n                    'description': localize('schema.json.title', 'A descriptive title of the element')\n                },\n                'description': {\n                    'type': 'string',\n                    'description': localize('schema.json.description', 'A long description of the element. Used in hover menus and suggestions.')\n                },\n                'default': {\n                    'description': localize('schema.json.default', 'A default value. Used by suggestions.')\n                },\n                'multipleOf': {\n                    'type': 'number',\n                    'minimum': 0,\n                    'exclusiveMinimum': true,\n                    'description': localize('schema.json.multipleOf', 'A number that should cleanly divide the current value (i.e. have no remainder)')\n                },\n                'maximum': {\n                    'type': 'number',\n                    'description': localize('schema.json.maximum', 'The maximum numerical value, inclusive by default.')\n                },\n                'exclusiveMaximum': {\n                    'type': 'boolean',\n                    'default': false,\n                    'description': localize('schema.json.exclusiveMaximum', 'Makes the maximum property exclusive.')\n                },\n                'minimum': {\n                    'type': 'number',\n                    'description': localize('schema.json.minimum', 'The minimum numerical value, inclusive by default.')\n                },\n                'exclusiveMinimum': {\n                    'type': 'boolean',\n                    'default': false,\n                    'description': localize('schema.json.exclusiveMininum', 'Makes the minimum property exclusive.')\n                },\n                'maxLength': {\n                    'allOf': [\n                        { '$ref': '#/definitions/positiveInteger' }\n                    ],\n                    'description': localize('schema.json.maxLength', 'The maximum length of a string.')\n                },\n                'minLength': {\n                    'allOf': [\n                        { '$ref': '#/definitions/positiveIntegerDefault0' }\n                    ],\n                    'description': localize('schema.json.minLength', 'The minimum length of a string.')\n                },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex',\n                    'description': localize('schema.json.pattern', 'A regular expression to match the string against. It is not implicitly anchored.')\n                },\n                'additionalItems': {\n                    'anyOf': [\n                        { 'type': 'boolean' },\n                        { '$ref': '#' }\n                    ],\n                    'default': {},\n                    'description': localize('schema.json.additionalItems', 'For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.')\n                },\n                'items': {\n                    'anyOf': [\n                        { '$ref': '#' },\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'default': {},\n                    'description': localize('schema.json.items', 'For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.')\n                },\n                'maxItems': {\n                    'allOf': [\n                        { '$ref': '#/definitions/positiveInteger' }\n                    ],\n                    'description': localize('schema.json.maxItems', 'The maximum number of items that can be inside an array. Inclusive.')\n                },\n                'minItems': {\n                    'allOf': [\n                        { '$ref': '#/definitions/positiveIntegerDefault0' }\n                    ],\n                    'description': localize('schema.json.minItems', 'The minimum number of items that can be inside an array. Inclusive.')\n                },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false,\n                    'description': localize('schema.json.uniqueItems', 'If all of the items in the array must be unique. Defaults to false.')\n                },\n                'maxProperties': {\n                    'allOf': [\n                        { '$ref': '#/definitions/positiveInteger' }\n                    ],\n                    'description': localize('schema.json.maxProperties', 'The maximum number of properties an object can have. Inclusive.')\n                },\n                'minProperties': {\n                    'allOf': [\n                        { '$ref': '#/definitions/positiveIntegerDefault0' },\n                    ],\n                    'description': localize('schema.json.minProperties', 'The minimum number of properties an object can have. Inclusive.')\n                },\n                'required': {\n                    'allOf': [\n                        { '$ref': '#/definitions/stringArray' }\n                    ],\n                    'description': localize('schema.json.required', 'An array of strings that lists the names of all properties required on this object.')\n                },\n                'additionalProperties': {\n                    'anyOf': [\n                        { 'type': 'boolean' },\n                        { '$ref': '#' }\n                    ],\n                    'default': {},\n                    'description': localize('schema.json.additionalProperties', 'Either a schema or a boolean. If a schema, then used to validate all properties not matched by \\'properties\\' or \\'patternProperties\\'. If false, then any properties not matched by either will cause this schema to fail.')\n                },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {},\n                    'description': localize('schema.json.definitions', 'Not used for validation. Place subschemas here that you wish to reference inline with $ref')\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {},\n                    'description': localize('schema.json.properties', 'A map of property names to schemas for each property.')\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {},\n                    'description': localize('schema.json.patternProperties', 'A map of regular expressions on property names to schemas for matching properties.')\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            { '$ref': '#' },\n                            { '$ref': '#/definitions/stringArray' }\n                        ]\n                    },\n                    'description': localize('schema.json.dependencies', 'A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.')\n                },\n                'enum': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'uniqueItems': true,\n                    'description': localize('schema.json.enum', 'The set of literal values that are valid')\n                },\n                'type': {\n                    'anyOf': [\n                        { '$ref': '#/definitions/simpleTypes' },\n                        {\n                            'type': 'array',\n                            'items': { '$ref': '#/definitions/simpleTypes' },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ],\n                    'description': localize('schema.json.type', 'Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.')\n                },\n                'format': {\n                    'anyOf': [\n                        {\n                            'type': 'string',\n                            'description': localize('schema.json.format', 'Describes the format expected for the value.'),\n                            'enum': ['date-time', 'uri', 'email', 'hostname', 'ipv4', 'ipv6', 'regex']\n                        }, {\n                            'type': 'string'\n                        }\n                    ]\n                },\n                'allOf': {\n                    'allOf': [\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'description': localize('schema.json.allOf', 'An array of schemas, all of which must match.')\n                },\n                'anyOf': {\n                    'allOf': [\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'description': localize('schema.json.anyOf', 'An array of schemas, where at least one must match.')\n                },\n                'oneOf': {\n                    'allOf': [\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'description': localize('schema.json.oneOf', 'An array of schemas, exactly one of which must match.')\n                },\n                'not': {\n                    'allOf': [\n                        { '$ref': '#' }\n                    ],\n                    'description': localize('schema.json.not', 'A schema which must not match.')\n                }\n            },\n            'dependencies': {\n                'exclusiveMaximum': ['maximum'],\n                'exclusiveMinimum': ['minimum']\n            },\n            'default': {}\n        }\n    }\n};\n//# sourceMappingURL=configuration.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/configuration.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonCompletion.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonCompletion.js ***!
  \**********************************************************************************************************************/
/*! exports provided: JSONCompletion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONCompletion\", function() { return JSONCompletion; });\n/* harmony import */ var _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/jsonParser.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js\");\n/* harmony import */ var _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../jsonc-parser/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/json.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/json.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar JSONCompletion = /** @class */ (function () {\n    function JSONCompletion(schemaService, contributions, promiseConstructor) {\n        if (contributions === void 0) { contributions = []; }\n        this.templateVarIdCounter = 0;\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promise = promiseConstructor || Promise;\n    }\n    JSONCompletion.prototype.doResolve = function (item) {\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            if (this.contributions[i].resolveCompletion) {\n                var resolver = this.contributions[i].resolveCompletion(item);\n                if (resolver) {\n                    return resolver;\n                }\n            }\n        }\n        return this.promise.resolve(item);\n    };\n    JSONCompletion.prototype.doComplete = function (document, position, doc) {\n        var _this = this;\n        var result = {\n            items: [],\n            isIncomplete: false\n        };\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffsetEndInclusive(offset);\n        if (this.isInComment(document, node ? node.offset : 0, offset)) {\n            return Promise.resolve(result);\n        }\n        var currentWord = this.getCurrentWord(document, offset);\n        var overwriteRange = null;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            overwriteRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n        }\n        else {\n            var overwriteStart = offset - currentWord.length;\n            if (overwriteStart > 0 && document.getText()[overwriteStart - 1] === '\"') {\n                overwriteStart--;\n            }\n            overwriteRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(document.positionAt(overwriteStart), position);\n        }\n        var proposed = {};\n        var collector = {\n            add: function (suggestion) {\n                var existing = proposed[suggestion.label];\n                if (!existing) {\n                    proposed[suggestion.label] = suggestion;\n                    if (overwriteRange) {\n                        suggestion.textEdit = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(overwriteRange, suggestion.insertText);\n                    }\n                    result.items.push(suggestion);\n                }\n                else if (!existing.documentation) {\n                    existing.documentation = suggestion.documentation;\n                }\n            },\n            setAsIncomplete: function () {\n                result.isIncomplete = true;\n            },\n            error: function (message) {\n                console.error(message);\n            },\n            log: function (message) {\n                console.log(message);\n            },\n            getNumberOfProposals: function () {\n                return result.items.length;\n            }\n        };\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var collectionPromises = [];\n            var addValue = true;\n            var currentKey = '';\n            var currentProperty = null;\n            if (node) {\n                if (node.type === 'string') {\n                    var parent = node.parent;\n                    if (parent && parent.type === 'property' && parent.keyNode === node) {\n                        addValue = !parent.valueNode;\n                        currentProperty = parent;\n                        currentKey = document.getText().substr(node.offset + 1, node.length - 2);\n                        if (parent) {\n                            node = parent.parent;\n                        }\n                    }\n                }\n            }\n            // proposals for properties\n            if (node && node.type === 'object') {\n                // don't suggest keys when the cursor is just before the opening curly brace\n                if (node.offset === offset) {\n                    return result;\n                }\n                // don't suggest properties that are already present\n                var properties = node.properties;\n                properties.forEach(function (p) {\n                    if (!currentProperty || currentProperty !== p) {\n                        proposed[p.keyNode.value] = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItem\"].create('__');\n                    }\n                });\n                var separatorAfter_1 = '';\n                if (addValue) {\n                    separatorAfter_1 = _this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n                }\n                if (schema) {\n                    // property proposals with schema\n                    _this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter_1, collector);\n                }\n                else {\n                    // property proposals without schema\n                    _this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n                }\n                var location_1 = _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](node);\n                _this.contributions.forEach(function (contribution) {\n                    var collectPromise = contribution.collectPropertyCompletions(document.uri, location_1, currentWord, addValue, separatorAfter_1 === '', collector);\n                    if (collectPromise) {\n                        collectionPromises.push(collectPromise);\n                    }\n                });\n                if ((!schema && currentWord.length > 0 && document.getText().charAt(offset - currentWord.length - 1) !== '\"')) {\n                    collector.add({\n                        kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property,\n                        label: _this.getLabelForValue(currentWord),\n                        insertText: _this.getInsertTextForProperty(currentWord, null, false, separatorAfter_1),\n                        insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet, documentation: ''\n                    });\n                }\n            }\n            // proposals for values\n            var types = {};\n            if (schema) {\n                // value proposals with schema\n                _this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n            }\n            else {\n                // value proposals without schema\n                _this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n            }\n            if (_this.contributions.length > 0) {\n                _this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n            }\n            return _this.promise.all(collectionPromises).then(function () {\n                if (collector.getNumberOfProposals() === 0) {\n                    var offsetForSeparator = offset;\n                    if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n                        offsetForSeparator = node.offset + node.length;\n                    }\n                    var separatorAfter = _this.evaluateSeparatorAfter(document, offsetForSeparator);\n                    _this.addFillerValueCompletions(types, separatorAfter, collector);\n                }\n                return result;\n            });\n        });\n    };\n    JSONCompletion.prototype.getPropertyCompletions = function (schema, doc, node, addValue, separatorAfter, collector) {\n        var _this = this;\n        var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        matchingSchemas.forEach(function (s) {\n            if (s.node === node && !s.inverted) {\n                var schemaProperties_1 = s.schema.properties;\n                if (schemaProperties_1) {\n                    Object.keys(schemaProperties_1).forEach(function (key) {\n                        var propertySchema = schemaProperties_1[key];\n                        if (typeof propertySchema === 'object' && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n                            var proposal = {\n                                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property,\n                                label: key,\n                                insertText: _this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                                filterText: _this.getFilterTextForValue(key),\n                                documentation: propertySchema.description || '',\n                            };\n                            if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"endsWith\"])(proposal.insertText, \"$1\" + separatorAfter)) {\n                                proposal.command = {\n                                    title: 'Suggest',\n                                    command: 'editor.action.triggerSuggest'\n                                };\n                            }\n                            collector.add(proposal);\n                        }\n                    });\n                }\n            }\n        });\n    };\n    JSONCompletion.prototype.getSchemaLessPropertyCompletions = function (doc, node, currentKey, collector) {\n        var _this = this;\n        var collectCompletionsForSimilarObject = function (obj) {\n            obj.properties.forEach(function (p) {\n                var key = p.keyNode.value;\n                collector.add({\n                    kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property,\n                    label: key,\n                    insertText: _this.getInsertTextForValue(key, ''),\n                    insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                    filterText: _this.getFilterTextForValue(key),\n                    documentation: ''\n                });\n            });\n        };\n        if (node.parent) {\n            if (node.parent.type === 'property') {\n                // if the object is a property value, check the tree for other objects that hang under a property of the same name\n                var parentKey_1 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n !== node.parent && n.keyNode.value === parentKey_1 && n.valueNode && n.valueNode.type === 'object') {\n                        collectCompletionsForSimilarObject(n.valueNode);\n                    }\n                    return true;\n                });\n            }\n            else if (node.parent.type === 'array') {\n                // if the object is in an array, use all other array elements as similar objects\n                node.parent.items.forEach(function (n) {\n                    if (n.type === 'object' && n !== node) {\n                        collectCompletionsForSimilarObject(n);\n                    }\n                });\n            }\n        }\n        else if (node.type === 'object') {\n            collector.add({\n                kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property,\n                label: '$schema',\n                insertText: this.getInsertTextForProperty('$schema', null, true, ''),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet, documentation: '',\n                filterText: this.getFilterTextForValue(\"$schema\")\n            });\n        }\n    };\n    JSONCompletion.prototype.getSchemaLessValueCompletions = function (doc, node, offset, document, collector) {\n        var _this = this;\n        var offsetForSeparator = offset;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            node = node.parent;\n        }\n        if (!node) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: 'Empty object',\n                insertText: this.getInsertTextForValue({}, ''),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                documentation: ''\n            });\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: 'Empty array',\n                insertText: this.getInsertTextForValue([], ''),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                documentation: ''\n            });\n            return;\n        }\n        var separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n        var collectSuggestionsForValues = function (value) {\n            if (!_parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"contains\"](value.parent, offset, true)) {\n                collector.add({\n                    kind: _this.getSuggestionKind(value.type),\n                    label: _this.getLabelTextForMatchingNode(value, document),\n                    insertText: _this.getInsertTextForMatchingNode(value, document, separatorAfter),\n                    insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet, documentation: ''\n                });\n            }\n            if (value.type === 'boolean') {\n                _this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n            }\n        };\n        if (node.type === 'property') {\n            if (offset > node.colonOffset) {\n                var valueNode = node.valueNode;\n                if (valueNode && (offset > (valueNode.offset + valueNode.length) || valueNode.type === 'object' || valueNode.type === 'array')) {\n                    return;\n                }\n                // suggest values at the same key\n                var parentKey_2 = node.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_2 && n.valueNode) {\n                        collectSuggestionsForValues(n.valueNode);\n                    }\n                    return true;\n                });\n                if (parentKey_2 === '$schema' && node.parent && !node.parent.parent) {\n                    this.addDollarSchemaCompletions(separatorAfter, collector);\n                }\n            }\n        }\n        if (node.type === 'array') {\n            if (node.parent && node.parent.type === 'property') {\n                // suggest items of an array at the same key\n                var parentKey_3 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    var p = n;\n                    if (n.type === 'property' && p.keyNode.value === parentKey_3 && p.valueNode && p.valueNode.type === 'array') {\n                        p.valueNode.items.forEach(collectSuggestionsForValues);\n                    }\n                    return true;\n                });\n            }\n            else {\n                // suggest items in the same array\n                node.items.forEach(collectSuggestionsForValues);\n            }\n        }\n    };\n    JSONCompletion.prototype.getValueCompletions = function (schema, doc, node, offset, document, collector, types) {\n        var _this = this;\n        var offsetForSeparator = offset;\n        var parentKey = null;\n        var valueNode = null;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            valueNode = node;\n            node = node.parent;\n        }\n        if (!node) {\n            this.addSchemaValueCompletions(schema.schema, '', collector, types);\n            return;\n        }\n        if ((node.type === 'property') && offset > node.colonOffset) {\n            var valueNode_1 = node.valueNode;\n            if (valueNode_1 && offset > (valueNode_1.offset + valueNode_1.length)) {\n                return; // we are past the value node\n            }\n            parentKey = node.keyNode.value;\n            node = node.parent;\n        }\n        if (node && (parentKey !== null || node.type === 'array')) {\n            var separatorAfter_2 = this.evaluateSeparatorAfter(document, offsetForSeparator);\n            var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n            matchingSchemas.forEach(function (s) {\n                if (s.node === node && !s.inverted && s.schema) {\n                    if (node.type === 'array' && s.schema.items) {\n                        if (Array.isArray(s.schema.items)) {\n                            var index = _this.findItemAtOffset(node, document, offset);\n                            if (index < s.schema.items.length) {\n                                _this.addSchemaValueCompletions(s.schema.items[index], separatorAfter_2, collector, types);\n                            }\n                        }\n                        else {\n                            _this.addSchemaValueCompletions(s.schema.items, separatorAfter_2, collector, types);\n                        }\n                    }\n                    if (s.schema.properties) {\n                        var propertySchema = s.schema.properties[parentKey];\n                        if (propertySchema) {\n                            _this.addSchemaValueCompletions(propertySchema, separatorAfter_2, collector, types);\n                        }\n                    }\n                }\n            });\n            if (parentKey === '$schema' && !node.parent) {\n                this.addDollarSchemaCompletions(separatorAfter_2, collector);\n            }\n            if (types['boolean']) {\n                this.addBooleanValueCompletion(true, separatorAfter_2, collector);\n                this.addBooleanValueCompletion(false, separatorAfter_2, collector);\n            }\n            if (types['null']) {\n                this.addNullValueCompletion(separatorAfter_2, collector);\n            }\n        }\n    };\n    JSONCompletion.prototype.getContributedValueCompletions = function (doc, node, offset, document, collector, collectionPromises) {\n        if (!node) {\n            this.contributions.forEach(function (contribution) {\n                var collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n                if (collectPromise) {\n                    collectionPromises.push(collectPromise);\n                }\n            });\n        }\n        else {\n            if (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null') {\n                node = node.parent;\n            }\n            if ((node.type === 'property') && offset > node.colonOffset) {\n                var parentKey_4 = node.keyNode.value;\n                var valueNode = node.valueNode;\n                if (!valueNode || offset <= (valueNode.offset + valueNode.length)) {\n                    var location_2 = _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](node.parent);\n                    this.contributions.forEach(function (contribution) {\n                        var collectPromise = contribution.collectValueCompletions(document.uri, location_2, parentKey_4, collector);\n                        if (collectPromise) {\n                            collectionPromises.push(collectPromise);\n                        }\n                    });\n                }\n            }\n        }\n    };\n    JSONCompletion.prototype.addSchemaValueCompletions = function (schema, separatorAfter, collector, types) {\n        var _this = this;\n        if (typeof schema === 'object') {\n            this.addEnumValueCompletions(schema, separatorAfter, collector);\n            this.addDefaultValueCompletions(schema, separatorAfter, collector);\n            this.collectTypes(schema, types);\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.anyOf)) {\n                schema.anyOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.oneOf)) {\n                schema.oneOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n        }\n    };\n    JSONCompletion.prototype.addDefaultValueCompletions = function (schema, separatorAfter, collector, arrayDepth) {\n        var _this = this;\n        if (arrayDepth === void 0) { arrayDepth = 0; }\n        var hasProposals = false;\n        if (schema.default) {\n            var type = schema.type;\n            var value = schema.default;\n            for (var i = arrayDepth; i > 0; i--) {\n                value = [value];\n                type = 'array';\n            }\n            collector.add({\n                kind: this.getSuggestionKind(type),\n                label: this.getLabelForValue(value),\n                insertText: this.getInsertTextForValue(value, separatorAfter),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                detail: localize('json.suggest.default', 'Default value'),\n            });\n            hasProposals = true;\n        }\n        if (Array.isArray(schema.defaultSnippets)) {\n            schema.defaultSnippets.forEach(function (s) {\n                var type = schema.type;\n                var value = s.body;\n                var label = s.label;\n                var insertText;\n                var filterText;\n                if (typeof value !== 'undefined') {\n                    var type_1 = schema.type;\n                    for (var i = arrayDepth; i > 0; i--) {\n                        value = [value];\n                        type_1 = 'array';\n                    }\n                    insertText = _this.getInsertTextForSnippetValue(value, separatorAfter);\n                    filterText = _this.getFilterTextForSnippetValue(value);\n                    label = label || _this.getLabelForSnippetValue(value);\n                }\n                else if (typeof s.bodyText === 'string') {\n                    var prefix = '', suffix = '', indent = '';\n                    for (var i = arrayDepth; i > 0; i--) {\n                        prefix = prefix + indent + '[\\n';\n                        suffix = suffix + '\\n' + indent + ']';\n                        indent += '\\t';\n                        type = 'array';\n                    }\n                    insertText = prefix + indent + s.bodyText.split('\\n').join('\\n' + indent) + suffix + separatorAfter;\n                    label = label || insertText;\n                    filterText = insertText.replace(/[\\n]/g, ''); // remove new lines\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: label,\n                    documentation: s.description,\n                    insertText: insertText,\n                    insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                    filterText: filterText\n                });\n                hasProposals = true;\n            });\n        }\n        if (!hasProposals && typeof schema.items === 'object' && !Array.isArray(schema.items)) {\n            this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n        }\n    };\n    JSONCompletion.prototype.addEnumValueCompletions = function (schema, separatorAfter, collector) {\n        if (Array.isArray(schema.enum)) {\n            for (var i = 0, length = schema.enum.length; i < length; i++) {\n                var enm = schema.enum[i];\n                var documentation = schema.description;\n                if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n                    documentation = schema.enumDescriptions[i];\n                }\n                collector.add({\n                    kind: this.getSuggestionKind(schema.type),\n                    label: this.getLabelForValue(enm),\n                    insertText: this.getInsertTextForValue(enm, separatorAfter),\n                    insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                    documentation: documentation\n                });\n            }\n        }\n    };\n    JSONCompletion.prototype.collectTypes = function (schema, types) {\n        if (Array.isArray(schema.enum)) {\n            return;\n        }\n        var type = schema.type;\n        if (Array.isArray(type)) {\n            type.forEach(function (t) { return types[t] = true; });\n        }\n        else {\n            types[type] = true;\n        }\n    };\n    JSONCompletion.prototype.addFillerValueCompletions = function (types, separatorAfter, collector) {\n        if (types['object']) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: '{}',\n                insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                detail: localize('defaults.object', 'New object'),\n                documentation: ''\n            });\n        }\n        if (types['array']) {\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: '[]',\n                insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n                insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                detail: localize('defaults.array', 'New array'),\n                documentation: ''\n            });\n        }\n    };\n    JSONCompletion.prototype.addBooleanValueCompletion = function (value, separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('boolean'),\n            label: value ? 'true' : 'false',\n            insertText: this.getInsertTextForValue(value, separatorAfter),\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addNullValueCompletion = function (separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('null'),\n            label: 'null',\n            insertText: 'null' + separatorAfter,\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addDollarSchemaCompletions = function (separatorAfter, collector) {\n        var _this = this;\n        var schemaIds = this.schemaService.getRegisteredSchemaIds(function (schema) { return schema === 'http' || schema === 'https'; });\n        schemaIds.forEach(function (schemaId) { return collector.add({\n            kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Module,\n            label: _this.getLabelForValue(schemaId),\n            filterText: _this.getFilterTextForValue(schemaId),\n            insertText: _this.getInsertTextForValue(schemaId, separatorAfter),\n            insertTextFormat: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet, documentation: ''\n        }); });\n    };\n    JSONCompletion.prototype.getLabelForValue = function (value) {\n        var label = JSON.stringify(value);\n        if (label.length > 57) {\n            return label.substr(0, 57).trim() + '...';\n        }\n        return label;\n    };\n    JSONCompletion.prototype.getFilterTextForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForSnippetValue = function (value) {\n        return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getLabelForSnippetValue = function (value) {\n        var label = JSON.stringify(value);\n        label = label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n        if (label.length > 57) {\n            return label.substr(0, 57).trim() + '...';\n        }\n        return label;\n    };\n    JSONCompletion.prototype.getInsertTextForPlainText = function (text) {\n        return text.replace(/[\\\\\\$\\}]/g, '\\\\$&'); // escape $, \\ and } \n    };\n    JSONCompletion.prototype.getInsertTextForValue = function (value, separatorAfter) {\n        var text = JSON.stringify(value, null, '\\t');\n        if (text === '{}') {\n            return '{\\n\\t$1\\n}' + separatorAfter;\n        }\n        else if (text === '[]') {\n            return '[\\n\\t$1\\n]' + separatorAfter;\n        }\n        return this.getInsertTextForPlainText(text + separatorAfter);\n    };\n    JSONCompletion.prototype.getInsertTextForSnippetValue = function (value, separatorAfter) {\n        var replacer = function (value) {\n            if (typeof value === 'string') {\n                if (value[0] === '^') {\n                    return value.substr(1);\n                }\n            }\n            return JSON.stringify(value);\n        };\n        return Object(_utils_json_js__WEBPACK_IMPORTED_MODULE_2__[\"stringifyObject\"])(value, '', replacer) + separatorAfter;\n    };\n    JSONCompletion.prototype.getInsertTextForGuessedValue = function (value, separatorAfter) {\n        switch (typeof value) {\n            case 'object':\n                if (value === null) {\n                    return '${1:null}' + separatorAfter;\n                }\n                return this.getInsertTextForValue(value, separatorAfter);\n            case 'string':\n                var snippetValue = JSON.stringify(value);\n                snippetValue = snippetValue.substr(1, snippetValue.length - 2); // remove quotes\n                snippetValue = this.getInsertTextForPlainText(snippetValue); // escape \\ and }\n                return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n            case 'number':\n            case 'boolean':\n                return '${1:' + JSON.stringify(value) + '}' + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n    };\n    JSONCompletion.prototype.getSuggestionKind = function (type) {\n        if (Array.isArray(type)) {\n            var array = type;\n            type = array.length > 0 ? array[0] : null;\n        }\n        if (!type) {\n            return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value;\n        }\n        switch (type) {\n            case 'string': return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value;\n            case 'object': return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Module;\n            case 'property': return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property;\n            default: return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value;\n        }\n    };\n    JSONCompletion.prototype.getLabelTextForMatchingNode = function (node, document) {\n        switch (node.type) {\n            case 'array':\n                return '[]';\n            case 'object':\n                return '{}';\n            default:\n                var content = document.getText().substr(node.offset, node.length);\n                return content;\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForMatchingNode = function (node, document, separatorAfter) {\n        switch (node.type) {\n            case 'array':\n                return this.getInsertTextForValue([], separatorAfter);\n            case 'object':\n                return this.getInsertTextForValue({}, separatorAfter);\n            default:\n                var content = document.getText().substr(node.offset, node.length) + separatorAfter;\n                return this.getInsertTextForPlainText(content);\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForProperty = function (key, propertySchema, addValue, separatorAfter) {\n        var propertyText = this.getInsertTextForValue(key, '');\n        if (!addValue) {\n            return propertyText;\n        }\n        var resultText = propertyText + ': ';\n        var value;\n        var nValueProposals = 0;\n        if (propertySchema) {\n            if (Array.isArray(propertySchema.defaultSnippets)) {\n                if (propertySchema.defaultSnippets.length === 1) {\n                    var body = propertySchema.defaultSnippets[0].body;\n                    if (typeof body !== 'undefined') {\n                        value = this.getInsertTextForSnippetValue(body, '');\n                    }\n                }\n                nValueProposals += propertySchema.defaultSnippets.length;\n            }\n            if (propertySchema.enum) {\n                if (!value && propertySchema.enum.length === 1) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.enum[0], '');\n                }\n                nValueProposals += propertySchema.enum.length;\n            }\n            if (typeof propertySchema.default !== 'undefined') {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.default, '');\n                }\n                nValueProposals++;\n            }\n            if (nValueProposals === 0) {\n                var type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n                if (!type) {\n                    if (propertySchema.properties) {\n                        type = 'object';\n                    }\n                    else if (propertySchema.items) {\n                        type = 'array';\n                    }\n                }\n                switch (type) {\n                    case 'boolean':\n                        value = '$1';\n                        break;\n                    case 'string':\n                        value = '\"$1\"';\n                        break;\n                    case 'object':\n                        value = '{\\n\\t$1\\n}';\n                        break;\n                    case 'array':\n                        value = '[\\n\\t$1\\n]';\n                        break;\n                    case 'number':\n                    case 'integer':\n                        value = '${1:0}';\n                        break;\n                    case 'null':\n                        value = '${1:null}';\n                        break;\n                    default:\n                        return propertyText;\n                }\n            }\n        }\n        if (!value || nValueProposals > 1) {\n            value = '$1';\n        }\n        return resultText + value + separatorAfter;\n    };\n    JSONCompletion.prototype.getCurrentWord = function (document, offset) {\n        var i = offset - 1;\n        var text = document.getText();\n        while (i >= 0 && ' \\t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n            i--;\n        }\n        return text.substring(i + 1, offset);\n    };\n    JSONCompletion.prototype.evaluateSeparatorAfter = function (document, offset) {\n        var scanner = _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"](document.getText(), true);\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        switch (token) {\n            case 5 /* CommaToken */:\n            case 2 /* CloseBraceToken */:\n            case 4 /* CloseBracketToken */:\n            case 17 /* EOF */:\n                return '';\n            default:\n                return ',';\n        }\n    };\n    JSONCompletion.prototype.findItemAtOffset = function (node, document, offset) {\n        var scanner = _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"](document.getText(), true);\n        var children = node.items;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var child = children[i];\n            if (offset > child.offset + child.length) {\n                scanner.setPosition(child.offset + child.length);\n                var token = scanner.scan();\n                if (token === 5 /* CommaToken */ && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n                    return i + 1;\n                }\n                return i;\n            }\n            else if (offset >= child.offset) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    JSONCompletion.prototype.isInComment = function (document, start, offset) {\n        var scanner = _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_1__[\"createScanner\"](document.getText(), false);\n        scanner.setPosition(start);\n        var token = scanner.scan();\n        while (token !== 17 /* EOF */ && (scanner.getTokenOffset() + scanner.getTokenLength() < offset)) {\n            token = scanner.scan();\n        }\n        return (token === 12 /* LineCommentTrivia */ || token === 13 /* BlockCommentTrivia */) && scanner.getTokenOffset() <= offset;\n    };\n    return JSONCompletion;\n}());\n\n//# sourceMappingURL=jsonCompletion.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonCompletion.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonDocumentSymbols.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonDocumentSymbols.js ***!
  \***************************************************************************************************************************/
/*! exports provided: JSONDocumentSymbols */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONDocumentSymbols\", function() { return JSONDocumentSymbols; });\n/* harmony import */ var _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/jsonParser.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js\");\n/* harmony import */ var _utils_colors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/colors.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/colors.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar JSONDocumentSymbols = /** @class */ (function () {\n    function JSONDocumentSymbols(schemaService) {\n        this.schemaService = schemaService;\n    }\n    JSONDocumentSymbols.prototype.findDocumentSymbols = function (document, doc) {\n        var _this = this;\n        var root = doc.root;\n        if (!root) {\n            return null;\n        }\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || _utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"endsWith\"](resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_1 = [];\n                root.items.forEach(function (item) {\n                    if (item.type === 'object') {\n                        for (var _i = 0, _a = item.properties; _i < _a.length; _i++) {\n                            var property = _a[_i];\n                            if (property.keyNode.value === 'key') {\n                                if (property.valueNode) {\n                                    var location = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"Location\"].create(document.uri, _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"Range\"].create(document.positionAt(item.offset), document.positionAt(item.offset + item.length)));\n                                    result_1.push({ name: _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodeValue\"](property.valueNode), kind: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].Function, location: location });\n                                }\n                                return;\n                            }\n                        }\n                    }\n                });\n                return result_1;\n            }\n        }\n        var collectOutlineEntries = function (result, node, containerName) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node) { return collectOutlineEntries(result, node, containerName); });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var location = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"Location\"].create(document.uri, _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"Range\"].create(document.positionAt(property.offset), document.positionAt(property.offset + property.length)));\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        var childContainerName = containerName ? containerName + '.' + property.keyNode.value : property.keyNode.value;\n                        result.push({ name: property.keyNode.value, kind: _this.getSymbolKind(valueNode.type), location: location, containerName: containerName });\n                        collectOutlineEntries(result, valueNode, childContainerName);\n                    }\n                });\n            }\n            return result;\n        };\n        var result = collectOutlineEntries([], root, void 0);\n        return result;\n    };\n    JSONDocumentSymbols.prototype.getSymbolKind = function (nodeType) {\n        switch (nodeType) {\n            case 'object':\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].Module;\n            case 'string':\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].String;\n            case 'number':\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].Number;\n            case 'array':\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].Array;\n            case 'boolean':\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].Boolean;\n            default:// 'null'\n                return _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"SymbolKind\"].Variable;\n        }\n    };\n    JSONDocumentSymbols.prototype.findDocumentColors = function (document, doc) {\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var result = [];\n            if (schema) {\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema);\n                var visitedNode = {};\n                for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                    var s = matchingSchemas_1[_i];\n                    if (!s.inverted && s.schema && (s.schema.format === 'color' || s.schema.format === 'color-hex') && s.node && s.node.type === 'string') {\n                        var nodeId = String(s.node.offset);\n                        if (!visitedNode[nodeId]) {\n                            var color = Object(_utils_colors_js__WEBPACK_IMPORTED_MODULE_2__[\"colorFromHex\"])(_parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodeValue\"](s.node));\n                            if (color) {\n                                var range = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"Range\"].create(document.positionAt(s.node.offset), document.positionAt(s.node.offset + s.node.length));\n                                result.push({ color: color, range: range });\n                            }\n                            visitedNode[nodeId] = true;\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n    };\n    JSONDocumentSymbols.prototype.getColorPresentations = function (document, doc, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        function toTwoDigitHex(n) {\n            var r = n.toString(16);\n            return r.length !== 2 ? '0' + r : r;\n        }\n        var label;\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_3__[\"TextEdit\"].replace(range, JSON.stringify(label)) });\n        return result;\n    };\n    return JSONDocumentSymbols;\n}());\n\n//# sourceMappingURL=jsonDocumentSymbols.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonDocumentSymbols.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonHover.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonHover.js ***!
  \*****************************************************************************************************************/
/*! exports provided: JSONHover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONHover\", function() { return JSONHover; });\n/* harmony import */ var _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/jsonParser.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar JSONHover = /** @class */ (function () {\n    function JSONHover(schemaService, contributions, promiseConstructor) {\n        if (contributions === void 0) { contributions = []; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promise = promiseConstructor || Promise;\n    }\n    JSONHover.prototype.doHover = function (document, position, doc) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset);\n        if (!node || (node.type === 'object' || node.type === 'array') && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n            return this.promise.resolve(null);\n        }\n        var hoverRangeNode = node;\n        // use the property description when hovering over an object key\n        if (node.type === 'string') {\n            var parent = node.parent;\n            if (parent.type === 'property' && parent.keyNode === node) {\n                node = parent.valueNode;\n                if (!node) {\n                    return this.promise.resolve(null);\n                }\n            }\n        }\n        var hoverRange = _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"].create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n        var createHover = function (contents) {\n            var result = {\n                contents: contents,\n                range: hoverRange\n            };\n            return result;\n        };\n        var location = _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](node);\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            var contribution = this.contributions[i];\n            var promise = contribution.getInfoContribution(document.uri, location);\n            if (promise) {\n                return promise.then(function (htmlContent) { return createHover(htmlContent); });\n            }\n        }\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            if (schema) {\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n                var title_1 = null;\n                var markdownDescription_1 = null;\n                var markdownEnumValueDescription_1 = null, enumValue_1 = null;\n                matchingSchemas.every(function (s) {\n                    if (s.node === node && !s.inverted && s.schema) {\n                        title_1 = title_1 || s.schema.title;\n                        markdownDescription_1 = markdownDescription_1 || s.schema.markdownDescription || toMarkdown(s.schema.description);\n                        if (s.schema.enum) {\n                            var idx = s.schema.enum.indexOf(_parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodeValue\"](node));\n                            if (s.schema.markdownEnumDescriptions) {\n                                markdownEnumValueDescription_1 = s.schema.markdownEnumDescriptions[idx];\n                            }\n                            else if (s.schema.enumDescriptions) {\n                                markdownEnumValueDescription_1 = toMarkdown(s.schema.enumDescriptions[idx]);\n                            }\n                            if (markdownEnumValueDescription_1) {\n                                enumValue_1 = s.schema.enum[idx];\n                                if (typeof enumValue_1 !== 'string') {\n                                    enumValue_1 = JSON.stringify(enumValue_1);\n                                }\n                            }\n                        }\n                    }\n                    return true;\n                });\n                var result = '';\n                if (title_1) {\n                    result = toMarkdown(title_1);\n                }\n                if (markdownDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += markdownDescription_1;\n                }\n                if (markdownEnumValueDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += \"`\" + toMarkdown(enumValue_1) + \"`: \" + markdownEnumValueDescription_1;\n                }\n                return createHover([result]);\n            }\n            return null;\n        });\n    };\n    return JSONHover;\n}());\n\nfunction toMarkdown(plain) {\n    if (plain) {\n        var res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, '$1\\n\\n$3'); // single new lines to \\n\\n (Markdown paragraph)\n        return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    return void 0;\n}\n//# sourceMappingURL=jsonHover.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonHover.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js ***!
  \*************************************************************************************************************************/
/*! exports provided: UnresolvedSchema, ResolvedSchema, JSONSchemaService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnresolvedSchema\", function() { return UnresolvedSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolvedSchema\", function() { return ResolvedSchema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONSchemaService\", function() { return JSONSchemaService; });\n/* harmony import */ var _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../jsonc-parser/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js\");\n/* harmony import */ var _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-uri/index.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-uri/index.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/strings.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js\");\n/* harmony import */ var _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/jsonParser.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_4__[\"loadMessageBundle\"]();\nvar FilePatternAssociation = /** @class */ (function () {\n    function FilePatternAssociation(pattern) {\n        try {\n            this.patternRegExp = new RegExp(_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"convertSimple2RegExpPattern\"](pattern) + '$');\n        }\n        catch (e) {\n            // invalid pattern\n            this.patternRegExp = null;\n        }\n        this.schemas = [];\n    }\n    FilePatternAssociation.prototype.addSchema = function (id) {\n        this.schemas.push(id);\n    };\n    FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n        return this.patternRegExp && this.patternRegExp.test(fileName);\n    };\n    FilePatternAssociation.prototype.getSchemas = function () {\n        return this.schemas;\n    };\n    return FilePatternAssociation;\n}());\nvar SchemaHandle = /** @class */ (function () {\n    function SchemaHandle(service, url, unresolvedSchemaContent) {\n        this.service = service;\n        this.url = url;\n        if (unresolvedSchemaContent) {\n            this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n        }\n    }\n    SchemaHandle.prototype.getUnresolvedSchema = function () {\n        if (!this.unresolvedSchema) {\n            this.unresolvedSchema = this.service.loadSchema(this.url);\n        }\n        return this.unresolvedSchema;\n    };\n    SchemaHandle.prototype.getResolvedSchema = function () {\n        var _this = this;\n        if (!this.resolvedSchema) {\n            this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                return _this.service.resolveSchemaContent(unresolved, _this.url);\n            });\n        }\n        return this.resolvedSchema;\n    };\n    SchemaHandle.prototype.clearSchema = function () {\n        this.resolvedSchema = null;\n        this.unresolvedSchema = null;\n    };\n    return SchemaHandle;\n}());\nvar UnresolvedSchema = /** @class */ (function () {\n    function UnresolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    return UnresolvedSchema;\n}());\n\nvar ResolvedSchema = /** @class */ (function () {\n    function ResolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    ResolvedSchema.prototype.getSection = function (path) {\n        return _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_3__[\"asSchema\"](this.getSectionRecursive(path, this.schema));\n    };\n    ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n        var _this = this;\n        if (!schema || typeof schema === 'boolean' || path.length === 0) {\n            return schema;\n        }\n        var next = path.shift();\n        if (schema.properties && typeof schema.properties[next]) {\n            return this.getSectionRecursive(path, schema.properties[next]);\n        }\n        else if (schema.patternProperties) {\n            Object.keys(schema.patternProperties).forEach(function (pattern) {\n                var regex = new RegExp(pattern);\n                if (regex.test(next)) {\n                    return _this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                }\n            });\n        }\n        else if (typeof schema.additionalProperties === 'object') {\n            return this.getSectionRecursive(path, schema.additionalProperties);\n        }\n        else if (next.match('[0-9]+')) {\n            if (Array.isArray(schema.items)) {\n                var index = parseInt(next, 10);\n                if (!isNaN(index) && schema.items[index]) {\n                    return this.getSectionRecursive(path, schema.items[index]);\n                }\n            }\n            else if (schema.items) {\n                return this.getSectionRecursive(path, schema.items);\n            }\n        }\n        return null;\n    };\n    return ResolvedSchema;\n}());\n\nvar JSONSchemaService = /** @class */ (function () {\n    function JSONSchemaService(requestService, contextService, promiseConstructor) {\n        this.contextService = contextService;\n        this.requestService = requestService;\n        this.promiseConstructor = promiseConstructor || Promise;\n        this.callOnDispose = [];\n        this.contributionSchemas = {};\n        this.contributionAssociations = {};\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n    }\n    JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n        return Object.keys(this.registeredSchemasIds).filter(function (id) {\n            var scheme = _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse(id).scheme;\n            return scheme !== 'schemaservice' && (!filter || filter(scheme));\n        });\n    };\n    Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n        get: function () {\n            return this.promiseConstructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JSONSchemaService.prototype.dispose = function () {\n        while (this.callOnDispose.length > 0) {\n            this.callOnDispose.pop()();\n        }\n    };\n    JSONSchemaService.prototype.onResourceChange = function (uri) {\n        uri = this.normalizeId(uri);\n        var schemaFile = this.schemasById[uri];\n        if (schemaFile) {\n            schemaFile.clearSchema();\n            return true;\n        }\n        return false;\n    };\n    JSONSchemaService.prototype.normalizeId = function (id) {\n        // remove trailing '#', normalize drive capitalization\n        return _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse(id).toString();\n    };\n    JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n        var _this = this;\n        if (schemaContributions.schemas) {\n            var schemas = schemaContributions.schemas;\n            for (var id in schemas) {\n                var normalizedId = this.normalizeId(id);\n                this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n            }\n        }\n        if (schemaContributions.schemaAssociations) {\n            var schemaAssociations = schemaContributions.schemaAssociations;\n            for (var pattern in schemaAssociations) {\n                var associations = schemaAssociations[pattern];\n                this.contributionAssociations[pattern] = associations;\n                var fpa = this.getOrAddFilePatternAssociation(pattern);\n                associations.forEach(function (schemaId) {\n                    var id = _this.normalizeId(schemaId);\n                    fpa.addSchema(id);\n                });\n            }\n        }\n    };\n    JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n        var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n        this.schemasById[id] = schemaHandle;\n        return schemaHandle;\n    };\n    JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n        return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n    };\n    JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n        var fpa = this.filePatternAssociationById[pattern];\n        if (!fpa) {\n            fpa = new FilePatternAssociation(pattern);\n            this.filePatternAssociationById[pattern] = fpa;\n            this.filePatternAssociations.push(fpa);\n        }\n        return fpa;\n    };\n    JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n        var _this = this;\n        if (filePatterns === void 0) { filePatterns = null; }\n        var id = this.normalizeId(uri);\n        this.registeredSchemasIds[id] = true;\n        if (filePatterns) {\n            filePatterns.forEach(function (pattern) {\n                _this.getOrAddFilePatternAssociation(pattern).addSchema(id);\n            });\n        }\n        return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n    };\n    JSONSchemaService.prototype.clearExternalSchemas = function () {\n        var _this = this;\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n        for (var id in this.contributionSchemas) {\n            this.schemasById[id] = this.contributionSchemas[id];\n            this.registeredSchemasIds[id] = true;\n        }\n        for (var pattern in this.contributionAssociations) {\n            var fpa = this.getOrAddFilePatternAssociation(pattern);\n            this.contributionAssociations[pattern].forEach(function (schemaId) {\n                var id = _this.normalizeId(schemaId);\n                fpa.addSchema(id);\n            });\n        }\n    };\n    JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n        var id = this.normalizeId(schemaId);\n        var schemaHandle = this.schemasById[id];\n        if (schemaHandle) {\n            return schemaHandle.getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.loadSchema = function (url) {\n        if (!this.requestService) {\n            var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n            return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n        }\n        return this.requestService(url).then(function (content) {\n            if (!content) {\n                var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n                return new UnresolvedSchema({}, [errorMessage]);\n            }\n            var schemaContent = {};\n            var jsonErrors = [];\n            schemaContent = _jsonc_parser_main_js__WEBPACK_IMPORTED_MODULE_0__[\"parse\"](content, jsonErrors);\n            var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n            return new UnresolvedSchema(schemaContent, errors);\n        }, function (error) {\n            var errorMessage = localize('json.schema.unabletoload', 'Unable to load schema from \\'{0}\\': {1}', toDisplayString(url), error.toString());\n            return new UnresolvedSchema({}, [errorMessage]);\n        });\n    };\n    JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL) {\n        var _this = this;\n        var resolveErrors = schemaToResolve.errors.slice(0);\n        var schema = schemaToResolve.schema;\n        var contextService = this.contextService;\n        var findSection = function (schema, path) {\n            if (!path) {\n                return schema;\n            }\n            var current = schema;\n            if (path[0] === '/') {\n                path = path.substr(1);\n            }\n            path.split('/').some(function (part) {\n                current = current[part];\n                return !current;\n            });\n            return current;\n        };\n        var merge = function (target, sourceRoot, sourceURI, path) {\n            var section = findSection(sourceRoot, path);\n            if (section) {\n                for (var key in section) {\n                    if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                        target[key] = section[key];\n                    }\n                }\n            }\n            else {\n                resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n            }\n        };\n        var resolveExternalLink = function (node, uri, linkPath, parentSchemaURL) {\n            if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n                uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n            }\n            uri = _this.normalizeId(uri);\n            return _this.getOrAddSchemaHandle(uri).getUnresolvedSchema().then(function (unresolvedSchema) {\n                if (unresolvedSchema.errors.length) {\n                    var loc = linkPath ? uri + '#' + linkPath : uri;\n                    resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n                }\n                merge(node, unresolvedSchema.schema, uri, linkPath);\n                return resolveRefs(node, unresolvedSchema.schema, uri);\n            });\n        };\n        var resolveRefs = function (node, parentSchema, parentSchemaURL) {\n            if (!node || typeof node !== 'object') {\n                return Promise.resolve(null);\n            }\n            var toWalk = [node];\n            var seen = [];\n            var openPromises = [];\n            var collectEntries = function () {\n                var entries = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    entries[_i] = arguments[_i];\n                }\n                for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                    var entry = entries_1[_a];\n                    if (typeof entry === 'object') {\n                        toWalk.push(entry);\n                    }\n                }\n            };\n            var collectMapEntries = function () {\n                var maps = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    maps[_i] = arguments[_i];\n                }\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var map = maps_1[_a];\n                    if (typeof map === 'object') {\n                        for (var key in map) {\n                            var entry = map[key];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var collectArrayEntries = function () {\n                var arrays = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    arrays[_i] = arguments[_i];\n                }\n                for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                    var array = arrays_1[_a];\n                    if (Array.isArray(array)) {\n                        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n                            var entry = array_1[_b];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var handleRef = function (next) {\n                while (next.$ref) {\n                    var segments = next.$ref.split('#', 2);\n                    delete next.$ref;\n                    if (segments[0].length > 0) {\n                        openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL));\n                        return;\n                    }\n                    else {\n                        merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again\n                    }\n                }\n                collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames);\n                collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n            };\n            while (toWalk.length) {\n                var next = toWalk.pop();\n                if (seen.indexOf(next) >= 0) {\n                    continue;\n                }\n                seen.push(next);\n                handleRef(next);\n            }\n            return _this.promise.all(openPromises);\n        };\n        return resolveRefs(schema, schema, schemaURL).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n    };\n    JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n        // first use $schema if present\n        if (document && document.root && document.root.type === 'object') {\n            var schemaProperties = document.root.properties.filter(function (p) { return (p.keyNode.value === '$schema') && p.valueNode && p.valueNode.type === 'string'; });\n            if (schemaProperties.length > 0) {\n                var schemeId = _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_3__[\"getNodeValue\"](schemaProperties[0].valueNode);\n                if (schemeId && _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__[\"startsWith\"](schemeId, '.') && this.contextService) {\n                    schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n                }\n                if (schemeId) {\n                    var id = this.normalizeId(schemeId);\n                    return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                }\n            }\n        }\n        var seen = Object.create(null);\n        var schemas = [];\n        for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.matchesPattern(resource)) {\n                for (var _b = 0, _c = entry.getSchemas(); _b < _c.length; _b++) {\n                    var schemaId = _c[_b];\n                    if (!seen[schemaId]) {\n                        schemas.push(schemaId);\n                        seen[schemaId] = true;\n                    }\n                }\n            }\n        }\n        if (schemas.length > 0) {\n            return this.createCombinedSchema(resource, schemas).getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n        if (schemaIds.length === 1) {\n            return this.getOrAddSchemaHandle(schemaIds[0]);\n        }\n        else {\n            var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n            var combinedSchema = {\n                allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n            };\n            return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n        }\n    };\n    return JSONSchemaService;\n}());\n\nfunction toDisplayString(url) {\n    try {\n        var uri = _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse(url);\n        if (uri.scheme === 'file') {\n            return uri.fsPath;\n        }\n    }\n    catch (e) {\n        // ignore\n    }\n    return url;\n}\n//# sourceMappingURL=jsonSchemaService.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js ***!
  \**********************************************************************************************************************/
/*! exports provided: JSONValidation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONValidation\", function() { return JSONValidation; });\n/* harmony import */ var _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/jsonParser.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js\");\n/* harmony import */ var _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../fillers/vscode-nls.js */ \"./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar JSONValidation = /** @class */ (function () {\n    function JSONValidation(jsonSchemaService, promiseConstructor) {\n        this.jsonSchemaService = jsonSchemaService;\n        this.promise = promiseConstructor;\n        this.validationEnabled = true;\n    }\n    JSONValidation.prototype.configure = function (raw) {\n        if (raw) {\n            this.validationEnabled = raw.validate;\n            this.commentSeverity = raw.allowComments ? _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Ignore : _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Error;\n        }\n    };\n    JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings) {\n        var _this = this;\n        if (!this.validationEnabled) {\n            return this.promise.resolve([]);\n        }\n        var diagnostics = [];\n        var added = {};\n        var addProblem = function (problem) {\n            if (problem.severity === _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Ignore) {\n                return;\n            }\n            // remove duplicated messages\n            var signature = problem.location.offset + ' ' + problem.location.length + ' ' + problem.message;\n            if (!added[signature]) {\n                added[signature] = true;\n                var range = {\n                    start: textDocument.positionAt(problem.location.offset),\n                    end: textDocument.positionAt(problem.location.offset + problem.location.length)\n                };\n                var severity = problem.severity === _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Error ? _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticSeverity\"].Error : _vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticSeverity\"].Warning;\n                diagnostics.push({ severity: severity, range: range, message: problem.message });\n            }\n        };\n        return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n            var trailingCommaSeverity = documentSettings ? documentSettings.trailingCommas : _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Error;\n            var commentSeverity = documentSettings ? documentSettings.comments : _this.commentSeverity;\n            if (schema) {\n                if (schema.errors.length && jsonDocument.root) {\n                    var astRoot = jsonDocument.root;\n                    var property = astRoot.type === 'object' ? astRoot.properties[0] : null;\n                    if (property && property.keyNode.value === '$schema') {\n                        var node = property.valueNode || property;\n                        addProblem({ location: { offset: node.offset, length: node.length }, message: schema.errors[0], severity: _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Warning });\n                    }\n                    else {\n                        addProblem({ location: { offset: astRoot.offset, length: 1 }, message: schema.errors[0], severity: _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Warning });\n                    }\n                }\n                else {\n                    var semanticErrors = jsonDocument.validate(schema.schema);\n                    if (semanticErrors) {\n                        semanticErrors.forEach(addProblem);\n                    }\n                }\n                if (schemaAllowsComments(schema.schema)) {\n                    trailingCommaSeverity = commentSeverity = _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Ignore;\n                }\n            }\n            jsonDocument.syntaxErrors.forEach(function (p) {\n                if (p.code === _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ErrorCode\"].TrailingComma) {\n                    p.severity = trailingCommaSeverity;\n                }\n                addProblem(p);\n            });\n            diagnostics.push.apply(diagnostics, jsonDocument.externalDiagnostic);\n            if (commentSeverity !== _parser_jsonParser_js__WEBPACK_IMPORTED_MODULE_0__[\"ProblemSeverity\"].Ignore) {\n                var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n                jsonDocument.comments.forEach(function (c) {\n                    addProblem({ location: c, severity: commentSeverity, message: message_1 });\n                });\n            }\n            return diagnostics;\n        });\n    };\n    return JSONValidation;\n}());\n\nfunction schemaAllowsComments(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (schemaRef.allowComments) {\n            return true;\n        }\n        if (schemaRef.allOf) {\n            return schemaRef.allOf.some(schemaAllowsComments);\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=jsonValidation.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/colors.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/colors.js ***!
  \***********************************************************************************************************/
/*! exports provided: hexDigit, colorFromHex, colorFrom256RGB */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexDigit\", function() { return hexDigit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHex\", function() { return colorFromHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFrom256RGB\", function() { return colorFrom256RGB; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar F = 70;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nfunction colorFromHex(text) {\n    if (text[0] !== '#') {\n        return null;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return null;\n}\nfunction colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\n//# sourceMappingURL=colors.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/colors.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/json.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/json.js ***!
  \*********************************************************************************************************/
/*! exports provided: stringifyObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stringifyObject\", function() { return stringifyObject; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction stringifyObject(obj, indent, stringifyLiteral) {\n    if (obj !== null && typeof obj === 'object') {\n        var newIndent = indent + '\\t';\n        if (Array.isArray(obj)) {\n            if (obj.length === 0) {\n                return '[]';\n            }\n            var result = '[\\n';\n            for (var i = 0; i < obj.length; i++) {\n                result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n                if (i < obj.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + ']';\n            return result;\n        }\n        else {\n            var keys = Object.keys(obj);\n            if (keys.length === 0) {\n                return '{}';\n            }\n            var result = '{\\n';\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                result += newIndent + JSON.stringify(key) + ': ' + stringifyObject(obj[key], newIndent, stringifyLiteral);\n                if (i < keys.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + '}';\n            return result;\n        }\n    }\n    return stringifyLiteral(obj);\n}\n//# sourceMappingURL=json.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/json.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/objects.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/objects.js ***!
  \************************************************************************************************************/
/*! exports provided: equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    var i, key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        var oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        var otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=objects.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/objects.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js ***!
  \************************************************************************************************************/
/*! exports provided: startsWith, endsWith, convertSimple2RegExpPattern, repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertSimple2RegExpPattern\", function() { return convertSimple2RegExpPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeat\", function() { return repeat; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n//# sourceMappingURL=strings.js.map\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-uri/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-uri/index.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction _encode(ch) {\n    return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n}\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction encodeURIComponent2(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, _encode);\n}\nfunction encodeNoop(str) {\n    return str.replace(/[#?]/, _encode);\n}\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = (function () {\n    function URI() {\n        this._scheme = URI._empty;\n        this._authority = URI._empty;\n        this._path = URI._empty;\n        this._query = URI._empty;\n        this._fragment = URI._empty;\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"scheme\", {\n        /**\n         * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n         * The part before the first colon.\n         */\n        get: function () {\n            return this._scheme;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"authority\", {\n        /**\n         * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n         * The part between the first double slashes and the next slash.\n         */\n        get: function () {\n            return this._authority;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"path\", {\n        /**\n         * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n         */\n        get: function () {\n            return this._path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"query\", {\n        /**\n         * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"fragment\", {\n        /**\n         * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n         */\n        get: function () {\n            return this._fragment;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            if (!this._fsPath) {\n                var value;\n                if (this._authority && this._path && this.scheme === 'file') {\n                    // unc path: file://shares/c$/far/boo\n                    value = \"//\" + this._authority + this._path;\n                }\n                else if (URI._driveLetterPath.test(this._path)) {\n                    // windows drive letter: file:///c:/far/boo\n                    value = this._path[1].toLowerCase() + this._path.substr(2);\n                }\n                else {\n                    // other path\n                    value = this._path;\n                }\n                if (isWindows) {\n                    value = value.replace(/\\//g, '\\\\');\n                }\n                this._fsPath = value;\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = '';\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = '';\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = '';\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = '';\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = '';\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        var ret = new URI();\n        ret._scheme = scheme;\n        ret._authority = authority;\n        ret._path = path;\n        ret._query = query;\n        ret._fragment = fragment;\n        URI._validate(ret);\n        return ret;\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var ret = new URI();\n        var data = URI._parseComponents(value);\n        ret._scheme = data.scheme;\n        ret._authority = decodeURIComponent(data.authority);\n        ret._path = decodeURIComponent(data.path);\n        ret._query = decodeURIComponent(data.query);\n        ret._fragment = decodeURIComponent(data.fragment);\n        URI._validate(ret);\n        return ret;\n    };\n    URI.file = function (path) {\n        var ret = new URI();\n        ret._scheme = 'file';\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slaches are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, URI._slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === URI._slash && path[0] === path[1]) {\n            var idx = path.indexOf(URI._slash, 2);\n            if (idx === -1) {\n                ret._authority = path.substring(2);\n            }\n            else {\n                ret._authority = path.substring(2, idx);\n                ret._path = path.substring(idx);\n            }\n        }\n        else {\n            ret._path = path;\n        }\n        // Ensure that path starts with a slash\n        // or that it is at least a slash\n        if (ret._path[0] !== URI._slash) {\n            ret._path = URI._slash + ret._path;\n        }\n        URI._validate(ret);\n        return ret;\n    };\n    URI._parseComponents = function (value) {\n        var ret = {\n            scheme: URI._empty,\n            authority: URI._empty,\n            path: URI._empty,\n            query: URI._empty,\n            fragment: URI._empty,\n        };\n        var match = URI._regexp.exec(value);\n        if (match) {\n            ret.scheme = match[2] || ret.scheme;\n            ret.authority = match[4] || ret.authority;\n            ret.path = match[5] || ret.path;\n            ret.query = match[7] || ret.query;\n            ret.fragment = match[9] || ret.fragment;\n        }\n        return ret;\n    };\n    URI.from = function (components) {\n        return new URI().with(components);\n    };\n    URI._validate = function (ret) {\n        // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n        // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n        if (ret.scheme && !URI._schemePattern.test(ret.scheme)) {\n            throw new Error('[UriError]: Scheme contains illegal characters.');\n        }\n        // path, http://tools.ietf.org/html/rfc3986#section-3.3\n        // If a URI contains an authority component, then the path component\n        // must either be empty or begin with a slash (\"/\") character.  If a URI\n        // does not contain an authority component, then the path cannot begin\n        // with two slash characters (\"//\").\n        if (ret.path) {\n            if (ret.authority) {\n                if (!URI._singleSlashStart.test(ret.path)) {\n                    throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n                }\n            }\n            else {\n                if (URI._doubleSlashStart.test(ret.path)) {\n                    throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n                }\n            }\n        }\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = URI._asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return URI._asFormatted(this, true);\n        }\n    };\n    URI._asFormatted = function (uri, skipEncoding) {\n        var encoder = !skipEncoding\n            ? encodeURIComponent2\n            : encodeNoop;\n        var parts = [];\n        var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n        if (scheme) {\n            parts.push(scheme, ':');\n        }\n        if (authority || scheme === 'file') {\n            parts.push('//');\n        }\n        if (authority) {\n            authority = authority.toLowerCase();\n            var idx = authority.indexOf(':');\n            if (idx === -1) {\n                parts.push(encoder(authority));\n            }\n            else {\n                parts.push(encoder(authority.substr(0, idx)), authority.substr(idx));\n            }\n        }\n        if (path) {\n            // lower-case windows drive letters in /C:/fff or C:/fff\n            var m = URI._upperCaseDrive.exec(path);\n            if (m) {\n                if (m[1]) {\n                    path = '/' + m[2].toLowerCase() + path.substr(3); // \"/c:\".length === 3\n                }\n                else {\n                    path = m[2].toLowerCase() + path.substr(2); // // \"c:\".length === 2\n                }\n            }\n            // encode every segement but not slashes\n            // make sure that # and ? are always encoded\n            // when occurring in paths - otherwise the result\n            // cannot be parsed back again\n            var lastIdx = 0;\n            while (true) {\n                var idx = path.indexOf(URI._slash, lastIdx);\n                if (idx === -1) {\n                    parts.push(encoder(path.substring(lastIdx)));\n                    break;\n                }\n                parts.push(encoder(path.substring(lastIdx, idx)), URI._slash);\n                lastIdx = idx + 1;\n            }\n            ;\n        }\n        if (query) {\n            parts.push('?', encoder(query));\n        }\n        if (fragment) {\n            parts.push('#', encoder(fragment));\n        }\n        return parts.join(URI._empty);\n    };\n    URI.prototype.toJSON = function () {\n        var res = {\n            fsPath: this.fsPath,\n            external: this.toString(),\n            $mid: 1\n        };\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    URI.revive = function (data) {\n        var result = new URI();\n        result._scheme = data.scheme || URI._empty;\n        result._authority = data.authority || URI._empty;\n        result._path = data.path || URI._empty;\n        result._query = data.query || URI._empty;\n        result._fragment = data.fragment || URI._empty;\n        result._fsPath = data.fsPath;\n        result._formatted = data.external;\n        URI._validate(result);\n        return result;\n    };\n    return URI;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (URI);\nURI._empty = '';\nURI._slash = '/';\nURI._regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nURI._driveLetterPath = /^\\/[a-zA-z]:/;\nURI._upperCaseDrive = /^(\\/)?([A-Z]:)/;\nURI._schemePattern = /^\\w[\\w\\d+.-]*$/;\nURI._singleSlashStart = /^\\//;\nURI._doubleSlashStart = /^\\/\\//;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-uri/index.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js ***!
  \*******************************************************************************/
/*! exports provided: loadMessageBundle, config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadMessageBundle\", function() { return loadMessageBundle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction format(message, args) {\n    var result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nfunction localize(key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nfunction loadMessageBundle(file) {\n    return localize;\n}\nfunction config(opt) {\n    return loadMessageBundle;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/fillers/vscode-nls.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/json/jsonWorker.js":
/*!***********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/jsonWorker.js ***!
  \***********************************************************************/
/*! exports provided: JSONWorker, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONWorker\", function() { return JSONWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _deps_vscode_json_languageservice_jsonLanguageService_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_deps/vscode-json-languageservice/jsonLanguageService.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/jsonLanguageService.js\");\n/* harmony import */ var _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_deps/vscode-languageserver-types/main.js */ \"./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Promise = monaco.Promise;\n\n\nvar PromiseAdapter = /** @class */ (function () {\n    function PromiseAdapter(executor) {\n        this.wrapped = new monaco.Promise(executor);\n    }\n    PromiseAdapter.prototype.then = function (onfulfilled, onrejected) {\n        var thenable = this.wrapped;\n        return thenable.then(onfulfilled, onrejected);\n    };\n    PromiseAdapter.prototype.getWrapped = function () {\n        return this.wrapped;\n    };\n    PromiseAdapter.prototype.cancel = function () {\n        this.wrapped.cancel();\n    };\n    PromiseAdapter.resolve = function (v) {\n        return monaco.Promise.as(v);\n    };\n    PromiseAdapter.reject = function (v) {\n        return monaco.Promise.wrapError(v);\n    };\n    PromiseAdapter.all = function (values) {\n        return monaco.Promise.join(values);\n    };\n    return PromiseAdapter;\n}());\nvar JSONWorker = /** @class */ (function () {\n    function JSONWorker(ctx, createData) {\n        this._ctx = ctx;\n        this._languageSettings = createData.languageSettings;\n        this._languageId = createData.languageId;\n        this._languageService = _deps_vscode_json_languageservice_jsonLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"getLanguageService\"]({ promiseConstructor: PromiseAdapter });\n        this._languageService.configure(this._languageSettings);\n    }\n    JSONWorker.prototype.doValidation = function (uri) {\n        var document = this._getTextDocument(uri);\n        if (document) {\n            var jsonDocument = this._languageService.parseJSONDocument(document);\n            return this._languageService.doValidation(document, jsonDocument);\n        }\n        return Promise.as([]);\n    };\n    JSONWorker.prototype.doComplete = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var jsonDocument = this._languageService.parseJSONDocument(document);\n        return this._languageService.doComplete(document, position, jsonDocument);\n    };\n    JSONWorker.prototype.doResolve = function (item) {\n        return this._languageService.doResolve(item);\n    };\n    JSONWorker.prototype.doHover = function (uri, position) {\n        var document = this._getTextDocument(uri);\n        var jsonDocument = this._languageService.parseJSONDocument(document);\n        return this._languageService.doHover(document, position, jsonDocument);\n    };\n    JSONWorker.prototype.format = function (uri, range, options) {\n        var document = this._getTextDocument(uri);\n        var textEdits = this._languageService.format(document, range, options);\n        return Promise.as(textEdits);\n    };\n    JSONWorker.prototype.resetSchema = function (uri) {\n        return Promise.as(this._languageService.resetSchema(uri));\n    };\n    JSONWorker.prototype.findDocumentSymbols = function (uri) {\n        var document = this._getTextDocument(uri);\n        var jsonDocument = this._languageService.parseJSONDocument(document);\n        var symbols = this._languageService.findDocumentSymbols(document, jsonDocument);\n        return Promise.as(symbols);\n    };\n    JSONWorker.prototype.findDocumentColors = function (uri) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseJSONDocument(document);\n        var colorSymbols = this._languageService.findDocumentColors(document, stylesheet);\n        return Promise.as(colorSymbols);\n    };\n    JSONWorker.prototype.getColorPresentations = function (uri, color, range) {\n        var document = this._getTextDocument(uri);\n        var stylesheet = this._languageService.parseJSONDocument(document);\n        var colorPresentations = this._languageService.getColorPresentations(document, stylesheet, color, range);\n        return Promise.as(colorPresentations);\n    };\n    JSONWorker.prototype._getTextDocument = function (uri) {\n        var models = this._ctx.getMirrorModels();\n        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n            var model = models_1[_i];\n            if (model.uri.toString() === uri) {\n                return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextDocument\"].create(uri, this._languageId, model.version, model.getValue());\n            }\n        }\n        return null;\n    };\n    return JSONWorker;\n}());\n\nfunction create(ctx, createData) {\n    return new JSONWorker(ctx, createData);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/json/jsonWorker.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-es6-ts.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-es6-ts.js ***!
  \*********************************************************************************/
/*! exports provided: contents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contents\", function() { return contents; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar contents = \"/*! *****************************************************************************\\nCopyright (c) Microsoft Corporation. All rights reserved. \\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\nthis file except in compliance with the License. You may obtain a copy of the\\nLicense at http://www.apache.org/licenses/LICENSE-2.0  \\n \\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \\nMERCHANTABLITY OR NON-INFRINGEMENT. \\n \\nSee the Apache Version 2.0 License for specific language governing permissions\\nand limitations under the License.\\n***************************************************************************** */\\n\\n\\n\\n/// <reference no-default-lib=\\\"true\\\"/>\\n\\n\\n/////////////////////////////\\n/// ECMAScript APIs\\n/////////////////////////////\\n\\ndeclare const NaN: number;\\ndeclare const Infinity: number;\\n\\n/**\\n  * Evaluates JavaScript code and executes it.\\n  * @param x A String value that contains valid JavaScript code.\\n  */\\ndeclare function eval(x: string): any;\\n\\n/**\\n  * Converts A string to an integer.\\n  * @param s A string to convert into a number.\\n  * @param radix A value between 2 and 36 that specifies the base of the number in numString.\\n  * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\\n  * All other strings are considered decimal.\\n  */\\ndeclare function parseInt(s: string, radix?: number): number;\\n\\n/**\\n  * Converts a string to a floating-point number.\\n  * @param string A string that contains a floating-point number.\\n  */\\ndeclare function parseFloat(string: string): number;\\n\\n/**\\n  * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).\\n  * @param number A numeric value.\\n  */\\ndeclare function isNaN(number: number): boolean;\\n\\n/**\\n  * Determines whether a supplied number is finite.\\n  * @param number Any numeric value.\\n  */\\ndeclare function isFinite(number: number): boolean;\\n\\n/**\\n  * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\\n  * @param encodedURI A value representing an encoded URI.\\n  */\\ndeclare function decodeURI(encodedURI: string): string;\\n\\n/**\\n  * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\\n  * @param encodedURIComponent A value representing an encoded URI component.\\n  */\\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\\n\\n/**\\n  * Encodes a text string as a valid Uniform Resource Identifier (URI)\\n  * @param uri A value representing an encoded URI.\\n  */\\ndeclare function encodeURI(uri: string): string;\\n\\n/**\\n  * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\\n  * @param uriComponent A value representing an encoded URI component.\\n  */\\ndeclare function encodeURIComponent(uriComponent: string): string;\\n\\n/**\\n  * Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.\\n  * @param string A string value\\n  */\\ndeclare function escape(string: string): string;\\n\\n/**\\n  * Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.\\n  * @param string A string value\\n  */\\ndeclare function unescape(string: string): string;\\n\\ninterface PropertyDescriptor {\\n    configurable?: boolean;\\n    enumerable?: boolean;\\n    value?: any;\\n    writable?: boolean;\\n    get?(): any;\\n    set?(v: any): void;\\n}\\n\\ninterface PropertyDescriptorMap {\\n    [s: string]: PropertyDescriptor;\\n}\\n\\ninterface Object {\\n    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */\\n    constructor: Function;\\n\\n    /** Returns a string representation of an object. */\\n    toString(): string;\\n\\n    /** Returns a date converted to a string using the current locale. */\\n    toLocaleString(): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): Object;\\n\\n    /**\\n      * Determines whether an object has a property with the specified name.\\n      * @param v A property name.\\n      */\\n    hasOwnProperty(v: string): boolean;\\n\\n    /**\\n      * Determines whether an object exists in another object's prototype chain.\\n      * @param v Another object whose prototype chain is to be checked.\\n      */\\n    isPrototypeOf(v: Object): boolean;\\n\\n    /**\\n      * Determines whether a specified property is enumerable.\\n      * @param v A property name.\\n      */\\n    propertyIsEnumerable(v: string): boolean;\\n}\\n\\ninterface ObjectConstructor {\\n    new(value?: any): Object;\\n    (): any;\\n    (value: any): any;\\n\\n    /** A reference to the prototype for a class of objects. */\\n    readonly prototype: Object;\\n\\n    /**\\n      * Returns the prototype of an object.\\n      * @param o The object that references the prototype.\\n      */\\n    getPrototypeOf(o: any): any;\\n\\n    /**\\n      * Gets the own property descriptor of the specified object.\\n      * An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.\\n      * @param o Object that contains the property.\\n      * @param p Name of the property.\\n    */\\n    getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor | undefined;\\n\\n    /**\\n      * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\\n      * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\\n      * @param o Object that contains the own properties.\\n      */\\n    getOwnPropertyNames(o: any): string[];\\n\\n    /**\\n      * Creates an object that has the specified prototype or that has null prototype.\\n      * @param o Object to use as a prototype. May be null.\\n      */\\n    create(o: object | null): any;\\n\\n    /**\\n      * Creates an object that has the specified prototype, and that optionally contains specified properties.\\n      * @param o Object to use as a prototype. May be null\\n      * @param properties JavaScript object that contains one or more property descriptors.\\n      */\\n    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;\\n\\n    /**\\n      * Adds a property to an object, or modifies attributes of an existing property.\\n      * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\\n      * @param p The property name.\\n      * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\\n      */\\n    defineProperty(o: any, p: string, attributes: PropertyDescriptor & ThisType<any>): any;\\n\\n    /**\\n      * Adds one or more properties to an object, and/or modifies attributes of existing properties.\\n      * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\\n      * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\\n      */\\n    defineProperties(o: any, properties: PropertyDescriptorMap & ThisType<any>): any;\\n\\n    /**\\n      * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    seal<T>(o: T): T;\\n\\n    /**\\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    freeze<T>(a: T[]): ReadonlyArray<T>;\\n\\n    /**\\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    freeze<T extends Function>(f: T): T;\\n\\n    /**\\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    freeze<T>(o: T): Readonly<T>;\\n\\n    /**\\n      * Prevents the addition of new properties to an object.\\n      * @param o Object to make non-extensible.\\n      */\\n    preventExtensions<T>(o: T): T;\\n\\n    /**\\n      * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\\n      * @param o Object to test.\\n      */\\n    isSealed(o: any): boolean;\\n\\n    /**\\n      * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\\n      * @param o Object to test.\\n      */\\n    isFrozen(o: any): boolean;\\n\\n    /**\\n      * Returns a value that indicates whether new properties can be added to an object.\\n      * @param o Object to test.\\n      */\\n    isExtensible(o: any): boolean;\\n\\n    /**\\n      * Returns the names of the enumerable properties and methods of an object.\\n      * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\\n      */\\n    keys(o: {}): string[];\\n}\\n\\n/**\\n  * Provides functionality common to all JavaScript objects.\\n  */\\ndeclare const Object: ObjectConstructor;\\n\\n/**\\n  * Creates a new function.\\n  */\\ninterface Function {\\n    /**\\n      * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\\n      * @param thisArg The object to be used as the this object.\\n      * @param argArray A set of arguments to be passed to the function.\\n      */\\n    apply(this: Function, thisArg: any, argArray?: any): any;\\n\\n    /**\\n      * Calls a method of an object, substituting another object for the current object.\\n      * @param thisArg The object to be used as the current object.\\n      * @param argArray A list of arguments to be passed to the method.\\n      */\\n    call(this: Function, thisArg: any, ...argArray: any[]): any;\\n\\n    /**\\n      * For a given function, creates a bound function that has the same body as the original function.\\n      * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\\n      * @param thisArg An object to which the this keyword can refer inside the new function.\\n      * @param argArray A list of arguments to be passed to the new function.\\n      */\\n    bind(this: Function, thisArg: any, ...argArray: any[]): any;\\n\\n    /** Returns a string representation of a function. */\\n    toString(): string;\\n\\n    prototype: any;\\n    readonly length: number;\\n\\n    // Non-standard extensions\\n    arguments: any;\\n    caller: Function;\\n}\\n\\ninterface FunctionConstructor {\\n    /**\\n      * Creates a new function.\\n      * @param args A list of arguments the function accepts.\\n      */\\n    new(...args: string[]): Function;\\n    (...args: string[]): Function;\\n    readonly prototype: Function;\\n}\\n\\ndeclare const Function: FunctionConstructor;\\n\\ninterface IArguments {\\n    [index: number]: any;\\n    length: number;\\n    callee: Function;\\n}\\n\\ninterface String {\\n    /** Returns a string representation of a string. */\\n    toString(): string;\\n\\n    /**\\n      * Returns the character at the specified index.\\n      * @param pos The zero-based index of the desired character.\\n      */\\n    charAt(pos: number): string;\\n\\n    /**\\n      * Returns the Unicode value of the character at the specified location.\\n      * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\\n      */\\n    charCodeAt(index: number): number;\\n\\n    /**\\n      * Returns a string that contains the concatenation of two or more strings.\\n      * @param strings The strings to append to the end of the string.\\n      */\\n    concat(...strings: string[]): string;\\n\\n    /**\\n      * Returns the position of the first occurrence of a substring.\\n      * @param searchString The substring to search for in the string\\n      * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\\n      */\\n    indexOf(searchString: string, position?: number): number;\\n\\n    /**\\n      * Returns the last occurrence of a substring in the string.\\n      * @param searchString The substring to search for.\\n      * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\\n      */\\n    lastIndexOf(searchString: string, position?: number): number;\\n\\n    /**\\n      * Determines whether two strings are equivalent in the current locale.\\n      * @param that String to compare to target string\\n      */\\n    localeCompare(that: string): number;\\n\\n    /**\\n      * Matches a string with a regular expression, and returns an array containing the results of that search.\\n      * @param regexp A variable name or string literal containing the regular expression pattern and flags.\\n      */\\n    match(regexp: string | RegExp): RegExpMatchArray | null;\\n\\n    /**\\n      * Replaces text in a string, using a regular expression or search string.\\n      * @param searchValue A string to search for.\\n      * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n      */\\n    replace(searchValue: string | RegExp, replaceValue: string): string;\\n\\n    /**\\n      * Replaces text in a string, using a regular expression or search string.\\n      * @param searchValue A string to search for.\\n      * @param replacer A function that returns the replacement text.\\n      */\\n    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\\n\\n    /**\\n      * Finds the first substring match in a regular expression search.\\n      * @param regexp The regular expression pattern and applicable flags.\\n      */\\n    search(regexp: string | RegExp): number;\\n\\n    /**\\n      * Returns a section of a string.\\n      * @param start The index to the beginning of the specified portion of stringObj.\\n      * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\n      * If this value is not specified, the substring continues to the end of stringObj.\\n      */\\n    slice(start?: number, end?: number): string;\\n\\n    /**\\n      * Split a string into substrings using the specified separator and return them as an array.\\n      * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n      * @param limit A value used to limit the number of elements returned in the array.\\n      */\\n    split(separator: string | RegExp, limit?: number): string[];\\n\\n    /**\\n      * Returns the substring at the specified location within a String object.\\n      * @param start The zero-based index number indicating the beginning of the substring.\\n      * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\n      * If end is omitted, the characters from start through the end of the original string are returned.\\n      */\\n    substring(start: number, end?: number): string;\\n\\n    /** Converts all the alphabetic characters in a string to lowercase. */\\n    toLowerCase(): string;\\n\\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. */\\n    toLocaleLowerCase(): string;\\n\\n    /** Converts all the alphabetic characters in a string to uppercase. */\\n    toUpperCase(): string;\\n\\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. */\\n    toLocaleUpperCase(): string;\\n\\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\\n    trim(): string;\\n\\n    /** Returns the length of a String object. */\\n    readonly length: number;\\n\\n    // IE extensions\\n    /**\\n      * Gets a substring beginning at the specified location and having the specified length.\\n      * @param from The starting position of the desired substring. The index of the first character in the string is zero.\\n      * @param length The number of characters to include in the returned substring.\\n      */\\n    substr(from: number, length?: number): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): string;\\n\\n    readonly [index: number]: string;\\n}\\n\\ninterface StringConstructor {\\n    new(value?: any): String;\\n    (value?: any): string;\\n    readonly prototype: String;\\n    fromCharCode(...codes: number[]): string;\\n}\\n\\n/**\\n  * Allows manipulation and formatting of text strings and determination and location of substrings within strings.\\n  */\\ndeclare const String: StringConstructor;\\n\\ninterface Boolean {\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): boolean;\\n}\\n\\ninterface BooleanConstructor {\\n    new(value?: any): Boolean;\\n    (value?: any): boolean;\\n    readonly prototype: Boolean;\\n}\\n\\ndeclare const Boolean: BooleanConstructor;\\n\\ninterface Number {\\n    /**\\n      * Returns a string representation of an object.\\n      * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\\n      */\\n    toString(radix?: number): string;\\n\\n    /**\\n      * Returns a string representing a number in fixed-point notation.\\n      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\\n      */\\n    toFixed(fractionDigits?: number): string;\\n\\n    /**\\n      * Returns a string containing a number represented in exponential notation.\\n      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\\n      */\\n    toExponential(fractionDigits?: number): string;\\n\\n    /**\\n      * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n      * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\\n      */\\n    toPrecision(precision?: number): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): number;\\n}\\n\\ninterface NumberConstructor {\\n    new(value?: any): Number;\\n    (value?: any): number;\\n    readonly prototype: Number;\\n\\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\\n    readonly MAX_VALUE: number;\\n\\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\\n    readonly MIN_VALUE: number;\\n\\n    /**\\n      * A value that is not a number.\\n      * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\\n      */\\n    readonly NaN: number;\\n\\n    /**\\n      * A value that is less than the largest negative number that can be represented in JavaScript.\\n      * JavaScript displays NEGATIVE_INFINITY values as -infinity.\\n      */\\n    readonly NEGATIVE_INFINITY: number;\\n\\n    /**\\n      * A value greater than the largest number that can be represented in JavaScript.\\n      * JavaScript displays POSITIVE_INFINITY values as infinity.\\n      */\\n    readonly POSITIVE_INFINITY: number;\\n}\\n\\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\\ndeclare const Number: NumberConstructor;\\n\\ninterface TemplateStringsArray extends ReadonlyArray<string> {\\n    readonly raw: ReadonlyArray<string>;\\n}\\n\\ninterface Math {\\n    /** The mathematical constant e. This is Euler's number, the base of natural logarithms. */\\n    readonly E: number;\\n    /** The natural logarithm of 10. */\\n    readonly LN10: number;\\n    /** The natural logarithm of 2. */\\n    readonly LN2: number;\\n    /** The base-2 logarithm of e. */\\n    readonly LOG2E: number;\\n    /** The base-10 logarithm of e. */\\n    readonly LOG10E: number;\\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\\n    readonly PI: number;\\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\\n    readonly SQRT1_2: number;\\n    /** The square root of 2. */\\n    readonly SQRT2: number;\\n    /**\\n      * Returns the absolute value of a number (the value without regard to whether it is positive or negative).\\n      * For example, the absolute value of -5 is the same as the absolute value of 5.\\n      * @param x A numeric expression for which the absolute value is needed.\\n      */\\n    abs(x: number): number;\\n    /**\\n      * Returns the arc cosine (or inverse cosine) of a number.\\n      * @param x A numeric expression.\\n      */\\n    acos(x: number): number;\\n    /**\\n      * Returns the arcsine of a number.\\n      * @param x A numeric expression.\\n      */\\n    asin(x: number): number;\\n    /**\\n      * Returns the arctangent of a number.\\n      * @param x A numeric expression for which the arctangent is needed.\\n      */\\n    atan(x: number): number;\\n    /**\\n      * Returns the angle (in radians) from the X axis to a point.\\n      * @param y A numeric expression representing the cartesian y-coordinate.\\n      * @param x A numeric expression representing the cartesian x-coordinate.\\n      */\\n    atan2(y: number, x: number): number;\\n    /**\\n      * Returns the smallest integer greater than or equal to its numeric argument.\\n      * @param x A numeric expression.\\n      */\\n    ceil(x: number): number;\\n    /**\\n      * Returns the cosine of a number.\\n      * @param x A numeric expression that contains an angle measured in radians.\\n      */\\n    cos(x: number): number;\\n    /**\\n      * Returns e (the base of natural logarithms) raised to a power.\\n      * @param x A numeric expression representing the power of e.\\n      */\\n    exp(x: number): number;\\n    /**\\n      * Returns the greatest integer less than or equal to its numeric argument.\\n      * @param x A numeric expression.\\n      */\\n    floor(x: number): number;\\n    /**\\n      * Returns the natural logarithm (base e) of a number.\\n      * @param x A numeric expression.\\n      */\\n    log(x: number): number;\\n    /**\\n      * Returns the larger of a set of supplied numeric expressions.\\n      * @param values Numeric expressions to be evaluated.\\n      */\\n    max(...values: number[]): number;\\n    /**\\n      * Returns the smaller of a set of supplied numeric expressions.\\n      * @param values Numeric expressions to be evaluated.\\n      */\\n    min(...values: number[]): number;\\n    /**\\n      * Returns the value of a base expression taken to a specified power.\\n      * @param x The base value of the expression.\\n      * @param y The exponent value of the expression.\\n      */\\n    pow(x: number, y: number): number;\\n    /** Returns a pseudorandom number between 0 and 1. */\\n    random(): number;\\n    /**\\n      * Returns a supplied numeric expression rounded to the nearest number.\\n      * @param x The value to be rounded to the nearest number.\\n      */\\n    round(x: number): number;\\n    /**\\n      * Returns the sine of a number.\\n      * @param x A numeric expression that contains an angle measured in radians.\\n      */\\n    sin(x: number): number;\\n    /**\\n      * Returns the square root of a number.\\n      * @param x A numeric expression.\\n      */\\n    sqrt(x: number): number;\\n    /**\\n      * Returns the tangent of a number.\\n      * @param x A numeric expression that contains an angle measured in radians.\\n      */\\n    tan(x: number): number;\\n}\\n/** An intrinsic object that provides basic mathematics functionality and constants. */\\ndeclare const Math: Math;\\n\\n/** Enables basic storage and retrieval of dates and times. */\\ninterface Date {\\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\\n    toString(): string;\\n    /** Returns a date as a string value. */\\n    toDateString(): string;\\n    /** Returns a time as a string value. */\\n    toTimeString(): string;\\n    /** Returns a value as a string value appropriate to the host environment's current locale. */\\n    toLocaleString(): string;\\n    /** Returns a date as a string value appropriate to the host environment's current locale. */\\n    toLocaleDateString(): string;\\n    /** Returns a time as a string value appropriate to the host environment's current locale. */\\n    toLocaleTimeString(): string;\\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\\n    valueOf(): number;\\n    /** Gets the time value in milliseconds. */\\n    getTime(): number;\\n    /** Gets the year, using local time. */\\n    getFullYear(): number;\\n    /** Gets the year using Universal Coordinated Time (UTC). */\\n    getUTCFullYear(): number;\\n    /** Gets the month, using local time. */\\n    getMonth(): number;\\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCMonth(): number;\\n    /** Gets the day-of-the-month, using local time. */\\n    getDate(): number;\\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\\n    getUTCDate(): number;\\n    /** Gets the day of the week, using local time. */\\n    getDay(): number;\\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\\n    getUTCDay(): number;\\n    /** Gets the hours in a date, using local time. */\\n    getHours(): number;\\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\\n    getUTCHours(): number;\\n    /** Gets the minutes of a Date object, using local time. */\\n    getMinutes(): number;\\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCMinutes(): number;\\n    /** Gets the seconds of a Date object, using local time. */\\n    getSeconds(): number;\\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCSeconds(): number;\\n    /** Gets the milliseconds of a Date, using local time. */\\n    getMilliseconds(): number;\\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCMilliseconds(): number;\\n    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */\\n    getTimezoneOffset(): number;\\n    /**\\n      * Sets the date and time value in the Date object.\\n      * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.\\n      */\\n    setTime(time: number): number;\\n    /**\\n      * Sets the milliseconds value in the Date object using local time.\\n      * @param ms A numeric value equal to the millisecond value.\\n      */\\n    setMilliseconds(ms: number): number;\\n    /**\\n      * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\\n      * @param ms A numeric value equal to the millisecond value.\\n      */\\n    setUTCMilliseconds(ms: number): number;\\n\\n    /**\\n      * Sets the seconds value in the Date object using local time.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setSeconds(sec: number, ms?: number): number;\\n    /**\\n      * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setUTCSeconds(sec: number, ms?: number): number;\\n    /**\\n      * Sets the minutes value in the Date object using local time.\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setMinutes(min: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setUTCMinutes(min: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the hour value in the Date object using local time.\\n      * @param hours A numeric value equal to the hours value.\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setHours(hours: number, min?: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\\n      * @param hours A numeric value equal to the hours value.\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the numeric day-of-the-month value of the Date object using local time.\\n      * @param date A numeric value equal to the day of the month.\\n      */\\n    setDate(date: number): number;\\n    /**\\n      * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\\n      * @param date A numeric value equal to the day of the month.\\n      */\\n    setUTCDate(date: number): number;\\n    /**\\n      * Sets the month value in the Date object using local time.\\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\\n      * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\\n      */\\n    setMonth(month: number, date?: number): number;\\n    /**\\n      * Sets the month value in the Date object using Universal Coordinated Time (UTC).\\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\\n      * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\\n      */\\n    setUTCMonth(month: number, date?: number): number;\\n    /**\\n      * Sets the year of the Date object using local time.\\n      * @param year A numeric value for the year.\\n      * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\\n      * @param date A numeric value equal for the day of the month.\\n      */\\n    setFullYear(year: number, month?: number, date?: number): number;\\n    /**\\n      * Sets the year value in the Date object using Universal Coordinated Time (UTC).\\n      * @param year A numeric value equal to the year.\\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\\n      * @param date A numeric value equal to the day of the month.\\n      */\\n    setUTCFullYear(year: number, month?: number, date?: number): number;\\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\\n    toUTCString(): string;\\n    /** Returns a date as a string value in ISO format. */\\n    toISOString(): string;\\n    /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */\\n    toJSON(key?: any): string;\\n}\\n\\ninterface DateConstructor {\\n    new(): Date;\\n    new(value: number): Date;\\n    new(value: string): Date;\\n    new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\\n    (): string;\\n    readonly prototype: Date;\\n    /**\\n      * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\\n      * @param s A date string\\n      */\\n    parse(s: string): number;\\n    /**\\n      * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\\n      * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\\n      * @param month The month as an number between 0 and 11 (January to December).\\n      * @param date The date as an number between 1 and 31.\\n      * @param hours Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.\\n      * @param minutes Must be supplied if seconds is supplied. An number from 0 to 59 that specifies the minutes.\\n      * @param seconds Must be supplied if milliseconds is supplied. An number from 0 to 59 that specifies the seconds.\\n      * @param ms An number from 0 to 999 that specifies the milliseconds.\\n      */\\n    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\\n    now(): number;\\n}\\n\\ndeclare const Date: DateConstructor;\\n\\ninterface RegExpMatchArray extends Array<string> {\\n    index?: number;\\n    input?: string;\\n}\\n\\ninterface RegExpExecArray extends Array<string> {\\n    index: number;\\n    input: string;\\n}\\n\\ninterface RegExp {\\n    /**\\n      * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\\n      * @param string The String object or string literal on which to perform the search.\\n      */\\n    exec(string: string): RegExpExecArray | null;\\n\\n    /**\\n      * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\\n      * @param string String on which to perform the search.\\n      */\\n    test(string: string): boolean;\\n\\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */\\n    readonly source: string;\\n\\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\\n    readonly global: boolean;\\n\\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\\n    readonly ignoreCase: boolean;\\n\\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\\n    readonly multiline: boolean;\\n\\n    lastIndex: number;\\n\\n    // Non-standard extensions\\n    compile(): this;\\n}\\n\\ninterface RegExpConstructor {\\n    new(pattern: RegExp | string): RegExp;\\n    new(pattern: string, flags?: string): RegExp;\\n    (pattern: RegExp | string): RegExp;\\n    (pattern: string, flags?: string): RegExp;\\n    readonly prototype: RegExp;\\n\\n    // Non-standard extensions\\n    $1: string;\\n    $2: string;\\n    $3: string;\\n    $4: string;\\n    $5: string;\\n    $6: string;\\n    $7: string;\\n    $8: string;\\n    $9: string;\\n    lastMatch: string;\\n}\\n\\ndeclare const RegExp: RegExpConstructor;\\n\\ninterface Error {\\n    name: string;\\n    message: string;\\n    stack?: string;\\n}\\n\\ninterface ErrorConstructor {\\n    new(message?: string): Error;\\n    (message?: string): Error;\\n    readonly prototype: Error;\\n}\\n\\ndeclare const Error: ErrorConstructor;\\n\\ninterface EvalError extends Error {\\n}\\n\\ninterface EvalErrorConstructor {\\n    new(message?: string): EvalError;\\n    (message?: string): EvalError;\\n    readonly prototype: EvalError;\\n}\\n\\ndeclare const EvalError: EvalErrorConstructor;\\n\\ninterface RangeError extends Error {\\n}\\n\\ninterface RangeErrorConstructor {\\n    new(message?: string): RangeError;\\n    (message?: string): RangeError;\\n    readonly prototype: RangeError;\\n}\\n\\ndeclare const RangeError: RangeErrorConstructor;\\n\\ninterface ReferenceError extends Error {\\n}\\n\\ninterface ReferenceErrorConstructor {\\n    new(message?: string): ReferenceError;\\n    (message?: string): ReferenceError;\\n    readonly prototype: ReferenceError;\\n}\\n\\ndeclare const ReferenceError: ReferenceErrorConstructor;\\n\\ninterface SyntaxError extends Error {\\n}\\n\\ninterface SyntaxErrorConstructor {\\n    new(message?: string): SyntaxError;\\n    (message?: string): SyntaxError;\\n    readonly prototype: SyntaxError;\\n}\\n\\ndeclare const SyntaxError: SyntaxErrorConstructor;\\n\\ninterface TypeError extends Error {\\n}\\n\\ninterface TypeErrorConstructor {\\n    new(message?: string): TypeError;\\n    (message?: string): TypeError;\\n    readonly prototype: TypeError;\\n}\\n\\ndeclare const TypeError: TypeErrorConstructor;\\n\\ninterface URIError extends Error {\\n}\\n\\ninterface URIErrorConstructor {\\n    new(message?: string): URIError;\\n    (message?: string): URIError;\\n    readonly prototype: URIError;\\n}\\n\\ndeclare const URIError: URIErrorConstructor;\\n\\ninterface JSON {\\n    /**\\n      * Converts a JavaScript Object Notation (JSON) string into an object.\\n      * @param text A valid JSON string.\\n      * @param reviver A function that transforms the results. This function is called for each member of the object.\\n      * If a member contains nested objects, the nested objects are transformed before the parent object is.\\n      */\\n    parse(text: string, reviver?: (key: any, value: any) => any): any;\\n    /**\\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\\n      * @param value A JavaScript value, usually an object or array, to be converted.\\n      * @param replacer A function that transforms the results.\\n      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\\n      */\\n    stringify(value: any, replacer?: (key: string, value: any) => any, space?: string | number): string;\\n    /**\\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\\n      * @param value A JavaScript value, usually an object or array, to be converted.\\n      * @param replacer An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.\\n      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\\n      */\\n    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;\\n}\\n\\n/**\\n  * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\\n  */\\ndeclare const JSON: JSON;\\n\\n\\n/////////////////////////////\\n/// ECMAScript Array API (specially handled by compiler)\\n/////////////////////////////\\n\\ninterface ReadonlyArray<T> {\\n    /**\\n      * Gets the length of the array. This is a number one higher than the highest element defined in an array.\\n      */\\n    readonly length: number;\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n    /**\\n      * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\\n      */\\n    toLocaleString(): string;\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: ConcatArray<T>[]): T[];\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: (T | ConcatArray<T>)[]): T[];\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): T[];\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\\n      */\\n    indexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Returns the index of the last occurrence of a specified value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\\n      */\\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => void, thisArg?: any): void;\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map<U>(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => U, thisArg?: any): U[];\\n    /**\\n     * Returns the elements of an array that meet the condition specified in a callback function.\\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n     */\\n    filter<S extends T>(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => value is S, thisArg?: any): S[];\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => any, thisArg?: any): T[];\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T): T;\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => U, initialValue: U): U;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T): T;\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => U, initialValue: U): U;\\n\\n    readonly [n: number]: T;\\n}\\n\\ninterface ConcatArray<T> {\\n    readonly length: number;\\n    readonly [n: number]: T;\\n    join(separator?: string): string;\\n    slice(start?: number, end?: number): T[];\\n}\\n\\ninterface Array<T> {\\n    /**\\n      * Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\\n      */\\n    length: number;\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n    /**\\n      * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\\n      */\\n    toLocaleString(): string;\\n    /**\\n      * Appends new elements to an array, and returns the new length of the array.\\n      * @param items New elements of the Array.\\n      */\\n    push(...items: T[]): number;\\n    /**\\n      * Removes the last element from an array and returns it.\\n      */\\n    pop(): T | undefined;\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: ConcatArray<T>[]): T[];\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: (T | ConcatArray<T>)[]): T[];\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): T[];\\n    /**\\n      * Removes the first element from an array and returns it.\\n      */\\n    shift(): T | undefined;\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): T[];\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: T, b: T) => number): this;\\n    /**\\n      * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n      * @param start The zero-based location in the array from which to start removing elements.\\n      * @param deleteCount The number of elements to remove.\\n      */\\n    splice(start: number, deleteCount?: number): T[];\\n    /**\\n      * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n      * @param start The zero-based location in the array from which to start removing elements.\\n      * @param deleteCount The number of elements to remove.\\n      * @param items Elements to insert into the array in place of the deleted elements.\\n      */\\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\\n    /**\\n      * Inserts new elements at the start of an array.\\n      * @param items  Elements to insert at the start of the Array.\\n      */\\n    unshift(...items: T[]): number;\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\\n      */\\n    indexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Returns the index of the last occurrence of a specified value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\\n      */\\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\\n    /**\\n     * Returns the elements of an array that meet the condition specified in a callback function.\\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n     */\\n    filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: T, index: number, array: T[]) => any, thisArg?: any): T[];\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\\n\\n    [n: number]: T;\\n}\\n\\ninterface ArrayConstructor {\\n    new(arrayLength?: number): any[];\\n    new <T>(arrayLength: number): T[];\\n    new <T>(...items: T[]): T[];\\n    (arrayLength?: number): any[];\\n    <T>(arrayLength: number): T[];\\n    <T>(...items: T[]): T[];\\n    isArray(arg: any): arg is Array<any>;\\n    readonly prototype: Array<any>;\\n}\\n\\ndeclare const Array: ArrayConstructor;\\n\\ninterface TypedPropertyDescriptor<T> {\\n    enumerable?: boolean;\\n    configurable?: boolean;\\n    writable?: boolean;\\n    value?: T;\\n    get?: () => T;\\n    set?: (value: T) => void;\\n}\\n\\ndeclare type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;\\ndeclare type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void;\\ndeclare type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\\ndeclare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) => void;\\n\\ndeclare type PromiseConstructorLike = new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;\\n\\ninterface PromiseLike<T> {\\n    /**\\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\\n     * @param onfulfilled The callback to execute when the Promise is resolved.\\n     * @param onrejected The callback to execute when the Promise is rejected.\\n     * @returns A Promise for the completion of which ever callback is executed.\\n     */\\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;\\n}\\n\\n/**\\n * Represents the completion of an asynchronous operation\\n */\\ninterface Promise<T> {\\n    /**\\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\\n     * @param onfulfilled The callback to execute when the Promise is resolved.\\n     * @param onrejected The callback to execute when the Promise is rejected.\\n     * @returns A Promise for the completion of which ever callback is executed.\\n     */\\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\\n\\n    /**\\n     * Attaches a callback for only the rejection of the Promise.\\n     * @param onrejected The callback to execute when the Promise is rejected.\\n     * @returns A Promise for the completion of the callback.\\n     */\\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;\\n}\\n\\ninterface ArrayLike<T> {\\n    readonly length: number;\\n    readonly [n: number]: T;\\n}\\n\\n/**\\n * Make all properties in T optional\\n */\\ntype Partial<T> = {\\n    [P in keyof T]?: T[P];\\n};\\n\\n/**\\n * Make all properties in T required\\n */\\ntype Required<T> = {\\n    [P in keyof T]-?: T[P];\\n};\\n\\n/**\\n * Make all properties in T readonly\\n */\\ntype Readonly<T> = {\\n    readonly [P in keyof T]: T[P];\\n};\\n\\n/**\\n * From T pick a set of properties K\\n */\\ntype Pick<T, K extends keyof T> = {\\n    [P in K]: T[P];\\n};\\n\\n/**\\n * Construct a type with a set of properties K of type T\\n */\\ntype Record<K extends string, T> = {\\n    [P in K]: T;\\n};\\n\\n/**\\n * Exclude from T those types that are assignable to U\\n */\\ntype Exclude<T, U> = T extends U ? never : T;\\n\\n/**\\n * Extract from T those types that are assignable to U\\n */\\ntype Extract<T, U> = T extends U ? T : never;\\n\\n/**\\n * Exclude null and undefined from T\\n */\\ntype NonNullable<T> = T extends null | undefined ? never : T;\\n\\n/**\\n * Obtain the return type of a function type\\n */\\ntype ReturnType<T extends (...args: any[]) => any> = T extends (...args: any[]) => infer R ? R : any;\\n\\n/**\\n * Obtain the return type of a constructor function type\\n */\\ntype InstanceType<T extends new (...args: any[]) => any> = T extends new (...args: any[]) => infer R ? R : any;\\n\\n/**\\n * Marker for contextual 'this' type\\n */\\ninterface ThisType<T> { }\\n\\n/**\\n  * Represents a raw buffer of binary data, which is used to store data for the\\n  * different typed arrays. ArrayBuffers cannot be read from or written to directly,\\n  * but can be passed to a typed array or DataView Object to interpret the raw\\n  * buffer as needed.\\n  */\\ninterface ArrayBuffer {\\n    /**\\n      * Read-only. The length of the ArrayBuffer (in bytes).\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * Returns a section of an ArrayBuffer.\\n      */\\n    slice(begin: number, end?: number): ArrayBuffer;\\n}\\n\\n/**\\n * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.\\n */\\ninterface ArrayBufferTypes {\\n    ArrayBuffer: ArrayBuffer;\\n}\\ntype ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];\\n\\ninterface ArrayBufferConstructor {\\n    readonly prototype: ArrayBuffer;\\n    new(byteLength: number): ArrayBuffer;\\n    isView(arg: any): arg is ArrayBufferView;\\n}\\ndeclare const ArrayBuffer: ArrayBufferConstructor;\\n\\ninterface ArrayBufferView {\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    byteOffset: number;\\n}\\n\\ninterface DataView {\\n    readonly buffer: ArrayBuffer;\\n    readonly byteLength: number;\\n    readonly byteOffset: number;\\n    /**\\n      * Gets the Float32 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Float64 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Int8 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getInt8(byteOffset: number): number;\\n\\n    /**\\n      * Gets the Int16 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\\n    /**\\n      * Gets the Int32 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Uint8 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getUint8(byteOffset: number): number;\\n\\n    /**\\n      * Gets the Uint16 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Uint32 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Stores an Float32 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Float64 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Int8 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      */\\n    setInt8(byteOffset: number, value: number): void;\\n\\n    /**\\n      * Stores an Int16 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Int32 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Uint8 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      */\\n    setUint8(byteOffset: number, value: number): void;\\n\\n    /**\\n      * Stores an Uint16 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Uint32 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\\n}\\n\\ninterface DataViewConstructor {\\n    new(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number): DataView;\\n}\\ndeclare const DataView: DataViewConstructor;\\n\\n/**\\n  * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\\n  * number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Int8Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Int8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Int8Array) => any, thisArg?: any): Int8Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Int8Array) => number, thisArg?: any): Int8Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Int8Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Int8Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Int8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Int8Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\ninterface Int8ArrayConstructor {\\n    readonly prototype: Int8Array;\\n    new(length: number): Int8Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int8Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int8Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Int8Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;\\n\\n\\n}\\ndeclare const Int8Array: Int8ArrayConstructor;\\n\\n/**\\n  * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint8Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint8Array) => any, thisArg?: any): Uint8Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint8Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint8Array) => number, thisArg?: any): Uint8Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint8Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint8Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint8Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint8ArrayConstructor {\\n    readonly prototype: Uint8Array;\\n    new(length: number): Uint8Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint8Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;\\n\\n}\\ndeclare const Uint8Array: Uint8ArrayConstructor;\\n\\n/**\\n  * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\\n  * If the requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint8ClampedArray {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => any, thisArg?: any): Uint8ClampedArray;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => number, thisArg?: any): Uint8ClampedArray;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint8ClampedArray;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint8ClampedArray;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint8ClampedArray;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint8ClampedArrayConstructor {\\n    readonly prototype: Uint8ClampedArray;\\n    new(length: number): Uint8ClampedArray;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8ClampedArray;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint8ClampedArray;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;\\n}\\ndeclare const Uint8ClampedArray: Uint8ClampedArrayConstructor;\\n\\n/**\\n  * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Int16Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Int16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Int16Array) => any, thisArg?: any): Int16Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Int16Array) => void, thisArg?: any): void;\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Int16Array) => number, thisArg?: any): Int16Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Int16Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Int16Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Int16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Int16Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Int16ArrayConstructor {\\n    readonly prototype: Int16Array;\\n    new(length: number): Int16Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int16Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int16Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Int16Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;\\n\\n\\n}\\ndeclare const Int16Array: Int16ArrayConstructor;\\n\\n/**\\n  * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint16Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint16Array) => any, thisArg?: any): Uint16Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint16Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint16Array) => number, thisArg?: any): Uint16Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint16Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint16Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint16Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint16ArrayConstructor {\\n    readonly prototype: Uint16Array;\\n    new(length: number): Uint16Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint16Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint16Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint16Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;\\n\\n\\n}\\ndeclare const Uint16Array: Uint16ArrayConstructor;\\n/**\\n  * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Int32Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Int32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Int32Array) => any, thisArg?: any): Int32Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Int32Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Int32Array) => number, thisArg?: any): Int32Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Int32Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Int32Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Int32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Int32Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Int32ArrayConstructor {\\n    readonly prototype: Int32Array;\\n    new(length: number): Int32Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int32Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int32Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Int32Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;\\n\\n}\\ndeclare const Int32Array: Int32ArrayConstructor;\\n\\n/**\\n  * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint32Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint32Array) => any, thisArg?: any): Uint32Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint32Array) => void, thisArg?: any): void;\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint32Array) => number, thisArg?: any): Uint32Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint32Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint32Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint32Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint32ArrayConstructor {\\n    readonly prototype: Uint32Array;\\n    new(length: number): Uint32Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint32Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint32Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint32Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;\\n\\n}\\ndeclare const Uint32Array: Uint32ArrayConstructor;\\n\\n/**\\n  * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\\n  * of bytes could not be allocated an exception is raised.\\n  */\\ninterface Float32Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Float32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Float32Array) => any, thisArg?: any): Float32Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Float32Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Float32Array) => number, thisArg?: any): Float32Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Float32Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Float32Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Float32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Float32Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Float32ArrayConstructor {\\n    readonly prototype: Float32Array;\\n    new(length: number): Float32Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float32Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float32Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Float32Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;\\n\\n\\n}\\ndeclare const Float32Array: Float32ArrayConstructor;\\n\\n/**\\n  * A typed array of 64-bit float values. The contents are initialized to 0. If the requested\\n  * number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Float64Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Float64Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Float64Array) => any, thisArg?: any): Float64Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Float64Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Float64Array) => number, thisArg?: any): Float64Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Float64Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Float64Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Float64Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Float64Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Float64Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Float64ArrayConstructor {\\n    readonly prototype: Float64Array;\\n    new(length: number): Float64Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float64Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float64Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Float64Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;\\n\\n}\\ndeclare const Float64Array: Float64ArrayConstructor;\\n\\n/////////////////////////////\\n/// ECMAScript Internationalization API\\n/////////////////////////////\\n\\ndeclare namespace Intl {\\n    interface CollatorOptions {\\n        usage?: string;\\n        localeMatcher?: string;\\n        numeric?: boolean;\\n        caseFirst?: string;\\n        sensitivity?: string;\\n        ignorePunctuation?: boolean;\\n    }\\n\\n    interface ResolvedCollatorOptions {\\n        locale: string;\\n        usage: string;\\n        sensitivity: string;\\n        ignorePunctuation: boolean;\\n        collation: string;\\n        caseFirst: string;\\n        numeric: boolean;\\n    }\\n\\n    interface Collator {\\n        compare(x: string, y: string): number;\\n        resolvedOptions(): ResolvedCollatorOptions;\\n    }\\n    var Collator: {\\n        new(locales?: string | string[], options?: CollatorOptions): Collator;\\n        (locales?: string | string[], options?: CollatorOptions): Collator;\\n        supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];\\n    };\\n\\n    interface NumberFormatOptions {\\n        localeMatcher?: string;\\n        style?: string;\\n        currency?: string;\\n        currencyDisplay?: string;\\n        useGrouping?: boolean;\\n        minimumIntegerDigits?: number;\\n        minimumFractionDigits?: number;\\n        maximumFractionDigits?: number;\\n        minimumSignificantDigits?: number;\\n        maximumSignificantDigits?: number;\\n    }\\n\\n    interface ResolvedNumberFormatOptions {\\n        locale: string;\\n        numberingSystem: string;\\n        style: string;\\n        currency?: string;\\n        currencyDisplay?: string;\\n        minimumIntegerDigits: number;\\n        minimumFractionDigits: number;\\n        maximumFractionDigits: number;\\n        minimumSignificantDigits?: number;\\n        maximumSignificantDigits?: number;\\n        useGrouping: boolean;\\n    }\\n\\n    interface NumberFormat {\\n        format(value: number): string;\\n        resolvedOptions(): ResolvedNumberFormatOptions;\\n    }\\n    var NumberFormat: {\\n        new(locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\\n        (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\\n        supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];\\n    };\\n\\n    interface DateTimeFormatOptions {\\n        localeMatcher?: string;\\n        weekday?: string;\\n        era?: string;\\n        year?: string;\\n        month?: string;\\n        day?: string;\\n        hour?: string;\\n        minute?: string;\\n        second?: string;\\n        timeZoneName?: string;\\n        formatMatcher?: string;\\n        hour12?: boolean;\\n        timeZone?: string;\\n    }\\n\\n    interface ResolvedDateTimeFormatOptions {\\n        locale: string;\\n        calendar: string;\\n        numberingSystem: string;\\n        timeZone: string;\\n        hour12?: boolean;\\n        weekday?: string;\\n        era?: string;\\n        year?: string;\\n        month?: string;\\n        day?: string;\\n        hour?: string;\\n        minute?: string;\\n        second?: string;\\n        timeZoneName?: string;\\n    }\\n\\n    interface DateTimeFormat {\\n        format(date?: Date | number): string;\\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\\n    }\\n    var DateTimeFormat: {\\n        new(locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\\n        (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\\n        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];\\n    };\\n}\\n\\ninterface String {\\n    /**\\n      * Determines whether two strings are equivalent in the current or specified locale.\\n      * @param that String to compare to target string\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n      * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\\n      */\\n    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): number;\\n}\\n\\ninterface Number {\\n    /**\\n      * Converts a number to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\\n}\\n\\ninterface Date {\\n    /**\\n      * Converts a date and time to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\\n    /**\\n      * Converts a date to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\\n\\n    /**\\n      * Converts a time to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\\n}\\n\\n\\ndeclare type PropertyKey = string | number | symbol;\\n\\ninterface Array<T> {\\n    /**\\n     * Returns the value of the first element in the array where predicate is true, and undefined\\n     * otherwise.\\n     * @param predicate find calls predicate once for each element of the array, in ascending\\n     * order, until it finds one where predicate returns true. If such an element is found, find\\n     * immediately returns that element value. Otherwise, find returns undefined.\\n     * @param thisArg If provided, it will be used as the this value for each invocation of\\n     * predicate. If it is not provided, undefined is used instead.\\n     */\\n    find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;\\n    find(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T | undefined;\\n\\n    /**\\n     * Returns the index of the first element in the array where predicate is true, and -1\\n     * otherwise.\\n     * @param predicate find calls predicate once for each element of the array, in ascending\\n     * order, until it finds one where predicate returns true. If such an element is found,\\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n     * @param thisArg If provided, it will be used as the this value for each invocation of\\n     * predicate. If it is not provided, undefined is used instead.\\n     */\\n    findIndex(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): number;\\n\\n    /**\\n     * Returns the this object after filling the section identified by start and end with value\\n     * @param value value to fill array section with\\n     * @param start index to start filling the array at. If start is negative, it is treated as\\n     * length+start where length is the length of the array.\\n     * @param end index to stop filling the array at. If end is negative, it is treated as\\n     * length+end.\\n     */\\n    fill(value: T, start?: number, end?: number): this;\\n\\n    /**\\n     * Returns the this object after copying a section of the array identified by start and end\\n     * to the same array starting at position target\\n     * @param target If target is negative, it is treated as length+target where length is the\\n     * length of the array.\\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\\n     * is treated as length+end.\\n     * @param end If not specified, length of the this object is used as its default value.\\n     */\\n    copyWithin(target: number, start: number, end?: number): this;\\n}\\n\\ninterface ArrayConstructor {\\n    /**\\n     * Creates an array from an array-like object.\\n     * @param arrayLike An array-like object to convert to an array.\\n     */\\n    from<T>(arrayLike: ArrayLike<T>): T[];\\n\\n    /**\\n     * Creates an array from an iterable object.\\n     * @param arrayLike An array-like object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\\n\\n    /**\\n     * Returns a new array from a set of elements.\\n     * @param items A set of elements to include in the new array object.\\n     */\\n    of<T>(...items: T[]): T[];\\n}\\n\\ninterface DateConstructor {\\n    new (value: number | string | Date): Date;\\n}\\n\\ninterface Function {\\n    /**\\n     * Returns the name of the function. Function names are read-only and can not be changed.\\n     */\\n    readonly name: string;\\n}\\n\\ninterface Math {\\n    /**\\n     * Returns the number of leading zero bits in the 32-bit binary representation of a number.\\n     * @param x A numeric expression.\\n     */\\n    clz32(x: number): number;\\n\\n    /**\\n     * Returns the result of 32-bit multiplication of two numbers.\\n     * @param x First number\\n     * @param y Second number\\n     */\\n    imul(x: number, y: number): number;\\n\\n    /**\\n     * Returns the sign of the x, indicating whether x is positive, negative or zero.\\n     * @param x The numeric expression to test\\n     */\\n    sign(x: number): number;\\n\\n    /**\\n     * Returns the base 10 logarithm of a number.\\n     * @param x A numeric expression.\\n     */\\n    log10(x: number): number;\\n\\n    /**\\n     * Returns the base 2 logarithm of a number.\\n     * @param x A numeric expression.\\n     */\\n    log2(x: number): number;\\n\\n    /**\\n     * Returns the natural logarithm of 1 + x.\\n     * @param x A numeric expression.\\n     */\\n    log1p(x: number): number;\\n\\n    /**\\n     * Returns the result of (e^x - 1), which is an implementation-dependent approximation to\\n     * subtracting 1 from the exponential function of x (e raised to the power of x, where e\\n     * is the base of the natural logarithms).\\n     * @param x A numeric expression.\\n     */\\n    expm1(x: number): number;\\n\\n    /**\\n     * Returns the hyperbolic cosine of a number.\\n     * @param x A numeric expression that contains an angle measured in radians.\\n     */\\n    cosh(x: number): number;\\n\\n    /**\\n     * Returns the hyperbolic sine of a number.\\n     * @param x A numeric expression that contains an angle measured in radians.\\n     */\\n    sinh(x: number): number;\\n\\n    /**\\n     * Returns the hyperbolic tangent of a number.\\n     * @param x A numeric expression that contains an angle measured in radians.\\n     */\\n    tanh(x: number): number;\\n\\n    /**\\n     * Returns the inverse hyperbolic cosine of a number.\\n     * @param x A numeric expression that contains an angle measured in radians.\\n     */\\n    acosh(x: number): number;\\n\\n    /**\\n     * Returns the inverse hyperbolic sine of a number.\\n     * @param x A numeric expression that contains an angle measured in radians.\\n     */\\n    asinh(x: number): number;\\n\\n    /**\\n     * Returns the inverse hyperbolic tangent of a number.\\n     * @param x A numeric expression that contains an angle measured in radians.\\n     */\\n    atanh(x: number): number;\\n\\n    /**\\n     * Returns the square root of the sum of squares of its arguments.\\n     * @param values Values to compute the square root for.\\n     *     If no arguments are passed, the result is +0.\\n     *     If there is only one argument, the result is the absolute value.\\n     *     If any argument is +Infinity or -Infinity, the result is +Infinity.\\n     *     If any argument is NaN, the result is NaN.\\n     *     If all arguments are either +0 or −0, the result is +0.\\n     */\\n    hypot(...values: number[]): number;\\n\\n    /**\\n     * Returns the integral part of the a numeric expression, x, removing any fractional digits.\\n     * If x is already an integer, the result is x.\\n     * @param x A numeric expression.\\n     */\\n    trunc(x: number): number;\\n\\n    /**\\n     * Returns the nearest single precision float representation of a number.\\n     * @param x A numeric expression.\\n     */\\n    fround(x: number): number;\\n\\n    /**\\n     * Returns an implementation-dependent approximation to the cube root of number.\\n     * @param x A numeric expression.\\n     */\\n    cbrt(x: number): number;\\n}\\n\\ninterface NumberConstructor {\\n    /**\\n     * The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1\\n     * that is representable as a Number value, which is approximately:\\n     * 2.2204460492503130808472633361816 x 10‍−‍16.\\n     */\\n    readonly EPSILON: number;\\n\\n    /**\\n     * Returns true if passed value is finite.\\n     * Unlike the global isFinite, Number.isFinite doesn't forcibly convert the parameter to a\\n     * number. Only finite values of the type number, result in true.\\n     * @param number A numeric value.\\n     */\\n    isFinite(number: number): boolean;\\n\\n    /**\\n     * Returns true if the value passed is an integer, false otherwise.\\n     * @param number A numeric value.\\n     */\\n    isInteger(number: number): boolean;\\n\\n    /**\\n     * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a\\n     * number). Unlike the global isNaN(), Number.isNaN() doesn't forcefully convert the parameter\\n     * to a number. Only values of the type number, that are also NaN, result in true.\\n     * @param number A numeric value.\\n     */\\n    isNaN(number: number): boolean;\\n\\n    /**\\n     * Returns true if the value passed is a safe integer.\\n     * @param number A numeric value.\\n     */\\n    isSafeInteger(number: number): boolean;\\n\\n    /**\\n     * The value of the largest integer n such that n and n + 1 are both exactly representable as\\n     * a Number value.\\n     * The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 − 1.\\n     */\\n    readonly MAX_SAFE_INTEGER: number;\\n\\n    /**\\n     * The value of the smallest integer n such that n and n − 1 are both exactly representable as\\n     * a Number value.\\n     * The value of Number.MIN_SAFE_INTEGER is −9007199254740991 (−(2^53 − 1)).\\n     */\\n    readonly MIN_SAFE_INTEGER: number;\\n\\n    /**\\n     * Converts a string to a floating-point number.\\n     * @param string A string that contains a floating-point number.\\n     */\\n    parseFloat(string: string): number;\\n\\n    /**\\n     * Converts A string to an integer.\\n     * @param s A string to convert into a number.\\n     * @param radix A value between 2 and 36 that specifies the base of the number in numString.\\n     * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\\n     * All other strings are considered decimal.\\n     */\\n    parseInt(string: string, radix?: number): number;\\n}\\n\\ninterface Object {\\n    /**\\n     * Determines whether an object has a property with the specified name.\\n     * @param v A property name.\\n     */\\n    hasOwnProperty(v: PropertyKey): boolean;\\n\\n    /**\\n     * Determines whether a specified property is enumerable.\\n     * @param v A property name.\\n     */\\n    propertyIsEnumerable(v: PropertyKey): boolean;\\n}\\n\\ninterface ObjectConstructor {\\n    /**\\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\\n     * target object. Returns the target object.\\n     * @param target The target object to copy to.\\n     * @param source The source object from which to copy properties.\\n     */\\n    assign<T, U>(target: T, source: U): T & U;\\n\\n    /**\\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\\n     * target object. Returns the target object.\\n     * @param target The target object to copy to.\\n     * @param source1 The first source object from which to copy properties.\\n     * @param source2 The second source object from which to copy properties.\\n     */\\n    assign<T, U, V>(target: T, source1: U, source2: V): T & U & V;\\n\\n    /**\\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\\n     * target object. Returns the target object.\\n     * @param target The target object to copy to.\\n     * @param source1 The first source object from which to copy properties.\\n     * @param source2 The second source object from which to copy properties.\\n     * @param source3 The third source object from which to copy properties.\\n     */\\n    assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\\n\\n    /**\\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\\n     * target object. Returns the target object.\\n     * @param target The target object to copy to.\\n     * @param sources One or more source objects from which to copy properties\\n     */\\n    assign(target: object, ...sources: any[]): any;\\n\\n    /**\\n     * Returns an array of all symbol properties found directly on object o.\\n     * @param o Object to retrieve the symbols from.\\n     */\\n    getOwnPropertySymbols(o: any): symbol[];\\n\\n    /**\\n     * Returns true if the values are the same value, false otherwise.\\n     * @param value1 The first value.\\n     * @param value2 The second value.\\n     */\\n    is(value1: any, value2: any): boolean;\\n\\n    /**\\n     * Sets the prototype of a specified object o to  object proto or null. Returns the object o.\\n     * @param o The object to change its prototype.\\n     * @param proto The value of the new prototype or null.\\n     */\\n    setPrototypeOf(o: any, proto: object | null): any;\\n\\n    /**\\n     * Gets the own property descriptor of the specified object.\\n     * An own property descriptor is one that is defined directly on the object and is not\\n     * inherited from the object's prototype.\\n     * @param o Object that contains the property.\\n     * @param p Name of the property.\\n     */\\n    getOwnPropertyDescriptor(o: any, propertyKey: PropertyKey): PropertyDescriptor | undefined;\\n\\n    /**\\n     * Adds a property to an object, or modifies attributes of an existing property.\\n     * @param o Object on which to add or modify the property. This can be a native JavaScript\\n     * object (that is, a user-defined object or a built in object) or a DOM object.\\n     * @param p The property name.\\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor\\n     *  property.\\n     */\\n    defineProperty(o: any, propertyKey: PropertyKey, attributes: PropertyDescriptor): any;\\n}\\n\\ninterface ReadonlyArray<T> {\\n    /**\\n     * Returns the value of the first element in the array where predicate is true, and undefined\\n     * otherwise.\\n     * @param predicate find calls predicate once for each element of the array, in ascending\\n     * order, until it finds one where predicate returns true. If such an element is found, find\\n     * immediately returns that element value. Otherwise, find returns undefined.\\n     * @param thisArg If provided, it will be used as the this value for each invocation of\\n     * predicate. If it is not provided, undefined is used instead.\\n     */\\n    find<S extends T>(predicate: (this: void, value: T, index: number, obj: ReadonlyArray<T>) => value is S, thisArg?: any): S | undefined;\\n    find(predicate: (value: T, index: number, obj: ReadonlyArray<T>) => boolean, thisArg?: any): T | undefined;\\n\\n    /**\\n     * Returns the index of the first element in the array where predicate is true, and -1\\n     * otherwise.\\n     * @param predicate find calls predicate once for each element of the array, in ascending\\n     * order, until it finds one where predicate returns true. If such an element is found,\\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n     * @param thisArg If provided, it will be used as the this value for each invocation of\\n     * predicate. If it is not provided, undefined is used instead.\\n     */\\n    findIndex(predicate: (value: T, index: number, obj: ReadonlyArray<T>) => boolean, thisArg?: any): number;\\n}\\n\\ninterface RegExp {\\n    /**\\n     * Returns a string indicating the flags of the regular expression in question. This field is read-only.\\n     * The characters in this string are sequenced and concatenated in the following order:\\n     *\\n     *    - \\\"g\\\" for global\\n     *    - \\\"i\\\" for ignoreCase\\n     *    - \\\"m\\\" for multiline\\n     *    - \\\"u\\\" for unicode\\n     *    - \\\"y\\\" for sticky\\n     *\\n     * If no flags are set, the value is the empty string.\\n     */\\n    readonly flags: string;\\n\\n    /**\\n     * Returns a Boolean value indicating the state of the sticky flag (y) used with a regular\\n     * expression. Default is false. Read-only.\\n     */\\n    readonly sticky: boolean;\\n\\n    /**\\n     * Returns a Boolean value indicating the state of the Unicode flag (u) used with a regular\\n     * expression. Default is false. Read-only.\\n     */\\n    readonly unicode: boolean;\\n}\\n\\ninterface RegExpConstructor {\\n    new (pattern: RegExp, flags?: string): RegExp;\\n    (pattern: RegExp, flags?: string): RegExp;\\n}\\n\\ninterface String {\\n    /**\\n     * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\n     * value of the UTF-16 encoded code point starting at the string element at position pos in\\n     * the String resulting from converting this object to a String.\\n     * If there is no element at that position, the result is undefined.\\n     * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\\n     */\\n    codePointAt(pos: number): number | undefined;\\n\\n    /**\\n     * Returns true if searchString appears as a substring of the result of converting this\\n     * object to a String, at one or more positions that are\\n     * greater than or equal to position; otherwise, returns false.\\n     * @param searchString search string\\n     * @param position If position is undefined, 0 is assumed, so as to search all of the String.\\n     */\\n    includes(searchString: string, position?: number): boolean;\\n\\n    /**\\n     * Returns true if the sequence of elements of searchString converted to a String is the\\n     * same as the corresponding elements of this object (converted to a String) starting at\\n     * endPosition – length(this). Otherwise returns false.\\n     */\\n    endsWith(searchString: string, endPosition?: number): boolean;\\n\\n    /**\\n     * Returns the String value result of normalizing the string into the normalization form\\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n     * @param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\n     * is \\\"NFC\\\"\\n     */\\n    normalize(form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string;\\n\\n    /**\\n     * Returns the String value result of normalizing the string into the normalization form\\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n     * @param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\n     * is \\\"NFC\\\"\\n     */\\n    normalize(form?: string): string;\\n\\n    /**\\n     * Returns a String value that is made from count copies appended together. If count is 0,\\n     * the empty string is returned.\\n     * @param count number of copies to append\\n     */\\n    repeat(count: number): string;\\n\\n    /**\\n     * Returns true if the sequence of elements of searchString converted to a String is the\\n     * same as the corresponding elements of this object (converted to a String) starting at\\n     * position. Otherwise returns false.\\n     */\\n    startsWith(searchString: string, position?: number): boolean;\\n\\n    /**\\n     * Returns an <a> HTML anchor element and sets the name attribute to the text value\\n     * @param name\\n     */\\n    anchor(name: string): string;\\n\\n    /** Returns a <big> HTML element */\\n    big(): string;\\n\\n    /** Returns a <blink> HTML element */\\n    blink(): string;\\n\\n    /** Returns a <b> HTML element */\\n    bold(): string;\\n\\n    /** Returns a <tt> HTML element */\\n    fixed(): string;\\n\\n    /** Returns a <font> HTML element and sets the color attribute value */\\n    fontcolor(color: string): string;\\n\\n    /** Returns a <font> HTML element and sets the size attribute value */\\n    fontsize(size: number): string;\\n\\n    /** Returns a <font> HTML element and sets the size attribute value */\\n    fontsize(size: string): string;\\n\\n    /** Returns an <i> HTML element */\\n    italics(): string;\\n\\n    /** Returns an <a> HTML element and sets the href attribute value */\\n    link(url: string): string;\\n\\n    /** Returns a <small> HTML element */\\n    small(): string;\\n\\n    /** Returns a <strike> HTML element */\\n    strike(): string;\\n\\n    /** Returns a <sub> HTML element */\\n    sub(): string;\\n\\n    /** Returns a <sup> HTML element */\\n    sup(): string;\\n}\\n\\ninterface StringConstructor {\\n    /**\\n     * Return the String value whose elements are, in order, the elements in the List elements.\\n     * If length is 0, the empty string is returned.\\n     */\\n    fromCodePoint(...codePoints: number[]): string;\\n\\n    /**\\n     * String.raw is intended for use as a tag function of a Tagged Template String. When called\\n     * as such the first argument will be a well formed template call site object and the rest\\n     * parameter will contain the substitution values.\\n     * @param template A well-formed template string call site representation.\\n     * @param substitutions A set of substitution values.\\n     */\\n    raw(template: TemplateStringsArray, ...substitutions: any[]): string;\\n}\\n\\n\\ninterface Map<K, V> {\\n    clear(): void;\\n    delete(key: K): boolean;\\n    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\\n    get(key: K): V | undefined;\\n    has(key: K): boolean;\\n    set(key: K, value: V): this;\\n    readonly size: number;\\n}\\n\\ninterface MapConstructor {\\n    new (): Map<any, any>;\\n    new <K, V>(entries?: ReadonlyArray<[K, V]>): Map<K, V>;\\n    readonly prototype: Map<any, any>;\\n}\\ndeclare var Map: MapConstructor;\\n\\ninterface ReadonlyMap<K, V> {\\n    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;\\n    get(key: K): V | undefined;\\n    has(key: K): boolean;\\n    readonly size: number;\\n}\\n\\ninterface WeakMap<K extends object, V> {\\n    delete(key: K): boolean;\\n    get(key: K): V | undefined;\\n    has(key: K): boolean;\\n    set(key: K, value: V): this;\\n}\\n\\ninterface WeakMapConstructor {\\n    new (): WeakMap<object, any>;\\n    new <K extends object, V>(entries?: ReadonlyArray<[K, V]>): WeakMap<K, V>;\\n    readonly prototype: WeakMap<object, any>;\\n}\\ndeclare var WeakMap: WeakMapConstructor;\\n\\ninterface Set<T> {\\n    add(value: T): this;\\n    clear(): void;\\n    delete(value: T): boolean;\\n    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\\n    has(value: T): boolean;\\n    readonly size: number;\\n}\\n\\ninterface SetConstructor {\\n    new (): Set<any>;\\n    new <T>(values?: ReadonlyArray<T>): Set<T>;\\n    readonly prototype: Set<any>;\\n}\\ndeclare var Set: SetConstructor;\\n\\ninterface ReadonlySet<T> {\\n    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;\\n    has(value: T): boolean;\\n    readonly size: number;\\n}\\n\\ninterface WeakSet<T extends object> {\\n    add(value: T): this;\\n    delete(value: T): boolean;\\n    has(value: T): boolean;\\n}\\n\\ninterface WeakSetConstructor {\\n    new (): WeakSet<object>;\\n    new <T extends object>(values?: ReadonlyArray<T>): WeakSet<T>;\\n    readonly prototype: WeakSet<object>;\\n}\\ndeclare var WeakSet: WeakSetConstructor;\\n\\n\\ninterface Generator extends Iterator<any> { }\\n\\ninterface GeneratorFunction {\\n    /**\\n     * Creates a new Generator object.\\n     * @param args A list of arguments the function accepts.\\n     */\\n    new (...args: any[]): Generator;\\n    /**\\n     * Creates a new Generator object.\\n     * @param args A list of arguments the function accepts.\\n     */\\n    (...args: any[]): Generator;\\n    /**\\n     * The length of the arguments.\\n     */\\n    readonly length: number;\\n    /**\\n     * Returns the name of the function.\\n     */\\n    readonly name: string;\\n    /**\\n     * A reference to the prototype.\\n     */\\n    readonly prototype: Generator;\\n}\\n\\ninterface GeneratorFunctionConstructor {\\n    /**\\n     * Creates a new Generator function.\\n     * @param args A list of arguments the function accepts.\\n     */\\n    new (...args: string[]): GeneratorFunction;\\n    /**\\n     * Creates a new Generator function.\\n     * @param args A list of arguments the function accepts.\\n     */\\n    (...args: string[]): GeneratorFunction;\\n    /**\\n     * The length of the arguments.\\n     */\\n    readonly length: number;\\n    /**\\n     * Returns the name of the function.\\n     */\\n    readonly name: string;\\n    /**\\n     * A reference to the prototype.\\n     */\\n    readonly prototype: GeneratorFunction;\\n}\\n\\n\\n/// <reference path=\\\"lib.es2015.symbol.d.ts\\\" />\\n\\ninterface SymbolConstructor {\\n    /**\\n     * A method that returns the default iterator for an object. Called by the semantics of the\\n     * for-of statement.\\n     */\\n    readonly iterator: symbol;\\n}\\n\\ninterface IteratorResult<T> {\\n    done: boolean;\\n    value: T;\\n}\\n\\ninterface Iterator<T> {\\n    next(value?: any): IteratorResult<T>;\\n    return?(value?: any): IteratorResult<T>;\\n    throw?(e?: any): IteratorResult<T>;\\n}\\n\\ninterface Iterable<T> {\\n    [Symbol.iterator](): Iterator<T>;\\n}\\n\\ninterface IterableIterator<T> extends Iterator<T> {\\n    [Symbol.iterator](): IterableIterator<T>;\\n}\\n\\ninterface Array<T> {\\n    /** Iterator */\\n    [Symbol.iterator](): IterableIterator<T>;\\n\\n    /**\\n     * Returns an iterable of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, T]>;\\n\\n    /**\\n     * Returns an iterable of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n\\n    /**\\n     * Returns an iterable of values in the array\\n     */\\n    values(): IterableIterator<T>;\\n}\\n\\ninterface ArrayConstructor {\\n    /**\\n     * Creates an array from an iterable object.\\n     * @param iterable An iterable object to convert to an array.\\n     */\\n    from<T>(iterable: Iterable<T> | ArrayLike<T>): T[];\\n\\n    /**\\n     * Creates an array from an iterable object.\\n     * @param iterable An iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\\n}\\n\\ninterface ReadonlyArray<T> {\\n    /** Iterator of values in the array. */\\n    [Symbol.iterator](): IterableIterator<T>;\\n\\n    /**\\n     * Returns an iterable of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, T]>;\\n\\n    /**\\n     * Returns an iterable of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n\\n    /**\\n     * Returns an iterable of values in the array\\n     */\\n    values(): IterableIterator<T>;\\n}\\n\\ninterface IArguments {\\n    /** Iterator */\\n    [Symbol.iterator](): IterableIterator<any>;\\n}\\n\\ninterface Map<K, V> {\\n    /** Returns an iterable of entries in the map. */\\n    [Symbol.iterator](): IterableIterator<[K, V]>;\\n\\n    /**\\n     * Returns an iterable of key, value pairs for every entry in the map.\\n     */\\n    entries(): IterableIterator<[K, V]>;\\n\\n    /**\\n     * Returns an iterable of keys in the map\\n     */\\n    keys(): IterableIterator<K>;\\n\\n    /**\\n     * Returns an iterable of values in the map\\n     */\\n    values(): IterableIterator<V>;\\n}\\n\\ninterface ReadonlyMap<K, V> {\\n    /** Returns an iterable of entries in the map. */\\n    [Symbol.iterator](): IterableIterator<[K, V]>;\\n\\n    /**\\n     * Returns an iterable of key, value pairs for every entry in the map.\\n     */\\n    entries(): IterableIterator<[K, V]>;\\n\\n    /**\\n     * Returns an iterable of keys in the map\\n     */\\n    keys(): IterableIterator<K>;\\n\\n    /**\\n     * Returns an iterable of values in the map\\n     */\\n    values(): IterableIterator<V>;\\n}\\n\\ninterface MapConstructor {\\n    new <K, V>(iterable: Iterable<[K, V]>): Map<K, V>;\\n}\\n\\ninterface WeakMap<K extends object, V> { }\\n\\ninterface WeakMapConstructor {\\n    new <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\\n}\\n\\ninterface Set<T> {\\n    /** Iterates over values in the set. */\\n    [Symbol.iterator](): IterableIterator<T>;\\n    /**\\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\\n     */\\n    entries(): IterableIterator<[T, T]>;\\n    /**\\n     * Despite its name, returns an iterable of the values in the set,\\n     */\\n    keys(): IterableIterator<T>;\\n\\n    /**\\n     * Returns an iterable of values in the set.\\n     */\\n    values(): IterableIterator<T>;\\n}\\n\\ninterface ReadonlySet<T> {\\n    /** Iterates over values in the set. */\\n    [Symbol.iterator](): IterableIterator<T>;\\n\\n    /**\\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\\n     */\\n    entries(): IterableIterator<[T, T]>;\\n\\n    /**\\n     * Despite its name, returns an iterable of the values in the set,\\n     */\\n    keys(): IterableIterator<T>;\\n\\n    /**\\n     * Returns an iterable of values in the set.\\n     */\\n    values(): IterableIterator<T>;\\n}\\n\\ninterface SetConstructor {\\n    new <T>(iterable: Iterable<T>): Set<T>;\\n}\\n\\ninterface WeakSet<T extends object> { }\\n\\ninterface WeakSetConstructor {\\n    new <T extends object>(iterable: Iterable<T>): WeakSet<T>;\\n}\\n\\ninterface Promise<T> { }\\n\\ninterface PromiseConstructor {\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<TAll>(values: Iterable<TAll | PromiseLike<TAll>>): Promise<TAll[]>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T>(values: Iterable<T | PromiseLike<T>>): Promise<T>;\\n}\\n\\ndeclare namespace Reflect {\\n    function enumerate(target: object): IterableIterator<any>;\\n}\\n\\ninterface String {\\n    /** Iterator */\\n    [Symbol.iterator](): IterableIterator<string>;\\n}\\n\\ninterface Int8Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Int8ArrayConstructor {\\n    new (elements: Iterable<number>): Int8Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;\\n}\\n\\ninterface Uint8Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Uint8ArrayConstructor {\\n    new (elements: Iterable<number>): Uint8Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;\\n}\\n\\ninterface Uint8ClampedArray {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Uint8ClampedArrayConstructor {\\n    new (elements: Iterable<number>): Uint8ClampedArray;\\n\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;\\n}\\n\\ninterface Int16Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Int16ArrayConstructor {\\n    new (elements: Iterable<number>): Int16Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;\\n}\\n\\ninterface Uint16Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Uint16ArrayConstructor {\\n    new (elements: Iterable<number>): Uint16Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;\\n}\\n\\ninterface Int32Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Int32ArrayConstructor {\\n    new (elements: Iterable<number>): Int32Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;\\n}\\n\\ninterface Uint32Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Uint32ArrayConstructor {\\n    new (elements: Iterable<number>): Uint32Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;\\n}\\n\\ninterface Float32Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Float32ArrayConstructor {\\n    new (elements: Iterable<number>): Float32Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;\\n}\\n\\ninterface Float64Array {\\n    [Symbol.iterator](): IterableIterator<number>;\\n    /**\\n     * Returns an array of key, value pairs for every entry in the array\\n     */\\n    entries(): IterableIterator<[number, number]>;\\n    /**\\n     * Returns an list of keys in the array\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the array\\n     */\\n    values(): IterableIterator<number>;\\n}\\n\\ninterface Float64ArrayConstructor {\\n    new (elements: Iterable<number>): Float64Array;\\n\\n    /**\\n     * Creates an array from an array-like or iterable object.\\n     * @param arrayLike An array-like or iterable object to convert to an array.\\n     * @param mapfn A mapping function to call on every element of the array.\\n     * @param thisArg Value of 'this' used to invoke the mapfn.\\n     */\\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;\\n}\\n\\n\\ninterface PromiseConstructor {\\n    /**\\n     * A reference to the prototype.\\n     */\\n    readonly prototype: Promise<any>;\\n\\n    /**\\n     * Creates a new Promise.\\n     * @param executor A callback used to initialize the promise. This callback is passed two arguments:\\n     * a resolve callback used resolve the promise with a value or the result of another promise,\\n     * and a reject callback used to reject the promise with a provided reason or error.\\n     */\\n    new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<[T1, T2, T3, T4, T5, T6, T7]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<[T1, T2, T3, T4, T5, T6]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>, T5 | PromiseLike<T5>]): Promise<[T1, T2, T3, T4, T5]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike <T4>]): Promise<[T1, T2, T3, T4]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<[T1, T2, T3]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<[T1, T2]>;\\n\\n    /**\\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\\n     * resolve, or rejected when any Promise is rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    all<T>(values: (T | PromiseLike<T>)[]): Promise<T[]>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<T1 | T2 | T3 | T4 | T5 | T6>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<T1 | T2 | T3 | T4 | T5>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<T1 | T2 | T3 | T4>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<T1 | T2 | T3>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<T1 | T2>;\\n\\n    /**\\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\\n     * or rejected.\\n     * @param values An array of Promises.\\n     * @returns A new Promise.\\n     */\\n    race<T>(values: (T | PromiseLike<T>)[]): Promise<T>;\\n\\n    /**\\n     * Creates a new rejected promise for the provided reason.\\n     * @param reason The reason the promise was rejected.\\n     * @returns A new rejected Promise.\\n     */\\n    reject(reason: any): Promise<never>;\\n\\n    /**\\n     * Creates a new rejected promise for the provided reason.\\n     * @param reason The reason the promise was rejected.\\n     * @returns A new rejected Promise.\\n     */\\n    reject<T>(reason: any): Promise<T>;\\n\\n    /**\\n     * Creates a new resolved promise for the provided value.\\n     * @param value A promise.\\n     * @returns A promise whose internal state matches the provided promise.\\n     */\\n    resolve<T>(value: T | PromiseLike<T>): Promise<T>;\\n\\n    /**\\n     * Creates a new resolved promise .\\n     * @returns A resolved promise.\\n     */\\n    resolve(): Promise<void>;\\n}\\n\\ndeclare var Promise: PromiseConstructor;\\n\\ninterface ProxyHandler<T extends object> {\\n    getPrototypeOf? (target: T): object | null;\\n    setPrototypeOf? (target: T, v: any): boolean;\\n    isExtensible? (target: T): boolean;\\n    preventExtensions? (target: T): boolean;\\n    getOwnPropertyDescriptor? (target: T, p: PropertyKey): PropertyDescriptor | undefined;\\n    has? (target: T, p: PropertyKey): boolean;\\n    get? (target: T, p: PropertyKey, receiver: any): any;\\n    set? (target: T, p: PropertyKey, value: any, receiver: any): boolean;\\n    deleteProperty? (target: T, p: PropertyKey): boolean;\\n    defineProperty? (target: T, p: PropertyKey, attributes: PropertyDescriptor): boolean;\\n    enumerate? (target: T): PropertyKey[];\\n    ownKeys? (target: T): PropertyKey[];\\n    apply? (target: T, thisArg: any, argArray?: any): any;\\n    construct? (target: T, argArray: any, newTarget?: any): object;\\n}\\n\\ninterface ProxyConstructor {\\n    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };\\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\\n}\\ndeclare var Proxy: ProxyConstructor;\\n\\n\\ndeclare namespace Reflect {\\n    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;\\n    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: any): any;\\n    function defineProperty(target: object, propertyKey: PropertyKey, attributes: PropertyDescriptor): boolean;\\n    function deleteProperty(target: object, propertyKey: PropertyKey): boolean;\\n    function get(target: object, propertyKey: PropertyKey, receiver?: any): any;\\n    function getOwnPropertyDescriptor(target: object, propertyKey: PropertyKey): PropertyDescriptor | undefined;\\n    function getPrototypeOf(target: object): object;\\n    function has(target: object, propertyKey: PropertyKey): boolean;\\n    function isExtensible(target: object): boolean;\\n    function ownKeys(target: object): PropertyKey[];\\n    function preventExtensions(target: object): boolean;\\n    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;\\n    function setPrototypeOf(target: object, proto: any): boolean;\\n}\\n\\n\\ninterface Symbol {\\n    /** Returns a string representation of an object. */\\n    toString(): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): symbol;\\n}\\n\\ninterface SymbolConstructor {\\n    /**\\n     * A reference to the prototype.\\n     */\\n    readonly prototype: Symbol;\\n\\n    /**\\n     * Returns a new unique Symbol value.\\n     * @param  description Description of the new Symbol object.\\n     */\\n    (description?: string | number): symbol;\\n\\n    /**\\n     * Returns a Symbol object from the global symbol registry matching the given key if found.\\n     * Otherwise, returns a new symbol with this key.\\n     * @param key key to search for.\\n     */\\n    for(key: string): symbol;\\n\\n    /**\\n     * Returns a key from the global symbol registry matching the given Symbol if found.\\n     * Otherwise, returns a undefined.\\n     * @param sym Symbol to find the key for.\\n     */\\n    keyFor(sym: symbol): string | undefined;\\n}\\n\\ndeclare var Symbol: SymbolConstructor;\\n\\n/// <reference path=\\\"lib.es2015.symbol.d.ts\\\" />\\n\\ninterface SymbolConstructor {\\n    /**\\n     * A method that determines if a constructor object recognizes an object as one of the\\n     * constructor’s instances. Called by the semantics of the instanceof operator.\\n     */\\n    readonly hasInstance: symbol;\\n\\n    /**\\n     * A Boolean value that if true indicates that an object should flatten to its array elements\\n     * by Array.prototype.concat.\\n     */\\n    readonly isConcatSpreadable: symbol;\\n\\n    /**\\n     * A regular expression method that matches the regular expression against a string. Called\\n     * by the String.prototype.match method.\\n     */\\n    readonly match: symbol;\\n\\n    /**\\n     * A regular expression method that replaces matched substrings of a string. Called by the\\n     * String.prototype.replace method.\\n     */\\n    readonly replace: symbol;\\n\\n    /**\\n     * A regular expression method that returns the index within a string that matches the\\n     * regular expression. Called by the String.prototype.search method.\\n     */\\n    readonly search: symbol;\\n\\n    /**\\n     * A function valued property that is the constructor function that is used to create\\n     * derived objects.\\n     */\\n    readonly species: symbol;\\n\\n    /**\\n     * A regular expression method that splits a string at the indices that match the regular\\n     * expression. Called by the String.prototype.split method.\\n     */\\n    readonly split: symbol;\\n\\n    /**\\n     * A method that converts an object to a corresponding primitive value.\\n     * Called by the ToPrimitive abstract operation.\\n     */\\n    readonly toPrimitive: symbol;\\n\\n    /**\\n     * A String value that is used in the creation of the default string description of an object.\\n     * Called by the built-in method Object.prototype.toString.\\n     */\\n    readonly toStringTag: symbol;\\n\\n    /**\\n     * An Object whose own property names are property names that are excluded from the 'with'\\n     * environment bindings of the associated objects.\\n     */\\n    readonly unscopables: symbol;\\n}\\n\\ninterface Symbol {\\n    readonly [Symbol.toStringTag]: \\\"Symbol\\\";\\n}\\n\\ninterface Array<T> {\\n    /**\\n     * Returns an object whose properties have the value 'true'\\n     * when they will be absent when used in a 'with' statement.\\n     */\\n    [Symbol.unscopables](): {\\n        copyWithin: boolean;\\n        entries: boolean;\\n        fill: boolean;\\n        find: boolean;\\n        findIndex: boolean;\\n        keys: boolean;\\n        values: boolean;\\n    };\\n}\\n\\ninterface Date {\\n    /**\\n     * Converts a Date object to a string.\\n     */\\n    [Symbol.toPrimitive](hint: \\\"default\\\"): string;\\n    /**\\n     * Converts a Date object to a string.\\n     */\\n    [Symbol.toPrimitive](hint: \\\"string\\\"): string;\\n    /**\\n     * Converts a Date object to a number.\\n     */\\n    [Symbol.toPrimitive](hint: \\\"number\\\"): number;\\n    /**\\n     * Converts a Date object to a string or number.\\n     *\\n     * @param hint The strings \\\"number\\\", \\\"string\\\", or \\\"default\\\" to specify what primitive to return.\\n     *\\n     * @throws {TypeError} If 'hint' was given something other than \\\"number\\\", \\\"string\\\", or \\\"default\\\".\\n     * @returns A number if 'hint' was \\\"number\\\", a string if 'hint' was \\\"string\\\" or \\\"default\\\".\\n     */\\n    [Symbol.toPrimitive](hint: string): string | number;\\n}\\n\\ninterface Map<K, V> {\\n    readonly [Symbol.toStringTag]: \\\"Map\\\";\\n}\\n\\ninterface WeakMap<K extends object, V> {\\n    readonly [Symbol.toStringTag]: \\\"WeakMap\\\";\\n}\\n\\ninterface Set<T> {\\n    readonly [Symbol.toStringTag]: \\\"Set\\\";\\n}\\n\\ninterface WeakSet<T extends object> {\\n    readonly [Symbol.toStringTag]: \\\"WeakSet\\\";\\n}\\n\\ninterface JSON {\\n    readonly [Symbol.toStringTag]: \\\"JSON\\\";\\n}\\n\\ninterface Function {\\n    /**\\n     * Determines whether the given value inherits from this function if this function was used\\n     * as a constructor function.\\n     *\\n     * A constructor function can control which objects are recognized as its instances by\\n     * 'instanceof' by overriding this method.\\n     */\\n    [Symbol.hasInstance](value: any): boolean;\\n}\\n\\ninterface GeneratorFunction {\\n    readonly [Symbol.toStringTag]: \\\"GeneratorFunction\\\";\\n}\\n\\ninterface Math {\\n    readonly [Symbol.toStringTag]: \\\"Math\\\";\\n}\\n\\ninterface Promise<T> {\\n    readonly [Symbol.toStringTag]: \\\"Promise\\\";\\n}\\n\\ninterface PromiseConstructor {\\n    readonly [Symbol.species]: PromiseConstructor;\\n}\\n\\ninterface RegExp {\\n    /**\\n     * Matches a string with this regular expression, and returns an array containing the results of\\n     * that search.\\n     * @param string A string to search within.\\n     */\\n    [Symbol.match](string: string): RegExpMatchArray | null;\\n\\n    /**\\n     * Replaces text in a string, using this regular expression.\\n     * @param string A String object or string literal whose contents matching against\\n     *               this regular expression will be replaced\\n     * @param replaceValue A String object or string literal containing the text to replace for every\\n     *                     successful match of this regular expression.\\n     */\\n    [Symbol.replace](string: string, replaceValue: string): string;\\n\\n    /**\\n     * Replaces text in a string, using this regular expression.\\n     * @param string A String object or string literal whose contents matching against\\n     *               this regular expression will be replaced\\n     * @param replacer A function that returns the replacement text.\\n     */\\n    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;\\n\\n    /**\\n     * Finds the position beginning first substring match in a regular expression search\\n     * using this regular expression.\\n     *\\n     * @param string The string to search within.\\n     */\\n    [Symbol.search](string: string): number;\\n\\n    /**\\n     * Returns an array of substrings that were delimited by strings in the original input that\\n     * match against this regular expression.\\n     *\\n     * If the regular expression contains capturing parentheses, then each time this\\n     * regular expression matches, the results (including any undefined results) of the\\n     * capturing parentheses are spliced.\\n     *\\n     * @param string string value to split\\n     * @param limit if not undefined, the output array is truncated so that it contains no more\\n     * than 'limit' elements.\\n     */\\n    [Symbol.split](string: string, limit?: number): string[];\\n}\\n\\ninterface RegExpConstructor {\\n    readonly [Symbol.species]: RegExpConstructor;\\n}\\n\\ninterface String {\\n    /**\\n     * Matches a string an object that supports being matched against, and returns an array containing the results of that search.\\n     * @param matcher An object that supports being matched against.\\n     */\\n    match(matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null;\\n\\n    /**\\n     * Replaces text in a string, using an object that supports replacement within a string.\\n     * @param searchValue A object can search for and replace matches within a string.\\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n     */\\n    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;\\n\\n    /**\\n     * Replaces text in a string, using an object that supports replacement within a string.\\n     * @param searchValue A object can search for and replace matches within a string.\\n     * @param replacer A function that returns the replacement text.\\n     */\\n    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;\\n\\n    /**\\n     * Finds the first substring match in a regular expression search.\\n     * @param searcher An object which supports searching within a string.\\n     */\\n    search(searcher: { [Symbol.search](string: string): number; }): number;\\n\\n    /**\\n     * Split a string into substrings using the specified separator and return them as an array.\\n     * @param splitter An object that can split a string.\\n     * @param limit A value used to limit the number of elements returned in the array.\\n     */\\n    split(splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[];\\n}\\n\\ninterface ArrayBuffer {\\n    readonly [Symbol.toStringTag]: \\\"ArrayBuffer\\\";\\n}\\n\\ninterface DataView {\\n    readonly [Symbol.toStringTag]: \\\"DataView\\\";\\n}\\n\\ninterface Int8Array {\\n    readonly [Symbol.toStringTag]: \\\"Int8Array\\\";\\n}\\n\\ninterface Uint8Array {\\n    readonly [Symbol.toStringTag]: \\\"UInt8Array\\\";\\n}\\n\\ninterface Uint8ClampedArray {\\n    readonly [Symbol.toStringTag]: \\\"Uint8ClampedArray\\\";\\n}\\n\\ninterface Int16Array {\\n    readonly [Symbol.toStringTag]: \\\"Int16Array\\\";\\n}\\n\\ninterface Uint16Array {\\n    readonly [Symbol.toStringTag]: \\\"Uint16Array\\\";\\n}\\n\\ninterface Int32Array {\\n    readonly [Symbol.toStringTag]: \\\"Int32Array\\\";\\n}\\n\\ninterface Uint32Array {\\n    readonly [Symbol.toStringTag]: \\\"Uint32Array\\\";\\n}\\n\\ninterface Float32Array {\\n    readonly [Symbol.toStringTag]: \\\"Float32Array\\\";\\n}\\n\\ninterface Float64Array {\\n    readonly [Symbol.toStringTag]: \\\"Float64Array\\\";\\n}\\n\\ninterface ArrayConstructor {\\n    readonly [Symbol.species]: ArrayConstructor;\\n}\\ninterface MapConstructor {\\n    readonly [Symbol.species]: MapConstructor;\\n}\\ninterface SetConstructor {\\n    readonly [Symbol.species]: SetConstructor;\\n}\\ninterface ArrayBufferConstructor {\\n    readonly [Symbol.species]: ArrayBufferConstructor;\\n}\\n\\n/////////////////////////////\\n/// DOM APIs\\n/////////////////////////////\\n\\ninterface Account {\\n    displayName: string;\\n    id: string;\\n    imageURL?: string;\\n    name?: string;\\n    rpDisplayName: string;\\n}\\n\\ninterface AddEventListenerOptions extends EventListenerOptions {\\n    once?: boolean;\\n    passive?: boolean;\\n}\\n\\ninterface AesCbcParams extends Algorithm {\\n    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface AesCtrParams extends Algorithm {\\n    counter: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    length: number;\\n}\\n\\ninterface AesDerivedKeyParams extends Algorithm {\\n    length: number;\\n}\\n\\ninterface AesGcmParams extends Algorithm {\\n    additionalData?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    tagLength?: number;\\n}\\n\\ninterface AesKeyAlgorithm extends KeyAlgorithm {\\n    length: number;\\n}\\n\\ninterface AesKeyGenParams extends Algorithm {\\n    length: number;\\n}\\n\\ninterface Algorithm {\\n    name: string;\\n}\\n\\ninterface AnalyserOptions extends AudioNodeOptions {\\n    fftSize?: number;\\n    maxDecibels?: number;\\n    minDecibels?: number;\\n    smoothingTimeConstant?: number;\\n}\\n\\ninterface AnimationEventInit extends EventInit {\\n    animationName?: string;\\n    elapsedTime?: number;\\n}\\n\\ninterface AssertionOptions {\\n    allowList?: ScopedCredentialDescriptor[];\\n    extensions?: WebAuthnExtensions;\\n    rpId?: string;\\n    timeoutSeconds?: number;\\n}\\n\\ninterface AudioBufferOptions {\\n    length: number;\\n    numberOfChannels?: number;\\n    sampleRate: number;\\n}\\n\\ninterface AudioBufferSourceOptions {\\n    buffer?: AudioBuffer | null;\\n    detune?: number;\\n    loop?: boolean;\\n    loopEnd?: number;\\n    loopStart?: number;\\n    playbackRate?: number;\\n}\\n\\ninterface AudioContextInfo {\\n    currentTime?: number;\\n    sampleRate?: number;\\n}\\n\\ninterface AudioContextOptions {\\n    latencyHint?: AudioContextLatencyCategory | number;\\n    sampleRate?: number;\\n}\\n\\ninterface AudioNodeOptions {\\n    channelCount?: number;\\n    channelCountMode?: ChannelCountMode;\\n    channelInterpretation?: ChannelInterpretation;\\n}\\n\\ninterface AudioParamDescriptor {\\n    defaultValue?: number;\\n    maxValue?: number;\\n    minValue?: number;\\n    name?: string;\\n}\\n\\ninterface AudioProcessingEventInit extends EventInit {\\n    inputBuffer: AudioBuffer;\\n    outputBuffer: AudioBuffer;\\n    playbackTime: number;\\n}\\n\\ninterface AudioTimestamp {\\n    contextTime?: number;\\n    performanceTime?: number;\\n}\\n\\ninterface BiquadFilterOptions extends AudioNodeOptions {\\n    Q?: number;\\n    detune?: number;\\n    frequency?: number;\\n    gain?: number;\\n    type?: BiquadFilterType;\\n}\\n\\ninterface ByteLengthChunk {\\n    byteLength?: number;\\n}\\n\\ninterface CacheQueryOptions {\\n    cacheName?: string;\\n    ignoreMethod?: boolean;\\n    ignoreSearch?: boolean;\\n    ignoreVary?: boolean;\\n}\\n\\ninterface ChannelMergerOptions extends AudioNodeOptions {\\n    numberOfInputs?: number;\\n}\\n\\ninterface ChannelSplitterOptions extends AudioNodeOptions {\\n    numberOfOutputs?: number;\\n}\\n\\ninterface ClientData {\\n    challenge: string;\\n    extensions?: WebAuthnExtensions;\\n    hashAlg: string | Algorithm;\\n    origin: string;\\n    rpId: string;\\n    tokenBinding?: string;\\n}\\n\\ninterface ClientQueryOptions {\\n    includeReserved?: boolean;\\n    includeUncontrolled?: boolean;\\n    type?: ClientTypes;\\n}\\n\\ninterface CloseEventInit extends EventInit {\\n    code?: number;\\n    reason?: string;\\n    wasClean?: boolean;\\n}\\n\\ninterface CompositionEventInit extends UIEventInit {\\n    data?: string;\\n}\\n\\ninterface ConfirmSiteSpecificExceptionsInformation extends ExceptionInformation {\\n    arrayOfDomainStrings?: string[];\\n}\\n\\ninterface ConstantSourceOptions {\\n    offset?: number;\\n}\\n\\ninterface ConstrainBooleanParameters {\\n    exact?: boolean;\\n    ideal?: boolean;\\n}\\n\\ninterface ConstrainDOMStringParameters {\\n    exact?: string | string[];\\n    ideal?: string | string[];\\n}\\n\\ninterface ConstrainDoubleRange extends DoubleRange {\\n    exact?: number;\\n    ideal?: number;\\n}\\n\\ninterface ConstrainLongRange extends LongRange {\\n    exact?: number;\\n    ideal?: number;\\n}\\n\\ninterface ConstrainVideoFacingModeParameters {\\n    exact?: VideoFacingModeEnum | VideoFacingModeEnum[];\\n    ideal?: VideoFacingModeEnum | VideoFacingModeEnum[];\\n}\\n\\ninterface ConvolverOptions extends AudioNodeOptions {\\n    buffer?: AudioBuffer | null;\\n    disableNormalization?: boolean;\\n}\\n\\ninterface CustomEventInit<T = any> extends EventInit {\\n    detail?: T;\\n}\\n\\ninterface DOMRectInit {\\n    height?: number;\\n    width?: number;\\n    x?: number;\\n    y?: number;\\n}\\n\\ninterface DelayOptions extends AudioNodeOptions {\\n    delayTime?: number;\\n    maxDelayTime?: number;\\n}\\n\\ninterface DeviceAccelerationDict {\\n    x?: number | null;\\n    y?: number | null;\\n    z?: number | null;\\n}\\n\\ninterface DeviceLightEventInit extends EventInit {\\n    value?: number;\\n}\\n\\ninterface DeviceMotionEventInit extends EventInit {\\n    acceleration?: DeviceAccelerationDict | null;\\n    accelerationIncludingGravity?: DeviceAccelerationDict | null;\\n    interval?: number | null;\\n    rotationRate?: DeviceRotationRateDict | null;\\n}\\n\\ninterface DeviceOrientationEventInit extends EventInit {\\n    absolute?: boolean;\\n    alpha?: number | null;\\n    beta?: number | null;\\n    gamma?: number | null;\\n}\\n\\ninterface DeviceRotationRateDict {\\n    alpha?: number | null;\\n    beta?: number | null;\\n    gamma?: number | null;\\n}\\n\\ninterface DoubleRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface DynamicsCompressorOptions extends AudioNodeOptions {\\n    attack?: number;\\n    knee?: number;\\n    ratio?: number;\\n    release?: number;\\n    threshold?: number;\\n}\\n\\ninterface EcKeyAlgorithm extends KeyAlgorithm {\\n    namedCurve: string;\\n}\\n\\ninterface EcKeyGenParams extends Algorithm {\\n    namedCurve: string;\\n}\\n\\ninterface EcKeyImportParams extends Algorithm {\\n    namedCurve: string;\\n}\\n\\ninterface EcdhKeyDeriveParams extends Algorithm {\\n    public: CryptoKey;\\n}\\n\\ninterface EcdsaParams extends Algorithm {\\n    hash: string | Algorithm;\\n}\\n\\ninterface ErrorEventInit extends EventInit {\\n    colno?: number;\\n    error?: any;\\n    filename?: string;\\n    lineno?: number;\\n    message?: string;\\n}\\n\\ninterface EventInit {\\n    bubbles?: boolean;\\n    cancelable?: boolean;\\n    scoped?: boolean;\\n}\\n\\ninterface EventListenerOptions {\\n    capture?: boolean;\\n}\\n\\ninterface EventModifierInit extends UIEventInit {\\n    altKey?: boolean;\\n    ctrlKey?: boolean;\\n    metaKey?: boolean;\\n    modifierAltGraph?: boolean;\\n    modifierCapsLock?: boolean;\\n    modifierFn?: boolean;\\n    modifierFnLock?: boolean;\\n    modifierHyper?: boolean;\\n    modifierNumLock?: boolean;\\n    modifierOS?: boolean;\\n    modifierScrollLock?: boolean;\\n    modifierSuper?: boolean;\\n    modifierSymbol?: boolean;\\n    modifierSymbolLock?: boolean;\\n    shiftKey?: boolean;\\n}\\n\\ninterface ExceptionInformation {\\n    domain?: string | null;\\n}\\n\\ninterface ExtendableEventInit extends EventInit {\\n}\\n\\ninterface ExtendableMessageEventInit extends ExtendableEventInit {\\n    data?: any;\\n    lastEventId?: string;\\n    origin?: string;\\n    ports?: MessagePort[] | null;\\n    source?: object | ServiceWorker | MessagePort | null;\\n}\\n\\ninterface FetchEventInit extends ExtendableEventInit {\\n    clientId?: string;\\n    request: Request;\\n    reservedClientId?: string;\\n    targetClientId?: string;\\n}\\n\\ninterface FocusEventInit extends UIEventInit {\\n    relatedTarget?: EventTarget | null;\\n}\\n\\ninterface FocusNavigationEventInit extends EventInit {\\n    navigationReason?: string | null;\\n    originHeight?: number;\\n    originLeft?: number;\\n    originTop?: number;\\n    originWidth?: number;\\n}\\n\\ninterface FocusNavigationOrigin {\\n    originHeight?: number;\\n    originLeft?: number;\\n    originTop?: number;\\n    originWidth?: number;\\n}\\n\\ninterface GainOptions extends AudioNodeOptions {\\n    gain?: number;\\n}\\n\\ninterface GamepadEventInit extends EventInit {\\n    gamepad?: Gamepad;\\n}\\n\\ninterface GetNotificationOptions {\\n    tag?: string;\\n}\\n\\ninterface HashChangeEventInit extends EventInit {\\n    newURL?: string;\\n    oldURL?: string;\\n}\\n\\ninterface HkdfParams extends Algorithm {\\n    hash: string | Algorithm;\\n    info: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    salt: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface HmacImportParams extends Algorithm {\\n    hash: string | Algorithm;\\n    length?: number;\\n}\\n\\ninterface HmacKeyAlgorithm extends KeyAlgorithm {\\n    hash: KeyAlgorithm;\\n    length: number;\\n}\\n\\ninterface HmacKeyGenParams extends Algorithm {\\n    hash: string | Algorithm;\\n    length?: number;\\n}\\n\\ninterface IDBIndexParameters {\\n    multiEntry?: boolean;\\n    unique?: boolean;\\n}\\n\\ninterface IDBObjectStoreParameters {\\n    autoIncrement?: boolean;\\n    keyPath?: string | string[];\\n}\\n\\ninterface IIRFilterOptions extends AudioNodeOptions {\\n    feedback: number[];\\n    feedforward: number[];\\n}\\n\\ninterface IntersectionObserverEntryInit {\\n    boundingClientRect: DOMRectInit;\\n    intersectionRect: DOMRectInit;\\n    isIntersecting: boolean;\\n    rootBounds: DOMRectInit;\\n    target: Element;\\n    time: number;\\n}\\n\\ninterface IntersectionObserverInit {\\n    root?: Element | null;\\n    rootMargin?: string;\\n    threshold?: number | number[];\\n}\\n\\ninterface JsonWebKey {\\n    alg?: string;\\n    crv?: string;\\n    d?: string;\\n    dp?: string;\\n    dq?: string;\\n    e?: string;\\n    ext?: boolean;\\n    k?: string;\\n    key_ops?: string[];\\n    kty?: string;\\n    n?: string;\\n    oth?: RsaOtherPrimesInfo[];\\n    p?: string;\\n    q?: string;\\n    qi?: string;\\n    use?: string;\\n    x?: string;\\n    y?: string;\\n}\\n\\ninterface KeyAlgorithm {\\n    name: string;\\n}\\n\\ninterface KeyboardEventInit extends EventModifierInit {\\n    code?: string;\\n    key?: string;\\n    location?: number;\\n    repeat?: boolean;\\n}\\n\\ninterface LongRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface MSAccountInfo {\\n    accountImageUri?: string;\\n    accountName?: string;\\n    rpDisplayName: string;\\n    userDisplayName: string;\\n    userId?: string;\\n}\\n\\ninterface MSAudioLocalClientEvent extends MSLocalClientEventBase {\\n    cpuInsufficientEventRatio?: number;\\n    deviceCaptureNotFunctioningEventRatio?: number;\\n    deviceClippingEventRatio?: number;\\n    deviceEchoEventRatio?: number;\\n    deviceGlitchesEventRatio?: number;\\n    deviceHalfDuplexAECEventRatio?: number;\\n    deviceHowlingEventCount?: number;\\n    deviceLowSNREventRatio?: number;\\n    deviceLowSpeechLevelEventRatio?: number;\\n    deviceMultipleEndpointsEventCount?: number;\\n    deviceNearEndToEchoRatioEventRatio?: number;\\n    deviceRenderMuteEventRatio?: number;\\n    deviceRenderNotFunctioningEventRatio?: number;\\n    deviceRenderZeroVolumeEventRatio?: number;\\n    networkDelayEventRatio?: number;\\n    networkSendQualityEventRatio?: number;\\n}\\n\\ninterface MSAudioRecvPayload extends MSPayloadBase {\\n    burstLossLength1?: number;\\n    burstLossLength2?: number;\\n    burstLossLength3?: number;\\n    burstLossLength4?: number;\\n    burstLossLength5?: number;\\n    burstLossLength6?: number;\\n    burstLossLength7?: number;\\n    burstLossLength8OrHigher?: number;\\n    fecRecvDistance1?: number;\\n    fecRecvDistance2?: number;\\n    fecRecvDistance3?: number;\\n    packetReorderDepthAvg?: number;\\n    packetReorderDepthMax?: number;\\n    packetReorderRatio?: number;\\n    ratioCompressedSamplesAvg?: number;\\n    ratioConcealedSamplesAvg?: number;\\n    ratioStretchedSamplesAvg?: number;\\n    samplingRate?: number;\\n    signal?: MSAudioRecvSignal;\\n}\\n\\ninterface MSAudioRecvSignal {\\n    initialSignalLevelRMS?: number;\\n    recvNoiseLevelCh1?: number;\\n    recvSignalLevelCh1?: number;\\n    renderLoopbackSignalLevel?: number;\\n    renderNoiseLevel?: number;\\n    renderSignalLevel?: number;\\n}\\n\\ninterface MSAudioSendPayload extends MSPayloadBase {\\n    audioFECUsed?: boolean;\\n    samplingRate?: number;\\n    sendMutePercent?: number;\\n    signal?: MSAudioSendSignal;\\n}\\n\\ninterface MSAudioSendSignal {\\n    noiseLevel?: number;\\n    sendNoiseLevelCh1?: number;\\n    sendSignalLevelCh1?: number;\\n}\\n\\ninterface MSConnectivity {\\n    iceType?: MSIceType;\\n    iceWarningFlags?: MSIceWarningFlags;\\n    relayAddress?: MSRelayAddress;\\n}\\n\\ninterface MSCredentialFilter {\\n    accept?: MSCredentialSpec[];\\n}\\n\\ninterface MSCredentialParameters {\\n    type?: MSCredentialType;\\n}\\n\\ninterface MSCredentialSpec {\\n    id?: string;\\n    type: MSCredentialType;\\n}\\n\\ninterface MSDCCEventInit extends EventInit {\\n    maxFr?: number;\\n    maxFs?: number;\\n}\\n\\ninterface MSDSHEventInit extends EventInit {\\n    sources?: number[];\\n    timestamp?: number;\\n}\\n\\ninterface MSDelay {\\n    roundTrip?: number;\\n    roundTripMax?: number;\\n}\\n\\ninterface MSDescription extends RTCStats {\\n    connectivity?: MSConnectivity;\\n    deviceDevName?: string;\\n    localAddr?: MSIPAddressInfo;\\n    networkconnectivity?: MSNetworkConnectivityInfo;\\n    reflexiveLocalIPAddr?: MSIPAddressInfo;\\n    remoteAddr?: MSIPAddressInfo;\\n    transport?: RTCIceProtocol;\\n}\\n\\ninterface MSFIDOCredentialParameters extends MSCredentialParameters {\\n    algorithm?: string | Algorithm;\\n    authenticators?: string[];\\n}\\n\\ninterface MSIPAddressInfo {\\n    ipAddr?: string;\\n    manufacturerMacAddrMask?: string;\\n    port?: number;\\n}\\n\\ninterface MSIceWarningFlags {\\n    allocationMessageIntegrityFailed?: boolean;\\n    alternateServerReceived?: boolean;\\n    connCheckMessageIntegrityFailed?: boolean;\\n    connCheckOtherError?: boolean;\\n    fipsAllocationFailure?: boolean;\\n    multipleRelayServersAttempted?: boolean;\\n    noRelayServersConfigured?: boolean;\\n    portRangeExhausted?: boolean;\\n    pseudoTLSFailure?: boolean;\\n    tcpNatConnectivityFailed?: boolean;\\n    tcpRelayConnectivityFailed?: boolean;\\n    turnAuthUnknownUsernameError?: boolean;\\n    turnTcpAllocateFailed?: boolean;\\n    turnTcpSendFailed?: boolean;\\n    turnTcpTimedOut?: boolean;\\n    turnTurnTcpConnectivityFailed?: boolean;\\n    turnUdpAllocateFailed?: boolean;\\n    turnUdpSendFailed?: boolean;\\n    udpLocalConnectivityFailed?: boolean;\\n    udpNatConnectivityFailed?: boolean;\\n    udpRelayConnectivityFailed?: boolean;\\n    useCandidateChecksFailed?: boolean;\\n}\\n\\ninterface MSJitter {\\n    interArrival?: number;\\n    interArrivalMax?: number;\\n    interArrivalSD?: number;\\n}\\n\\ninterface MSLocalClientEventBase extends RTCStats {\\n    networkBandwidthLowEventRatio?: number;\\n    networkReceiveQualityEventRatio?: number;\\n}\\n\\ninterface MSNetwork extends RTCStats {\\n    delay?: MSDelay;\\n    jitter?: MSJitter;\\n    packetLoss?: MSPacketLoss;\\n    utilization?: MSUtilization;\\n}\\n\\ninterface MSNetworkConnectivityInfo {\\n    linkspeed?: number;\\n    networkConnectionDetails?: string;\\n    vpn?: boolean;\\n}\\n\\ninterface MSNetworkInterfaceType {\\n    interfaceTypeEthernet?: boolean;\\n    interfaceTypePPP?: boolean;\\n    interfaceTypeTunnel?: boolean;\\n    interfaceTypeWWAN?: boolean;\\n    interfaceTypeWireless?: boolean;\\n}\\n\\ninterface MSOutboundNetwork extends MSNetwork {\\n    appliedBandwidthLimit?: number;\\n}\\n\\ninterface MSPacketLoss {\\n    lossRate?: number;\\n    lossRateMax?: number;\\n}\\n\\ninterface MSPayloadBase extends RTCStats {\\n    payloadDescription?: string;\\n}\\n\\ninterface MSPortRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface MSRelayAddress {\\n    port?: number;\\n    relayAddress?: string;\\n}\\n\\ninterface MSSignatureParameters {\\n    userPrompt?: string;\\n}\\n\\ninterface MSTransportDiagnosticsStats extends RTCStats {\\n    allocationTimeInMs?: number;\\n    baseAddress?: string;\\n    baseInterface?: MSNetworkInterfaceType;\\n    iceRole?: RTCIceRole;\\n    iceWarningFlags?: MSIceWarningFlags;\\n    interfaces?: MSNetworkInterfaceType;\\n    localAddrType?: MSIceAddrType;\\n    localAddress?: string;\\n    localInterface?: MSNetworkInterfaceType;\\n    localMR?: string;\\n    localMRTCPPort?: number;\\n    localSite?: string;\\n    msRtcEngineVersion?: string;\\n    networkName?: string;\\n    numConsentReqReceived?: number;\\n    numConsentReqSent?: number;\\n    numConsentRespReceived?: number;\\n    numConsentRespSent?: number;\\n    portRangeMax?: number;\\n    portRangeMin?: number;\\n    protocol?: RTCIceProtocol;\\n    remoteAddrType?: MSIceAddrType;\\n    remoteAddress?: string;\\n    remoteMR?: string;\\n    remoteMRTCPPort?: number;\\n    remoteSite?: string;\\n    rtpRtcpMux?: boolean;\\n    stunVer?: number;\\n}\\n\\ninterface MSUtilization {\\n    bandwidthEstimation?: number;\\n    bandwidthEstimationAvg?: number;\\n    bandwidthEstimationMax?: number;\\n    bandwidthEstimationMin?: number;\\n    bandwidthEstimationStdDev?: number;\\n    packets?: number;\\n}\\n\\ninterface MSVideoPayload extends MSPayloadBase {\\n    durationSeconds?: number;\\n    resolution?: string;\\n    videoBitRateAvg?: number;\\n    videoBitRateMax?: number;\\n    videoFrameRateAvg?: number;\\n    videoPacketLossRate?: number;\\n}\\n\\ninterface MSVideoRecvPayload extends MSVideoPayload {\\n    lowBitRateCallPercent?: number;\\n    lowFrameRateCallPercent?: number;\\n    recvBitRateAverage?: number;\\n    recvBitRateMaximum?: number;\\n    recvCodecType?: string;\\n    recvFpsHarmonicAverage?: number;\\n    recvFrameRateAverage?: number;\\n    recvNumResSwitches?: number;\\n    recvReorderBufferMaxSuccessfullyOrderedExtent?: number;\\n    recvReorderBufferMaxSuccessfullyOrderedLateTime?: number;\\n    recvReorderBufferPacketsDroppedDueToBufferExhaustion?: number;\\n    recvReorderBufferPacketsDroppedDueToTimeout?: number;\\n    recvReorderBufferReorderedPackets?: number;\\n    recvResolutionHeight?: number;\\n    recvResolutionWidth?: number;\\n    recvVideoStreamsMax?: number;\\n    recvVideoStreamsMin?: number;\\n    recvVideoStreamsMode?: number;\\n    reorderBufferTotalPackets?: number;\\n    videoFrameLossRate?: number;\\n    videoPostFECPLR?: number;\\n    videoResolutions?: MSVideoResolutionDistribution;\\n}\\n\\ninterface MSVideoResolutionDistribution {\\n    cifQuality?: number;\\n    h1080Quality?: number;\\n    h1440Quality?: number;\\n    h2160Quality?: number;\\n    h720Quality?: number;\\n    vgaQuality?: number;\\n}\\n\\ninterface MSVideoSendPayload extends MSVideoPayload {\\n    sendBitRateAverage?: number;\\n    sendBitRateMaximum?: number;\\n    sendFrameRateAverage?: number;\\n    sendResolutionHeight?: number;\\n    sendResolutionWidth?: number;\\n    sendVideoStreamsMax?: number;\\n}\\n\\ninterface MediaElementAudioSourceOptions {\\n    mediaElement: HTMLMediaElement;\\n}\\n\\ninterface MediaEncryptedEventInit extends EventInit {\\n    initData?: ArrayBuffer | null;\\n    initDataType?: string;\\n}\\n\\ninterface MediaKeyMessageEventInit extends EventInit {\\n    message?: ArrayBuffer | null;\\n    messageType?: MediaKeyMessageType;\\n}\\n\\ninterface MediaKeySystemConfiguration {\\n    audioCapabilities?: MediaKeySystemMediaCapability[];\\n    distinctiveIdentifier?: MediaKeysRequirement;\\n    initDataTypes?: string[];\\n    persistentState?: MediaKeysRequirement;\\n    videoCapabilities?: MediaKeySystemMediaCapability[];\\n}\\n\\ninterface MediaKeySystemMediaCapability {\\n    contentType?: string;\\n    robustness?: string;\\n}\\n\\ninterface MediaStreamConstraints {\\n    audio?: boolean | MediaTrackConstraints;\\n    video?: boolean | MediaTrackConstraints;\\n}\\n\\ninterface MediaStreamErrorEventInit extends EventInit {\\n    error?: MediaStreamError | null;\\n}\\n\\ninterface MediaStreamEventInit extends EventInit {\\n    stream?: MediaStream;\\n}\\n\\ninterface MediaStreamTrackEventInit extends EventInit {\\n    track?: MediaStreamTrack | null;\\n}\\n\\ninterface MediaTrackCapabilities {\\n    aspectRatio?: number | DoubleRange;\\n    deviceId?: string;\\n    echoCancellation?: boolean[];\\n    facingMode?: string;\\n    frameRate?: number | DoubleRange;\\n    groupId?: string;\\n    height?: number | LongRange;\\n    sampleRate?: number | LongRange;\\n    sampleSize?: number | LongRange;\\n    volume?: number | DoubleRange;\\n    width?: number | LongRange;\\n}\\n\\ninterface MediaTrackConstraintSet {\\n    aspectRatio?: number | ConstrainDoubleRange;\\n    channelCount?: number | ConstrainLongRange;\\n    deviceId?: string | string[] | ConstrainDOMStringParameters;\\n    displaySurface?: string | string[] | ConstrainDOMStringParameters;\\n    echoCancellation?: boolean | ConstrainBooleanParameters;\\n    facingMode?: string | string[] | ConstrainDOMStringParameters;\\n    frameRate?: number | ConstrainDoubleRange;\\n    groupId?: string | string[] | ConstrainDOMStringParameters;\\n    height?: number | ConstrainLongRange;\\n    latency?: number | ConstrainDoubleRange;\\n    logicalSurface?: boolean | ConstrainBooleanParameters;\\n    sampleRate?: number | ConstrainLongRange;\\n    sampleSize?: number | ConstrainLongRange;\\n    volume?: number | ConstrainDoubleRange;\\n    width?: number | ConstrainLongRange;\\n}\\n\\ninterface MediaTrackConstraints extends MediaTrackConstraintSet {\\n    advanced?: MediaTrackConstraintSet[];\\n}\\n\\ninterface MediaTrackSettings {\\n    aspectRatio?: number;\\n    deviceId?: string;\\n    echoCancellation?: boolean;\\n    facingMode?: string;\\n    frameRate?: number;\\n    groupId?: string;\\n    height?: number;\\n    sampleRate?: number;\\n    sampleSize?: number;\\n    volume?: number;\\n    width?: number;\\n}\\n\\ninterface MediaTrackSupportedConstraints {\\n    aspectRatio?: boolean;\\n    deviceId?: boolean;\\n    echoCancellation?: boolean;\\n    facingMode?: boolean;\\n    frameRate?: boolean;\\n    groupId?: boolean;\\n    height?: boolean;\\n    sampleRate?: boolean;\\n    sampleSize?: boolean;\\n    volume?: boolean;\\n    width?: boolean;\\n}\\n\\ninterface MessageEventInit extends EventInit {\\n    channel?: string;\\n    data?: any;\\n    lastEventId?: string;\\n    origin?: string;\\n    ports?: MessagePort[];\\n    source?: Window | null;\\n}\\n\\ninterface MouseEventInit extends EventModifierInit {\\n    button?: number;\\n    buttons?: number;\\n    clientX?: number;\\n    clientY?: number;\\n    relatedTarget?: EventTarget | null;\\n    screenX?: number;\\n    screenY?: number;\\n}\\n\\ninterface MsZoomToOptions {\\n    animate?: string;\\n    contentX?: number;\\n    contentY?: number;\\n    scaleFactor?: number;\\n    viewportX?: string | null;\\n    viewportY?: string | null;\\n}\\n\\ninterface MutationObserverInit {\\n    attributeFilter?: string[];\\n    attributeOldValue?: boolean;\\n    attributes?: boolean;\\n    characterData?: boolean;\\n    characterDataOldValue?: boolean;\\n    childList?: boolean;\\n    subtree?: boolean;\\n}\\n\\ninterface NotificationEventInit extends ExtendableEventInit {\\n    action?: string;\\n    notification: Notification;\\n}\\n\\ninterface NotificationOptions {\\n    body?: string;\\n    data?: any;\\n    dir?: NotificationDirection;\\n    icon?: string;\\n    lang?: string;\\n    tag?: string;\\n}\\n\\ninterface ObjectURLOptions {\\n    oneTimeOnly?: boolean;\\n}\\n\\ninterface OfflineAudioCompletionEventInit extends EventInit {\\n    renderedBuffer: AudioBuffer;\\n}\\n\\ninterface OscillatorOptions extends AudioNodeOptions {\\n    detune?: number;\\n    frequency?: number;\\n    periodicWave?: PeriodicWave;\\n    type?: OscillatorType;\\n}\\n\\ninterface PannerOptions extends AudioNodeOptions {\\n    coneInnerAngle?: number;\\n    coneOuterAngle?: number;\\n    coneOuterGain?: number;\\n    distanceModel?: DistanceModelType;\\n    maxDistance?: number;\\n    orientationX?: number;\\n    orientationY?: number;\\n    orientationZ?: number;\\n    panningModel?: PanningModelType;\\n    positionX?: number;\\n    positionY?: number;\\n    positionZ?: number;\\n    refDistance?: number;\\n    rolloffFactor?: number;\\n}\\n\\ninterface PaymentCurrencyAmount {\\n    currency: string;\\n    currencySystem?: string;\\n    value: string;\\n}\\n\\ninterface PaymentDetailsBase {\\n    displayItems?: PaymentItem[];\\n    modifiers?: PaymentDetailsModifier[];\\n    shippingOptions?: PaymentShippingOption[];\\n}\\n\\ninterface PaymentDetailsInit extends PaymentDetailsBase {\\n    id?: string;\\n    total: PaymentItem;\\n}\\n\\ninterface PaymentDetailsModifier {\\n    additionalDisplayItems?: PaymentItem[];\\n    data?: any;\\n    supportedMethods: string | string[];\\n    total?: PaymentItem;\\n}\\n\\ninterface PaymentDetailsUpdate extends PaymentDetailsBase {\\n    error?: string;\\n    total?: PaymentItem;\\n}\\n\\ninterface PaymentItem {\\n    amount: PaymentCurrencyAmount;\\n    label: string;\\n    pending?: boolean;\\n}\\n\\ninterface PaymentMethodData {\\n    data?: any;\\n    supportedMethods: string | string[];\\n}\\n\\ninterface PaymentOptions {\\n    requestPayerEmail?: boolean;\\n    requestPayerName?: boolean;\\n    requestPayerPhone?: boolean;\\n    requestShipping?: boolean;\\n    shippingType?: string;\\n}\\n\\ninterface PaymentRequestUpdateEventInit extends EventInit {\\n}\\n\\ninterface PaymentShippingOption {\\n    amount: PaymentCurrencyAmount;\\n    id: string;\\n    label: string;\\n    selected?: boolean;\\n}\\n\\ninterface Pbkdf2Params extends Algorithm {\\n    hash: string | Algorithm;\\n    iterations: number;\\n    salt: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface PeriodicWaveConstraints {\\n    disableNormalization?: boolean;\\n}\\n\\ninterface PeriodicWaveOptions extends PeriodicWaveConstraints {\\n    imag?: number[];\\n    real?: number[];\\n}\\n\\ninterface PointerEventInit extends MouseEventInit {\\n    height?: number;\\n    isPrimary?: boolean;\\n    pointerId?: number;\\n    pointerType?: string;\\n    pressure?: number;\\n    tiltX?: number;\\n    tiltY?: number;\\n    width?: number;\\n}\\n\\ninterface PopStateEventInit extends EventInit {\\n    state?: any;\\n}\\n\\ninterface PositionOptions {\\n    enableHighAccuracy?: boolean;\\n    maximumAge?: number;\\n    timeout?: number;\\n}\\n\\ninterface ProgressEventInit extends EventInit {\\n    lengthComputable?: boolean;\\n    loaded?: number;\\n    total?: number;\\n}\\n\\ninterface PushEventInit extends ExtendableEventInit {\\n    data?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | string | null;\\n}\\n\\ninterface PushSubscriptionChangeInit extends ExtendableEventInit {\\n    newSubscription?: PushSubscription;\\n    oldSubscription?: PushSubscription;\\n}\\n\\ninterface PushSubscriptionOptionsInit {\\n    applicationServerKey?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | string | null;\\n    userVisibleOnly?: boolean;\\n}\\n\\ninterface QueuingStrategy {\\n    highWaterMark?: number;\\n    size?: WritableStreamChunkCallback;\\n}\\n\\ninterface RTCConfiguration {\\n    bundlePolicy?: RTCBundlePolicy;\\n    iceServers?: RTCIceServer[];\\n    iceTransportPolicy?: RTCIceTransportPolicy;\\n    peerIdentity?: string;\\n}\\n\\ninterface RTCDTMFToneChangeEventInit extends EventInit {\\n    tone?: string;\\n}\\n\\ninterface RTCDtlsFingerprint {\\n    algorithm?: string;\\n    value?: string;\\n}\\n\\ninterface RTCDtlsParameters {\\n    fingerprints?: RTCDtlsFingerprint[];\\n    role?: RTCDtlsRole;\\n}\\n\\ninterface RTCIceCandidateAttributes extends RTCStats {\\n    addressSourceUrl?: string;\\n    candidateType?: RTCStatsIceCandidateType;\\n    ipAddress?: string;\\n    portNumber?: number;\\n    priority?: number;\\n    transport?: string;\\n}\\n\\ninterface RTCIceCandidateComplete {\\n}\\n\\ninterface RTCIceCandidateDictionary {\\n    foundation?: string;\\n    ip?: string;\\n    msMTurnSessionId?: string;\\n    port?: number;\\n    priority?: number;\\n    protocol?: RTCIceProtocol;\\n    relatedAddress?: string;\\n    relatedPort?: number;\\n    tcpType?: RTCIceTcpCandidateType;\\n    type?: RTCIceCandidateType;\\n}\\n\\ninterface RTCIceCandidateInit {\\n    candidate?: string;\\n    sdpMLineIndex?: number;\\n    sdpMid?: string;\\n}\\n\\ninterface RTCIceCandidatePair {\\n    local?: RTCIceCandidateDictionary;\\n    remote?: RTCIceCandidateDictionary;\\n}\\n\\ninterface RTCIceCandidatePairStats extends RTCStats {\\n    availableIncomingBitrate?: number;\\n    availableOutgoingBitrate?: number;\\n    bytesReceived?: number;\\n    bytesSent?: number;\\n    localCandidateId?: string;\\n    nominated?: boolean;\\n    priority?: number;\\n    readable?: boolean;\\n    remoteCandidateId?: string;\\n    roundTripTime?: number;\\n    state?: RTCStatsIceCandidatePairState;\\n    transportId?: string;\\n    writable?: boolean;\\n}\\n\\ninterface RTCIceGatherOptions {\\n    gatherPolicy?: RTCIceGatherPolicy;\\n    iceservers?: RTCIceServer[];\\n    portRange?: MSPortRange;\\n}\\n\\ninterface RTCIceParameters {\\n    iceLite?: boolean | null;\\n    password?: string;\\n    usernameFragment?: string;\\n}\\n\\ninterface RTCIceServer {\\n    credential?: string | null;\\n    urls?: any;\\n    username?: string | null;\\n}\\n\\ninterface RTCInboundRTPStreamStats extends RTCRTPStreamStats {\\n    bytesReceived?: number;\\n    fractionLost?: number;\\n    jitter?: number;\\n    packetsLost?: number;\\n    packetsReceived?: number;\\n}\\n\\ninterface RTCMediaStreamTrackStats extends RTCStats {\\n    audioLevel?: number;\\n    echoReturnLoss?: number;\\n    echoReturnLossEnhancement?: number;\\n    frameHeight?: number;\\n    frameWidth?: number;\\n    framesCorrupted?: number;\\n    framesDecoded?: number;\\n    framesDropped?: number;\\n    framesPerSecond?: number;\\n    framesReceived?: number;\\n    framesSent?: number;\\n    remoteSource?: boolean;\\n    ssrcIds?: string[];\\n    trackIdentifier?: string;\\n}\\n\\ninterface RTCOfferOptions {\\n    iceRestart?: boolean;\\n    offerToReceiveAudio?: number;\\n    offerToReceiveVideo?: number;\\n    voiceActivityDetection?: boolean;\\n}\\n\\ninterface RTCOutboundRTPStreamStats extends RTCRTPStreamStats {\\n    bytesSent?: number;\\n    packetsSent?: number;\\n    roundTripTime?: number;\\n    targetBitrate?: number;\\n}\\n\\ninterface RTCPeerConnectionIceEventInit extends EventInit {\\n    candidate?: RTCIceCandidate;\\n}\\n\\ninterface RTCRTPStreamStats extends RTCStats {\\n    associateStatsId?: string;\\n    codecId?: string;\\n    firCount?: number;\\n    isRemote?: boolean;\\n    mediaTrackId?: string;\\n    mediaType?: string;\\n    nackCount?: number;\\n    pliCount?: number;\\n    sliCount?: number;\\n    ssrc?: string;\\n    transportId?: string;\\n}\\n\\ninterface RTCRtcpFeedback {\\n    parameter?: string;\\n    type?: string;\\n}\\n\\ninterface RTCRtcpParameters {\\n    cname?: string;\\n    mux?: boolean;\\n    reducedSize?: boolean;\\n    ssrc?: number;\\n}\\n\\ninterface RTCRtpCapabilities {\\n    codecs?: RTCRtpCodecCapability[];\\n    fecMechanisms?: string[];\\n    headerExtensions?: RTCRtpHeaderExtension[];\\n}\\n\\ninterface RTCRtpCodecCapability {\\n    clockRate?: number;\\n    kind?: string;\\n    maxSpatialLayers?: number;\\n    maxTemporalLayers?: number;\\n    maxptime?: number;\\n    name?: string;\\n    numChannels?: number;\\n    options?: any;\\n    parameters?: any;\\n    preferredPayloadType?: number;\\n    ptime?: number;\\n    rtcpFeedback?: RTCRtcpFeedback[];\\n    svcMultiStreamSupport?: boolean;\\n}\\n\\ninterface RTCRtpCodecParameters {\\n    clockRate?: number;\\n    maxptime?: number;\\n    name?: string;\\n    numChannels?: number;\\n    parameters?: any;\\n    payloadType?: number;\\n    ptime?: number;\\n    rtcpFeedback?: RTCRtcpFeedback[];\\n}\\n\\ninterface RTCRtpContributingSource {\\n    audioLevel?: number;\\n    csrc?: number;\\n    timestamp?: number;\\n}\\n\\ninterface RTCRtpEncodingParameters {\\n    active?: boolean;\\n    codecPayloadType?: number;\\n    dependencyEncodingIds?: string[];\\n    encodingId?: string;\\n    fec?: RTCRtpFecParameters;\\n    framerateScale?: number;\\n    maxBitrate?: number;\\n    maxFramerate?: number;\\n    minQuality?: number;\\n    priority?: number;\\n    resolutionScale?: number;\\n    rtx?: RTCRtpRtxParameters;\\n    ssrc?: number;\\n    ssrcRange?: RTCSsrcRange;\\n}\\n\\ninterface RTCRtpFecParameters {\\n    mechanism?: string;\\n    ssrc?: number;\\n}\\n\\ninterface RTCRtpHeaderExtension {\\n    kind?: string;\\n    preferredEncrypt?: boolean;\\n    preferredId?: number;\\n    uri?: string;\\n}\\n\\ninterface RTCRtpHeaderExtensionParameters {\\n    encrypt?: boolean;\\n    id?: number;\\n    uri?: string;\\n}\\n\\ninterface RTCRtpParameters {\\n    codecs?: RTCRtpCodecParameters[];\\n    degradationPreference?: RTCDegradationPreference;\\n    encodings?: RTCRtpEncodingParameters[];\\n    headerExtensions?: RTCRtpHeaderExtensionParameters[];\\n    muxId?: string;\\n    rtcp?: RTCRtcpParameters;\\n}\\n\\ninterface RTCRtpRtxParameters {\\n    ssrc?: number;\\n}\\n\\ninterface RTCRtpUnhandled {\\n    muxId?: string;\\n    payloadType?: number;\\n    ssrc?: number;\\n}\\n\\ninterface RTCSessionDescriptionInit {\\n    sdp?: string;\\n    type?: RTCSdpType;\\n}\\n\\ninterface RTCSrtpKeyParam {\\n    keyMethod?: string;\\n    keySalt?: string;\\n    lifetime?: string;\\n    mkiLength?: number;\\n    mkiValue?: number;\\n}\\n\\ninterface RTCSrtpSdesParameters {\\n    cryptoSuite?: string;\\n    keyParams?: RTCSrtpKeyParam[];\\n    sessionParams?: string[];\\n    tag?: number;\\n}\\n\\ninterface RTCSsrcRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface RTCStats {\\n    id?: string;\\n    msType?: MSStatsType;\\n    timestamp?: number;\\n    type?: RTCStatsType;\\n}\\n\\ninterface RTCStatsReport {\\n}\\n\\ninterface RTCTransportStats extends RTCStats {\\n    activeConnection?: boolean;\\n    bytesReceived?: number;\\n    bytesSent?: number;\\n    localCertificateId?: string;\\n    remoteCertificateId?: string;\\n    rtcpTransportStatsId?: string;\\n    selectedCandidatePairId?: string;\\n}\\n\\ninterface RegistrationOptions {\\n    scope?: string;\\n}\\n\\ninterface RequestInit {\\n    body?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null;\\n    cache?: RequestCache;\\n    credentials?: RequestCredentials;\\n    headers?: HeadersInit;\\n    integrity?: string;\\n    keepalive?: boolean;\\n    method?: string;\\n    mode?: RequestMode;\\n    redirect?: RequestRedirect;\\n    referrer?: string;\\n    referrerPolicy?: ReferrerPolicy;\\n    signal?: AbortSignal;\\n    window?: any;\\n}\\n\\ninterface ResponseInit {\\n    headers?: HeadersInit;\\n    status?: number;\\n    statusText?: string;\\n}\\n\\ninterface RsaHashedImportParams extends Algorithm {\\n    hash: string | Algorithm;\\n}\\n\\ninterface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {\\n    hash: KeyAlgorithm;\\n}\\n\\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\\n    hash: string | Algorithm;\\n}\\n\\ninterface RsaKeyAlgorithm extends KeyAlgorithm {\\n    modulusLength: number;\\n    publicExponent: Uint8Array;\\n}\\n\\ninterface RsaKeyGenParams extends Algorithm {\\n    modulusLength: number;\\n    publicExponent: Uint8Array;\\n}\\n\\ninterface RsaOaepParams extends Algorithm {\\n    label?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface RsaOtherPrimesInfo {\\n    d?: string;\\n    r?: string;\\n    t?: string;\\n}\\n\\ninterface RsaPssParams extends Algorithm {\\n    saltLength: number;\\n}\\n\\ninterface ScopedCredentialDescriptor {\\n    id: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    transports?: Transport[];\\n    type: ScopedCredentialType;\\n}\\n\\ninterface ScopedCredentialOptions {\\n    excludeList?: ScopedCredentialDescriptor[];\\n    extensions?: WebAuthnExtensions;\\n    rpId?: string;\\n    timeoutSeconds?: number;\\n}\\n\\ninterface ScopedCredentialParameters {\\n    algorithm: string | Algorithm;\\n    type: ScopedCredentialType;\\n}\\n\\ninterface SecurityPolicyViolationEventInit extends EventInit {\\n    blockedURI?: string;\\n    columnNumber?: number;\\n    documentURI?: string;\\n    effectiveDirective?: string;\\n    lineNumber?: number;\\n    originalPolicy?: string;\\n    referrer?: string;\\n    sourceFile?: string;\\n    statusCode?: number;\\n    violatedDirective?: string;\\n}\\n\\ninterface ServiceWorkerMessageEventInit extends EventInit {\\n    data?: any;\\n    lastEventId?: string;\\n    origin?: string;\\n    ports?: MessagePort[] | null;\\n    source?: ServiceWorker | MessagePort | null;\\n}\\n\\ninterface SpeechSynthesisEventInit extends EventInit {\\n    charIndex?: number;\\n    charLength?: number;\\n    elapsedTime?: number;\\n    name?: string;\\n    utterance?: SpeechSynthesisUtterance | null;\\n}\\n\\ninterface StereoPannerOptions extends AudioNodeOptions {\\n    pan?: number;\\n}\\n\\ninterface StoreExceptionsInformation extends ExceptionInformation {\\n    detailURI?: string | null;\\n    explanationString?: string | null;\\n    siteName?: string | null;\\n}\\n\\ninterface StoreSiteSpecificExceptionsInformation extends StoreExceptionsInformation {\\n    arrayOfDomainStrings?: string[];\\n}\\n\\ninterface SyncEventInit extends ExtendableEventInit {\\n    lastChance?: boolean;\\n    tag: string;\\n}\\n\\ninterface TextDecodeOptions {\\n    stream?: boolean;\\n}\\n\\ninterface TextDecoderOptions {\\n    fatal?: boolean;\\n    ignoreBOM?: boolean;\\n}\\n\\ninterface TrackEventInit extends EventInit {\\n    track?: VideoTrack | AudioTrack | TextTrack | null;\\n}\\n\\ninterface TransitionEventInit extends EventInit {\\n    elapsedTime?: number;\\n    propertyName?: string;\\n}\\n\\ninterface UIEventInit extends EventInit {\\n    detail?: number;\\n    view?: Window | null;\\n}\\n\\ninterface UnderlyingSink {\\n    abort?: WritableStreamErrorCallback;\\n    close?: WritableStreamDefaultControllerCallback;\\n    start: WritableStreamDefaultControllerCallback;\\n    write?: WritableStreamChunkCallback;\\n}\\n\\ninterface VRDisplayEventInit extends EventInit {\\n    display: VRDisplay;\\n    reason?: VRDisplayEventReason;\\n}\\n\\ninterface VRLayer {\\n    leftBounds?: number[] | null;\\n    rightBounds?: number[] | null;\\n    source?: HTMLCanvasElement | null;\\n}\\n\\ninterface VRStageParameters {\\n    sittingToStandingTransform?: Float32Array;\\n    sizeX?: number;\\n    sizeY?: number;\\n}\\n\\ninterface WaveShaperOptions extends AudioNodeOptions {\\n    curve?: number[];\\n    oversample?: OverSampleType;\\n}\\n\\ninterface WebAuthnExtensions {\\n}\\n\\ninterface WebGLContextAttributes {\\n    alpha?: boolean;\\n    antialias?: boolean;\\n    depth?: boolean;\\n    failIfMajorPerformanceCaveat?: boolean;\\n    premultipliedAlpha?: boolean;\\n    preserveDrawingBuffer?: boolean;\\n    stencil?: boolean;\\n}\\n\\ninterface WebGLContextEventInit extends EventInit {\\n    statusMessage?: string;\\n}\\n\\ninterface WheelEventInit extends MouseEventInit {\\n    deltaMode?: number;\\n    deltaX?: number;\\n    deltaY?: number;\\n    deltaZ?: number;\\n}\\n\\ninterface EventListener {\\n    (evt: Event): void;\\n}\\n\\ntype WebKitEntriesCallback = ((entries: WebKitEntry[]) => void) | { handleEvent(entries: WebKitEntry[]): void; };\\n\\ntype WebKitErrorCallback = ((err: DOMError) => void) | { handleEvent(err: DOMError): void; };\\n\\ntype WebKitFileCallback = ((file: File) => void) | { handleEvent(file: File): void; };\\n\\ninterface ANGLE_instanced_arrays {\\n    drawArraysInstancedANGLE(mode: number, first: number, count: number, primcount: number): void;\\n    drawElementsInstancedANGLE(mode: number, count: number, type: number, offset: number, primcount: number): void;\\n    vertexAttribDivisorANGLE(index: number, divisor: number): void;\\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: number;\\n}\\n\\ndeclare var ANGLE_instanced_arrays: {\\n    prototype: ANGLE_instanced_arrays;\\n    new(): ANGLE_instanced_arrays;\\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: number;\\n};\\n\\ninterface AbortController {\\n    readonly signal: AbortSignal;\\n    abort(): void;\\n}\\n\\ndeclare var AbortController: {\\n    prototype: AbortController;\\n    new(): AbortController;\\n};\\n\\ninterface AbortSignalEventMap {\\n    \\\"abort\\\": ProgressEvent;\\n}\\n\\ninterface AbortSignal extends EventTarget {\\n    readonly aborted: boolean;\\n    onabort: ((this: AbortSignal, ev: ProgressEvent) => any) | null;\\n    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var AbortSignal: {\\n    prototype: AbortSignal;\\n    new(): AbortSignal;\\n};\\n\\ninterface AbstractWorkerEventMap {\\n    \\\"error\\\": ErrorEvent;\\n}\\n\\ninterface AbstractWorker {\\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface AesCfbParams extends Algorithm {\\n    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;\\n}\\n\\ninterface AesCmacParams extends Algorithm {\\n    length: number;\\n}\\n\\ninterface AnalyserNode extends AudioNode {\\n    fftSize: number;\\n    readonly frequencyBinCount: number;\\n    maxDecibels: number;\\n    minDecibels: number;\\n    smoothingTimeConstant: number;\\n    getByteFrequencyData(array: Uint8Array): void;\\n    getByteTimeDomainData(array: Uint8Array): void;\\n    getFloatFrequencyData(array: Float32Array): void;\\n    getFloatTimeDomainData(array: Float32Array): void;\\n}\\n\\ndeclare var AnalyserNode: {\\n    prototype: AnalyserNode;\\n    new(): AnalyserNode;\\n};\\n\\ninterface Animation {\\n    currentTime: number | null;\\n    effect: AnimationEffectReadOnly;\\n    readonly finished: Promise<Animation>;\\n    id: string;\\n    readonly pending: boolean;\\n    readonly playState: \\\"idle\\\" | \\\"running\\\" | \\\"paused\\\" | \\\"finished\\\";\\n    playbackRate: number;\\n    readonly ready: Promise<Animation>;\\n    startTime: number;\\n    timeline: AnimationTimeline;\\n    cancel(): void;\\n    finish(): void;\\n    oncancel: (this: Animation, ev: AnimationPlaybackEvent) => any;\\n    onfinish: (this: Animation, ev: AnimationPlaybackEvent) => any;\\n    pause(): void;\\n    play(): void;\\n    reverse(): void;\\n}\\n\\ndeclare var Animation: {\\n    prototype: Animation;\\n    new(effect?: AnimationEffectReadOnly, timeline?: AnimationTimeline): Animation;\\n};\\n\\ninterface AnimationEffectReadOnly {\\n    readonly timing: number;\\n    getComputedTiming(): ComputedTimingProperties;\\n}\\n\\ninterface AnimationEvent extends Event {\\n    readonly animationName: string;\\n    readonly elapsedTime: number;\\n}\\n\\ndeclare var AnimationEvent: {\\n    prototype: AnimationEvent;\\n    new(typeArg: string, eventInitDict?: AnimationEventInit): AnimationEvent;\\n};\\n\\ninterface AnimationKeyFrame {\\n    easing?: string | string[];\\n    offset?: number | null | (number | null)[];\\n    [index: string]: string | number | number[] | string[] | null | (number | null)[] | undefined;\\n}\\n\\ninterface AnimationOptions {\\n    delay?: number;\\n    direction?: \\\"normal\\\" | \\\"reverse\\\" | \\\"alternate\\\" | \\\"alternate-reverse\\\";\\n    duration?: number;\\n    easing?: string;\\n    endDelay?: number;\\n    fill?: \\\"none\\\" | \\\"forwards\\\" | \\\"backwards\\\" | \\\"both\\\"| \\\"auto\\\";\\n    id?: string;\\n    iterationStart?: number;\\n    iterations?: number;\\n}\\n\\ninterface AnimationPlaybackEvent extends Event {\\n    readonly currentTime: number | null;\\n    readonly timelineTime: number | null;\\n}\\n\\ndeclare var AnimationPlaybackEvent: {\\n    prototype: AnimationPlaybackEvent;\\n    new(type: string, eventInitDict?: AnimationPlaybackEventInit): AnimationPlaybackEvent;\\n};\\n\\ninterface AnimationPlaybackEventInit extends EventInit {\\n    currentTime?: number | null;\\n    timelineTime?: number | null;\\n}\\n\\ninterface AnimationTimeline {\\n    readonly currentTime: number | null;\\n}\\n\\ninterface ApplicationCacheEventMap {\\n    \\\"cached\\\": Event;\\n    \\\"checking\\\": Event;\\n    \\\"downloading\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"noupdate\\\": Event;\\n    \\\"obsolete\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"updateready\\\": Event;\\n}\\n\\ninterface ApplicationCache extends EventTarget {\\n    oncached: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onchecking: ((this: ApplicationCache, ev: Event) => any) | null;\\n    ondownloading: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onerror: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onnoupdate: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onobsolete: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onprogress: ((this: ApplicationCache, ev: ProgressEvent) => any) | null;\\n    onupdateready: ((this: ApplicationCache, ev: Event) => any) | null;\\n    readonly status: number;\\n    abort(): void;\\n    swapCache(): void;\\n    update(): void;\\n    readonly CHECKING: number;\\n    readonly DOWNLOADING: number;\\n    readonly IDLE: number;\\n    readonly OBSOLETE: number;\\n    readonly UNCACHED: number;\\n    readonly UPDATEREADY: number;\\n    addEventListener<K extends keyof ApplicationCacheEventMap>(type: K, listener: (this: ApplicationCache, ev: ApplicationCacheEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ApplicationCacheEventMap>(type: K, listener: (this: ApplicationCache, ev: ApplicationCacheEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ApplicationCache: {\\n    prototype: ApplicationCache;\\n    new(): ApplicationCache;\\n    readonly CHECKING: number;\\n    readonly DOWNLOADING: number;\\n    readonly IDLE: number;\\n    readonly OBSOLETE: number;\\n    readonly UNCACHED: number;\\n    readonly UPDATEREADY: number;\\n};\\n\\ninterface AssignedNodesOptions {\\n    flatten?: boolean;\\n}\\n\\ninterface Attr extends Node {\\n    readonly name: string;\\n    readonly ownerElement: Element | null;\\n    readonly prefix: string | null;\\n    readonly specified: boolean;\\n    value: string;\\n}\\n\\ndeclare var Attr: {\\n    prototype: Attr;\\n    new(): Attr;\\n};\\n\\ninterface AudioBuffer {\\n    readonly duration: number;\\n    readonly length: number;\\n    readonly numberOfChannels: number;\\n    readonly sampleRate: number;\\n    copyFromChannel(destination: Float32Array, channelNumber: number, startInChannel?: number): void;\\n    copyToChannel(source: Float32Array, channelNumber: number, startInChannel?: number): void;\\n    getChannelData(channel: number): Float32Array;\\n}\\n\\ndeclare var AudioBuffer: {\\n    prototype: AudioBuffer;\\n    new(): AudioBuffer;\\n};\\n\\ninterface AudioBufferSourceNodeEventMap {\\n    \\\"ended\\\": Event;\\n}\\n\\ninterface AudioBufferSourceNode extends AudioNode {\\n    buffer: AudioBuffer | null;\\n    readonly detune: AudioParam;\\n    loop: boolean;\\n    loopEnd: number;\\n    loopStart: number;\\n    onended: ((this: AudioBufferSourceNode, ev: Event) => any) | null;\\n    readonly playbackRate: AudioParam;\\n    start(when?: number, offset?: number, duration?: number): void;\\n    stop(when?: number): void;\\n    addEventListener<K extends keyof AudioBufferSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioBufferSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AudioBufferSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioBufferSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var AudioBufferSourceNode: {\\n    prototype: AudioBufferSourceNode;\\n    new(): AudioBufferSourceNode;\\n};\\n\\ninterface AudioContextEventMap {\\n    \\\"statechange\\\": Event;\\n}\\n\\ninterface AudioContextBase extends EventTarget {\\n    readonly currentTime: number;\\n    readonly destination: AudioDestinationNode;\\n    readonly listener: AudioListener;\\n    onstatechange: ((this: AudioContext, ev: Event) => any) | null;\\n    readonly sampleRate: number;\\n    readonly state: AudioContextState;\\n    close(): Promise<void>;\\n    createAnalyser(): AnalyserNode;\\n    createBiquadFilter(): BiquadFilterNode;\\n    createBuffer(numberOfChannels: number, length: number, sampleRate: number): AudioBuffer;\\n    createBufferSource(): AudioBufferSourceNode;\\n    createChannelMerger(numberOfInputs?: number): ChannelMergerNode;\\n    createChannelSplitter(numberOfOutputs?: number): ChannelSplitterNode;\\n    createConvolver(): ConvolverNode;\\n    createDelay(maxDelayTime?: number): DelayNode;\\n    createDynamicsCompressor(): DynamicsCompressorNode;\\n    createGain(): GainNode;\\n    createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;\\n    createMediaElementSource(mediaElement: HTMLMediaElement): MediaElementAudioSourceNode;\\n    createMediaStreamSource(mediaStream: MediaStream): MediaStreamAudioSourceNode;\\n    createOscillator(): OscillatorNode;\\n    createPanner(): PannerNode;\\n    createPeriodicWave(real: Float32Array, imag: Float32Array, constraints?: PeriodicWaveConstraints): PeriodicWave;\\n    createScriptProcessor(bufferSize?: number, numberOfInputChannels?: number, numberOfOutputChannels?: number): ScriptProcessorNode;\\n    createStereoPanner(): StereoPannerNode;\\n    createWaveShaper(): WaveShaperNode;\\n    decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback, errorCallback?: DecodeErrorCallback): Promise<AudioBuffer>;\\n    resume(): Promise<void>;\\n    addEventListener<K extends keyof AudioContextEventMap>(type: K, listener: (this: AudioContext, ev: AudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AudioContextEventMap>(type: K, listener: (this: AudioContext, ev: AudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface AudioContext extends AudioContextBase {\\n    suspend(): Promise<void>;\\n}\\n\\ndeclare var AudioContext: {\\n    prototype: AudioContext;\\n    new(): AudioContext;\\n};\\n\\ninterface AudioDestinationNode extends AudioNode {\\n    readonly maxChannelCount: number;\\n}\\n\\ndeclare var AudioDestinationNode: {\\n    prototype: AudioDestinationNode;\\n    new(): AudioDestinationNode;\\n};\\n\\ninterface AudioListener {\\n    /** @deprecated */\\n    dopplerFactor: number;\\n    /** @deprecated */\\n    speedOfSound: number;\\n    /** @deprecated */\\n    setOrientation(x: number, y: number, z: number, xUp: number, yUp: number, zUp: number): void;\\n    /** @deprecated */\\n    setPosition(x: number, y: number, z: number): void;\\n    /** @deprecated */\\n    setVelocity(x: number, y: number, z: number): void;\\n}\\n\\ndeclare var AudioListener: {\\n    prototype: AudioListener;\\n    new(): AudioListener;\\n};\\n\\ninterface AudioNode extends EventTarget {\\n    channelCount: number;\\n    channelCountMode: ChannelCountMode;\\n    channelInterpretation: ChannelInterpretation;\\n    readonly context: AudioContext;\\n    readonly numberOfInputs: number;\\n    readonly numberOfOutputs: number;\\n    connect(destination: AudioNode, output?: number, input?: number): AudioNode;\\n    connect(destination: AudioParam, output?: number): void;\\n    disconnect(): void;\\n    disconnect(output: number): void;\\n    disconnect(destination: AudioNode): void;\\n    disconnect(destination: AudioNode, output: number): void;\\n    disconnect(destination: AudioNode, output: number, input: number): void;\\n    disconnect(destination: AudioParam): void;\\n    disconnect(destination: AudioParam, output: number): void;\\n}\\n\\ndeclare var AudioNode: {\\n    prototype: AudioNode;\\n    new(): AudioNode;\\n};\\n\\ninterface AudioParam {\\n    readonly defaultValue: number;\\n    value: number;\\n    cancelScheduledValues(cancelTime: number): AudioParam;\\n    exponentialRampToValueAtTime(value: number, endTime: number): AudioParam;\\n    linearRampToValueAtTime(value: number, endTime: number): AudioParam;\\n    setTargetAtTime(target: number, startTime: number, timeConstant: number): AudioParam;\\n    setValueAtTime(value: number, startTime: number): AudioParam;\\n    setValueCurveAtTime(values: number[], startTime: number, duration: number): AudioParam;\\n}\\n\\ndeclare var AudioParam: {\\n    prototype: AudioParam;\\n    new(): AudioParam;\\n};\\n\\ninterface AudioProcessingEvent extends Event {\\n    readonly inputBuffer: AudioBuffer;\\n    readonly outputBuffer: AudioBuffer;\\n    readonly playbackTime: number;\\n}\\n\\ndeclare var AudioProcessingEvent: {\\n    prototype: AudioProcessingEvent;\\n    new(): AudioProcessingEvent;\\n};\\n\\ninterface AudioTrack {\\n    enabled: boolean;\\n    readonly id: string;\\n    kind: string;\\n    readonly label: string;\\n    language: string;\\n    readonly sourceBuffer: SourceBuffer;\\n}\\n\\ndeclare var AudioTrack: {\\n    prototype: AudioTrack;\\n    new(): AudioTrack;\\n};\\n\\ninterface AudioTrackListEventMap {\\n    \\\"addtrack\\\": TrackEvent;\\n    \\\"change\\\": Event;\\n    \\\"removetrack\\\": TrackEvent;\\n}\\n\\ninterface AudioTrackList extends EventTarget {\\n    readonly length: number;\\n    onaddtrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;\\n    onchange: ((this: AudioTrackList, ev: Event) => any) | null;\\n    onremovetrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;\\n    getTrackById(id: string): AudioTrack | null;\\n    item(index: number): AudioTrack;\\n    addEventListener<K extends keyof AudioTrackListEventMap>(type: K, listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AudioTrackListEventMap>(type: K, listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [index: number]: AudioTrack;\\n}\\n\\ndeclare var AudioTrackList: {\\n    prototype: AudioTrackList;\\n    new(): AudioTrackList;\\n};\\n\\ninterface BarProp {\\n    readonly visible: boolean;\\n}\\n\\ndeclare var BarProp: {\\n    prototype: BarProp;\\n    new(): BarProp;\\n};\\n\\ninterface BeforeUnloadEvent extends Event {\\n    returnValue: any;\\n}\\n\\ndeclare var BeforeUnloadEvent: {\\n    prototype: BeforeUnloadEvent;\\n    new(): BeforeUnloadEvent;\\n};\\n\\ninterface BhxBrowser {\\n    readonly lastError: DOMException;\\n    checkMatchesGlobExpression(pattern: string, value: string): boolean;\\n    checkMatchesUriExpression(pattern: string, value: string): boolean;\\n    clearLastError(): void;\\n    currentWindowId(): number;\\n    fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;\\n    genericFunction(functionId: number, destination: any, parameters?: string, callbackId?: number): void;\\n    genericSynchronousFunction(functionId: number, parameters?: string): string;\\n    getExtensionId(): string;\\n    getThisAddress(): any;\\n    registerGenericFunctionCallbackHandler(callbackHandler: Function): void;\\n    registerGenericListenerHandler(eventHandler: Function): void;\\n    setLastError(parameters: string): void;\\n    webPlatformGenericFunction(destination: any, parameters?: string, callbackId?: number): void;\\n}\\n\\ndeclare var BhxBrowser: {\\n    prototype: BhxBrowser;\\n    new(): BhxBrowser;\\n};\\n\\ninterface BiquadFilterNode extends AudioNode {\\n    readonly Q: AudioParam;\\n    readonly detune: AudioParam;\\n    readonly frequency: AudioParam;\\n    readonly gain: AudioParam;\\n    type: BiquadFilterType;\\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\\n}\\n\\ndeclare var BiquadFilterNode: {\\n    prototype: BiquadFilterNode;\\n    new(): BiquadFilterNode;\\n};\\n\\ninterface Blob {\\n    readonly size: number;\\n    readonly type: string;\\n    msClose(): void;\\n    msDetachStream(): any;\\n    slice(start?: number, end?: number, contentType?: string): Blob;\\n}\\n\\ndeclare var Blob: {\\n    prototype: Blob;\\n    new (blobParts?: any[], options?: BlobPropertyBag): Blob;\\n};\\n\\ninterface BlobPropertyBag {\\n    endings?: string;\\n    type?: string;\\n}\\n\\ninterface Body {\\n    readonly bodyUsed: boolean;\\n    arrayBuffer(): Promise<ArrayBuffer>;\\n    blob(): Promise<Blob>;\\n    formData(): Promise<FormData>;\\n    json(): Promise<any>;\\n    text(): Promise<string>;\\n}\\n\\ninterface BroadcastChannel extends EventTarget {\\n    readonly name: string;\\n    onmessage: (ev: MessageEvent) => any;\\n    onmessageerror: (ev: MessageEvent) => any;\\n    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    close(): void;\\n    postMessage(message: any): void;\\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var BroadcastChannel: {\\n    prototype: BroadcastChannel;\\n    new(name: string): BroadcastChannel;\\n};\\n\\ninterface BroadcastChannelEventMap {\\n    message: MessageEvent;\\n    messageerror: MessageEvent;\\n}\\n\\ninterface ByteLengthQueuingStrategy {\\n    highWaterMark: number;\\n    size(chunk?: any): number;\\n}\\n\\ndeclare var ByteLengthQueuingStrategy: {\\n    prototype: ByteLengthQueuingStrategy;\\n    new(strategy: QueuingStrategy): ByteLengthQueuingStrategy;\\n};\\n\\ninterface CDATASection extends Text {\\n}\\n\\ndeclare var CDATASection: {\\n    prototype: CDATASection;\\n    new(): CDATASection;\\n};\\n\\ninterface CSS {\\n    escape(value: string): string;\\n    supports(property: string, value?: string): boolean;\\n}\\ndeclare var CSS: CSS;\\n\\ninterface CSSConditionRule extends CSSGroupingRule {\\n    conditionText: string;\\n}\\n\\ndeclare var CSSConditionRule: {\\n    prototype: CSSConditionRule;\\n    new(): CSSConditionRule;\\n};\\n\\ninterface CSSFontFaceRule extends CSSRule {\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSFontFaceRule: {\\n    prototype: CSSFontFaceRule;\\n    new(): CSSFontFaceRule;\\n};\\n\\ninterface CSSGroupingRule extends CSSRule {\\n    readonly cssRules: CSSRuleList;\\n    deleteRule(index: number): void;\\n    insertRule(rule: string, index: number): number;\\n}\\n\\ndeclare var CSSGroupingRule: {\\n    prototype: CSSGroupingRule;\\n    new(): CSSGroupingRule;\\n};\\n\\ninterface CSSImportRule extends CSSRule {\\n    readonly href: string;\\n    readonly media: MediaList;\\n    readonly styleSheet: CSSStyleSheet;\\n}\\n\\ndeclare var CSSImportRule: {\\n    prototype: CSSImportRule;\\n    new(): CSSImportRule;\\n};\\n\\ninterface CSSKeyframeRule extends CSSRule {\\n    keyText: string;\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSKeyframeRule: {\\n    prototype: CSSKeyframeRule;\\n    new(): CSSKeyframeRule;\\n};\\n\\ninterface CSSKeyframesRule extends CSSRule {\\n    readonly cssRules: CSSRuleList;\\n    name: string;\\n    appendRule(rule: string): void;\\n    deleteRule(rule: string): void;\\n    findRule(rule: string): CSSKeyframeRule | null;\\n}\\n\\ndeclare var CSSKeyframesRule: {\\n    prototype: CSSKeyframesRule;\\n    new(): CSSKeyframesRule;\\n};\\n\\ninterface CSSMediaRule extends CSSConditionRule {\\n    readonly media: MediaList;\\n}\\n\\ndeclare var CSSMediaRule: {\\n    prototype: CSSMediaRule;\\n    new(): CSSMediaRule;\\n};\\n\\ninterface CSSNamespaceRule extends CSSRule {\\n    readonly namespaceURI: string;\\n    readonly prefix: string;\\n}\\n\\ndeclare var CSSNamespaceRule: {\\n    prototype: CSSNamespaceRule;\\n    new(): CSSNamespaceRule;\\n};\\n\\ninterface CSSPageRule extends CSSRule {\\n    readonly pseudoClass: string;\\n    readonly selector: string;\\n    selectorText: string;\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSPageRule: {\\n    prototype: CSSPageRule;\\n    new(): CSSPageRule;\\n};\\n\\ninterface CSSRule {\\n    cssText: string;\\n    readonly parentRule: CSSRule | null;\\n    readonly parentStyleSheet: CSSStyleSheet | null;\\n    readonly type: number;\\n    readonly CHARSET_RULE: number;\\n    readonly FONT_FACE_RULE: number;\\n    readonly IMPORT_RULE: number;\\n    readonly KEYFRAMES_RULE: number;\\n    readonly KEYFRAME_RULE: number;\\n    readonly MEDIA_RULE: number;\\n    readonly NAMESPACE_RULE: number;\\n    readonly PAGE_RULE: number;\\n    readonly STYLE_RULE: number;\\n    readonly SUPPORTS_RULE: number;\\n    readonly UNKNOWN_RULE: number;\\n    readonly VIEWPORT_RULE: number;\\n}\\n\\ndeclare var CSSRule: {\\n    prototype: CSSRule;\\n    new(): CSSRule;\\n    readonly CHARSET_RULE: number;\\n    readonly FONT_FACE_RULE: number;\\n    readonly IMPORT_RULE: number;\\n    readonly KEYFRAMES_RULE: number;\\n    readonly KEYFRAME_RULE: number;\\n    readonly MEDIA_RULE: number;\\n    readonly NAMESPACE_RULE: number;\\n    readonly PAGE_RULE: number;\\n    readonly STYLE_RULE: number;\\n    readonly SUPPORTS_RULE: number;\\n    readonly UNKNOWN_RULE: number;\\n    readonly VIEWPORT_RULE: number;\\n};\\n\\ninterface CSSRuleList {\\n    readonly length: number;\\n    item(index: number): CSSRule | null;\\n    [index: number]: CSSRule;\\n}\\n\\ndeclare var CSSRuleList: {\\n    prototype: CSSRuleList;\\n    new(): CSSRuleList;\\n};\\n\\ninterface CSSStyleDeclaration {\\n    alignContent: string | null;\\n    alignItems: string | null;\\n    alignSelf: string | null;\\n    alignmentBaseline: string | null;\\n    animation: string | null;\\n    animationDelay: string | null;\\n    animationDirection: string | null;\\n    animationDuration: string | null;\\n    animationFillMode: string | null;\\n    animationIterationCount: string | null;\\n    animationName: string | null;\\n    animationPlayState: string | null;\\n    animationTimingFunction: string | null;\\n    backfaceVisibility: string | null;\\n    background: string | null;\\n    backgroundAttachment: string | null;\\n    backgroundClip: string | null;\\n    backgroundColor: string | null;\\n    backgroundImage: string | null;\\n    backgroundOrigin: string | null;\\n    backgroundPosition: string | null;\\n    backgroundPositionX: string | null;\\n    backgroundPositionY: string | null;\\n    backgroundRepeat: string | null;\\n    backgroundSize: string | null;\\n    baselineShift: string | null;\\n    border: string | null;\\n    borderBottom: string | null;\\n    borderBottomColor: string | null;\\n    borderBottomLeftRadius: string | null;\\n    borderBottomRightRadius: string | null;\\n    borderBottomStyle: string | null;\\n    borderBottomWidth: string | null;\\n    borderCollapse: string | null;\\n    borderColor: string | null;\\n    borderImage: string | null;\\n    borderImageOutset: string | null;\\n    borderImageRepeat: string | null;\\n    borderImageSlice: string | null;\\n    borderImageSource: string | null;\\n    borderImageWidth: string | null;\\n    borderLeft: string | null;\\n    borderLeftColor: string | null;\\n    borderLeftStyle: string | null;\\n    borderLeftWidth: string | null;\\n    borderRadius: string | null;\\n    borderRight: string | null;\\n    borderRightColor: string | null;\\n    borderRightStyle: string | null;\\n    borderRightWidth: string | null;\\n    borderSpacing: string | null;\\n    borderStyle: string | null;\\n    borderTop: string | null;\\n    borderTopColor: string | null;\\n    borderTopLeftRadius: string | null;\\n    borderTopRightRadius: string | null;\\n    borderTopStyle: string | null;\\n    borderTopWidth: string | null;\\n    borderWidth: string | null;\\n    bottom: string | null;\\n    boxShadow: string | null;\\n    boxSizing: string | null;\\n    breakAfter: string | null;\\n    breakBefore: string | null;\\n    breakInside: string | null;\\n    captionSide: string | null;\\n    clear: string | null;\\n    clip: string | null;\\n    clipPath: string | null;\\n    clipRule: string | null;\\n    color: string | null;\\n    colorInterpolationFilters: string | null;\\n    columnCount: any;\\n    columnFill: string | null;\\n    columnGap: any;\\n    columnRule: string | null;\\n    columnRuleColor: any;\\n    columnRuleStyle: string | null;\\n    columnRuleWidth: any;\\n    columnSpan: string | null;\\n    columnWidth: any;\\n    columns: string | null;\\n    content: string | null;\\n    counterIncrement: string | null;\\n    counterReset: string | null;\\n    cssFloat: string | null;\\n    cssText: string;\\n    cursor: string | null;\\n    direction: string | null;\\n    display: string | null;\\n    dominantBaseline: string | null;\\n    emptyCells: string | null;\\n    enableBackground: string | null;\\n    fill: string | null;\\n    fillOpacity: string | null;\\n    fillRule: string | null;\\n    filter: string | null;\\n    flex: string | null;\\n    flexBasis: string | null;\\n    flexDirection: string | null;\\n    flexFlow: string | null;\\n    flexGrow: string | null;\\n    flexShrink: string | null;\\n    flexWrap: string | null;\\n    floodColor: string | null;\\n    floodOpacity: string | null;\\n    font: string | null;\\n    fontFamily: string | null;\\n    fontFeatureSettings: string | null;\\n    fontSize: string | null;\\n    fontSizeAdjust: string | null;\\n    fontStretch: string | null;\\n    fontStyle: string | null;\\n    fontVariant: string | null;\\n    fontWeight: string | null;\\n    gap: string | null;\\n    glyphOrientationHorizontal: string | null;\\n    glyphOrientationVertical: string | null;\\n    grid: string | null;\\n    gridArea: string | null;\\n    gridAutoColumns: string | null;\\n    gridAutoFlow: string | null;\\n    gridAutoRows: string | null;\\n    gridColumn: string | null;\\n    gridColumnEnd: string | null;\\n    gridColumnGap: string | null;\\n    gridColumnStart: string | null;\\n    gridGap: string | null;\\n    gridRow: string | null;\\n    gridRowEnd: string | null;\\n    gridRowGap: string | null;\\n    gridRowStart: string | null;\\n    gridTemplate: string | null;\\n    gridTemplateAreas: string | null;\\n    gridTemplateColumns: string | null;\\n    gridTemplateRows: string | null;\\n    height: string | null;\\n    imeMode: string | null;\\n    justifyContent: string | null;\\n    justifyItems: string | null;\\n    justifySelf: string | null;\\n    kerning: string | null;\\n    layoutGrid: string | null;\\n    layoutGridChar: string | null;\\n    layoutGridLine: string | null;\\n    layoutGridMode: string | null;\\n    layoutGridType: string | null;\\n    left: string | null;\\n    readonly length: number;\\n    letterSpacing: string | null;\\n    lightingColor: string | null;\\n    lineBreak: string | null;\\n    lineHeight: string | null;\\n    listStyle: string | null;\\n    listStyleImage: string | null;\\n    listStylePosition: string | null;\\n    listStyleType: string | null;\\n    margin: string | null;\\n    marginBottom: string | null;\\n    marginLeft: string | null;\\n    marginRight: string | null;\\n    marginTop: string | null;\\n    marker: string | null;\\n    markerEnd: string | null;\\n    markerMid: string | null;\\n    markerStart: string | null;\\n    mask: string | null;\\n    maskImage: string | null;\\n    maxHeight: string | null;\\n    maxWidth: string | null;\\n    minHeight: string | null;\\n    minWidth: string | null;\\n    msContentZoomChaining: string | null;\\n    msContentZoomLimit: string | null;\\n    msContentZoomLimitMax: any;\\n    msContentZoomLimitMin: any;\\n    msContentZoomSnap: string | null;\\n    msContentZoomSnapPoints: string | null;\\n    msContentZoomSnapType: string | null;\\n    msContentZooming: string | null;\\n    msFlowFrom: string | null;\\n    msFlowInto: string | null;\\n    msFontFeatureSettings: string | null;\\n    msGridColumn: any;\\n    msGridColumnAlign: string | null;\\n    msGridColumnSpan: any;\\n    msGridColumns: string | null;\\n    msGridRow: any;\\n    msGridRowAlign: string | null;\\n    msGridRowSpan: any;\\n    msGridRows: string | null;\\n    msHighContrastAdjust: string | null;\\n    msHyphenateLimitChars: string | null;\\n    msHyphenateLimitLines: any;\\n    msHyphenateLimitZone: any;\\n    msHyphens: string | null;\\n    msImeAlign: string | null;\\n    msOverflowStyle: string | null;\\n    msScrollChaining: string | null;\\n    msScrollLimit: string | null;\\n    msScrollLimitXMax: any;\\n    msScrollLimitXMin: any;\\n    msScrollLimitYMax: any;\\n    msScrollLimitYMin: any;\\n    msScrollRails: string | null;\\n    msScrollSnapPointsX: string | null;\\n    msScrollSnapPointsY: string | null;\\n    msScrollSnapType: string | null;\\n    msScrollSnapX: string | null;\\n    msScrollSnapY: string | null;\\n    msScrollTranslation: string | null;\\n    msTextCombineHorizontal: string | null;\\n    msTextSizeAdjust: any;\\n    msTouchAction: string | null;\\n    msTouchSelect: string | null;\\n    msUserSelect: string | null;\\n    msWrapFlow: string;\\n    msWrapMargin: any;\\n    msWrapThrough: string;\\n    objectFit: string | null;\\n    objectPosition: string | null;\\n    opacity: string | null;\\n    order: string | null;\\n    orphans: string | null;\\n    outline: string | null;\\n    outlineColor: string | null;\\n    outlineOffset: string | null;\\n    outlineStyle: string | null;\\n    outlineWidth: string | null;\\n    overflow: string | null;\\n    overflowX: string | null;\\n    overflowY: string | null;\\n    padding: string | null;\\n    paddingBottom: string | null;\\n    paddingLeft: string | null;\\n    paddingRight: string | null;\\n    paddingTop: string | null;\\n    pageBreakAfter: string | null;\\n    pageBreakBefore: string | null;\\n    pageBreakInside: string | null;\\n    readonly parentRule: CSSRule;\\n    penAction: string | null;\\n    perspective: string | null;\\n    perspectiveOrigin: string | null;\\n    pointerEvents: string | null;\\n    position: string | null;\\n    quotes: string | null;\\n    resize: string | null;\\n    right: string | null;\\n    rotate: string | null;\\n    rowGap: string | null;\\n    rubyAlign: string | null;\\n    rubyOverhang: string | null;\\n    rubyPosition: string | null;\\n    scale: string | null;\\n    stopColor: string | null;\\n    stopOpacity: string | null;\\n    stroke: string | null;\\n    strokeDasharray: string | null;\\n    strokeDashoffset: string | null;\\n    strokeLinecap: string | null;\\n    strokeLinejoin: string | null;\\n    strokeMiterlimit: string | null;\\n    strokeOpacity: string | null;\\n    strokeWidth: string | null;\\n    tableLayout: string | null;\\n    textAlign: string | null;\\n    textAlignLast: string | null;\\n    textAnchor: string | null;\\n    textCombineUpright: string | null;\\n    textDecoration: string | null;\\n    textIndent: string | null;\\n    textJustify: string | null;\\n    textKashida: string | null;\\n    textKashidaSpace: string | null;\\n    textOverflow: string | null;\\n    textShadow: string | null;\\n    textTransform: string | null;\\n    textUnderlinePosition: string | null;\\n    top: string | null;\\n    touchAction: string | null;\\n    transform: string | null;\\n    transformOrigin: string | null;\\n    transformStyle: string | null;\\n    transition: string | null;\\n    transitionDelay: string | null;\\n    transitionDuration: string | null;\\n    transitionProperty: string | null;\\n    transitionTimingFunction: string | null;\\n    translate: string | null;\\n    unicodeBidi: string | null;\\n    userSelect: string | null;\\n    verticalAlign: string | null;\\n    visibility: string | null;\\n    webkitAlignContent: string | null;\\n    webkitAlignItems: string | null;\\n    webkitAlignSelf: string | null;\\n    webkitAnimation: string | null;\\n    webkitAnimationDelay: string | null;\\n    webkitAnimationDirection: string | null;\\n    webkitAnimationDuration: string | null;\\n    webkitAnimationFillMode: string | null;\\n    webkitAnimationIterationCount: string | null;\\n    webkitAnimationName: string | null;\\n    webkitAnimationPlayState: string | null;\\n    webkitAnimationTimingFunction: string | null;\\n    webkitAppearance: string | null;\\n    webkitBackfaceVisibility: string | null;\\n    webkitBackgroundClip: string | null;\\n    webkitBackgroundOrigin: string | null;\\n    webkitBackgroundSize: string | null;\\n    webkitBorderBottomLeftRadius: string | null;\\n    webkitBorderBottomRightRadius: string | null;\\n    webkitBorderImage: string | null;\\n    webkitBorderRadius: string | null;\\n    webkitBorderTopLeftRadius: string | null;\\n    webkitBorderTopRightRadius: string | null;\\n    webkitBoxAlign: string | null;\\n    webkitBoxDirection: string | null;\\n    webkitBoxFlex: string | null;\\n    webkitBoxOrdinalGroup: string | null;\\n    webkitBoxOrient: string | null;\\n    webkitBoxPack: string | null;\\n    webkitBoxSizing: string | null;\\n    webkitColumnBreakAfter: string | null;\\n    webkitColumnBreakBefore: string | null;\\n    webkitColumnBreakInside: string | null;\\n    webkitColumnCount: any;\\n    webkitColumnGap: any;\\n    webkitColumnRule: string | null;\\n    webkitColumnRuleColor: any;\\n    webkitColumnRuleStyle: string | null;\\n    webkitColumnRuleWidth: any;\\n    webkitColumnSpan: string | null;\\n    webkitColumnWidth: any;\\n    webkitColumns: string | null;\\n    webkitFilter: string | null;\\n    webkitFlex: string | null;\\n    webkitFlexBasis: string | null;\\n    webkitFlexDirection: string | null;\\n    webkitFlexFlow: string | null;\\n    webkitFlexGrow: string | null;\\n    webkitFlexShrink: string | null;\\n    webkitFlexWrap: string | null;\\n    webkitJustifyContent: string | null;\\n    webkitOrder: string | null;\\n    webkitPerspective: string | null;\\n    webkitPerspectiveOrigin: string | null;\\n    webkitTapHighlightColor: string | null;\\n    webkitTextFillColor: string | null;\\n    webkitTextSizeAdjust: any;\\n    webkitTextStroke: string | null;\\n    webkitTextStrokeColor: string | null;\\n    webkitTextStrokeWidth: string | null;\\n    webkitTransform: string | null;\\n    webkitTransformOrigin: string | null;\\n    webkitTransformStyle: string | null;\\n    webkitTransition: string | null;\\n    webkitTransitionDelay: string | null;\\n    webkitTransitionDuration: string | null;\\n    webkitTransitionProperty: string | null;\\n    webkitTransitionTimingFunction: string | null;\\n    webkitUserModify: string | null;\\n    webkitUserSelect: string | null;\\n    webkitWritingMode: string | null;\\n    whiteSpace: string | null;\\n    widows: string | null;\\n    width: string | null;\\n    wordBreak: string | null;\\n    wordSpacing: string | null;\\n    wordWrap: string | null;\\n    writingMode: string | null;\\n    zIndex: string | null;\\n    zoom: string | null;\\n    getPropertyPriority(propertyName: string): string;\\n    getPropertyValue(propertyName: string): string;\\n    item(index: number): string;\\n    removeProperty(propertyName: string): string;\\n    setProperty(propertyName: string, value: string | null, priority?: string | null): void;\\n    [index: number]: string;\\n}\\n\\ndeclare var CSSStyleDeclaration: {\\n    prototype: CSSStyleDeclaration;\\n    new(): CSSStyleDeclaration;\\n};\\n\\ninterface CSSStyleRule extends CSSRule {\\n    selectorText: string;\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSStyleRule: {\\n    prototype: CSSStyleRule;\\n    new(): CSSStyleRule;\\n};\\n\\ninterface CSSStyleSheet extends StyleSheet {\\n    readonly cssRules: CSSRuleList;\\n    /** @deprecated */\\n    cssText: string;\\n    /** @deprecated */\\n    readonly id: string;\\n    /** @deprecated */\\n    readonly imports: StyleSheetList;\\n    /** @deprecated */\\n    readonly isAlternate: boolean;\\n    /** @deprecated */\\n    readonly isPrefAlternate: boolean;\\n    readonly ownerRule: CSSRule | null;\\n    /** @deprecated */\\n    readonly owningElement: Element;\\n    /** @deprecated */\\n    readonly pages: any;\\n    /** @deprecated */\\n    readonly readOnly: boolean;\\n    readonly rules: CSSRuleList;\\n    /** @deprecated */\\n    addImport(bstrURL: string, lIndex?: number): number;\\n    /** @deprecated */\\n    addPageRule(bstrSelector: string, bstrStyle: string, lIndex?: number): number;\\n    addRule(bstrSelector: string, bstrStyle?: string, lIndex?: number): number;\\n    deleteRule(index?: number): void;\\n    insertRule(rule: string, index?: number): number;\\n    /** @deprecated */\\n    removeImport(lIndex: number): void;\\n    removeRule(lIndex: number): void;\\n}\\n\\ndeclare var CSSStyleSheet: {\\n    prototype: CSSStyleSheet;\\n    new(): CSSStyleSheet;\\n};\\n\\ninterface CSSSupportsRule extends CSSConditionRule {\\n}\\n\\ndeclare var CSSSupportsRule: {\\n    prototype: CSSSupportsRule;\\n    new(): CSSSupportsRule;\\n};\\n\\ninterface Cache {\\n    add(request: Request | string): Promise<void>;\\n    addAll(requests: (Request | string)[]): Promise<void>;\\n    delete(request: Request | string, options?: CacheQueryOptions): Promise<boolean>;\\n    keys(request?: Request | string, options?: CacheQueryOptions): Promise<Request[]>;\\n    match(request: Request | string, options?: CacheQueryOptions): Promise<Response>;\\n    matchAll(request?: Request | string, options?: CacheQueryOptions): Promise<Response[]>;\\n    put(request: Request | string, response: Response): Promise<void>;\\n}\\n\\ndeclare var Cache: {\\n    prototype: Cache;\\n    new(): Cache;\\n};\\n\\ninterface CacheStorage {\\n    delete(cacheName: string): Promise<boolean>;\\n    has(cacheName: string): Promise<boolean>;\\n    keys(): Promise<string[]>;\\n    match(request: Request | string, options?: CacheQueryOptions): Promise<any>;\\n    open(cacheName: string): Promise<Cache>;\\n}\\n\\ndeclare var CacheStorage: {\\n    prototype: CacheStorage;\\n    new(): CacheStorage;\\n};\\n\\ninterface Canvas2DContextAttributes {\\n    alpha?: boolean;\\n    storage?: boolean;\\n    willReadFrequently?: boolean;\\n    [attribute: string]: boolean | string | undefined;\\n}\\n\\ninterface CanvasGradient {\\n    addColorStop(offset: number, color: string): void;\\n}\\n\\ndeclare var CanvasGradient: {\\n    prototype: CanvasGradient;\\n    new(): CanvasGradient;\\n};\\n\\ninterface CanvasPathMethods {\\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\\n    arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;\\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\\n    closePath(): void;\\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\\n    lineTo(x: number, y: number): void;\\n    moveTo(x: number, y: number): void;\\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\\n    rect(x: number, y: number, w: number, h: number): void;\\n}\\n\\ninterface CanvasPattern {\\n    setTransform(matrix: SVGMatrix): void;\\n}\\n\\ndeclare var CanvasPattern: {\\n    prototype: CanvasPattern;\\n    new(): CanvasPattern;\\n};\\n\\ninterface CanvasRenderingContext2D extends CanvasPathMethods {\\n    readonly canvas: HTMLCanvasElement;\\n    fillStyle: string | CanvasGradient | CanvasPattern;\\n    font: string;\\n    globalAlpha: number;\\n    globalCompositeOperation: string;\\n    imageSmoothingEnabled: boolean;\\n    lineCap: string;\\n    lineDashOffset: number;\\n    lineJoin: string;\\n    lineWidth: number;\\n    miterLimit: number;\\n    mozImageSmoothingEnabled: boolean;\\n    msFillRule: CanvasFillRule;\\n    oImageSmoothingEnabled: boolean;\\n    shadowBlur: number;\\n    shadowColor: string;\\n    shadowOffsetX: number;\\n    shadowOffsetY: number;\\n    strokeStyle: string | CanvasGradient | CanvasPattern;\\n    textAlign: string;\\n    textBaseline: string;\\n    webkitImageSmoothingEnabled: boolean;\\n    beginPath(): void;\\n    clearRect(x: number, y: number, w: number, h: number): void;\\n    clip(fillRule?: CanvasFillRule): void;\\n    clip(path: Path2D, fillRule?: CanvasFillRule): void;\\n    createImageData(imageDataOrSw: number | ImageData, sh?: number): ImageData;\\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\\n    createPattern(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, repetition: string): CanvasPattern;\\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\\n    drawFocusIfNeeded(element: Element): void;\\n    drawFocusIfNeeded(path: Path2D, element: Element): void;\\n    drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number): void;\\n    drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number, dstW: number, dstH: number): void;\\n    drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, srcX: number, srcY: number, srcW: number, srcH: number, dstX: number, dstY: number, dstW: number, dstH: number): void;\\n    fill(fillRule?: CanvasFillRule): void;\\n    fill(path: Path2D, fillRule?: CanvasFillRule): void;\\n    fillRect(x: number, y: number, w: number, h: number): void;\\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\\n    getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\\n    getLineDash(): number[];\\n    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    isPointInStroke(x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    isPointInStroke(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    measureText(text: string): TextMetrics;\\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): void;\\n    restore(): void;\\n    rotate(angle: number): void;\\n    save(): void;\\n    scale(x: number, y: number): void;\\n    setLineDash(segments: number[]): void;\\n    setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\\n    stroke(path?: Path2D): void;\\n    strokeRect(x: number, y: number, w: number, h: number): void;\\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\\n    transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\\n    translate(x: number, y: number): void;\\n}\\n\\ndeclare var CanvasRenderingContext2D: {\\n    prototype: CanvasRenderingContext2D;\\n    new(): CanvasRenderingContext2D;\\n};\\n\\ninterface ChannelMergerNode extends AudioNode {\\n}\\n\\ndeclare var ChannelMergerNode: {\\n    prototype: ChannelMergerNode;\\n    new(): ChannelMergerNode;\\n};\\n\\ninterface ChannelSplitterNode extends AudioNode {\\n}\\n\\ndeclare var ChannelSplitterNode: {\\n    prototype: ChannelSplitterNode;\\n    new(): ChannelSplitterNode;\\n};\\n\\ninterface CharacterData extends Node, ChildNode {\\n    data: string;\\n    readonly length: number;\\n    appendData(arg: string): void;\\n    deleteData(offset: number, count: number): void;\\n    insertData(offset: number, arg: string): void;\\n    replaceData(offset: number, count: number, arg: string): void;\\n    substringData(offset: number, count: number): string;\\n}\\n\\ndeclare var CharacterData: {\\n    prototype: CharacterData;\\n    new(): CharacterData;\\n};\\n\\ninterface ChildNode {\\n    remove(): void;\\n}\\n\\ninterface ClientRect {\\n    bottom: number;\\n    readonly height: number;\\n    left: number;\\n    right: number;\\n    top: number;\\n    readonly width: number;\\n}\\n\\ndeclare var ClientRect: {\\n    prototype: ClientRect;\\n    new(): ClientRect;\\n};\\n\\ninterface ClientRectList {\\n    readonly length: number;\\n    item(index: number): ClientRect;\\n    [index: number]: ClientRect;\\n}\\n\\ndeclare var ClientRectList: {\\n    prototype: ClientRectList;\\n    new(): ClientRectList;\\n};\\n\\ninterface ClipboardEvent extends Event {\\n    readonly clipboardData: DataTransfer;\\n}\\n\\ndeclare var ClipboardEvent: {\\n    prototype: ClipboardEvent;\\n    new(type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent;\\n};\\n\\ninterface ClipboardEventInit extends EventInit {\\n    data?: string;\\n    dataType?: string;\\n}\\n\\ninterface CloseEvent extends Event {\\n    readonly code: number;\\n    readonly reason: string;\\n    readonly wasClean: boolean;\\n    /** @deprecated */\\n    initCloseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, wasCleanArg: boolean, codeArg: number, reasonArg: string): void;\\n}\\n\\ndeclare var CloseEvent: {\\n    prototype: CloseEvent;\\n    new(type: string, eventInitDict?: CloseEventInit): CloseEvent;\\n};\\n\\ninterface Comment extends CharacterData {\\n    text: string;\\n}\\n\\ndeclare var Comment: {\\n    prototype: Comment;\\n    new(data?: string): Comment;\\n};\\n\\ninterface CompositionEvent extends UIEvent {\\n    readonly data: string;\\n    readonly locale: string;\\n    initCompositionEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, locale: string): void;\\n}\\n\\ndeclare var CompositionEvent: {\\n    prototype: CompositionEvent;\\n    new(typeArg: string, eventInitDict?: CompositionEventInit): CompositionEvent;\\n};\\n\\ninterface ComputedTimingProperties {\\n    activeDuration: number;\\n    currentIteration: number | null;\\n    endTime: number;\\n    localTime: number | null;\\n    progress: number | null;\\n}\\n\\ninterface ConcatParams extends Algorithm {\\n    algorithmId: Uint8Array;\\n    hash?: string | Algorithm;\\n    partyUInfo: Uint8Array;\\n    partyVInfo: Uint8Array;\\n    privateInfo?: Uint8Array;\\n    publicInfo?: Uint8Array;\\n}\\n\\ninterface Console {\\n    memory: any;\\n    assert(condition?: boolean, message?: string, ...data: any[]): void;\\n    clear(): void;\\n    count(label?: string): void;\\n    debug(message?: any, ...optionalParams: any[]): void;\\n    dir(value?: any, ...optionalParams: any[]): void;\\n    dirxml(value: any): void;\\n    error(message?: any, ...optionalParams: any[]): void;\\n    exception(message?: string, ...optionalParams: any[]): void;\\n    group(groupTitle?: string, ...optionalParams: any[]): void;\\n    groupCollapsed(groupTitle?: string, ...optionalParams: any[]): void;\\n    groupEnd(): void;\\n    info(message?: any, ...optionalParams: any[]): void;\\n    log(message?: any, ...optionalParams: any[]): void;\\n    markTimeline(label?: string): void;\\n    msIsIndependentlyComposed(element: Element): boolean;\\n    profile(reportName?: string): void;\\n    profileEnd(): void;\\n    select(element: Element): void;\\n    table(...tabularData: any[]): void;\\n    time(label?: string): void;\\n    timeEnd(label?: string): void;\\n    timeStamp(label?: string): void;\\n    timeline(label?: string): void;\\n    timelineEnd(label?: string): void;\\n    trace(message?: any, ...optionalParams: any[]): void;\\n    warn(message?: any, ...optionalParams: any[]): void;\\n}\\n\\ndeclare var Console: {\\n    prototype: Console;\\n    new(): Console;\\n};\\n\\ninterface ContentScriptGlobalScope extends EventTarget {\\n    readonly msContentScript: ExtensionScriptApis;\\n    readonly window: Window;\\n}\\n\\ndeclare var ContentScriptGlobalScope: {\\n    prototype: ContentScriptGlobalScope;\\n    new(): ContentScriptGlobalScope;\\n};\\n\\ninterface ConvolverNode extends AudioNode {\\n    buffer: AudioBuffer | null;\\n    normalize: boolean;\\n}\\n\\ndeclare var ConvolverNode: {\\n    prototype: ConvolverNode;\\n    new(): ConvolverNode;\\n};\\n\\ninterface Coordinates {\\n    readonly accuracy: number;\\n    readonly altitude: number | null;\\n    readonly altitudeAccuracy: number | null;\\n    readonly heading: number | null;\\n    readonly latitude: number;\\n    readonly longitude: number;\\n    readonly speed: number | null;\\n}\\n\\ndeclare var Coordinates: {\\n    prototype: Coordinates;\\n    new(): Coordinates;\\n};\\n\\ninterface CountQueuingStrategy {\\n    highWaterMark: number;\\n    size(): number;\\n}\\n\\ndeclare var CountQueuingStrategy: {\\n    prototype: CountQueuingStrategy;\\n    new(strategy: QueuingStrategy): CountQueuingStrategy;\\n};\\n\\ninterface Crypto {\\n    readonly subtle: SubtleCrypto;\\n    getRandomValues(array: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null;\\n}\\n\\ndeclare var Crypto: {\\n    prototype: Crypto;\\n    new(): Crypto;\\n};\\n\\ninterface CryptoKey {\\n    readonly algorithm: KeyAlgorithm;\\n    readonly extractable: boolean;\\n    readonly type: string;\\n    readonly usages: string[];\\n}\\n\\ndeclare var CryptoKey: {\\n    prototype: CryptoKey;\\n    new(): CryptoKey;\\n};\\n\\ninterface CryptoKeyPair {\\n    privateKey: CryptoKey;\\n    publicKey: CryptoKey;\\n}\\n\\ndeclare var CryptoKeyPair: {\\n    prototype: CryptoKeyPair;\\n    new(): CryptoKeyPair;\\n};\\n\\ninterface CustomElementRegistry {\\n    define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\\n    get(name: string): any;\\n    whenDefined(name: string): PromiseLike<void>;\\n}\\n\\ninterface CustomEvent<T = any> extends Event {\\n    readonly detail: T;\\n    initCustomEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, detailArg: T): void;\\n}\\n\\ndeclare var CustomEvent: {\\n    prototype: CustomEvent;\\n    new<T>(typeArg: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;\\n};\\n\\ninterface DOMError {\\n    readonly name: string;\\n    toString(): string;\\n}\\n\\ndeclare var DOMError: {\\n    prototype: DOMError;\\n    new(): DOMError;\\n};\\n\\ninterface DOMException {\\n    readonly code: number;\\n    readonly message: string;\\n    readonly name: string;\\n    toString(): string;\\n    readonly ABORT_ERR: number;\\n    readonly DATA_CLONE_ERR: number;\\n    readonly DOMSTRING_SIZE_ERR: number;\\n    readonly HIERARCHY_REQUEST_ERR: number;\\n    readonly INDEX_SIZE_ERR: number;\\n    readonly INUSE_ATTRIBUTE_ERR: number;\\n    readonly INVALID_ACCESS_ERR: number;\\n    readonly INVALID_CHARACTER_ERR: number;\\n    readonly INVALID_MODIFICATION_ERR: number;\\n    readonly INVALID_NODE_TYPE_ERR: number;\\n    readonly INVALID_STATE_ERR: number;\\n    readonly NAMESPACE_ERR: number;\\n    readonly NETWORK_ERR: number;\\n    readonly NOT_FOUND_ERR: number;\\n    readonly NOT_SUPPORTED_ERR: number;\\n    readonly NO_DATA_ALLOWED_ERR: number;\\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\\n    readonly PARSE_ERR: number;\\n    readonly QUOTA_EXCEEDED_ERR: number;\\n    readonly SECURITY_ERR: number;\\n    readonly SERIALIZE_ERR: number;\\n    readonly SYNTAX_ERR: number;\\n    readonly TIMEOUT_ERR: number;\\n    readonly TYPE_MISMATCH_ERR: number;\\n    readonly URL_MISMATCH_ERR: number;\\n    readonly VALIDATION_ERR: number;\\n    readonly WRONG_DOCUMENT_ERR: number;\\n}\\n\\ndeclare var DOMException: {\\n    prototype: DOMException;\\n    new(message?: string, name?: string): DOMException;\\n    readonly ABORT_ERR: number;\\n    readonly DATA_CLONE_ERR: number;\\n    readonly DOMSTRING_SIZE_ERR: number;\\n    readonly HIERARCHY_REQUEST_ERR: number;\\n    readonly INDEX_SIZE_ERR: number;\\n    readonly INUSE_ATTRIBUTE_ERR: number;\\n    readonly INVALID_ACCESS_ERR: number;\\n    readonly INVALID_CHARACTER_ERR: number;\\n    readonly INVALID_MODIFICATION_ERR: number;\\n    readonly INVALID_NODE_TYPE_ERR: number;\\n    readonly INVALID_STATE_ERR: number;\\n    readonly NAMESPACE_ERR: number;\\n    readonly NETWORK_ERR: number;\\n    readonly NOT_FOUND_ERR: number;\\n    readonly NOT_SUPPORTED_ERR: number;\\n    readonly NO_DATA_ALLOWED_ERR: number;\\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\\n    readonly PARSE_ERR: number;\\n    readonly QUOTA_EXCEEDED_ERR: number;\\n    readonly SECURITY_ERR: number;\\n    readonly SERIALIZE_ERR: number;\\n    readonly SYNTAX_ERR: number;\\n    readonly TIMEOUT_ERR: number;\\n    readonly TYPE_MISMATCH_ERR: number;\\n    readonly URL_MISMATCH_ERR: number;\\n    readonly VALIDATION_ERR: number;\\n    readonly WRONG_DOCUMENT_ERR: number;\\n};\\n\\ninterface DOMImplementation {\\n    createDocument(namespaceURI: string | null, qualifiedName: string | null, doctype: DocumentType | null): Document;\\n    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;\\n    createHTMLDocument(title?: string): Document;\\n    hasFeature(feature: string | null, version: string | null): boolean;\\n}\\n\\ndeclare var DOMImplementation: {\\n    prototype: DOMImplementation;\\n    new(): DOMImplementation;\\n};\\n\\ninterface DOML2DeprecatedColorProperty {\\n    color: string;\\n}\\n\\ninterface DOML2DeprecatedSizeProperty {\\n    size: number;\\n}\\n\\ninterface DOMParser {\\n    parseFromString(source: string, mimeType: string): Document;\\n}\\n\\ndeclare var DOMParser: {\\n    prototype: DOMParser;\\n    new(): DOMParser;\\n};\\n\\ninterface DOMRect extends DOMRectReadOnly {\\n    height: number;\\n    width: number;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var DOMRect: {\\n    prototype: DOMRect;\\n    new (x?: number, y?: number, width?: number, height?: number): DOMRect;\\n    fromRect(rectangle?: DOMRectInit): DOMRect;\\n};\\n\\ninterface DOMRectList {\\n    readonly length: number;\\n    item(index: number): DOMRect | null;\\n    [index: number]: DOMRect;\\n}\\n\\ninterface DOMRectReadOnly {\\n    readonly bottom: number;\\n    readonly height: number;\\n    readonly left: number;\\n    readonly right: number;\\n    readonly top: number;\\n    readonly width: number;\\n    readonly x: number;\\n    readonly y: number;\\n}\\n\\ndeclare var DOMRectReadOnly: {\\n    prototype: DOMRectReadOnly;\\n    new (x?: number, y?: number, width?: number, height?: number): DOMRectReadOnly;\\n    fromRect(rectangle?: DOMRectInit): DOMRectReadOnly;\\n};\\n\\ninterface DOMSettableTokenList extends DOMTokenList {\\n    value: string;\\n}\\n\\ndeclare var DOMSettableTokenList: {\\n    prototype: DOMSettableTokenList;\\n    new(): DOMSettableTokenList;\\n};\\n\\ninterface DOMStringList {\\n    readonly length: number;\\n    contains(str: string): boolean;\\n    item(index: number): string | null;\\n    [index: number]: string;\\n}\\n\\ndeclare var DOMStringList: {\\n    prototype: DOMStringList;\\n    new(): DOMStringList;\\n};\\n\\ninterface DOMStringMap {\\n    [name: string]: string | undefined;\\n}\\n\\ndeclare var DOMStringMap: {\\n    prototype: DOMStringMap;\\n    new(): DOMStringMap;\\n};\\n\\ninterface DOMTokenList {\\n    readonly length: number;\\n    add(...tokens: string[]): void;\\n    contains(token: string): boolean;\\n    item(index: number): string | null;\\n    remove(...tokens: string[]): void;\\n    toString(): string;\\n    toggle(token: string, force?: boolean): boolean;\\n    [index: number]: string;\\n}\\n\\ndeclare var DOMTokenList: {\\n    prototype: DOMTokenList;\\n    new(): DOMTokenList;\\n};\\n\\ninterface DataCue extends TextTrackCue {\\n    data: ArrayBuffer;\\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: DataCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: DataCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var DataCue: {\\n    prototype: DataCue;\\n    new(): DataCue;\\n};\\n\\ninterface DataTransfer {\\n    dropEffect: string;\\n    effectAllowed: string;\\n    readonly files: FileList;\\n    readonly items: DataTransferItemList;\\n    readonly types: string[];\\n    clearData(format?: string): boolean;\\n    getData(format: string): string;\\n    setData(format: string, data: string): boolean;\\n    setDragImage(image: Element, x: number, y: number): void;\\n}\\n\\ndeclare var DataTransfer: {\\n    prototype: DataTransfer;\\n    new(): DataTransfer;\\n};\\n\\ninterface DataTransferItem {\\n    readonly kind: string;\\n    readonly type: string;\\n    getAsFile(): File | null;\\n    getAsString(_callback: FunctionStringCallback | null): void;\\n    webkitGetAsEntry(): any;\\n}\\n\\ndeclare var DataTransferItem: {\\n    prototype: DataTransferItem;\\n    new(): DataTransferItem;\\n};\\n\\ninterface DataTransferItemList {\\n    readonly length: number;\\n    add(data: File): DataTransferItem | null;\\n    add(data: string, type: string): DataTransferItem | null;\\n    clear(): void;\\n    item(index: number): DataTransferItem;\\n    remove(index: number): void;\\n    [name: number]: DataTransferItem;\\n}\\n\\ndeclare var DataTransferItemList: {\\n    prototype: DataTransferItemList;\\n    new(): DataTransferItemList;\\n};\\n\\ninterface DeferredPermissionRequest {\\n    readonly id: number;\\n    readonly type: MSWebViewPermissionType;\\n    readonly uri: string;\\n    allow(): void;\\n    deny(): void;\\n}\\n\\ndeclare var DeferredPermissionRequest: {\\n    prototype: DeferredPermissionRequest;\\n    new(): DeferredPermissionRequest;\\n};\\n\\ninterface DelayNode extends AudioNode {\\n    readonly delayTime: AudioParam;\\n}\\n\\ndeclare var DelayNode: {\\n    prototype: DelayNode;\\n    new(): DelayNode;\\n};\\n\\ninterface DeviceAcceleration {\\n    readonly x: number | null;\\n    readonly y: number | null;\\n    readonly z: number | null;\\n}\\n\\ndeclare var DeviceAcceleration: {\\n    prototype: DeviceAcceleration;\\n    new(): DeviceAcceleration;\\n};\\n\\ninterface DeviceLightEvent extends Event {\\n    readonly value: number;\\n}\\n\\ndeclare var DeviceLightEvent: {\\n    prototype: DeviceLightEvent;\\n    new(typeArg: string, eventInitDict?: DeviceLightEventInit): DeviceLightEvent;\\n};\\n\\ninterface DeviceMotionEvent extends Event {\\n    readonly acceleration: DeviceAcceleration | null;\\n    readonly accelerationIncludingGravity: DeviceAcceleration | null;\\n    readonly interval: number | null;\\n    readonly rotationRate: DeviceRotationRate | null;\\n    initDeviceMotionEvent(type: string, bubbles: boolean, cancelable: boolean, acceleration: DeviceAccelerationDict | null, accelerationIncludingGravity: DeviceAccelerationDict | null, rotationRate: DeviceRotationRateDict | null, interval: number | null): void;\\n}\\n\\ndeclare var DeviceMotionEvent: {\\n    prototype: DeviceMotionEvent;\\n    new(typeArg: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;\\n};\\n\\ninterface DeviceOrientationEvent extends Event {\\n    readonly absolute: boolean;\\n    readonly alpha: number | null;\\n    readonly beta: number | null;\\n    readonly gamma: number | null;\\n    initDeviceOrientationEvent(type: string, bubbles: boolean, cancelable: boolean, alpha: number | null, beta: number | null, gamma: number | null, absolute: boolean): void;\\n}\\n\\ndeclare var DeviceOrientationEvent: {\\n    prototype: DeviceOrientationEvent;\\n    new(typeArg: string, eventInitDict?: DeviceOrientationEventInit): DeviceOrientationEvent;\\n};\\n\\ninterface DeviceRotationRate {\\n    readonly alpha: number | null;\\n    readonly beta: number | null;\\n    readonly gamma: number | null;\\n}\\n\\ndeclare var DeviceRotationRate: {\\n    prototype: DeviceRotationRate;\\n    new(): DeviceRotationRate;\\n};\\n\\ninterface DhImportKeyParams extends Algorithm {\\n    generator: Uint8Array;\\n    prime: Uint8Array;\\n}\\n\\ninterface DhKeyAlgorithm extends KeyAlgorithm {\\n    generator: Uint8Array;\\n    prime: Uint8Array;\\n}\\n\\ninterface DhKeyDeriveParams extends Algorithm {\\n    public: CryptoKey;\\n}\\n\\ninterface DhKeyGenParams extends Algorithm {\\n    generator: Uint8Array;\\n    prime: Uint8Array;\\n}\\n\\ninterface DocumentEventMap extends GlobalEventHandlersEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"activate\\\": Event;\\n    \\\"beforeactivate\\\": Event;\\n    \\\"beforedeactivate\\\": Event;\\n    \\\"blur\\\": FocusEvent;\\n    \\\"canplay\\\": Event;\\n    \\\"canplaythrough\\\": Event;\\n    \\\"change\\\": Event;\\n    \\\"click\\\": MouseEvent;\\n    \\\"contextmenu\\\": PointerEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"deactivate\\\": Event;\\n    \\\"drag\\\": DragEvent;\\n    \\\"dragend\\\": DragEvent;\\n    \\\"dragenter\\\": DragEvent;\\n    \\\"dragleave\\\": DragEvent;\\n    \\\"dragover\\\": DragEvent;\\n    \\\"dragstart\\\": DragEvent;\\n    \\\"drop\\\": DragEvent;\\n    \\\"durationchange\\\": Event;\\n    \\\"emptied\\\": Event;\\n    \\\"ended\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"fullscreenchange\\\": Event;\\n    \\\"fullscreenerror\\\": Event;\\n    \\\"input\\\": Event;\\n    \\\"invalid\\\": Event;\\n    \\\"keydown\\\": KeyboardEvent;\\n    \\\"keypress\\\": KeyboardEvent;\\n    \\\"keyup\\\": KeyboardEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadeddata\\\": Event;\\n    \\\"loadedmetadata\\\": Event;\\n    \\\"loadstart\\\": Event;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n    \\\"mousewheel\\\": WheelEvent;\\n    \\\"MSContentZoom\\\": Event;\\n    \\\"MSGestureChange\\\": Event;\\n    \\\"MSGestureDoubleTap\\\": Event;\\n    \\\"MSGestureEnd\\\": Event;\\n    \\\"MSGestureHold\\\": Event;\\n    \\\"MSGestureStart\\\": Event;\\n    \\\"MSGestureTap\\\": Event;\\n    \\\"MSInertiaStart\\\": Event;\\n    \\\"MSManipulationStateChanged\\\": Event;\\n    \\\"MSPointerCancel\\\": Event;\\n    \\\"MSPointerDown\\\": Event;\\n    \\\"MSPointerEnter\\\": Event;\\n    \\\"MSPointerLeave\\\": Event;\\n    \\\"MSPointerMove\\\": Event;\\n    \\\"MSPointerOut\\\": Event;\\n    \\\"MSPointerOver\\\": Event;\\n    \\\"MSPointerUp\\\": Event;\\n    \\\"mssitemodejumplistitemremoved\\\": Event;\\n    \\\"msthumbnailclick\\\": Event;\\n    \\\"pause\\\": Event;\\n    \\\"play\\\": Event;\\n    \\\"playing\\\": Event;\\n    \\\"pointerlockchange\\\": Event;\\n    \\\"pointerlockerror\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"ratechange\\\": Event;\\n    \\\"readystatechange\\\": Event;\\n    \\\"reset\\\": Event;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"seeked\\\": Event;\\n    \\\"seeking\\\": Event;\\n    \\\"select\\\": UIEvent;\\n    \\\"selectionchange\\\": Event;\\n    \\\"selectstart\\\": Event;\\n    \\\"stalled\\\": Event;\\n    \\\"stop\\\": Event;\\n    \\\"submit\\\": Event;\\n    \\\"suspend\\\": Event;\\n    \\\"timeupdate\\\": Event;\\n    \\\"touchcancel\\\": Event;\\n    \\\"touchend\\\": Event;\\n    \\\"touchmove\\\": Event;\\n    \\\"touchstart\\\": Event;\\n    \\\"volumechange\\\": Event;\\n    \\\"waiting\\\": Event;\\n    \\\"webkitfullscreenchange\\\": Event;\\n    \\\"webkitfullscreenerror\\\": Event;\\n}\\n\\ninterface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent {\\n    /**\\n     * Sets or gets the URL for the current document.\\n     */\\n    readonly URL: string;\\n    /**\\n     * Gets the URL for the document, stripped of any character encoding.\\n     */\\n    readonly URLUnencoded: string;\\n    /**\\n     * Gets the object that has the focus when the parent document has focus.\\n     */\\n    readonly activeElement: Element;\\n    /**\\n     * Sets or gets the color of all active links in the document.\\n     */\\n    alinkColor: string;\\n    /**\\n     * Returns a reference to the collection of elements contained by the object.\\n     */\\n    readonly all: HTMLAllCollection;\\n    /**\\n     * Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.\\n     */\\n    readonly anchors: HTMLCollectionOf<HTMLAnchorElement>;\\n    /**\\n     * Retrieves a collection of all applet objects in the document.\\n     */\\n    readonly applets: HTMLCollectionOf<HTMLAppletElement>;\\n    /**\\n     * Deprecated. Sets or retrieves a value that indicates the background color behind the object.\\n     */\\n    bgColor: string;\\n    /**\\n     * Specifies the beginning and end of the document body.\\n     */\\n    body: HTMLElement;\\n    readonly characterSet: string;\\n    /**\\n     * Gets or sets the character set used to encode the object.\\n     */\\n    charset: string;\\n    /**\\n     * Gets a value that indicates whether standards-compliant mode is switched on for the object.\\n     */\\n    readonly compatMode: string;\\n    cookie: string;\\n    readonly currentScript: HTMLScriptElement | SVGScriptElement | null;\\n    readonly defaultView: Window;\\n    /**\\n     * Sets or gets a value that indicates whether the document can be edited.\\n     */\\n    designMode: string;\\n    /**\\n     * Sets or retrieves a value that indicates the reading order of the object.\\n     */\\n    dir: string;\\n    /**\\n     * Gets an object representing the document type declaration associated with the current document.\\n     */\\n    readonly doctype: DocumentType;\\n    /**\\n     * Gets a reference to the root node of the document.\\n     */\\n    readonly documentElement: HTMLElement;\\n    /**\\n     * Sets or gets the security domain of the document.\\n     */\\n    domain: string;\\n    /**\\n     * Retrieves a collection of all embed objects in the document.\\n     */\\n    readonly embeds: HTMLCollectionOf<HTMLEmbedElement>;\\n    /**\\n     * Sets or gets the foreground (text) color of the document.\\n     */\\n    fgColor: string;\\n    /**\\n     * Retrieves a collection, in source order, of all form objects in the document.\\n     */\\n    readonly forms: HTMLCollectionOf<HTMLFormElement>;\\n    readonly fullscreenElement: Element | null;\\n    readonly fullscreenEnabled: boolean;\\n    readonly head: HTMLHeadElement;\\n    readonly hidden: boolean;\\n    /**\\n     * Retrieves a collection, in source order, of img objects in the document.\\n     */\\n    readonly images: HTMLCollectionOf<HTMLImageElement>;\\n    /**\\n     * Gets the implementation object of the current document.\\n     */\\n    readonly implementation: DOMImplementation;\\n    /**\\n     * Returns the character encoding used to create the webpage that is loaded into the document object.\\n     */\\n    readonly inputEncoding: string | null;\\n    /**\\n     * Gets the date that the page was last modified, if the page supplies one.\\n     */\\n    readonly lastModified: string;\\n    /**\\n     * Sets or gets the color of the document links.\\n     */\\n    linkColor: string;\\n    /**\\n     * Retrieves a collection of all a objects that specify the href property and all area objects in the document.\\n     */\\n    readonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>;\\n    /**\\n     * Contains information about the current URL.\\n     */\\n    location: Location;\\n    msCSSOMElementFloatMetrics: boolean;\\n    msCapsLockWarningOff: boolean;\\n    /**\\n     * Fires when the user aborts the download.\\n     * @param ev The event.\\n     */\\n    onabort: ((this: Document, ev: UIEvent) => any) | null;\\n    /**\\n     * Fires when the object is set as the active element.\\n     * @param ev The event.\\n     */\\n    onactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires immediately before the object is set as the active element.\\n     * @param ev The event.\\n     */\\n    onbeforeactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires immediately before the activeElement is changed from the current object to another object in the parent document.\\n     * @param ev The event.\\n     */\\n    onbeforedeactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the object loses the input focus.\\n     * @param ev The focus event.\\n     */\\n    onblur: ((this: Document, ev: FocusEvent) => any) | null;\\n    /**\\n     * Occurs when playback is possible, but would require further buffering.\\n     * @param ev The event.\\n     */\\n    oncanplay: ((this: Document, ev: Event) => any) | null;\\n    oncanplaythrough: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the contents of the object or selection have changed.\\n     * @param ev The event.\\n     */\\n    onchange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user clicks the left mouse button on the object\\n     * @param ev The mouse event.\\n     */\\n    onclick: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user clicks the right mouse button in the client area, opening the context menu.\\n     * @param ev The mouse event.\\n     */\\n    oncontextmenu: ((this: Document, ev: PointerEvent) => any) | null;\\n    /**\\n     * Fires when the user double-clicks the object.\\n     * @param ev The mouse event.\\n     */\\n    ondblclick: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the activeElement is changed from the current object to another object in the parent document.\\n     * @param ev The UI Event\\n     */\\n    ondeactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires on the source object continuously during a drag operation.\\n     * @param ev The event.\\n     */\\n    ondrag: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the source object when the user releases the mouse at the close of a drag operation.\\n     * @param ev The event.\\n     */\\n    ondragend: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the target element when the user drags the object to a valid drop target.\\n     * @param ev The drag event.\\n     */\\n    ondragenter: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.\\n     * @param ev The drag event.\\n     */\\n    ondragleave: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the target element continuously while the user drags the object over a valid drop target.\\n     * @param ev The event.\\n     */\\n    ondragover: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the source object when the user starts to drag a text selection or selected object.\\n     * @param ev The event.\\n     */\\n    ondragstart: ((this: Document, ev: DragEvent) => any) | null;\\n    ondrop: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Occurs when the duration attribute is updated.\\n     * @param ev The event.\\n     */\\n    ondurationchange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the media element is reset to its initial state.\\n     * @param ev The event.\\n     */\\n    onemptied: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the end of playback is reached.\\n     * @param ev The event\\n     */\\n    onended: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when an error occurs during object loading.\\n     * @param ev The event.\\n     */\\n    onerror: ((this: Document, ev: ErrorEvent) => any) | null;\\n    /**\\n     * Fires when the object receives focus.\\n     * @param ev The event.\\n     */\\n    onfocus: ((this: Document, ev: FocusEvent) => any) | null;\\n    onfullscreenchange: ((this: Document, ev: Event) => any) | null;\\n    onfullscreenerror: ((this: Document, ev: Event) => any) | null;\\n    oninput: ((this: Document, ev: Event) => any) | null;\\n    oninvalid: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user presses a key.\\n     * @param ev The keyboard event\\n     */\\n    onkeydown: ((this: Document, ev: KeyboardEvent) => any) | null;\\n    /**\\n     * Fires when the user presses an alphanumeric key.\\n     * @param ev The event.\\n     */\\n    onkeypress: ((this: Document, ev: KeyboardEvent) => any) | null;\\n    /**\\n     * Fires when the user releases a key.\\n     * @param ev The keyboard event\\n     */\\n    onkeyup: ((this: Document, ev: KeyboardEvent) => any) | null;\\n    /**\\n     * Fires immediately after the browser loads the object.\\n     * @param ev The event.\\n     */\\n    onload: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when media data is loaded at the current playback position.\\n     * @param ev The event.\\n     */\\n    onloadeddata: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the duration and dimensions of the media have been determined.\\n     * @param ev The event.\\n     */\\n    onloadedmetadata: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when Internet Explorer begins looking for media data.\\n     * @param ev The event.\\n     */\\n    onloadstart: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user clicks the object with either mouse button.\\n     * @param ev The mouse event.\\n     */\\n    onmousedown: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user moves the mouse over the object.\\n     * @param ev The mouse event.\\n     */\\n    onmousemove: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user moves the mouse pointer outside the boundaries of the object.\\n     * @param ev The mouse event.\\n     */\\n    onmouseout: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user moves the mouse pointer into the object.\\n     * @param ev The mouse event.\\n     */\\n    onmouseover: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user releases a mouse button while the mouse is over the object.\\n     * @param ev The mouse event.\\n     */\\n    onmouseup: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the wheel button is rotated.\\n     * @param ev The mouse event\\n     */\\n    onmousewheel: ((this: Document, ev: WheelEvent) => any) | null;\\n    onmscontentzoom: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturechange: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturedoubletap: ((this: Document, ev: Event) => any) | null;\\n    onmsgestureend: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturehold: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturestart: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturetap: ((this: Document, ev: Event) => any) | null;\\n    onmsinertiastart: ((this: Document, ev: Event) => any) | null;\\n    onmsmanipulationstatechanged: ((this: Document, ev: Event) => any) | null;\\n    onmspointercancel: ((this: Document, ev: Event) => any) | null;\\n    onmspointerdown: ((this: Document, ev: Event) => any) | null;\\n    onmspointerenter: ((this: Document, ev: Event) => any) | null;\\n    onmspointerleave: ((this: Document, ev: Event) => any) | null;\\n    onmspointermove: ((this: Document, ev: Event) => any) | null;\\n    onmspointerout: ((this: Document, ev: Event) => any) | null;\\n    onmspointerover: ((this: Document, ev: Event) => any) | null;\\n    onmspointerup: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when an item is removed from a Jump List of a webpage running in Site Mode.\\n     * @param ev The event.\\n     */\\n    onmssitemodejumplistitemremoved: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when a user clicks a button in a Thumbnail Toolbar of a webpage running in Site Mode.\\n     * @param ev The event.\\n     */\\n    onmsthumbnailclick: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when playback is paused.\\n     * @param ev The event.\\n     */\\n    onpause: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the play method is requested.\\n     * @param ev The event.\\n     */\\n    onplay: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the audio or video has started playing.\\n     * @param ev The event.\\n     */\\n    onplaying: ((this: Document, ev: Event) => any) | null;\\n    onpointerlockchange: ((this: Document, ev: Event) => any) | null;\\n    onpointerlockerror: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs to indicate progress while downloading media data.\\n     * @param ev The event.\\n     */\\n    onprogress: ((this: Document, ev: ProgressEvent) => any) | null;\\n    /**\\n     * Occurs when the playback rate is increased or decreased.\\n     * @param ev The event.\\n     */\\n    onratechange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the state of the object has changed.\\n     * @param ev The event\\n     */\\n    onreadystatechange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user resets a form.\\n     * @param ev The event.\\n     */\\n    onreset: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user repositions the scroll box in the scroll bar on the object.\\n     * @param ev The event.\\n     */\\n    onscroll: ((this: Document, ev: UIEvent) => any) | null;\\n    /**\\n     * Occurs when the seek operation ends.\\n     * @param ev The event.\\n     */\\n    onseeked: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the current playback position is moved.\\n     * @param ev The event.\\n     */\\n    onseeking: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the current selection changes.\\n     * @param ev The event.\\n     */\\n    onselect: ((this: Document, ev: UIEvent) => any) | null;\\n    /**\\n     * Fires when the selection state of a document changes.\\n     * @param ev The event.\\n     */\\n    onselectionchange: ((this: Document, ev: Event) => any) | null;\\n    onselectstart: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the download has stopped.\\n     * @param ev The event.\\n     */\\n    onstalled: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user clicks the Stop button or leaves the Web page.\\n     * @param ev The event.\\n     */\\n    onstop: ((this: Document, ev: Event) => any) | null;\\n    onsubmit: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs if the load operation has been intentionally halted.\\n     * @param ev The event.\\n     */\\n    onsuspend: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs to indicate the current playback position.\\n     * @param ev The event.\\n     */\\n    ontimeupdate: ((this: Document, ev: Event) => any) | null;\\n    ontouchcancel: ((this: Document, ev: Event) => any) | null;\\n    ontouchend: ((this: Document, ev: Event) => any) | null;\\n    ontouchmove: ((this: Document, ev: Event) => any) | null;\\n    ontouchstart: ((this: Document, ev: Event) => any) | null;\\n    onvisibilitychange: (this: Document, ev: Event) => any;\\n    /**\\n     * Occurs when the volume is changed, or playback is muted or unmuted.\\n     * @param ev The event.\\n     */\\n    onvolumechange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when playback stops because the next frame of a video resource is not available.\\n     * @param ev The event.\\n     */\\n    onwaiting: ((this: Document, ev: Event) => any) | null;\\n    onwebkitfullscreenchange: ((this: Document, ev: Event) => any) | null;\\n    onwebkitfullscreenerror: ((this: Document, ev: Event) => any) | null;\\n    readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;\\n    readonly pointerLockElement: Element;\\n    /**\\n     * Retrieves a value that indicates the current state of the object.\\n     */\\n    readonly readyState: string;\\n    /**\\n     * Gets the URL of the location that referred the user to the current page.\\n     */\\n    readonly referrer: string;\\n    /**\\n     * Gets the root svg element in the document hierarchy.\\n     */\\n    readonly rootElement: SVGSVGElement;\\n    /**\\n     * Retrieves a collection of all script objects in the document.\\n     */\\n    readonly scripts: HTMLCollectionOf<HTMLScriptElement>;\\n    readonly scrollingElement: Element | null;\\n    /**\\n     * Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.\\n     */\\n    readonly styleSheets: StyleSheetList;\\n    /**\\n     * Contains the title of the document.\\n     */\\n    title: string;\\n    readonly visibilityState: VisibilityState;\\n    /**\\n     * Sets or gets the color of the links that the user has visited.\\n     */\\n    vlinkColor: string;\\n    readonly webkitCurrentFullScreenElement: Element | null;\\n    readonly webkitFullscreenElement: Element | null;\\n    readonly webkitFullscreenEnabled: boolean;\\n    readonly webkitIsFullScreen: boolean;\\n    readonly xmlEncoding: string | null;\\n    xmlStandalone: boolean;\\n    /**\\n     * Gets or sets the version attribute specified in the declaration of an XML document.\\n     */\\n    xmlVersion: string | null;\\n    adoptNode<T extends Node>(source: T): T;\\n    captureEvents(): void;\\n    caretRangeFromPoint(x: number, y: number): Range;\\n    clear(): void;\\n    /**\\n     * Closes an output stream and forces the sent data to display.\\n     */\\n    close(): void;\\n    /**\\n     * Creates an attribute object with a specified name.\\n     * @param name String that sets the attribute object's name.\\n     */\\n    createAttribute(name: string): Attr;\\n    createAttributeNS(namespaceURI: string | null, qualifiedName: string): Attr;\\n    createCDATASection(data: string): CDATASection;\\n    /**\\n     * Creates a comment object with the specified data.\\n     * @param data Sets the comment object's data.\\n     */\\n    createComment(data: string): Comment;\\n    /**\\n     * Creates a new document.\\n     */\\n    createDocumentFragment(): DocumentFragment;\\n    /**\\n     * Creates an instance of the element for the specified tag.\\n     * @param tagName The name of an element.\\n     */\\n    createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K];\\n    createElement(tagName: string, options?: ElementCreationOptions): HTMLElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/1999/xhtml\\\", qualifiedName: string): HTMLElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"a\\\"): SVGAElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"circle\\\"): SVGCircleElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"clipPath\\\"): SVGClipPathElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"componentTransferFunction\\\"): SVGComponentTransferFunctionElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"defs\\\"): SVGDefsElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"desc\\\"): SVGDescElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"ellipse\\\"): SVGEllipseElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feBlend\\\"): SVGFEBlendElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feColorMatrix\\\"): SVGFEColorMatrixElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feComponentTransfer\\\"): SVGFEComponentTransferElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feComposite\\\"): SVGFECompositeElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feConvolveMatrix\\\"): SVGFEConvolveMatrixElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feDiffuseLighting\\\"): SVGFEDiffuseLightingElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feDisplacementMap\\\"): SVGFEDisplacementMapElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feDistantLight\\\"): SVGFEDistantLightElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFlood\\\"): SVGFEFloodElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncA\\\"): SVGFEFuncAElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncB\\\"): SVGFEFuncBElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncG\\\"): SVGFEFuncGElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncR\\\"): SVGFEFuncRElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feGaussianBlur\\\"): SVGFEGaussianBlurElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feImage\\\"): SVGFEImageElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feMerge\\\"): SVGFEMergeElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feMergeNode\\\"): SVGFEMergeNodeElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feMorphology\\\"): SVGFEMorphologyElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feOffset\\\"): SVGFEOffsetElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"fePointLight\\\"): SVGFEPointLightElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feSpecularLighting\\\"): SVGFESpecularLightingElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feSpotLight\\\"): SVGFESpotLightElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feTile\\\"): SVGFETileElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feTurbulence\\\"): SVGFETurbulenceElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"filter\\\"): SVGFilterElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"foreignObject\\\"): SVGForeignObjectElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"g\\\"): SVGGElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"image\\\"): SVGImageElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"gradient\\\"): SVGGradientElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"line\\\"): SVGLineElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"linearGradient\\\"): SVGLinearGradientElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"marker\\\"): SVGMarkerElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"mask\\\"): SVGMaskElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"path\\\"): SVGPathElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"metadata\\\"): SVGMetadataElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"pattern\\\"): SVGPatternElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"polygon\\\"): SVGPolygonElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"polyline\\\"): SVGPolylineElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"radialGradient\\\"): SVGRadialGradientElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"rect\\\"): SVGRectElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"svg\\\"): SVGSVGElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"script\\\"): SVGScriptElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"stop\\\"): SVGStopElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"style\\\"): SVGStyleElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"switch\\\"): SVGSwitchElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"symbol\\\"): SVGSymbolElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"tspan\\\"): SVGTSpanElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"textContent\\\"): SVGTextContentElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"text\\\"): SVGTextElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"textPath\\\"): SVGTextPathElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"textPositioning\\\"): SVGTextPositioningElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"title\\\"): SVGTitleElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"use\\\"): SVGUseElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"view\\\"): SVGViewElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: string): SVGElement;\\n    createElementNS(namespaceURI: string | null, qualifiedName: string): Element;\\n    createExpression(expression: string, resolver: XPathNSResolver): XPathExpression;\\n    createNSResolver(nodeResolver: Node): XPathNSResolver;\\n    /**\\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\\n     * @param root The root element or node to start traversing on.\\n     * @param whatToShow The type of nodes or elements to appear in the node list\\n     * @param filter A custom NodeFilter function to use. For more information, see filter. Use null for no filter.\\n     * @param entityReferenceExpansion A flag that specifies whether entity reference nodes are expanded.\\n     */\\n    createNodeIterator(root: Node, whatToShow?: number, filter?: NodeFilter, entityReferenceExpansion?: boolean): NodeIterator;\\n    createProcessingInstruction(target: string, data: string): ProcessingInstruction;\\n    /**\\n     *  Returns an empty range object that has both of its boundary points positioned at the beginning of the document.\\n     */\\n    createRange(): Range;\\n    /**\\n     * Creates a text string from the specified value.\\n     * @param data String that specifies the nodeValue property of the text node.\\n     */\\n    createTextNode(data: string): Text;\\n    createTouch(view: Window, target: EventTarget, identifier: number, pageX: number, pageY: number, screenX: number, screenY: number): Touch;\\n    createTouchList(...touches: Touch[]): TouchList;\\n    /**\\n     * Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.\\n     * @param root The root element or node to start traversing on.\\n     * @param whatToShow The type of nodes or elements to appear in the node list. For more information, see whatToShow.\\n     * @param filter A custom NodeFilter function to use.\\n     * @param entityReferenceExpansion A flag that specifies whether entity reference nodes are expanded.\\n     */\\n    createTreeWalker(root: Node, whatToShow?: number, filter?: NodeFilter, entityReferenceExpansion?: boolean): TreeWalker;\\n    /**\\n     * Returns the element for the specified x coordinate and the specified y coordinate.\\n     * @param x The x-offset\\n     * @param y The y-offset\\n     */\\n    elementFromPoint(x: number, y: number): Element;\\n    evaluate(expression: string, contextNode: Node, resolver: XPathNSResolver | null, type: number, result: XPathResult | null): XPathResult;\\n    /**\\n     * Executes a command on the current document, current selection, or the given range.\\n     * @param commandId String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.\\n     * @param showUI Display the user interface, defaults to false.\\n     * @param value Value to assign.\\n     */\\n    execCommand(commandId: string, showUI?: boolean, value?: any): boolean;\\n    /**\\n     * Displays help information for the given command identifier.\\n     * @param commandId Displays help information for the given command identifier.\\n     */\\n    execCommandShowHelp(commandId: string): boolean;\\n    exitFullscreen(): void;\\n    exitPointerLock(): void;\\n    /**\\n     * Causes the element to receive the focus and executes the code specified by the onfocus event.\\n     */\\n    /** @deprecated */\\n    focus(): void;\\n    /**\\n     * Returns a reference to the first object with the specified value of the ID or NAME attribute.\\n     * @param elementId String that specifies the ID value. Case-insensitive.\\n     */\\n    getElementById(elementId: string): HTMLElement | null;\\n    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;\\n    /**\\n     * Gets a collection of objects based on the value of the NAME or ID attribute.\\n     * @param elementName Gets a collection of objects based on the value of the NAME or ID attribute.\\n     */\\n    getElementsByName(elementName: string): NodeListOf<HTMLElement>;\\n    /**\\n     * Retrieves a collection of objects based on the specified element name.\\n     * @param name Specifies the name of an element.\\n     */\\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(tagname: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(tagname: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    getElementsByTagName(tagname: string): NodeListOf<Element>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/1999/xhtml\\\", localName: string): HTMLCollectionOf<HTMLElement>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", localName: string): HTMLCollectionOf<SVGElement>;\\n    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;\\n    /**\\n     * Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.\\n     */\\n    getSelection(): Selection;\\n    /**\\n     * Gets a value indicating whether the object currently has focus.\\n     */\\n    hasFocus(): boolean;\\n    importNode<T extends Node>(importedNode: T, deep: boolean): T;\\n    msElementsFromPoint(x: number, y: number): NodeListOf<Element>;\\n    msElementsFromRect(left: number, top: number, width: number, height: number): NodeListOf<Element>;\\n    /**\\n     * Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.\\n     * @param url Specifies a MIME type for the document.\\n     * @param name Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.\\n     * @param features Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, \\\"fullscreen=yes, toolbar=yes\\\"). The following values are supported.\\n     * @param replace Specifies whether the existing entry for the document is replaced in the history list.\\n     */\\n    open(url?: string, name?: string, features?: string, replace?: boolean): Document;\\n    /**\\n     * Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.\\n     * @param commandId Specifies a command identifier.\\n     */\\n    queryCommandEnabled(commandId: string): boolean;\\n    /**\\n     * Returns a Boolean value that indicates whether the specified command is in the indeterminate state.\\n     * @param commandId String that specifies a command identifier.\\n     */\\n    queryCommandIndeterm(commandId: string): boolean;\\n    /**\\n     * Returns a Boolean value that indicates the current state of the command.\\n     * @param commandId String that specifies a command identifier.\\n     */\\n    queryCommandState(commandId: string): boolean;\\n    /**\\n     * Returns a Boolean value that indicates whether the current command is supported on the current range.\\n     * @param commandId Specifies a command identifier.\\n     */\\n    queryCommandSupported(commandId: string): boolean;\\n    /**\\n     * Retrieves the string associated with a command.\\n     * @param commandId String that contains the identifier of a command. This can be any command identifier given in the list of Command Identifiers.\\n     */\\n    queryCommandText(commandId: string): string;\\n    /**\\n     * Returns the current value of the document, range, or current selection for the given command.\\n     * @param commandId String that specifies a command identifier.\\n     */\\n    queryCommandValue(commandId: string): string;\\n    releaseEvents(): void;\\n    webkitCancelFullScreen(): void;\\n    webkitExitFullscreen(): void;\\n    /**\\n     * Writes one or more HTML expressions to a document in the specified window.\\n     * @param content Specifies the text and HTML tags to write.\\n     */\\n    write(...content: string[]): void;\\n    /**\\n     * Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.\\n     * @param content The text and HTML tags to write.\\n     */\\n    writeln(...content: string[]): void;\\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Document: {\\n    prototype: Document;\\n    new(): Document;\\n};\\n\\ninterface DocumentEvent {\\n    createEvent(eventInterface: \\\"AnimationEvent\\\"): AnimationEvent;\\n    createEvent(eventInterface: \\\"AnimationPlaybackEvent\\\"): AnimationPlaybackEvent;\\n    createEvent(eventInterface: \\\"AudioProcessingEvent\\\"): AudioProcessingEvent;\\n    createEvent(eventInterface: \\\"BeforeUnloadEvent\\\"): BeforeUnloadEvent;\\n    createEvent(eventInterface: \\\"ClipboardEvent\\\"): ClipboardEvent;\\n    createEvent(eventInterface: \\\"CloseEvent\\\"): CloseEvent;\\n    createEvent(eventInterface: \\\"CompositionEvent\\\"): CompositionEvent;\\n    createEvent(eventInterface: \\\"CustomEvent\\\"): CustomEvent;\\n    createEvent(eventInterface: \\\"DeviceLightEvent\\\"): DeviceLightEvent;\\n    createEvent(eventInterface: \\\"DeviceMotionEvent\\\"): DeviceMotionEvent;\\n    createEvent(eventInterface: \\\"DeviceOrientationEvent\\\"): DeviceOrientationEvent;\\n    createEvent(eventInterface: \\\"DragEvent\\\"): DragEvent;\\n    createEvent(eventInterface: \\\"ErrorEvent\\\"): ErrorEvent;\\n    createEvent(eventInterface: \\\"Event\\\"): Event;\\n    createEvent(eventInterface: \\\"Events\\\"): Event;\\n    createEvent(eventInterface: \\\"FocusEvent\\\"): FocusEvent;\\n    createEvent(eventInterface: \\\"FocusNavigationEvent\\\"): FocusNavigationEvent;\\n    createEvent(eventInterface: \\\"GamepadEvent\\\"): GamepadEvent;\\n    createEvent(eventInterface: \\\"HashChangeEvent\\\"): HashChangeEvent;\\n    createEvent(eventInterface: \\\"IDBVersionChangeEvent\\\"): IDBVersionChangeEvent;\\n    createEvent(eventInterface: \\\"KeyboardEvent\\\"): KeyboardEvent;\\n    createEvent(eventInterface: \\\"ListeningStateChangedEvent\\\"): ListeningStateChangedEvent;\\n    createEvent(eventInterface: \\\"MSDCCEvent\\\"): MSDCCEvent;\\n    createEvent(eventInterface: \\\"MSDSHEvent\\\"): MSDSHEvent;\\n    createEvent(eventInterface: \\\"MSMediaKeyMessageEvent\\\"): MSMediaKeyMessageEvent;\\n    createEvent(eventInterface: \\\"MSMediaKeyNeededEvent\\\"): MSMediaKeyNeededEvent;\\n    createEvent(eventInterface: \\\"MediaEncryptedEvent\\\"): MediaEncryptedEvent;\\n    createEvent(eventInterface: \\\"MediaKeyMessageEvent\\\"): MediaKeyMessageEvent;\\n    createEvent(eventInterface: \\\"MediaStreamErrorEvent\\\"): MediaStreamErrorEvent;\\n    createEvent(eventInterface: \\\"MediaStreamEvent\\\"): MediaStreamEvent;\\n    createEvent(eventInterface: \\\"MediaStreamTrackEvent\\\"): MediaStreamTrackEvent;\\n    createEvent(eventInterface: \\\"MessageEvent\\\"): MessageEvent;\\n    createEvent(eventInterface: \\\"MouseEvent\\\"): MouseEvent;\\n    createEvent(eventInterface: \\\"MouseEvents\\\"): MouseEvent;\\n    createEvent(eventInterface: \\\"MutationEvent\\\"): MutationEvent;\\n    createEvent(eventInterface: \\\"MutationEvents\\\"): MutationEvent;\\n    createEvent(eventInterface: \\\"OfflineAudioCompletionEvent\\\"): OfflineAudioCompletionEvent;\\n    createEvent(eventInterface: \\\"OverflowEvent\\\"): OverflowEvent;\\n    createEvent(eventInterface: \\\"PageTransitionEvent\\\"): PageTransitionEvent;\\n    createEvent(eventInterface: \\\"PaymentRequestUpdateEvent\\\"): PaymentRequestUpdateEvent;\\n    createEvent(eventInterface: \\\"PermissionRequestedEvent\\\"): PermissionRequestedEvent;\\n    createEvent(eventInterface: \\\"PointerEvent\\\"): PointerEvent;\\n    createEvent(eventInterface: \\\"PopStateEvent\\\"): PopStateEvent;\\n    createEvent(eventInterface: \\\"ProgressEvent\\\"): ProgressEvent;\\n    createEvent(eventInterface: \\\"PromiseRejectionEvent\\\"): PromiseRejectionEvent;\\n    createEvent(eventInterface: \\\"RTCDTMFToneChangeEvent\\\"): RTCDTMFToneChangeEvent;\\n    createEvent(eventInterface: \\\"RTCDtlsTransportStateChangedEvent\\\"): RTCDtlsTransportStateChangedEvent;\\n    createEvent(eventInterface: \\\"RTCIceCandidatePairChangedEvent\\\"): RTCIceCandidatePairChangedEvent;\\n    createEvent(eventInterface: \\\"RTCIceGathererEvent\\\"): RTCIceGathererEvent;\\n    createEvent(eventInterface: \\\"RTCIceTransportStateChangedEvent\\\"): RTCIceTransportStateChangedEvent;\\n    createEvent(eventInterface: \\\"RTCPeerConnectionIceEvent\\\"): RTCPeerConnectionIceEvent;\\n    createEvent(eventInterface: \\\"RTCSsrcConflictEvent\\\"): RTCSsrcConflictEvent;\\n    createEvent(eventInterface: \\\"SVGZoomEvent\\\"): SVGZoomEvent;\\n    createEvent(eventInterface: \\\"SVGZoomEvents\\\"): SVGZoomEvent;\\n    createEvent(eventInterface: \\\"SecurityPolicyViolationEvent\\\"): SecurityPolicyViolationEvent;\\n    createEvent(eventInterface: \\\"ServiceWorkerMessageEvent\\\"): ServiceWorkerMessageEvent;\\n    createEvent(eventInterface: \\\"SpeechSynthesisEvent\\\"): SpeechSynthesisEvent;\\n    createEvent(eventInterface: \\\"StorageEvent\\\"): StorageEvent;\\n    createEvent(eventInterface: \\\"TextEvent\\\"): TextEvent;\\n    createEvent(eventInterface: \\\"TrackEvent\\\"): TrackEvent;\\n    createEvent(eventInterface: \\\"TransitionEvent\\\"): TransitionEvent;\\n    createEvent(eventInterface: \\\"UIEvent\\\"): UIEvent;\\n    createEvent(eventInterface: \\\"UIEvents\\\"): UIEvent;\\n    createEvent(eventInterface: \\\"VRDisplayEvent\\\"): VRDisplayEvent;\\n    createEvent(eventInterface: \\\"VRDisplayEvent \\\"): VRDisplayEvent ;\\n    createEvent(eventInterface: \\\"WebGLContextEvent\\\"): WebGLContextEvent;\\n    createEvent(eventInterface: \\\"WheelEvent\\\"): WheelEvent;\\n    createEvent(eventInterface: string): Event;\\n}\\n\\ninterface DocumentFragment extends Node, ParentNode {\\n    getElementById(elementId: string): HTMLElement | null;\\n}\\n\\ndeclare var DocumentFragment: {\\n    prototype: DocumentFragment;\\n    new(): DocumentFragment;\\n};\\n\\ninterface DocumentOrShadowRoot {\\n    readonly activeElement: Element | null;\\n    readonly styleSheets: StyleSheetList;\\n    elementFromPoint(x: number, y: number): Element | null;\\n    elementsFromPoint(x: number, y: number): Element[];\\n    getSelection(): Selection | null;\\n}\\n\\ninterface DocumentType extends Node, ChildNode {\\n    readonly entities: NamedNodeMap;\\n    readonly internalSubset: string | null;\\n    readonly name: string;\\n    readonly notations: NamedNodeMap;\\n    readonly publicId: string;\\n    readonly systemId: string;\\n}\\n\\ndeclare var DocumentType: {\\n    prototype: DocumentType;\\n    new(): DocumentType;\\n};\\n\\ninterface DragEvent extends MouseEvent {\\n    readonly dataTransfer: DataTransfer;\\n    initDragEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, dataTransferArg: DataTransfer): void;\\n    msConvertURL(file: File, targetType: string, targetURL?: string): void;\\n}\\n\\ndeclare var DragEvent: {\\n    prototype: DragEvent;\\n    new(type: \\\"drag\\\" | \\\"dragend\\\" | \\\"dragenter\\\" | \\\"dragexit\\\" | \\\"dragleave\\\" | \\\"dragover\\\" | \\\"dragstart\\\" | \\\"drop\\\", dragEventInit?: { dataTransfer?: DataTransfer }): DragEvent;\\n};\\n\\ninterface DynamicsCompressorNode extends AudioNode {\\n    readonly attack: AudioParam;\\n    readonly knee: AudioParam;\\n    readonly ratio: AudioParam;\\n    readonly reduction: number;\\n    readonly release: AudioParam;\\n    readonly threshold: AudioParam;\\n}\\n\\ndeclare var DynamicsCompressorNode: {\\n    prototype: DynamicsCompressorNode;\\n    new(): DynamicsCompressorNode;\\n};\\n\\ninterface EXT_blend_minmax {\\n    readonly MAX_EXT: number;\\n    readonly MIN_EXT: number;\\n}\\n\\ninterface EXT_frag_depth {\\n}\\n\\ninterface EXT_sRGB {\\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: number;\\n    readonly SRGB8_ALPHA8_EXT: number;\\n    readonly SRGB_ALPHA_EXT: number;\\n    readonly SRGB_EXT: number;\\n}\\n\\ninterface EXT_shader_texture_lod {\\n}\\n\\ninterface EXT_texture_filter_anisotropic {\\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: number;\\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: number;\\n}\\n\\ndeclare var EXT_texture_filter_anisotropic: {\\n    prototype: EXT_texture_filter_anisotropic;\\n    new(): EXT_texture_filter_anisotropic;\\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: number;\\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: number;\\n};\\n\\ninterface ElementEventMap extends GlobalEventHandlersEventMap {\\n    \\\"ariarequest\\\": Event;\\n    \\\"command\\\": Event;\\n    \\\"gotpointercapture\\\": PointerEvent;\\n    \\\"lostpointercapture\\\": PointerEvent;\\n    \\\"MSGestureChange\\\": Event;\\n    \\\"MSGestureDoubleTap\\\": Event;\\n    \\\"MSGestureEnd\\\": Event;\\n    \\\"MSGestureHold\\\": Event;\\n    \\\"MSGestureStart\\\": Event;\\n    \\\"MSGestureTap\\\": Event;\\n    \\\"MSGotPointerCapture\\\": Event;\\n    \\\"MSInertiaStart\\\": Event;\\n    \\\"MSLostPointerCapture\\\": Event;\\n    \\\"MSPointerCancel\\\": Event;\\n    \\\"MSPointerDown\\\": Event;\\n    \\\"MSPointerEnter\\\": Event;\\n    \\\"MSPointerLeave\\\": Event;\\n    \\\"MSPointerMove\\\": Event;\\n    \\\"MSPointerOut\\\": Event;\\n    \\\"MSPointerOver\\\": Event;\\n    \\\"MSPointerUp\\\": Event;\\n    \\\"touchcancel\\\": Event;\\n    \\\"touchend\\\": Event;\\n    \\\"touchmove\\\": Event;\\n    \\\"touchstart\\\": Event;\\n    \\\"webkitfullscreenchange\\\": Event;\\n    \\\"webkitfullscreenerror\\\": Event;\\n}\\n\\ninterface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNode, ChildNode {\\n    readonly assignedSlot: HTMLSlotElement | null;\\n    readonly attributes: NamedNodeMap;\\n    readonly classList: DOMTokenList;\\n    className: string;\\n    readonly clientHeight: number;\\n    readonly clientLeft: number;\\n    readonly clientTop: number;\\n    readonly clientWidth: number;\\n    id: string;\\n    innerHTML: string;\\n    msContentZoomFactor: number;\\n    readonly msRegionOverflow: string;\\n    onariarequest: ((this: Element, ev: Event) => any) | null;\\n    oncommand: ((this: Element, ev: Event) => any) | null;\\n    ongotpointercapture: ((this: Element, ev: PointerEvent) => any) | null;\\n    onlostpointercapture: ((this: Element, ev: PointerEvent) => any) | null;\\n    onmsgesturechange: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturedoubletap: ((this: Element, ev: Event) => any) | null;\\n    onmsgestureend: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturehold: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturestart: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturetap: ((this: Element, ev: Event) => any) | null;\\n    onmsgotpointercapture: ((this: Element, ev: Event) => any) | null;\\n    onmsinertiastart: ((this: Element, ev: Event) => any) | null;\\n    onmslostpointercapture: ((this: Element, ev: Event) => any) | null;\\n    onmspointercancel: ((this: Element, ev: Event) => any) | null;\\n    onmspointerdown: ((this: Element, ev: Event) => any) | null;\\n    onmspointerenter: ((this: Element, ev: Event) => any) | null;\\n    onmspointerleave: ((this: Element, ev: Event) => any) | null;\\n    onmspointermove: ((this: Element, ev: Event) => any) | null;\\n    onmspointerout: ((this: Element, ev: Event) => any) | null;\\n    onmspointerover: ((this: Element, ev: Event) => any) | null;\\n    onmspointerup: ((this: Element, ev: Event) => any) | null;\\n    ontouchcancel: ((this: Element, ev: Event) => any) | null;\\n    ontouchend: ((this: Element, ev: Event) => any) | null;\\n    ontouchmove: ((this: Element, ev: Event) => any) | null;\\n    ontouchstart: ((this: Element, ev: Event) => any) | null;\\n    onwebkitfullscreenchange: ((this: Element, ev: Event) => any) | null;\\n    onwebkitfullscreenerror: ((this: Element, ev: Event) => any) | null;\\n    outerHTML: string;\\n    readonly prefix: string | null;\\n    readonly scrollHeight: number;\\n    scrollLeft: number;\\n    scrollTop: number;\\n    readonly scrollWidth: number;\\n    readonly shadowRoot: ShadowRoot | null;\\n    slot: string;\\n    readonly tagName: string;\\n    attachShadow(shadowRootInitDict: ShadowRootInit): ShadowRoot;\\n    closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null;\\n    closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null;\\n    closest(selector: string): Element | null;\\n    getAttribute(qualifiedName: string): string | null;\\n    getAttributeNS(namespaceURI: string, localName: string): string;\\n    getAttributeNode(name: string): Attr | null;\\n    getAttributeNodeNS(namespaceURI: string, localName: string): Attr | null;\\n    getBoundingClientRect(): ClientRect | DOMRect;\\n    getClientRects(): ClientRectList | DOMRectList;\\n    getElementsByClassName(classNames: string): NodeListOf<Element>;\\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(name: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(name: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    getElementsByTagName(name: string): NodeListOf<Element>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/1999/xhtml\\\", localName: string): HTMLCollectionOf<HTMLElement>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", localName: string): HTMLCollectionOf<SVGElement>;\\n    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;\\n    hasAttribute(name: string): boolean;\\n    hasAttributeNS(namespaceURI: string, localName: string): boolean;\\n    hasAttributes(): boolean;\\n    insertAdjacentElement(position: InsertPosition, insertedElement: Element): Element | null;\\n    insertAdjacentHTML(where: InsertPosition, html: string): void;\\n    insertAdjacentText(where: InsertPosition, text: string): void;\\n    matches(selectors: string): boolean;\\n    msGetRegionContent(): any;\\n    msGetUntransformedBounds(): ClientRect;\\n    msMatchesSelector(selectors: string): boolean;\\n    msReleasePointerCapture(pointerId: number): void;\\n    msSetPointerCapture(pointerId: number): void;\\n    msZoomTo(args: MsZoomToOptions): void;\\n    releasePointerCapture(pointerId: number): void;\\n    removeAttribute(qualifiedName: string): void;\\n    removeAttributeNS(namespaceURI: string, localName: string): void;\\n    removeAttributeNode(oldAttr: Attr): Attr;\\n    requestFullscreen(): void;\\n    requestPointerLock(): void;\\n    scroll(options?: ScrollToOptions): void;\\n    scroll(x: number, y: number): void;\\n    scrollBy(options?: ScrollToOptions): void;\\n    scrollBy(x: number, y: number): void;\\n    scrollIntoView(arg?: boolean | ScrollIntoViewOptions): void;\\n    scrollTo(options?: ScrollToOptions): void;\\n    scrollTo(x: number, y: number): void;\\n    setAttribute(qualifiedName: string, value: string): void;\\n    setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\\n    setAttributeNode(newAttr: Attr): Attr;\\n    setAttributeNodeNS(newAttr: Attr): Attr;\\n    setPointerCapture(pointerId: number): void;\\n    webkitMatchesSelector(selectors: string): boolean;\\n    webkitRequestFullScreen(): void;\\n    webkitRequestFullscreen(): void;\\n    addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Element: {\\n    prototype: Element;\\n    new(): Element;\\n};\\n\\ninterface ElementCSSInlineStyle {\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ninterface ElementCreationOptions {\\n    is?: string;\\n}\\n\\ninterface ElementDefinitionOptions {\\n    extends: string;\\n}\\n\\ninterface ElementTraversal {\\n    readonly childElementCount: number;\\n    readonly firstElementChild: Element | null;\\n    readonly lastElementChild: Element | null;\\n    readonly nextElementSibling: Element | null;\\n    readonly previousElementSibling: Element | null;\\n}\\n\\ninterface ErrorEvent extends Event {\\n    readonly colno: number;\\n    readonly error: any;\\n    readonly filename: string;\\n    readonly lineno: number;\\n    readonly message: string;\\n    initErrorEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, messageArg: string, filenameArg: string, linenoArg: number): void;\\n}\\n\\ndeclare var ErrorEvent: {\\n    prototype: ErrorEvent;\\n    new(typeArg: string, eventInitDict?: ErrorEventInit): ErrorEvent;\\n};\\n\\ninterface Event {\\n    readonly bubbles: boolean;\\n    cancelBubble: boolean;\\n    readonly cancelable: boolean;\\n    readonly currentTarget: EventTarget | null;\\n    readonly defaultPrevented: boolean;\\n    readonly eventPhase: number;\\n    readonly isTrusted: boolean;\\n    returnValue: boolean;\\n    readonly scoped: boolean;\\n    readonly srcElement: Element | null;\\n    readonly target: EventTarget | null;\\n    readonly timeStamp: number;\\n    readonly type: string;\\n    deepPath(): EventTarget[];\\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\\n    preventDefault(): void;\\n    stopImmediatePropagation(): void;\\n    stopPropagation(): void;\\n    readonly AT_TARGET: number;\\n    readonly BUBBLING_PHASE: number;\\n    readonly CAPTURING_PHASE: number;\\n    readonly NONE: number;\\n}\\n\\ndeclare var Event: {\\n    prototype: Event;\\n    new(typeArg: string, eventInitDict?: EventInit): Event;\\n    readonly AT_TARGET: number;\\n    readonly BUBBLING_PHASE: number;\\n    readonly CAPTURING_PHASE: number;\\n    readonly NONE: number;\\n};\\n\\ninterface EventListenerObject {\\n    handleEvent(evt: Event): void;\\n}\\n\\ninterface EventSource extends EventTarget {\\n    readonly CLOSED: number;\\n    readonly CONNECTING: number;\\n    readonly OPEN: number;\\n    onerror: (evt: MessageEvent) => any;\\n    onmessage: (evt: MessageEvent) => any;\\n    onopen: (evt: MessageEvent) => any;\\n    readonly readyState: number;\\n    readonly url: string;\\n    readonly withCredentials: boolean;\\n    close(): void;\\n}\\n\\ndeclare var EventSource: {\\n    prototype: EventSource;\\n    new(url: string, eventSourceInitDict?: EventSourceInit): EventSource;\\n};\\n\\ninterface EventSourceInit {\\n    readonly withCredentials: boolean;\\n}\\n\\ninterface EventTarget {\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions): void;\\n    dispatchEvent(evt: Event): boolean;\\n    removeEventListener(type: string, listener?: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;\\n}\\n\\ndeclare var EventTarget: {\\n    prototype: EventTarget;\\n    new(): EventTarget;\\n};\\n\\ninterface ExtensionScriptApis {\\n    extensionIdToShortId(extensionId: string): number;\\n    fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;\\n    genericFunction(routerAddress: any, parameters?: string, callbackId?: number): void;\\n    genericSynchronousFunction(functionId: number, parameters?: string): string;\\n    genericWebRuntimeCallout(to: any, from: any, payload: string): void;\\n    getExtensionId(): string;\\n    registerGenericFunctionCallbackHandler(callbackHandler: Function): void;\\n    registerGenericPersistentCallbackHandler(callbackHandler: Function): void;\\n    registerWebRuntimeCallbackHandler(handler: Function): any;\\n}\\n\\ndeclare var ExtensionScriptApis: {\\n    prototype: ExtensionScriptApis;\\n    new(): ExtensionScriptApis;\\n};\\n\\ninterface External {\\n}\\n\\ndeclare var External: {\\n    prototype: External;\\n    new(): External;\\n};\\n\\ninterface File extends Blob {\\n    readonly lastModified: number;\\n    /** @deprecated */\\n    readonly lastModifiedDate: Date;\\n    readonly name: string;\\n    readonly webkitRelativePath: string;\\n}\\n\\ndeclare var File: {\\n    prototype: File;\\n    new (parts: (ArrayBuffer | ArrayBufferView | Blob | string)[], filename: string, properties?: FilePropertyBag): File;\\n};\\n\\ninterface FileList {\\n    readonly length: number;\\n    item(index: number): File | null;\\n    [index: number]: File;\\n}\\n\\ndeclare var FileList: {\\n    prototype: FileList;\\n    new(): FileList;\\n};\\n\\ninterface FilePropertyBag extends BlobPropertyBag {\\n    lastModified?: number;\\n}\\n\\ninterface FileReaderEventMap {\\n    \\\"abort\\\": ProgressEvent;\\n    \\\"error\\\": ProgressEvent;\\n    \\\"load\\\": ProgressEvent;\\n    \\\"loadend\\\": ProgressEvent;\\n    \\\"loadstart\\\": ProgressEvent;\\n    \\\"progress\\\": ProgressEvent;\\n}\\n\\ninterface FileReader extends EventTarget {\\n    readonly error: DOMException | null;\\n    onabort: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onerror: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onload: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onloadend: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onloadstart: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onprogress: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    readonly readyState: number;\\n    readonly result: any;\\n    abort(): void;\\n    readAsArrayBuffer(blob: Blob): void;\\n    readAsBinaryString(blob: Blob): void;\\n    readAsDataURL(blob: Blob): void;\\n    readAsText(blob: Blob, label?: string): void;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var FileReader: {\\n    prototype: FileReader;\\n    new(): FileReader;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n};\\n\\ninterface FocusEvent extends UIEvent {\\n    readonly relatedTarget: EventTarget;\\n    initFocusEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, relatedTargetArg: EventTarget): void;\\n}\\n\\ndeclare var FocusEvent: {\\n    prototype: FocusEvent;\\n    new(typeArg: string, eventInitDict?: FocusEventInit): FocusEvent;\\n};\\n\\ninterface FocusNavigationEvent extends Event {\\n    readonly navigationReason: NavigationReason;\\n    readonly originHeight: number;\\n    readonly originLeft: number;\\n    readonly originTop: number;\\n    readonly originWidth: number;\\n    requestFocus(): void;\\n}\\n\\ndeclare var FocusNavigationEvent: {\\n    prototype: FocusNavigationEvent;\\n    new(type: string, eventInitDict?: FocusNavigationEventInit): FocusNavigationEvent;\\n};\\n\\ninterface FormData {\\n    append(name: string, value: string | Blob, fileName?: string): void;\\n    delete(name: string): void;\\n    get(name: string): FormDataEntryValue | null;\\n    getAll(name: string): FormDataEntryValue[];\\n    has(name: string): boolean;\\n    set(name: string, value: string | Blob, fileName?: string): void;\\n}\\n\\ndeclare var FormData: {\\n    prototype: FormData;\\n    new(): FormData;\\n    new(form: HTMLFormElement): FormData;\\n};\\n\\ninterface GainNode extends AudioNode {\\n    readonly gain: AudioParam;\\n}\\n\\ndeclare var GainNode: {\\n    prototype: GainNode;\\n    new(): GainNode;\\n};\\n\\ninterface Gamepad {\\n    readonly axes: number[];\\n    readonly buttons: GamepadButton[];\\n    readonly connected: boolean;\\n    readonly displayId: number;\\n    readonly hand: GamepadHand;\\n    readonly hapticActuators: GamepadHapticActuator[];\\n    readonly id: string;\\n    readonly index: number;\\n    readonly mapping: GamepadMappingType;\\n    readonly pose: GamepadPose | null;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var Gamepad: {\\n    prototype: Gamepad;\\n    new(): Gamepad;\\n};\\n\\ninterface GamepadButton {\\n    readonly pressed: boolean;\\n    readonly touched: boolean;\\n    readonly value: number;\\n}\\n\\ndeclare var GamepadButton: {\\n    prototype: GamepadButton;\\n    new(): GamepadButton;\\n};\\n\\ninterface GamepadEvent extends Event {\\n    readonly gamepad: Gamepad;\\n}\\n\\ndeclare var GamepadEvent: {\\n    prototype: GamepadEvent;\\n    new(typeArg: string, eventInitDict?: GamepadEventInit): GamepadEvent;\\n};\\n\\ninterface GamepadHapticActuator {\\n    readonly type: GamepadHapticActuatorType;\\n    pulse(value: number, duration: number): Promise<boolean>;\\n}\\n\\ndeclare var GamepadHapticActuator: {\\n    prototype: GamepadHapticActuator;\\n    new(): GamepadHapticActuator;\\n};\\n\\ninterface GamepadPose {\\n    readonly angularAcceleration: Float32Array | null;\\n    readonly angularVelocity: Float32Array | null;\\n    readonly hasOrientation: boolean;\\n    readonly hasPosition: boolean;\\n    readonly linearAcceleration: Float32Array | null;\\n    readonly linearVelocity: Float32Array | null;\\n    readonly orientation: Float32Array | null;\\n    readonly position: Float32Array | null;\\n}\\n\\ndeclare var GamepadPose: {\\n    prototype: GamepadPose;\\n    new(): GamepadPose;\\n};\\n\\ninterface Geolocation {\\n    clearWatch(watchId: number): void;\\n    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): void;\\n    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): number;\\n}\\n\\ndeclare var Geolocation: {\\n    prototype: Geolocation;\\n    new(): Geolocation;\\n};\\n\\ninterface GetSVGDocument {\\n    getSVGDocument(): Document;\\n}\\n\\ninterface GlobalEventHandlersEventMap {\\n    \\\"pointercancel\\\": PointerEvent;\\n    \\\"pointerdown\\\": PointerEvent;\\n    \\\"pointerenter\\\": PointerEvent;\\n    \\\"pointerleave\\\": PointerEvent;\\n    \\\"pointermove\\\": PointerEvent;\\n    \\\"pointerout\\\": PointerEvent;\\n    \\\"pointerover\\\": PointerEvent;\\n    \\\"pointerup\\\": PointerEvent;\\n    \\\"wheel\\\": WheelEvent;\\n}\\n\\ninterface GlobalEventHandlers {\\n    onpointercancel: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;\\n    addEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface GlobalFetch {\\n    fetch(input?: Request | string, init?: RequestInit): Promise<Response>;\\n}\\n\\ninterface HTMLAllCollection {\\n    readonly length: number;\\n    item(nameOrIndex?: string): HTMLCollection | Element | null;\\n    namedItem(name: string): HTMLCollection | Element | null;\\n    [index: number]: Element;\\n}\\n\\ndeclare var HTMLAllCollection: {\\n    prototype: HTMLAllCollection;\\n    new(): HTMLAllCollection;\\n};\\n\\ninterface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {\\n    Methods: string;\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    /** @deprecated */\\n    charset: string;\\n    /**\\n     * Sets or retrieves the coordinates of the object.\\n     */\\n    /** @deprecated */\\n    coords: string;\\n    download: string;\\n    /**\\n     * Sets or retrieves the language code of the object.\\n     */\\n    hreflang: string;\\n    readonly mimeType: string;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    readonly nameProp: string;\\n    readonly protocolLong: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    rel: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    /** @deprecated */\\n    rev: string;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    /** @deprecated */\\n    shape: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    /**\\n     * Retrieves or sets the text of the object as a string.\\n     */\\n    text: string;\\n    type: string;\\n    urn: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAnchorElement: {\\n    prototype: HTMLAnchorElement;\\n    new(): HTMLAnchorElement;\\n};\\n\\ninterface HTMLAppletElement extends HTMLElement {\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    /** @deprecated */\\n    alt: string;\\n    /**\\n     * Sets or retrieves a character string that can be used to implement your own archive functionality for the object.\\n     */\\n    /** @deprecated */\\n    archive: string;\\n    /** @deprecated */\\n    code: string;\\n    /**\\n     * Sets or retrieves the URL of the component.\\n     */\\n    /** @deprecated */\\n    codeBase: string;\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    /** @deprecated */\\n    height: string;\\n    /** @deprecated */\\n    hspace: number;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /** @deprecated */\\n    object: string;\\n    /** @deprecated */\\n    vspace: number;\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAppletElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAppletElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAppletElement: {\\n    prototype: HTMLAppletElement;\\n    new(): HTMLAppletElement;\\n};\\n\\ninterface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    alt: string;\\n    /**\\n     * Sets or retrieves the coordinates of the object.\\n     */\\n    coords: string;\\n    download: string;\\n    /**\\n     * Sets or gets whether clicks in this region cause action.\\n     */\\n    /** @deprecated */\\n    noHref: boolean;\\n    rel: string;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    shape: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAreaElement: {\\n    prototype: HTMLAreaElement;\\n    new(): HTMLAreaElement;\\n};\\n\\ninterface HTMLAreasCollection extends HTMLCollectionBase {\\n}\\n\\ndeclare var HTMLAreasCollection: {\\n    prototype: HTMLAreasCollection;\\n    new(): HTMLAreasCollection;\\n};\\n\\ninterface HTMLAudioElement extends HTMLMediaElement {\\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAudioElement: {\\n    prototype: HTMLAudioElement;\\n    new(): HTMLAudioElement;\\n};\\n\\ninterface HTMLBRElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.\\n     */\\n    /** @deprecated */\\n    clear: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBRElement: {\\n    prototype: HTMLBRElement;\\n    new(): HTMLBRElement;\\n};\\n\\ninterface HTMLBaseElement extends HTMLElement {\\n    /**\\n     * Gets or sets the baseline URL on which relative links are based.\\n     */\\n    href: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBaseElement: {\\n    prototype: HTMLBaseElement;\\n    new(): HTMLBaseElement;\\n};\\n\\ninterface HTMLBaseFontElement extends HTMLElement, DOML2DeprecatedColorProperty {\\n    /**\\n     * Sets or retrieves the current typeface family.\\n     */\\n    /** @deprecated */\\n    face: string;\\n    /**\\n     * Sets or retrieves the font size of the object.\\n     */\\n    /** @deprecated */\\n    size: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBaseFontElement: {\\n    prototype: HTMLBaseFontElement;\\n    new(): HTMLBaseFontElement;\\n};\\n\\ninterface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\\n    \\\"blur\\\": FocusEvent;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"load\\\": Event;\\n    \\\"orientationchange\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n}\\n\\ninterface HTMLBodyElement extends HTMLElement, WindowEventHandlers {\\n    /** @deprecated */\\n    aLink: string;\\n    /** @deprecated */\\n    background: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    bgProperties: string;\\n    /** @deprecated */\\n    link: string;\\n    /** @deprecated */\\n    noWrap: boolean;\\n    onorientationchange: ((this: HTMLBodyElement, ev: Event) => any) | null;\\n    onresize: ((this: HTMLBodyElement, ev: UIEvent) => any) | null;\\n    /** @deprecated */\\n    text: string;\\n    /** @deprecated */\\n    vLink: string;\\n    addEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBodyElement: {\\n    prototype: HTMLBodyElement;\\n    new(): HTMLBodyElement;\\n};\\n\\ninterface HTMLButtonElement extends HTMLElement {\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Overrides the action attribute (where the data on a form is sent) on the parent form element.\\n     */\\n    formAction: string;\\n    /**\\n     * Used to override the encoding (formEnctype attribute) specified on the form element.\\n     */\\n    formEnctype: string;\\n    /**\\n     * Overrides the submit method attribute previously specified on a form element.\\n     */\\n    formMethod: string;\\n    /**\\n     * Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \\\"save draft\\\"-type submit option.\\n     */\\n    formNoValidate: boolean;\\n    /**\\n     * Overrides the target attribute on a form element.\\n     */\\n    formTarget: string;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    status: any;\\n    /**\\n     * Gets the classification and default behavior of the button.\\n     */\\n    type: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Sets or retrieves the default or selected value of the control.\\n     */\\n    value: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLButtonElement: {\\n    prototype: HTMLButtonElement;\\n    new(): HTMLButtonElement;\\n};\\n\\ninterface HTMLCanvasElement extends HTMLElement {\\n    /**\\n     * Gets or sets the height of a canvas element on a document.\\n     */\\n    height: number;\\n    /**\\n     * Gets or sets the width of a canvas element on a document.\\n     */\\n    width: number;\\n    /**\\n     * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.\\n     * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext(\\\"2d\\\"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext(\\\"experimental-webgl\\\");\\n     */\\n    getContext(contextId: \\\"2d\\\", contextAttributes?: Canvas2DContextAttributes): CanvasRenderingContext2D | null;\\n    getContext(contextId: \\\"webgl\\\" | \\\"experimental-webgl\\\", contextAttributes?: WebGLContextAttributes): WebGLRenderingContext | null;\\n    getContext(contextId: string, contextAttributes?: {}): CanvasRenderingContext2D | WebGLRenderingContext | null;\\n    /**\\n     * Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.\\n     */\\n    msToBlob(): Blob;\\n    toBlob(callback: (result: Blob | null) => void, type?: string, ...arguments: any[]): void;\\n    /**\\n     * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.\\n     * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.\\n     */\\n    toDataURL(type?: string, ...args: any[]): string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLCanvasElement: {\\n    prototype: HTMLCanvasElement;\\n    new(): HTMLCanvasElement;\\n};\\n\\ninterface HTMLCollectionBase {\\n    /**\\n     * Sets or retrieves the number of objects in a collection.\\n     */\\n    readonly length: number;\\n    /**\\n     * Retrieves an object from various collections.\\n     */\\n    item(index: number): Element;\\n    [index: number]: Element;\\n}\\n\\ninterface HTMLCollection extends HTMLCollectionBase {\\n    /**\\n     * Retrieves a select object or an object from an options collection.\\n     */\\n    namedItem(name: string): Element | null;\\n}\\n\\ndeclare var HTMLCollection: {\\n    prototype: HTMLCollection;\\n    new(): HTMLCollection;\\n};\\n\\ninterface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {\\n    item(index: number): T;\\n    namedItem(name: string): T;\\n    [index: number]: T;\\n}\\n\\ninterface HTMLDListElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDListElement: {\\n    prototype: HTMLDListElement;\\n    new(): HTMLDListElement;\\n};\\n\\ninterface HTMLDataElement extends HTMLElement {\\n    value: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDataElement: {\\n    prototype: HTMLDataElement;\\n    new(): HTMLDataElement;\\n};\\n\\ninterface HTMLDataListElement extends HTMLElement {\\n    readonly options: HTMLCollectionOf<HTMLOptionElement>;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDataListElement: {\\n    prototype: HTMLDataListElement;\\n    new(): HTMLDataListElement;\\n};\\n\\ninterface HTMLDetailsElement extends HTMLElement {\\n    open: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDetailsElement: {\\n    prototype: HTMLDetailsElement;\\n    new(): HTMLDetailsElement;\\n};\\n\\ninterface HTMLDialogElement extends HTMLElement {\\n    open: boolean;\\n    returnValue: string;\\n    close(returnValue?: string): void;\\n    show(): void;\\n    showModal(): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDialogElement: {\\n    prototype: HTMLDialogElement;\\n    new(): HTMLDialogElement;\\n};\\n\\ninterface HTMLDirectoryElement extends HTMLElement {\\n    compact: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDirectoryElement: {\\n    prototype: HTMLDirectoryElement;\\n    new(): HTMLDirectoryElement;\\n};\\n\\ninterface HTMLDivElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves whether the browser automatically performs wordwrap.\\n     */\\n    noWrap: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDivElement: {\\n    prototype: HTMLDivElement;\\n    new(): HTMLDivElement;\\n};\\n\\ninterface HTMLDocument extends Document {\\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDocument: {\\n    prototype: HTMLDocument;\\n    new(): HTMLDocument;\\n};\\n\\ninterface HTMLElementEventMap extends ElementEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"activate\\\": Event;\\n    \\\"beforeactivate\\\": Event;\\n    \\\"beforecopy\\\": Event;\\n    \\\"beforecut\\\": Event;\\n    \\\"beforedeactivate\\\": Event;\\n    \\\"beforepaste\\\": Event;\\n    \\\"blur\\\": FocusEvent;\\n    \\\"canplay\\\": Event;\\n    \\\"canplaythrough\\\": Event;\\n    \\\"change\\\": Event;\\n    \\\"click\\\": MouseEvent;\\n    \\\"contextmenu\\\": PointerEvent;\\n    \\\"copy\\\": ClipboardEvent;\\n    \\\"cuechange\\\": Event;\\n    \\\"cut\\\": ClipboardEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"deactivate\\\": Event;\\n    \\\"drag\\\": DragEvent;\\n    \\\"dragend\\\": DragEvent;\\n    \\\"dragenter\\\": DragEvent;\\n    \\\"dragleave\\\": DragEvent;\\n    \\\"dragover\\\": DragEvent;\\n    \\\"dragstart\\\": DragEvent;\\n    \\\"drop\\\": DragEvent;\\n    \\\"durationchange\\\": Event;\\n    \\\"emptied\\\": Event;\\n    \\\"ended\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"input\\\": Event;\\n    \\\"invalid\\\": Event;\\n    \\\"keydown\\\": KeyboardEvent;\\n    \\\"keypress\\\": KeyboardEvent;\\n    \\\"keyup\\\": KeyboardEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadeddata\\\": Event;\\n    \\\"loadedmetadata\\\": Event;\\n    \\\"loadstart\\\": Event;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mouseenter\\\": MouseEvent;\\n    \\\"mouseleave\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n    \\\"mousewheel\\\": WheelEvent;\\n    \\\"MSContentZoom\\\": Event;\\n    \\\"MSManipulationStateChanged\\\": Event;\\n    \\\"paste\\\": ClipboardEvent;\\n    \\\"pause\\\": Event;\\n    \\\"play\\\": Event;\\n    \\\"playing\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"ratechange\\\": Event;\\n    \\\"reset\\\": Event;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"seeked\\\": Event;\\n    \\\"seeking\\\": Event;\\n    \\\"select\\\": UIEvent;\\n    \\\"selectstart\\\": Event;\\n    \\\"stalled\\\": Event;\\n    \\\"submit\\\": Event;\\n    \\\"suspend\\\": Event;\\n    \\\"timeupdate\\\": Event;\\n    \\\"volumechange\\\": Event;\\n    \\\"waiting\\\": Event;\\n}\\n\\ninterface HTMLElement extends Element, ElementCSSInlineStyle {\\n    accessKey: string;\\n    contentEditable: string;\\n    readonly dataset: DOMStringMap;\\n    dir: string;\\n    draggable: boolean;\\n    hidden: boolean;\\n    hideFocus: boolean;\\n    innerText: string;\\n    readonly isContentEditable: boolean;\\n    lang: string;\\n    readonly offsetHeight: number;\\n    readonly offsetLeft: number;\\n    readonly offsetParent: Element;\\n    readonly offsetTop: number;\\n    readonly offsetWidth: number;\\n    onabort: ((this: HTMLElement, ev: UIEvent) => any) | null;\\n    onactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforeactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforecopy: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforecut: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforedeactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforepaste: ((this: HTMLElement, ev: Event) => any) | null;\\n    onblur: ((this: HTMLElement, ev: FocusEvent) => any) | null;\\n    oncanplay: ((this: HTMLElement, ev: Event) => any) | null;\\n    oncanplaythrough: ((this: HTMLElement, ev: Event) => any) | null;\\n    onchange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onclick: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    oncontextmenu: ((this: HTMLElement, ev: PointerEvent) => any) | null;\\n    oncopy: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;\\n    oncuechange: ((this: HTMLElement, ev: Event) => any) | null;\\n    oncut: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;\\n    ondblclick: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    ondeactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    ondrag: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragend: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragenter: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragleave: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragover: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragstart: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondrop: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondurationchange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onemptied: ((this: HTMLElement, ev: Event) => any) | null;\\n    onended: ((this: HTMLElement, ev: Event) => any) | null;\\n    onerror: ((this: HTMLElement, ev: ErrorEvent) => any) | null;\\n    onfocus: ((this: HTMLElement, ev: FocusEvent) => any) | null;\\n    oninput: ((this: HTMLElement, ev: Event) => any) | null;\\n    oninvalid: ((this: HTMLElement, ev: Event) => any) | null;\\n    onkeydown: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;\\n    onkeypress: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;\\n    onkeyup: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;\\n    onload: ((this: HTMLElement, ev: Event) => any) | null;\\n    onloadeddata: ((this: HTMLElement, ev: Event) => any) | null;\\n    onloadedmetadata: ((this: HTMLElement, ev: Event) => any) | null;\\n    onloadstart: ((this: HTMLElement, ev: Event) => any) | null;\\n    onmousedown: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseenter: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseleave: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmousemove: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseout: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseover: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseup: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmousewheel: ((this: HTMLElement, ev: WheelEvent) => any) | null;\\n    onmscontentzoom: ((this: HTMLElement, ev: Event) => any) | null;\\n    onmsmanipulationstatechanged: ((this: HTMLElement, ev: Event) => any) | null;\\n    onpaste: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;\\n    onpause: ((this: HTMLElement, ev: Event) => any) | null;\\n    onplay: ((this: HTMLElement, ev: Event) => any) | null;\\n    onplaying: ((this: HTMLElement, ev: Event) => any) | null;\\n    onprogress: ((this: HTMLElement, ev: ProgressEvent) => any) | null;\\n    onratechange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onreset: ((this: HTMLElement, ev: Event) => any) | null;\\n    onscroll: ((this: HTMLElement, ev: UIEvent) => any) | null;\\n    onseeked: ((this: HTMLElement, ev: Event) => any) | null;\\n    onseeking: ((this: HTMLElement, ev: Event) => any) | null;\\n    onselect: ((this: HTMLElement, ev: UIEvent) => any) | null;\\n    onselectstart: ((this: HTMLElement, ev: Event) => any) | null;\\n    onstalled: ((this: HTMLElement, ev: Event) => any) | null;\\n    onsubmit: ((this: HTMLElement, ev: Event) => any) | null;\\n    onsuspend: ((this: HTMLElement, ev: Event) => any) | null;\\n    ontimeupdate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onvolumechange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onwaiting: ((this: HTMLElement, ev: Event) => any) | null;\\n    outerText: string;\\n    spellcheck: boolean;\\n    tabIndex: number;\\n    title: string;\\n    animate(keyframes: AnimationKeyFrame | AnimationKeyFrame[], options: number | AnimationOptions): Animation;\\n    blur(): void;\\n    click(): void;\\n    dragDrop(): boolean;\\n    focus(): void;\\n    msGetInputContext(): MSInputMethodContext;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLElement: {\\n    prototype: HTMLElement;\\n    new(): HTMLElement;\\n};\\n\\ninterface HTMLEmbedElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string;\\n    hidden: any;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    /**\\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\\n     */\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /**\\n     * Retrieves the palette used for the embedded document.\\n     */\\n    readonly palette: string;\\n    /**\\n     * Retrieves the URL of the plug-in used to view an embedded document.\\n     */\\n    readonly pluginspage: string;\\n    readonly readyState: string;\\n    /**\\n     * Sets or retrieves a URL to be loaded by the object.\\n     */\\n    src: string;\\n    /**\\n     * Sets or retrieves the height and width units of the embed object.\\n     */\\n    units: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLEmbedElement: {\\n    prototype: HTMLEmbedElement;\\n    new(): HTMLEmbedElement;\\n};\\n\\ninterface HTMLFieldSetElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    align: string;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    name: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFieldSetElement: {\\n    prototype: HTMLFieldSetElement;\\n    new(): HTMLFieldSetElement;\\n};\\n\\ninterface HTMLFontElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {\\n    /**\\n     * Sets or retrieves the current typeface family.\\n     */\\n    /** @deprecated */\\n    face: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFontElement: {\\n    prototype: HTMLFontElement;\\n    new(): HTMLFontElement;\\n};\\n\\ninterface HTMLFormControlsCollection extends HTMLCollectionBase {\\n    namedItem(name: string): HTMLCollection | Element | null;\\n}\\n\\ndeclare var HTMLFormControlsCollection: {\\n    prototype: HTMLFormControlsCollection;\\n    new(): HTMLFormControlsCollection;\\n};\\n\\ninterface HTMLFormElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.\\n     */\\n    acceptCharset: string;\\n    /**\\n     * Sets or retrieves the URL to which the form content is sent for processing.\\n     */\\n    action: string;\\n    /**\\n     * Specifies whether autocomplete is applied to an editable text field.\\n     */\\n    autocomplete: string;\\n    /**\\n     * Retrieves a collection, in source order, of all controls in a given form.\\n     */\\n    readonly elements: HTMLFormControlsCollection;\\n    /**\\n     * Sets or retrieves the MIME encoding for the form.\\n     */\\n    encoding: string;\\n    /**\\n     * Sets or retrieves the encoding type for the form.\\n     */\\n    enctype: string;\\n    /**\\n     * Sets or retrieves the number of objects in a collection.\\n     */\\n    readonly length: number;\\n    /**\\n     * Sets or retrieves how to send the form data to the server.\\n     */\\n    method: string;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    /**\\n     * Designates a form that is not validated when submitted.\\n     */\\n    noValidate: boolean;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Retrieves a form object or an object from an elements collection.\\n     * @param name Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is a Number, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.\\n     * @param index Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.\\n     */\\n    item(name?: any, index?: any): any;\\n    /**\\n     * Retrieves a form object or an object from an elements collection.\\n     */\\n    namedItem(name: string): any;\\n    reportValidity(): boolean;\\n    /**\\n     * Fires when the user resets a form.\\n     */\\n    reset(): void;\\n    /**\\n     * Fires when a FORM is about to be submitted.\\n     */\\n    submit(): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [name: string]: any;\\n}\\n\\ndeclare var HTMLFormElement: {\\n    prototype: HTMLFormElement;\\n    new(): HTMLFormElement;\\n};\\n\\ninterface HTMLFrameElementEventMap extends HTMLElementEventMap {\\n    \\\"load\\\": Event;\\n}\\n\\ninterface HTMLFrameElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Specifies the properties of a border drawn around an object.\\n     */\\n    border: string;\\n    /**\\n     * Sets or retrieves the border color of the object.\\n     */\\n    borderColor: any;\\n    /**\\n     * Retrieves the document object of the page or frame.\\n     */\\n    /** @deprecated */\\n    readonly contentDocument: Document | null;\\n    /**\\n     * Retrieves the object of the specified.\\n     */\\n    /** @deprecated */\\n    readonly contentWindow: Window | null;\\n    /**\\n     * Sets or retrieves whether to display a border for the frame.\\n     */\\n    /** @deprecated */\\n    frameBorder: string;\\n    /**\\n     * Sets or retrieves the amount of additional space between the frames.\\n     */\\n    frameSpacing: any;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string | number;\\n    /**\\n     * Sets or retrieves a URI to a long description of the object.\\n     */\\n    /** @deprecated */\\n    longDesc: string;\\n    /**\\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginHeight: string;\\n    /**\\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginWidth: string;\\n    /**\\n     * Sets or retrieves the frame name.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /**\\n     * Sets or retrieves whether the user can resize the frame.\\n     */\\n    /** @deprecated */\\n    noResize: boolean;\\n    /**\\n     * Sets or retrieves whether the frame can be scrolled.\\n     */\\n    /** @deprecated */\\n    scrolling: string;\\n    /**\\n     * Sets or retrieves a URL to be loaded by the object.\\n     */\\n    /** @deprecated */\\n    src: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string | number;\\n    addEventListener<K extends keyof HTMLFrameElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLFrameElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLFrameElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLFrameElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFrameElement: {\\n    prototype: HTMLFrameElement;\\n    new(): HTMLFrameElement;\\n};\\n\\ninterface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\\n    \\\"blur\\\": FocusEvent;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"load\\\": Event;\\n    \\\"orientationchange\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n}\\n\\ninterface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {\\n    /**\\n     * Sets or retrieves the frame widths of the object.\\n     */\\n    /** @deprecated */\\n    cols: string;\\n    name: string;\\n    onorientationchange: ((this: HTMLFrameSetElement, ev: Event) => any) | null;\\n    onresize: ((this: HTMLFrameSetElement, ev: UIEvent) => any) | null;\\n    /**\\n     * Sets or retrieves the frame heights of the object.\\n     */\\n    /** @deprecated */\\n    rows: string;\\n    addEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFrameSetElement: {\\n    prototype: HTMLFrameSetElement;\\n    new(): HTMLFrameSetElement;\\n};\\n\\ninterface HTMLHRElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves whether the horizontal rule is drawn with 3-D shading.\\n     */\\n    /** @deprecated */\\n    noShade: boolean;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHRElement: {\\n    prototype: HTMLHRElement;\\n    new(): HTMLHRElement;\\n};\\n\\ninterface HTMLHeadElement extends HTMLElement {\\n    /** @deprecated */\\n    profile: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHeadElement: {\\n    prototype: HTMLHeadElement;\\n    new(): HTMLHeadElement;\\n};\\n\\ninterface HTMLHeadingElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a value that indicates the table alignment.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHeadingElement: {\\n    prototype: HTMLHeadingElement;\\n    new(): HTMLHeadingElement;\\n};\\n\\ninterface HTMLHtmlElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the DTD version that governs the current document.\\n     */\\n    /** @deprecated */\\n    version: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHtmlElement: {\\n    prototype: HTMLHtmlElement;\\n    new(): HTMLHtmlElement;\\n};\\n\\ninterface HTMLHyperlinkElementUtils {\\n    hash: string;\\n    host: string;\\n    hostname: string;\\n    href: string;\\n    origin: string;\\n    pathname: string;\\n    port: string;\\n    protocol: string;\\n    search: string;\\n    toString(): string;\\n}\\n\\ninterface HTMLIFrameElementEventMap extends HTMLElementEventMap {\\n    \\\"load\\\": Event;\\n}\\n\\ninterface HTMLIFrameElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    allowFullscreen: boolean;\\n    allowPaymentRequest: boolean;\\n    /**\\n     * Retrieves the document object of the page or frame.\\n     */\\n    readonly contentDocument: Document | null;\\n    /**\\n     * Retrieves the object of the specified.\\n     */\\n    readonly contentWindow: Window | null;\\n    /**\\n     * Sets or retrieves whether to display a border for the frame.\\n     */\\n    /** @deprecated */\\n    frameBorder: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string;\\n    /**\\n     * Sets or retrieves a URI to a long description of the object.\\n     */\\n    /** @deprecated */\\n    longDesc: string;\\n    /**\\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginHeight: string;\\n    /**\\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginWidth: string;\\n    /**\\n     * Sets or retrieves the frame name.\\n     */\\n    name: string;\\n    readonly sandbox: DOMTokenList;\\n    /**\\n     * Sets or retrieves whether the frame can be scrolled.\\n     */\\n    /** @deprecated */\\n    scrolling: string;\\n    /**\\n     * Sets or retrieves a URL to be loaded by the object.\\n     */\\n    src: string;\\n    /**\\n     * Sets or retrives the content of the page that is to contain.\\n     */\\n    srcdoc: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string;\\n    addEventListener<K extends keyof HTMLIFrameElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLIFrameElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLIFrameElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLIFrameElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLIFrameElement: {\\n    prototype: HTMLIFrameElement;\\n    new(): HTMLIFrameElement;\\n};\\n\\ninterface HTMLImageElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    alt: string;\\n    /**\\n     * Specifies the properties of a border drawn around an object.\\n     */\\n    /** @deprecated */\\n    border: string;\\n    /**\\n     * Retrieves whether the object is fully loaded.\\n     */\\n    readonly complete: boolean;\\n    crossOrigin: string | null;\\n    readonly currentSrc: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: number;\\n    /**\\n     * Sets or retrieves the width of the border to draw around the object.\\n     */\\n    /** @deprecated */\\n    hspace: number;\\n    /**\\n     * Sets or retrieves whether the image is a server-side image map.\\n     */\\n    isMap: boolean;\\n    /**\\n     * Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.\\n     */\\n    longDesc: string;\\n    /** @deprecated */\\n    lowsrc: string;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /**\\n     * The original height of the image resource before sizing.\\n     */\\n    readonly naturalHeight: number;\\n    /**\\n     * The original width of the image resource before sizing.\\n     */\\n    readonly naturalWidth: number;\\n    sizes: string;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    srcset: string;\\n    /**\\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\\n     */\\n    useMap: string;\\n    /**\\n     * Sets or retrieves the vertical margin for the object.\\n     */\\n    /** @deprecated */\\n    vspace: number;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: number;\\n    readonly x: number;\\n    readonly y: number;\\n    msGetAsCastingSource(): any;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLImageElement: {\\n    prototype: HTMLImageElement;\\n    new(): HTMLImageElement;\\n};\\n\\ninterface HTMLInputElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a comma-separated list of content types.\\n     */\\n    accept: string;\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    alt: string;\\n    /**\\n     * Specifies whether autocomplete is applied to an editable text field.\\n     */\\n    autocomplete: string;\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    /**\\n     * Sets or retrieves the state of the check box or radio button.\\n     */\\n    checked: boolean;\\n    /**\\n     * Sets or retrieves the state of the check box or radio button.\\n     */\\n    defaultChecked: boolean;\\n    /**\\n     * Sets or retrieves the initial contents of the object.\\n     */\\n    defaultValue: string;\\n    disabled: boolean;\\n    /**\\n     * Returns a FileList object on a file type input object.\\n     */\\n    readonly files: FileList | null;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Overrides the action attribute (where the data on a form is sent) on the parent form element.\\n     */\\n    formAction: string;\\n    /**\\n     * Used to override the encoding (formEnctype attribute) specified on the form element.\\n     */\\n    formEnctype: string;\\n    /**\\n     * Overrides the submit method attribute previously specified on a form element.\\n     */\\n    formMethod: string;\\n    /**\\n     * Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \\\"save draft\\\"-type submit option.\\n     */\\n    formNoValidate: boolean;\\n    /**\\n     * Overrides the target attribute on a form element.\\n     */\\n    formTarget: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: number;\\n    indeterminate: boolean;\\n    /**\\n     * Specifies the ID of a pre-defined datalist of options for an input element.\\n     */\\n    readonly list: HTMLElement | null;\\n    /**\\n     * Defines the maximum acceptable value for an input element with type=\\\"number\\\".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.\\n     */\\n    max: string;\\n    /**\\n     * Sets or retrieves the maximum number of characters that the user can enter in a text control.\\n     */\\n    maxLength: number;\\n    /**\\n     * Defines the minimum acceptable value for an input element with type=\\\"number\\\". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.\\n     */\\n    min: string;\\n    minLength: number;\\n    /**\\n     * Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\\n     */\\n    multiple: boolean;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    /**\\n     * Gets or sets a string containing a regular expression that the user's input must match.\\n     */\\n    pattern: string;\\n    /**\\n     * Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\\n     */\\n    placeholder: string;\\n    readOnly: boolean;\\n    /**\\n     * When present, marks an element that can't be submitted without a value.\\n     */\\n    required: boolean;\\n    selectionDirection: string | null;\\n    /**\\n     * Gets or sets the end position or offset of a text selection.\\n     */\\n    selectionEnd: number | null;\\n    /**\\n     * Gets or sets the starting position or offset of a text selection.\\n     */\\n    selectionStart: number | null;\\n    size: number;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    /**\\n     * Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.\\n     */\\n    step: string;\\n    /**\\n     * Returns the content type of the object.\\n     */\\n    type: string;\\n    /**\\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\\n     */\\n    /** @deprecated */\\n    useMap: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Returns the value of the data at the cursor's current position.\\n     */\\n    value: string;\\n    valueAsDate: any;\\n    /**\\n     * Returns the input field value as a number.\\n     */\\n    valueAsNumber: number;\\n    webkitdirectory: boolean;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: number;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Makes the selection equal to the current object.\\n     */\\n    select(): void;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    /**\\n     * Sets the start and end positions of a selection in a text field.\\n     * @param start The offset into the text field for the start of the selection.\\n     * @param end The offset into the text field for the end of the selection.\\n     * @param direction The direction in which the selection is performed.\\n     */\\n    setSelectionRange(start: number, end: number, direction?: \\\"forward\\\" | \\\"backward\\\" | \\\"none\\\"): void;\\n    /**\\n     * Decrements a range input control's value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control's step value multiplied by the parameter's value.\\n     * @param n Value to decrement the value by.\\n     */\\n    stepDown(n?: number): void;\\n    /**\\n     * Increments a range input control's value by the value given by the Step attribute. If the optional parameter is used, will increment the input control's value by that value.\\n     * @param n Value to increment the value by.\\n     */\\n    stepUp(n?: number): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLInputElement: {\\n    prototype: HTMLInputElement;\\n    new(): HTMLInputElement;\\n};\\n\\ninterface HTMLLIElement extends HTMLElement {\\n    /** @deprecated */\\n    type: string;\\n    /**\\n     * Sets or retrieves the value of a list item.\\n     */\\n    value: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLIElement: {\\n    prototype: HTMLLIElement;\\n    new(): HTMLLIElement;\\n};\\n\\ninterface HTMLLabelElement extends HTMLElement {\\n    readonly control: HTMLInputElement | null;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the object to which the given label object is assigned.\\n     */\\n    htmlFor: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLabelElement: {\\n    prototype: HTMLLabelElement;\\n    new(): HTMLLabelElement;\\n};\\n\\ninterface HTMLLegendElement extends HTMLElement {\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLegendElement: {\\n    prototype: HTMLLegendElement;\\n    new(): HTMLLegendElement;\\n};\\n\\ninterface HTMLLinkElement extends HTMLElement, LinkStyle {\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    /** @deprecated */\\n    charset: string;\\n    crossOrigin: string | null;\\n    /** @deprecated */\\n    disabled: boolean;\\n    /**\\n     * Sets or retrieves a destination URL or an anchor point.\\n     */\\n    href: string;\\n    /**\\n     * Sets or retrieves the language code of the object.\\n     */\\n    hreflang: string;\\n    import?: Document;\\n    integrity: string;\\n    /**\\n     * Sets or retrieves the media type.\\n     */\\n    media: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    rel: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    /** @deprecated */\\n    rev: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    /** @deprecated */\\n    target: string;\\n    /**\\n     * Sets or retrieves the MIME type of the object.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLinkElement: {\\n    prototype: HTMLLinkElement;\\n    new(): HTMLLinkElement;\\n};\\n\\ninterface HTMLMainElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMainElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMainElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMainElement: {\\n    prototype: HTMLMainElement;\\n    new(): HTMLMainElement;\\n};\\n\\ninterface HTMLMapElement extends HTMLElement {\\n    /**\\n     * Retrieves a collection of the area objects defined for the given map object.\\n     */\\n    readonly areas: HTMLAreasCollection;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMapElement: {\\n    prototype: HTMLMapElement;\\n    new(): HTMLMapElement;\\n};\\n\\ninterface HTMLMarqueeElementEventMap extends HTMLElementEventMap {\\n    \\\"bounce\\\": Event;\\n    \\\"finish\\\": Event;\\n    \\\"start\\\": Event;\\n}\\n\\ninterface HTMLMarqueeElement extends HTMLElement {\\n    /** @deprecated */\\n    behavior: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /** @deprecated */\\n    direction: string;\\n    /** @deprecated */\\n    height: string;\\n    /** @deprecated */\\n    hspace: number;\\n    /** @deprecated */\\n    loop: number;\\n    /** @deprecated */\\n    onbounce: ((this: HTMLMarqueeElement, ev: Event) => any) | null;\\n    /** @deprecated */\\n    onfinish: ((this: HTMLMarqueeElement, ev: Event) => any) | null;\\n    /** @deprecated */\\n    onstart: ((this: HTMLMarqueeElement, ev: Event) => any) | null;\\n    /** @deprecated */\\n    scrollAmount: number;\\n    /** @deprecated */\\n    scrollDelay: number;\\n    /** @deprecated */\\n    trueSpeed: boolean;\\n    /** @deprecated */\\n    vspace: number;\\n    /** @deprecated */\\n    width: string;\\n    /** @deprecated */\\n    start(): void;\\n    /** @deprecated */\\n    stop(): void;\\n    addEventListener<K extends keyof HTMLMarqueeElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLMarqueeElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLMarqueeElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLMarqueeElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMarqueeElement: {\\n    prototype: HTMLMarqueeElement;\\n    new(): HTMLMarqueeElement;\\n};\\n\\ninterface HTMLMediaElementEventMap extends HTMLElementEventMap {\\n    \\\"encrypted\\\": MediaEncryptedEvent;\\n    \\\"msneedkey\\\": Event;\\n}\\n\\ninterface HTMLMediaElement extends HTMLElement {\\n    /**\\n     * Returns an AudioTrackList object with the audio tracks for a given video element.\\n     */\\n    readonly audioTracks: AudioTrackList;\\n    /**\\n     * Gets or sets a value that indicates whether to start playing the media automatically.\\n     */\\n    autoplay: boolean;\\n    /**\\n     * Gets a collection of buffered time ranges.\\n     */\\n    readonly buffered: TimeRanges;\\n    /**\\n     * Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).\\n     */\\n    controls: boolean;\\n    crossOrigin: string | null;\\n    /**\\n     * Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.\\n     */\\n    readonly currentSrc: string;\\n    /**\\n     * Gets or sets the current playback position, in seconds.\\n     */\\n    currentTime: number;\\n    defaultMuted: boolean;\\n    /**\\n     * Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.\\n     */\\n    defaultPlaybackRate: number;\\n    /**\\n     * Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.\\n     */\\n    readonly duration: number;\\n    /**\\n     * Gets information about whether the playback has ended or not.\\n     */\\n    readonly ended: boolean;\\n    /**\\n     * Returns an object representing the current error state of the audio or video element.\\n     */\\n    readonly error: MediaError | null;\\n    /**\\n     * Gets or sets a flag to specify whether playback should restart after it completes.\\n     */\\n    loop: boolean;\\n    readonly mediaKeys: MediaKeys | null;\\n    /**\\n     * Specifies the purpose of the audio or video media, such as background audio or alerts.\\n     */\\n    msAudioCategory: string;\\n    /**\\n     * Specifies the output device id that the audio will be sent to.\\n     */\\n    msAudioDeviceType: string;\\n    readonly msGraphicsTrustStatus: MSGraphicsTrust;\\n    /**\\n     * Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element.\\n     */\\n    /** @deprecated */\\n    readonly msKeys: MSMediaKeys;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    /**\\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\\n     */\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Specifies whether or not to enable low-latency playback on the media element.\\n     */\\n    msRealTime: boolean;\\n    /**\\n     * Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.\\n     */\\n    muted: boolean;\\n    /**\\n     * Gets the current network activity for the element.\\n     */\\n    readonly networkState: number;\\n    onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;\\n    /** @deprecated */\\n    onmsneedkey: ((this: HTMLMediaElement, ev: Event) => any) | null;\\n    /**\\n     * Gets a flag that specifies whether playback is paused.\\n     */\\n    readonly paused: boolean;\\n    /**\\n     * Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.\\n     */\\n    playbackRate: number;\\n    /**\\n     * Gets TimeRanges for the current media resource that has been played.\\n     */\\n    readonly played: TimeRanges;\\n    /**\\n     * Gets or sets the current playback position, in seconds.\\n     */\\n    preload: string;\\n    readonly readyState: number;\\n    /**\\n     * Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.\\n     */\\n    readonly seekable: TimeRanges;\\n    /**\\n     * Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource.\\n     */\\n    readonly seeking: boolean;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    srcObject: MediaStream | MediaSource | Blob | null;\\n    readonly textTracks: TextTrackList;\\n    readonly videoTracks: VideoTrackList;\\n    /**\\n     * Gets or sets the volume level for audio portions of the media element.\\n     */\\n    volume: number;\\n    addTextTrack(kind: TextTrackKind, label?: string, language?: string): TextTrack;\\n    /**\\n     * Returns a string that specifies whether the client can play a given media resource type.\\n     */\\n    canPlayType(type: string): CanPlayTypeResult;\\n    /**\\n     * Resets the audio or video object and loads a new media resource.\\n     */\\n    load(): void;\\n    /**\\n     * Clears all effects from the media pipeline.\\n     */\\n    msClearEffects(): void;\\n    msGetAsCastingSource(): any;\\n    /**\\n     * Inserts the specified audio effect into media pipeline.\\n     */\\n    msInsertAudioEffect(activatableClassId: string, effectRequired: boolean, config?: any): void;\\n    /** @deprecated */\\n    msSetMediaKeys(mediaKeys: MSMediaKeys): void;\\n    /**\\n     * Specifies the media protection manager for a given media pipeline.\\n     */\\n    msSetMediaProtectionManager(mediaProtectionManager?: any): void;\\n    /**\\n     * Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not.\\n     */\\n    pause(): void;\\n    /**\\n     * Loads and starts playback of a media resource.\\n     */\\n    play(): Promise<void>;\\n    setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;\\n    readonly HAVE_CURRENT_DATA: number;\\n    readonly HAVE_ENOUGH_DATA: number;\\n    readonly HAVE_FUTURE_DATA: number;\\n    readonly HAVE_METADATA: number;\\n    readonly HAVE_NOTHING: number;\\n    readonly NETWORK_EMPTY: number;\\n    readonly NETWORK_IDLE: number;\\n    readonly NETWORK_LOADING: number;\\n    readonly NETWORK_NO_SOURCE: number;\\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMediaElement: {\\n    prototype: HTMLMediaElement;\\n    new(): HTMLMediaElement;\\n    readonly HAVE_CURRENT_DATA: number;\\n    readonly HAVE_ENOUGH_DATA: number;\\n    readonly HAVE_FUTURE_DATA: number;\\n    readonly HAVE_METADATA: number;\\n    readonly HAVE_NOTHING: number;\\n    readonly NETWORK_EMPTY: number;\\n    readonly NETWORK_IDLE: number;\\n    readonly NETWORK_LOADING: number;\\n    readonly NETWORK_NO_SOURCE: number;\\n};\\n\\ninterface HTMLMenuElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMenuElement: {\\n    prototype: HTMLMenuElement;\\n    new(): HTMLMenuElement;\\n};\\n\\ninterface HTMLMetaElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    /** @deprecated */\\n    charset: string;\\n    /**\\n     * Gets or sets meta-information to associate with httpEquiv or name.\\n     */\\n    content: string;\\n    /**\\n     * Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.\\n     */\\n    httpEquiv: string;\\n    /**\\n     * Sets or retrieves the value specified in the content attribute of the meta object.\\n     */\\n    name: string;\\n    /**\\n     * Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.\\n     */\\n    /** @deprecated */\\n    scheme: string;\\n    /**\\n     * Sets or retrieves the URL property that will be loaded after the specified time has elapsed.\\n     */\\n    /** @deprecated */\\n    url: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMetaElement: {\\n    prototype: HTMLMetaElement;\\n    new(): HTMLMetaElement;\\n};\\n\\ninterface HTMLMeterElement extends HTMLElement {\\n    high: number;\\n    low: number;\\n    max: number;\\n    min: number;\\n    optimum: number;\\n    value: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMeterElement: {\\n    prototype: HTMLMeterElement;\\n    new(): HTMLMeterElement;\\n};\\n\\ninterface HTMLModElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves reference information about the object.\\n     */\\n    cite: string;\\n    /**\\n     * Sets or retrieves the date and time of a modification to the object.\\n     */\\n    dateTime: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLModElement: {\\n    prototype: HTMLModElement;\\n    new(): HTMLModElement;\\n};\\n\\ninterface HTMLOListElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    /**\\n     * The starting number.\\n     */\\n    start: number;\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOListElement: {\\n    prototype: HTMLOListElement;\\n    new(): HTMLOListElement;\\n};\\n\\ninterface HTMLObjectElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element.\\n     */\\n    readonly BaseHref: string;\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a character string that can be used to implement your own archive functionality for the object.\\n     */\\n    /** @deprecated */\\n    archive: string;\\n    /** @deprecated */\\n    border: string;\\n    /**\\n     * Sets or retrieves the URL of the file containing the compiled Java class.\\n     */\\n    /** @deprecated */\\n    code: string;\\n    /**\\n     * Sets or retrieves the URL of the component.\\n     */\\n    /** @deprecated */\\n    codeBase: string;\\n    /**\\n     * Sets or retrieves the Internet media type for the code associated with the object.\\n     */\\n    /** @deprecated */\\n    codeType: string;\\n    /**\\n     * Retrieves the document object of the page or frame.\\n     */\\n    readonly contentDocument: Document | null;\\n    /**\\n     * Sets or retrieves the URL that references the data of the object.\\n     */\\n    data: string;\\n    /** @deprecated */\\n    declare: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string;\\n    /** @deprecated */\\n    hspace: number;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    /**\\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\\n     */\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    readonly readyState: number;\\n    /**\\n     * Sets or retrieves a message to be displayed while an object is loading.\\n     */\\n    /** @deprecated */\\n    standby: string;\\n    /**\\n     * Sets or retrieves the MIME type of the object.\\n     */\\n    type: string;\\n    typemustmatch: boolean;\\n    /**\\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\\n     */\\n    useMap: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /** @deprecated */\\n    vspace: number;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLObjectElement: {\\n    prototype: HTMLObjectElement;\\n    new(): HTMLObjectElement;\\n};\\n\\ninterface HTMLOptGroupElement extends HTMLElement {\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves a value that you can use to implement your own label functionality for the object.\\n     */\\n    label: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOptGroupElement: {\\n    prototype: HTMLOptGroupElement;\\n    new(): HTMLOptGroupElement;\\n};\\n\\ninterface HTMLOptionElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the status of an option.\\n     */\\n    defaultSelected: boolean;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the ordinal position of an option in a list box.\\n     */\\n    readonly index: number;\\n    /**\\n     * Sets or retrieves a value that you can use to implement your own label functionality for the object.\\n     */\\n    label: string;\\n    /**\\n     * Sets or retrieves whether the option in the list box is the default item.\\n     */\\n    selected: boolean;\\n    /**\\n     * Sets or retrieves the text string specified by the option tag.\\n     */\\n    text: string;\\n    /**\\n     * Sets or retrieves the value which is returned to the server when the form control is submitted.\\n     */\\n    value: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOptionElement: {\\n    prototype: HTMLOptionElement;\\n    new(): HTMLOptionElement;\\n};\\n\\ninterface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {\\n    length: number;\\n    selectedIndex: number;\\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\\n    remove(index: number): void;\\n}\\n\\ndeclare var HTMLOptionsCollection: {\\n    prototype: HTMLOptionsCollection;\\n    new(): HTMLOptionsCollection;\\n};\\n\\ninterface HTMLOutputElement extends HTMLElement {\\n    defaultValue: string;\\n    readonly form: HTMLFormElement | null;\\n    readonly htmlFor: DOMTokenList;\\n    name: string;\\n    readonly type: string;\\n    readonly validationMessage: string;\\n    readonly validity: ValidityState;\\n    value: string;\\n    readonly willValidate: boolean;\\n    checkValidity(): boolean;\\n    reportValidity(): boolean;\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOutputElement: {\\n    prototype: HTMLOutputElement;\\n    new(): HTMLOutputElement;\\n};\\n\\ninterface HTMLParagraphElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    clear: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLParagraphElement: {\\n    prototype: HTMLParagraphElement;\\n    new(): HTMLParagraphElement;\\n};\\n\\ninterface HTMLParamElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the name of an input parameter for an element.\\n     */\\n    name: string;\\n    /**\\n     * Sets or retrieves the content type of the resource designated by the value attribute.\\n     */\\n    /** @deprecated */\\n    type: string;\\n    /**\\n     * Sets or retrieves the value of an input parameter for an element.\\n     */\\n    value: string;\\n    /**\\n     * Sets or retrieves the data type of the value attribute.\\n     */\\n    /** @deprecated */\\n    valueType: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLParamElement: {\\n    prototype: HTMLParamElement;\\n    new(): HTMLParamElement;\\n};\\n\\ninterface HTMLPictureElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLPictureElement: {\\n    prototype: HTMLPictureElement;\\n    new(): HTMLPictureElement;\\n};\\n\\ninterface HTMLPreElement extends HTMLElement {\\n    /**\\n     * Sets or gets a value that you can use to implement your own width functionality for the object.\\n     */\\n    /** @deprecated */\\n    width: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLPreElement: {\\n    prototype: HTMLPreElement;\\n    new(): HTMLPreElement;\\n};\\n\\ninterface HTMLProgressElement extends HTMLElement {\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Defines the maximum, or \\\"done\\\" value for a progress element.\\n     */\\n    max: number;\\n    /**\\n     * Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).\\n     */\\n    readonly position: number;\\n    /**\\n     * Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.\\n     */\\n    value: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLProgressElement: {\\n    prototype: HTMLProgressElement;\\n    new(): HTMLProgressElement;\\n};\\n\\ninterface HTMLQuoteElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves reference information about the object.\\n     */\\n    cite: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLQuoteElement: {\\n    prototype: HTMLQuoteElement;\\n    new(): HTMLQuoteElement;\\n};\\n\\ninterface HTMLScriptElement extends HTMLElement {\\n    async: boolean;\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    charset: string;\\n    crossOrigin: string | null;\\n    /**\\n     * Sets or retrieves the status of the script.\\n     */\\n    defer: boolean;\\n    /**\\n     * Sets or retrieves the event for which the script is written.\\n     */\\n    /** @deprecated */\\n    event: string;\\n    /**\\n     * Sets or retrieves the object that is bound to the event script.\\n     */\\n    /** @deprecated */\\n    htmlFor: string;\\n    integrity: string;\\n    noModule: boolean;\\n    /**\\n     * Retrieves the URL to an external file that contains the source code or data.\\n     */\\n    src: string;\\n    /**\\n     * Retrieves or sets the text of the object as a string.\\n     */\\n    text: string;\\n    /**\\n     * Sets or retrieves the MIME type for the associated scripting engine.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLScriptElement: {\\n    prototype: HTMLScriptElement;\\n    new(): HTMLScriptElement;\\n};\\n\\ninterface HTMLSelectElement extends HTMLElement {\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the number of objects in a collection.\\n     */\\n    length: number;\\n    /**\\n     * Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\\n     */\\n    multiple: boolean;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    readonly options: HTMLOptionsCollection;\\n    /**\\n     * When present, marks an element that can't be submitted without a value.\\n     */\\n    required: boolean;\\n    /**\\n     * Sets or retrieves the index of the selected option in a select object.\\n     */\\n    selectedIndex: number;\\n    readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;\\n    /**\\n     * Sets or retrieves the number of rows in the list box.\\n     */\\n    size: number;\\n    /**\\n     * Retrieves the type of select control based on the value of the MULTIPLE attribute.\\n     */\\n    readonly type: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Sets or retrieves the value which is returned to the server when the form control is submitted.\\n     */\\n    value: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Adds an element to the areas, controlRange, or options collection.\\n     * @param element Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.\\n     * @param before Variant of type Object that specifies an element to insert before, or null to append the object to the collection.\\n     */\\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Retrieves a select object or an object from an options collection.\\n     * @param name Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is an integer, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.\\n     * @param index Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.\\n     */\\n    item(name?: any, index?: any): Element | null;\\n    /**\\n     * Retrieves a select object or an object from an options collection.\\n     * @param namedItem A String that specifies the name or id property of the object to retrieve. A collection is returned if more than one match is made.\\n     */\\n    namedItem(name: string): any;\\n    /**\\n     * Removes an element from the collection.\\n     * @param index Number that specifies the zero-based index of the element to remove from the collection.\\n     */\\n    remove(index?: number): void;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [name: string]: any;\\n}\\n\\ndeclare var HTMLSelectElement: {\\n    prototype: HTMLSelectElement;\\n    new(): HTMLSelectElement;\\n};\\n\\ninterface HTMLSlotElement extends HTMLElement {\\n    name: string;\\n    assignedNodes(options?: AssignedNodesOptions): Node[];\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface HTMLSourceElement extends HTMLElement {\\n    /**\\n     * Gets or sets the intended media type of the media source.\\n     */\\n    media: string;\\n    /** @deprecated */\\n    msKeySystem: string;\\n    sizes: string;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    srcset: string;\\n    /**\\n     * Gets or sets the MIME type of a media resource.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLSourceElement: {\\n    prototype: HTMLSourceElement;\\n    new(): HTMLSourceElement;\\n};\\n\\ninterface HTMLSpanElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLSpanElement: {\\n    prototype: HTMLSpanElement;\\n    new(): HTMLSpanElement;\\n};\\n\\ninterface HTMLStyleElement extends HTMLElement, LinkStyle {\\n    /** @deprecated */\\n    disabled: boolean;\\n    /**\\n     * Sets or retrieves the media type.\\n     */\\n    media: string;\\n    /**\\n     * Retrieves the CSS language in which the style sheet is written.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLStyleElement: {\\n    prototype: HTMLStyleElement;\\n    new(): HTMLStyleElement;\\n};\\n\\ninterface HTMLSummaryElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSummaryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSummaryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLSummaryElement: {\\n    prototype: HTMLSummaryElement;\\n    new(): HTMLSummaryElement;\\n};\\n\\ninterface HTMLTableCaptionElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the alignment of the caption or legend.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableCaptionElement: {\\n    prototype: HTMLTableCaptionElement;\\n    new(): HTMLTableCaptionElement;\\n};\\n\\ninterface HTMLTableCellElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves abbreviated text for the object.\\n     */\\n    abbr: string;\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a comma-delimited list of conceptual categories associated with the object.\\n     */\\n    /** @deprecated */\\n    axis: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /**\\n     * Retrieves the position of the object in the cells collection of a row.\\n     */\\n    readonly cellIndex: number;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Sets or retrieves the number columns in the table that the object should span.\\n     */\\n    colSpan: number;\\n    /**\\n     * Sets or retrieves a list of header cells that provide information for the object.\\n     */\\n    headers: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    /** @deprecated */\\n    height: string;\\n    /**\\n     * Sets or retrieves whether the browser automatically performs wordwrap.\\n     */\\n    /** @deprecated */\\n    noWrap: boolean;\\n    /**\\n     * Sets or retrieves how many rows in a table the cell should span.\\n     */\\n    rowSpan: number;\\n    /**\\n     * Sets or retrieves the group of cells in a table to which the object's information applies.\\n     */\\n    scope: string;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableCellElement: {\\n    prototype: HTMLTableCellElement;\\n    new(): HTMLTableCellElement;\\n};\\n\\ninterface HTMLTableColElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the alignment of the object relative to the display or table.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Sets or retrieves the number of columns in the group.\\n     */\\n    span: number;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableColElement: {\\n    prototype: HTMLTableColElement;\\n    new(): HTMLTableColElement;\\n};\\n\\ninterface HTMLTableDataCellElement extends HTMLTableCellElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableDataCellElement: {\\n    prototype: HTMLTableDataCellElement;\\n    new(): HTMLTableDataCellElement;\\n};\\n\\ninterface HTMLTableElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a value that indicates the table alignment.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /**\\n     * Sets or retrieves the width of the border to draw around the object.\\n     */\\n    /** @deprecated */\\n    border: string;\\n    /**\\n     * Retrieves the caption object of a table.\\n     */\\n    caption: HTMLTableCaptionElement | null;\\n    /**\\n     * Sets or retrieves the amount of space between the border of the cell and the content of the cell.\\n     */\\n    /** @deprecated */\\n    cellPadding: string;\\n    /**\\n     * Sets or retrieves the amount of space between cells in a table.\\n     */\\n    /** @deprecated */\\n    cellSpacing: string;\\n    /**\\n     * Sets or retrieves the way the border frame around the table is displayed.\\n     */\\n    /** @deprecated */\\n    frame: string;\\n    /**\\n     * Sets or retrieves the number of horizontal rows contained in the object.\\n     */\\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\\n    /**\\n     * Sets or retrieves which dividing lines (inner borders) are displayed.\\n     */\\n    /** @deprecated */\\n    rules: string;\\n    /**\\n     * Sets or retrieves a description and/or structure of the object.\\n     */\\n    /** @deprecated */\\n    summary: string;\\n    /**\\n     * Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.\\n     */\\n    readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;\\n    /**\\n     * Retrieves the tFoot object of the table.\\n     */\\n    tFoot: HTMLTableSectionElement | null;\\n    /**\\n     * Retrieves the tHead object of the table.\\n     */\\n    tHead: HTMLTableSectionElement | null;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    /**\\n     * Creates an empty caption element in the table.\\n     */\\n    createCaption(): HTMLTableCaptionElement;\\n    /**\\n     * Creates an empty tBody element in the table.\\n     */\\n    createTBody(): HTMLTableSectionElement;\\n    /**\\n     * Creates an empty tFoot element in the table.\\n     */\\n    createTFoot(): HTMLTableSectionElement;\\n    /**\\n     * Returns the tHead element object if successful, or null otherwise.\\n     */\\n    createTHead(): HTMLTableSectionElement;\\n    /**\\n     * Deletes the caption element and its contents from the table.\\n     */\\n    deleteCaption(): void;\\n    /**\\n     * Removes the specified row (tr) from the element and from the rows collection.\\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\\n     */\\n    deleteRow(index?: number): void;\\n    /**\\n     * Deletes the tFoot element and its contents from the table.\\n     */\\n    deleteTFoot(): void;\\n    /**\\n     * Deletes the tHead element and its contents from the table.\\n     */\\n    deleteTHead(): void;\\n    /**\\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\\n     */\\n    insertRow(index?: number): HTMLTableRowElement;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableElement: {\\n    prototype: HTMLTableElement;\\n    new(): HTMLTableElement;\\n};\\n\\ninterface HTMLTableHeaderCellElement extends HTMLTableCellElement {\\n    scope: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableHeaderCellElement: {\\n    prototype: HTMLTableHeaderCellElement;\\n    new(): HTMLTableHeaderCellElement;\\n};\\n\\ninterface HTMLTableRowElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /**\\n     * Retrieves a collection of all cells in the table row.\\n     */\\n    readonly cells: HTMLCollectionOf<HTMLTableDataCellElement | HTMLTableHeaderCellElement>;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Retrieves the position of the object in the rows collection for the table.\\n     */\\n    readonly rowIndex: number;\\n    /**\\n     * Retrieves the position of the object in the collection.\\n     */\\n    readonly sectionRowIndex: number;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Removes the specified cell from the table row, as well as from the cells collection.\\n     * @param index Number that specifies the zero-based position of the cell to remove from the table row. If no value is provided, the last cell in the cells collection is deleted.\\n     */\\n    deleteCell(index?: number): void;\\n    /**\\n     * Creates a new cell in the table row, and adds the cell to the cells collection.\\n     * @param index Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.\\n     */\\n    insertCell(index?: number): HTMLTableDataCellElement;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableRowElement: {\\n    prototype: HTMLTableRowElement;\\n    new(): HTMLTableRowElement;\\n};\\n\\ninterface HTMLTableSectionElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a value that indicates the table alignment.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Sets or retrieves the number of horizontal rows contained in the object.\\n     */\\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Removes the specified row (tr) from the element and from the rows collection.\\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\\n     */\\n    deleteRow(index?: number): void;\\n    /**\\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\\n     */\\n    insertRow(index?: number): HTMLTableRowElement;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableSectionElement: {\\n    prototype: HTMLTableSectionElement;\\n    new(): HTMLTableSectionElement;\\n};\\n\\ninterface HTMLTemplateElement extends HTMLElement {\\n    readonly content: DocumentFragment;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTemplateElement: {\\n    prototype: HTMLTemplateElement;\\n    new(): HTMLTemplateElement;\\n};\\n\\ninterface HTMLTextAreaElement extends HTMLElement {\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    cols: number;\\n    /**\\n     * Sets or retrieves the initial contents of the object.\\n     */\\n    defaultValue: string;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the maximum number of characters that the user can enter in a text control.\\n     */\\n    maxLength: number;\\n    minLength: number;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    /**\\n     * Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\\n     */\\n    placeholder: string;\\n    /**\\n     * Sets or retrieves the value indicated whether the content of the object is read-only.\\n     */\\n    readOnly: boolean;\\n    /**\\n     * When present, marks an element that can't be submitted without a value.\\n     */\\n    required: boolean;\\n    /**\\n     * Sets or retrieves the number of horizontal rows contained in the object.\\n     */\\n    rows: number;\\n    /**\\n     * Gets or sets the end position or offset of a text selection.\\n     */\\n    selectionEnd: number;\\n    /**\\n     * Gets or sets the starting position or offset of a text selection.\\n     */\\n    selectionStart: number;\\n    /**\\n     * Retrieves the type of control.\\n     */\\n    readonly type: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Retrieves or sets the text in the entry field of the textArea element.\\n     */\\n    value: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Sets or retrieves how to handle wordwrapping in the object.\\n     */\\n    wrap: string;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Highlights the input area of a form element.\\n     */\\n    select(): void;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    /**\\n     * Sets the start and end positions of a selection in a text field.\\n     * @param start The offset into the text field for the start of the selection.\\n     * @param end The offset into the text field for the end of the selection.\\n     * @param direction The direction in which the selection is performed.\\n     */\\n    setSelectionRange(start: number, end: number, direction?: \\\"forward\\\" | \\\"backward\\\" | \\\"none\\\"): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTextAreaElement: {\\n    prototype: HTMLTextAreaElement;\\n    new(): HTMLTextAreaElement;\\n};\\n\\ninterface HTMLTimeElement extends HTMLElement {\\n    dateTime: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTimeElement: {\\n    prototype: HTMLTimeElement;\\n    new(): HTMLTimeElement;\\n};\\n\\ninterface HTMLTitleElement extends HTMLElement {\\n    /**\\n     * Retrieves or sets the text of the object as a string.\\n     */\\n    text: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTitleElement: {\\n    prototype: HTMLTitleElement;\\n    new(): HTMLTitleElement;\\n};\\n\\ninterface HTMLTrackElement extends HTMLElement {\\n    default: boolean;\\n    kind: string;\\n    label: string;\\n    readonly readyState: number;\\n    src: string;\\n    srclang: string;\\n    readonly track: TextTrack;\\n    readonly ERROR: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTrackElement: {\\n    prototype: HTMLTrackElement;\\n    new(): HTMLTrackElement;\\n    readonly ERROR: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n};\\n\\ninterface HTMLUListElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    /** @deprecated */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLUListElement: {\\n    prototype: HTMLUListElement;\\n    new(): HTMLUListElement;\\n};\\n\\ninterface HTMLUnknownElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLUnknownElement: {\\n    prototype: HTMLUnknownElement;\\n    new(): HTMLUnknownElement;\\n};\\n\\ninterface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {\\n    \\\"MSVideoFormatChanged\\\": Event;\\n    \\\"MSVideoFrameStepCompleted\\\": Event;\\n    \\\"MSVideoOptimalLayoutChanged\\\": Event;\\n}\\n\\ninterface HTMLVideoElement extends HTMLMediaElement {\\n    /**\\n     * Gets or sets the height of the video element.\\n     */\\n    height: number;\\n    msHorizontalMirror: boolean;\\n    readonly msIsLayoutOptimalForPlayback: boolean;\\n    readonly msIsStereo3D: boolean;\\n    msStereo3DPackingMode: string;\\n    msStereo3DRenderMode: string;\\n    msZoom: boolean;\\n    onMSVideoFormatChanged: ((this: HTMLVideoElement, ev: Event) => any) | null;\\n    onMSVideoFrameStepCompleted: ((this: HTMLVideoElement, ev: Event) => any) | null;\\n    onMSVideoOptimalLayoutChanged: ((this: HTMLVideoElement, ev: Event) => any) | null;\\n    /**\\n     * Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.\\n     */\\n    poster: string;\\n    /**\\n     * Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.\\n     */\\n    readonly videoHeight: number;\\n    /**\\n     * Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.\\n     */\\n    readonly videoWidth: number;\\n    readonly webkitDisplayingFullscreen: boolean;\\n    readonly webkitSupportsFullscreen: boolean;\\n    /**\\n     * Gets or sets the width of the video element.\\n     */\\n    width: number;\\n    getVideoPlaybackQuality(): VideoPlaybackQuality;\\n    msFrameStep(forward: boolean): void;\\n    msInsertVideoEffect(activatableClassId: string, effectRequired: boolean, config?: any): void;\\n    msSetVideoRectangle(left: number, top: number, right: number, bottom: number): void;\\n    webkitEnterFullScreen(): void;\\n    webkitEnterFullscreen(): void;\\n    webkitExitFullScreen(): void;\\n    webkitExitFullscreen(): void;\\n    addEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLVideoElement: {\\n    prototype: HTMLVideoElement;\\n    new(): HTMLVideoElement;\\n};\\n\\ninterface HTMLegendElement {\\n    readonly form: HTMLFormElement | null;\\n}\\n\\ndeclare var HTMLegendElement: {\\n    prototype: HTMLegendElement;\\n    new(): HTMLegendElement;\\n};\\n\\ninterface HashChangeEvent extends Event {\\n    readonly newURL: string;\\n    readonly oldURL: string;\\n}\\n\\ndeclare var HashChangeEvent: {\\n    prototype: HashChangeEvent;\\n    new(type: string, eventInitDict?: HashChangeEventInit): HashChangeEvent;\\n};\\n\\ninterface Headers {\\n    append(name: string, value: string): void;\\n    delete(name: string): void;\\n    forEach(callback: Function, thisArg?: any): void;\\n    get(name: string): string | null;\\n    has(name: string): boolean;\\n    set(name: string, value: string): void;\\n}\\n\\ndeclare var Headers: {\\n    prototype: Headers;\\n    new(init?: HeadersInit): Headers;\\n};\\n\\ninterface History {\\n    readonly length: number;\\n    scrollRestoration: ScrollRestoration;\\n    readonly state: any;\\n    back(distance?: any): void;\\n    forward(distance?: any): void;\\n    go(delta?: any): void;\\n    pushState(data: any, title?: string, url?: string | null): void;\\n    replaceState(data: any, title?: string, url?: string | null): void;\\n}\\n\\ndeclare var History: {\\n    prototype: History;\\n    new(): History;\\n};\\n\\ninterface HkdfCtrParams extends Algorithm {\\n    context: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;\\n    hash: string | Algorithm;\\n    label: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;\\n}\\n\\ninterface IDBArrayKey extends Array<number | string | Date | IDBArrayKey> {\\n}\\n\\ninterface IDBCursor {\\n    readonly direction: IDBCursorDirection;\\n    readonly key: IDBKeyRange | number | string | Date | IDBArrayKey;\\n    readonly primaryKey: any;\\n    readonly source: IDBObjectStore | IDBIndex;\\n    advance(count: number): void;\\n    continue(key?: IDBKeyRange | number | string | Date | IDBArrayKey): void;\\n    delete(): IDBRequest;\\n    update(value: any): IDBRequest;\\n    readonly NEXT: string;\\n    readonly NEXT_NO_DUPLICATE: string;\\n    readonly PREV: string;\\n    readonly PREV_NO_DUPLICATE: string;\\n}\\n\\ndeclare var IDBCursor: {\\n    prototype: IDBCursor;\\n    new(): IDBCursor;\\n    readonly NEXT: string;\\n    readonly NEXT_NO_DUPLICATE: string;\\n    readonly PREV: string;\\n    readonly PREV_NO_DUPLICATE: string;\\n};\\n\\ninterface IDBCursorWithValue extends IDBCursor {\\n    readonly value: any;\\n}\\n\\ndeclare var IDBCursorWithValue: {\\n    prototype: IDBCursorWithValue;\\n    new(): IDBCursorWithValue;\\n};\\n\\ninterface IDBDatabaseEventMap {\\n    \\\"abort\\\": Event;\\n    \\\"error\\\": Event;\\n}\\n\\ninterface IDBDatabase extends EventTarget {\\n    readonly name: string;\\n    readonly objectStoreNames: DOMStringList;\\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\\n    onversionchange: ((this: IDBDatabase, ev: Event) => any) | null;\\n    readonly version: number;\\n    close(): void;\\n    createObjectStore(name: string, optionalParameters?: IDBObjectStoreParameters): IDBObjectStore;\\n    deleteObjectStore(name: string): void;\\n    transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction;\\n    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBDatabase: {\\n    prototype: IDBDatabase;\\n    new(): IDBDatabase;\\n};\\n\\ninterface IDBEnvironment {\\n    readonly indexedDB: IDBFactory;\\n}\\n\\ninterface IDBFactory {\\n    cmp(first: any, second: any): number;\\n    deleteDatabase(name: string): IDBOpenDBRequest;\\n    open(name: string, version?: number): IDBOpenDBRequest;\\n}\\n\\ndeclare var IDBFactory: {\\n    prototype: IDBFactory;\\n    new(): IDBFactory;\\n};\\n\\ninterface IDBIndex {\\n    readonly keyPath: string | string[];\\n    multiEntry: boolean;\\n    readonly name: string;\\n    readonly objectStore: IDBObjectStore;\\n    readonly unique: boolean;\\n    count(key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    get(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    getKey(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    openCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;\\n    openKeyCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;\\n}\\n\\ndeclare var IDBIndex: {\\n    prototype: IDBIndex;\\n    new(): IDBIndex;\\n};\\n\\ninterface IDBKeyRange {\\n    readonly lower: any;\\n    readonly lowerOpen: boolean;\\n    readonly upper: any;\\n    readonly upperOpen: boolean;\\n}\\n\\ndeclare var IDBKeyRange: {\\n    prototype: IDBKeyRange;\\n    new(): IDBKeyRange;\\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\\n    only(value: any): IDBKeyRange;\\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\\n};\\n\\ninterface IDBObjectStore {\\n    autoIncrement: boolean;\\n    readonly indexNames: DOMStringList;\\n    readonly keyPath: string | string[] | null;\\n    readonly name: string;\\n    readonly transaction: IDBTransaction;\\n    add(value: any, key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    clear(): IDBRequest;\\n    count(key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    createIndex(name: string, keyPath: string | string[], optionalParameters?: IDBIndexParameters): IDBIndex;\\n    delete(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    deleteIndex(indexName: string): void;\\n    get(key: any): IDBRequest;\\n    index(name: string): IDBIndex;\\n    openCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;\\n    put(value: any, key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n}\\n\\ndeclare var IDBObjectStore: {\\n    prototype: IDBObjectStore;\\n    new(): IDBObjectStore;\\n};\\n\\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\\n    \\\"blocked\\\": Event;\\n    \\\"upgradeneeded\\\": IDBVersionChangeEvent;\\n}\\n\\ninterface IDBOpenDBRequest extends IDBRequest {\\n    onblocked: ((this: IDBOpenDBRequest, ev: Event) => any) | null;\\n    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBOpenDBRequest: {\\n    prototype: IDBOpenDBRequest;\\n    new(): IDBOpenDBRequest;\\n};\\n\\ninterface IDBRequestEventMap {\\n    \\\"error\\\": Event;\\n    \\\"success\\\": Event;\\n}\\n\\ninterface IDBRequest extends EventTarget {\\n    readonly error: DOMException;\\n    onerror: ((this: IDBRequest, ev: Event) => any) | null;\\n    onsuccess: ((this: IDBRequest, ev: Event) => any) | null;\\n    readonly readyState: IDBRequestReadyState;\\n    readonly result: any;\\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\\n    readonly transaction: IDBTransaction;\\n    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBRequest: {\\n    prototype: IDBRequest;\\n    new(): IDBRequest;\\n};\\n\\ninterface IDBTransactionEventMap {\\n    \\\"abort\\\": Event;\\n    \\\"complete\\\": Event;\\n    \\\"error\\\": Event;\\n}\\n\\ninterface IDBTransaction extends EventTarget {\\n    readonly db: IDBDatabase;\\n    readonly error: DOMException;\\n    readonly mode: IDBTransactionMode;\\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\\n    abort(): void;\\n    objectStore(name: string): IDBObjectStore;\\n    readonly READ_ONLY: string;\\n    readonly READ_WRITE: string;\\n    readonly VERSION_CHANGE: string;\\n    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBTransaction: {\\n    prototype: IDBTransaction;\\n    new(): IDBTransaction;\\n    readonly READ_ONLY: string;\\n    readonly READ_WRITE: string;\\n    readonly VERSION_CHANGE: string;\\n};\\n\\ninterface IDBVersionChangeEvent extends Event {\\n    readonly newVersion: number | null;\\n    readonly oldVersion: number;\\n}\\n\\ndeclare var IDBVersionChangeEvent: {\\n    prototype: IDBVersionChangeEvent;\\n    new(): IDBVersionChangeEvent;\\n};\\n\\ninterface IIRFilterNode extends AudioNode {\\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\\n}\\n\\ndeclare var IIRFilterNode: {\\n    prototype: IIRFilterNode;\\n    new(): IIRFilterNode;\\n};\\n\\ninterface ImageBitmap {\\n    readonly height: number;\\n    readonly width: number;\\n    close(): void;\\n}\\n\\ninterface ImageBitmapOptions {\\n    colorSpaceConversion?: \\\"none\\\" | \\\"default\\\";\\n    imageOrientation?: \\\"none\\\" | \\\"flipY\\\";\\n    premultiplyAlpha?: \\\"none\\\" | \\\"premultiply\\\" | \\\"default\\\";\\n    resizeHeight?: number;\\n    resizeQuality?: \\\"pixelated\\\" | \\\"low\\\" | \\\"medium\\\" | \\\"high\\\";\\n    resizeWidth?: number;\\n}\\n\\ninterface ImageData {\\n    readonly data: Uint8ClampedArray;\\n    readonly height: number;\\n    readonly width: number;\\n}\\n\\ndeclare var ImageData: {\\n    prototype: ImageData;\\n    new(width: number, height: number): ImageData;\\n    new(array: Uint8ClampedArray, width: number, height: number): ImageData;\\n};\\n\\ninterface IntersectionObserver {\\n    readonly root: Element | null;\\n    readonly rootMargin: string;\\n    readonly thresholds: number[];\\n    disconnect(): void;\\n    observe(target: Element): void;\\n    takeRecords(): IntersectionObserverEntry[];\\n    unobserve(target: Element): void;\\n}\\n\\ndeclare var IntersectionObserver: {\\n    prototype: IntersectionObserver;\\n    new(callback: IntersectionObserverCallback, options?: IntersectionObserverInit): IntersectionObserver;\\n};\\n\\ninterface IntersectionObserverEntry {\\n    readonly boundingClientRect: ClientRect | DOMRect;\\n    readonly intersectionRatio: number;\\n    readonly intersectionRect: ClientRect | DOMRect;\\n    readonly isIntersecting: boolean;\\n    readonly rootBounds: ClientRect | DOMRect;\\n    readonly target: Element;\\n    readonly time: number;\\n}\\n\\ndeclare var IntersectionObserverEntry: {\\n    prototype: IntersectionObserverEntry;\\n    new(intersectionObserverEntryInit: IntersectionObserverEntryInit): IntersectionObserverEntry;\\n};\\n\\ninterface KeyboardEvent extends UIEvent {\\n    readonly altKey: boolean;\\n    /** @deprecated */\\n    char: string;\\n    /** @deprecated */\\n    readonly charCode: number;\\n    readonly code: string;\\n    readonly ctrlKey: boolean;\\n    readonly key: string;\\n    /** @deprecated */\\n    readonly keyCode: number;\\n    readonly location: number;\\n    readonly metaKey: boolean;\\n    readonly repeat: boolean;\\n    readonly shiftKey: boolean;\\n    /** @deprecated */\\n    readonly which: number;\\n    getModifierState(keyArg: string): boolean;\\n    /** @deprecated */\\n    initKeyboardEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, keyArg: string, locationArg: number, modifiersListArg: string, repeat: boolean, locale: string): void;\\n    readonly DOM_KEY_LOCATION_JOYSTICK: number;\\n    readonly DOM_KEY_LOCATION_LEFT: number;\\n    readonly DOM_KEY_LOCATION_MOBILE: number;\\n    readonly DOM_KEY_LOCATION_NUMPAD: number;\\n    readonly DOM_KEY_LOCATION_RIGHT: number;\\n    readonly DOM_KEY_LOCATION_STANDARD: number;\\n}\\n\\ndeclare var KeyboardEvent: {\\n    prototype: KeyboardEvent;\\n    new(typeArg: string, eventInitDict?: KeyboardEventInit): KeyboardEvent;\\n    readonly DOM_KEY_LOCATION_JOYSTICK: number;\\n    readonly DOM_KEY_LOCATION_LEFT: number;\\n    readonly DOM_KEY_LOCATION_MOBILE: number;\\n    readonly DOM_KEY_LOCATION_NUMPAD: number;\\n    readonly DOM_KEY_LOCATION_RIGHT: number;\\n    readonly DOM_KEY_LOCATION_STANDARD: number;\\n};\\n\\ninterface LinkStyle {\\n    readonly sheet: StyleSheet | null;\\n}\\n\\ninterface ListeningStateChangedEvent extends Event {\\n    readonly label: string;\\n    readonly state: ListeningState;\\n}\\n\\ndeclare var ListeningStateChangedEvent: {\\n    prototype: ListeningStateChangedEvent;\\n    new(): ListeningStateChangedEvent;\\n};\\n\\ninterface Location {\\n    hash: string;\\n    host: string;\\n    hostname: string;\\n    href: string;\\n    readonly origin: string;\\n    pathname: string;\\n    port: string;\\n    protocol: string;\\n    search: string;\\n    assign(url: string): void;\\n    reload(forcedReload?: boolean): void;\\n    replace(url: string): void;\\n    toString(): string;\\n}\\n\\ndeclare var Location: {\\n    prototype: Location;\\n    new(): Location;\\n};\\n\\ninterface MSAssertion {\\n    readonly id: string;\\n    readonly type: MSCredentialType;\\n}\\n\\ndeclare var MSAssertion: {\\n    prototype: MSAssertion;\\n    new(): MSAssertion;\\n};\\n\\ninterface MSBlobBuilder {\\n    append(data: any, endings?: string): void;\\n    getBlob(contentType?: string): Blob;\\n}\\n\\ndeclare var MSBlobBuilder: {\\n    prototype: MSBlobBuilder;\\n    new(): MSBlobBuilder;\\n};\\n\\ninterface MSCredentials {\\n    getAssertion(challenge: string, filter?: MSCredentialFilter, params?: MSSignatureParameters): Promise<MSAssertion>;\\n    makeCredential(accountInfo: MSAccountInfo, params: MSCredentialParameters[], challenge?: string): Promise<MSAssertion>;\\n}\\n\\ndeclare var MSCredentials: {\\n    prototype: MSCredentials;\\n    new(): MSCredentials;\\n};\\n\\ninterface MSDCCEvent extends Event {\\n    readonly maxFr: number;\\n    readonly maxFs: number;\\n}\\n\\ndeclare var MSDCCEvent: {\\n    prototype: MSDCCEvent;\\n    new(type: string, eventInitDict: MSDCCEventInit): MSDCCEvent;\\n};\\n\\ninterface MSDSHEvent extends Event {\\n    readonly sources: number[];\\n    readonly timestamp: number;\\n}\\n\\ndeclare var MSDSHEvent: {\\n    prototype: MSDSHEvent;\\n    new(type: string, eventInitDict: MSDSHEventInit): MSDSHEvent;\\n};\\n\\ninterface MSFIDOCredentialAssertion extends MSAssertion {\\n    readonly algorithm: string | Algorithm;\\n    readonly attestation: any;\\n    readonly publicKey: string;\\n    readonly transportHints: MSTransportType[];\\n}\\n\\ndeclare var MSFIDOCredentialAssertion: {\\n    prototype: MSFIDOCredentialAssertion;\\n    new(): MSFIDOCredentialAssertion;\\n};\\n\\ninterface MSFIDOSignature {\\n    readonly authnrData: string;\\n    readonly clientData: string;\\n    readonly signature: string;\\n}\\n\\ndeclare var MSFIDOSignature: {\\n    prototype: MSFIDOSignature;\\n    new(): MSFIDOSignature;\\n};\\n\\ninterface MSFIDOSignatureAssertion extends MSAssertion {\\n    readonly signature: MSFIDOSignature;\\n}\\n\\ndeclare var MSFIDOSignatureAssertion: {\\n    prototype: MSFIDOSignatureAssertion;\\n    new(): MSFIDOSignatureAssertion;\\n};\\n\\ninterface MSFileSaver {\\n    msSaveBlob(blob: any, defaultName?: string): boolean;\\n    msSaveOrOpenBlob(blob: any, defaultName?: string): boolean;\\n}\\n\\ninterface MSGesture {\\n    target: Element;\\n    addPointer(pointerId: number): void;\\n    stop(): void;\\n}\\n\\ndeclare var MSGesture: {\\n    prototype: MSGesture;\\n    new(): MSGesture;\\n};\\n\\ninterface MSGestureEvent extends UIEvent {\\n    readonly clientX: number;\\n    readonly clientY: number;\\n    readonly expansion: number;\\n    readonly gestureObject: any;\\n    readonly hwTimestamp: number;\\n    readonly offsetX: number;\\n    readonly offsetY: number;\\n    readonly rotation: number;\\n    readonly scale: number;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly translationX: number;\\n    readonly translationY: number;\\n    readonly velocityAngular: number;\\n    readonly velocityExpansion: number;\\n    readonly velocityX: number;\\n    readonly velocityY: number;\\n    initGestureEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, offsetXArg: number, offsetYArg: number, translationXArg: number, translationYArg: number, scaleArg: number, expansionArg: number, rotationArg: number, velocityXArg: number, velocityYArg: number, velocityExpansionArg: number, velocityAngularArg: number, hwTimestampArg: number): void;\\n    readonly MSGESTURE_FLAG_BEGIN: number;\\n    readonly MSGESTURE_FLAG_CANCEL: number;\\n    readonly MSGESTURE_FLAG_END: number;\\n    readonly MSGESTURE_FLAG_INERTIA: number;\\n    readonly MSGESTURE_FLAG_NONE: number;\\n}\\n\\ndeclare var MSGestureEvent: {\\n    prototype: MSGestureEvent;\\n    new(): MSGestureEvent;\\n    readonly MSGESTURE_FLAG_BEGIN: number;\\n    readonly MSGESTURE_FLAG_CANCEL: number;\\n    readonly MSGESTURE_FLAG_END: number;\\n    readonly MSGESTURE_FLAG_INERTIA: number;\\n    readonly MSGESTURE_FLAG_NONE: number;\\n};\\n\\ninterface MSGraphicsTrust {\\n    readonly constrictionActive: boolean;\\n    readonly status: string;\\n}\\n\\ndeclare var MSGraphicsTrust: {\\n    prototype: MSGraphicsTrust;\\n    new(): MSGraphicsTrust;\\n};\\n\\ninterface MSInputMethodContextEventMap {\\n    \\\"MSCandidateWindowHide\\\": Event;\\n    \\\"MSCandidateWindowShow\\\": Event;\\n    \\\"MSCandidateWindowUpdate\\\": Event;\\n}\\n\\ninterface MSInputMethodContext extends EventTarget {\\n    readonly compositionEndOffset: number;\\n    readonly compositionStartOffset: number;\\n    oncandidatewindowhide: ((this: MSInputMethodContext, ev: Event) => any) | null;\\n    oncandidatewindowshow: ((this: MSInputMethodContext, ev: Event) => any) | null;\\n    oncandidatewindowupdate: ((this: MSInputMethodContext, ev: Event) => any) | null;\\n    readonly target: HTMLElement;\\n    getCandidateWindowClientRect(): ClientRect;\\n    getCompositionAlternatives(): string[];\\n    hasComposition(): boolean;\\n    isCandidateWindowVisible(): boolean;\\n    addEventListener<K extends keyof MSInputMethodContextEventMap>(type: K, listener: (this: MSInputMethodContext, ev: MSInputMethodContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MSInputMethodContextEventMap>(type: K, listener: (this: MSInputMethodContext, ev: MSInputMethodContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MSInputMethodContext: {\\n    prototype: MSInputMethodContext;\\n    new(): MSInputMethodContext;\\n};\\n\\ninterface MSMediaKeyError {\\n    readonly code: number;\\n    readonly systemCode: number;\\n    readonly MS_MEDIA_KEYERR_CLIENT: number;\\n    readonly MS_MEDIA_KEYERR_DOMAIN: number;\\n    readonly MS_MEDIA_KEYERR_HARDWARECHANGE: number;\\n    readonly MS_MEDIA_KEYERR_OUTPUT: number;\\n    readonly MS_MEDIA_KEYERR_SERVICE: number;\\n    readonly MS_MEDIA_KEYERR_UNKNOWN: number;\\n}\\n\\ndeclare var MSMediaKeyError: {\\n    prototype: MSMediaKeyError;\\n    new(): MSMediaKeyError;\\n    readonly MS_MEDIA_KEYERR_CLIENT: number;\\n    readonly MS_MEDIA_KEYERR_DOMAIN: number;\\n    readonly MS_MEDIA_KEYERR_HARDWARECHANGE: number;\\n    readonly MS_MEDIA_KEYERR_OUTPUT: number;\\n    readonly MS_MEDIA_KEYERR_SERVICE: number;\\n    readonly MS_MEDIA_KEYERR_UNKNOWN: number;\\n};\\n\\ninterface MSMediaKeyMessageEvent extends Event {\\n    readonly destinationURL: string | null;\\n    readonly message: Uint8Array;\\n}\\n\\ndeclare var MSMediaKeyMessageEvent: {\\n    prototype: MSMediaKeyMessageEvent;\\n    new(): MSMediaKeyMessageEvent;\\n};\\n\\ninterface MSMediaKeyNeededEvent extends Event {\\n    readonly initData: Uint8Array | null;\\n}\\n\\ndeclare var MSMediaKeyNeededEvent: {\\n    prototype: MSMediaKeyNeededEvent;\\n    new(): MSMediaKeyNeededEvent;\\n};\\n\\ninterface MSMediaKeySession extends EventTarget {\\n    readonly error: MSMediaKeyError | null;\\n    readonly keySystem: string;\\n    readonly sessionId: string;\\n    close(): void;\\n    update(key: Uint8Array): void;\\n}\\n\\ndeclare var MSMediaKeySession: {\\n    prototype: MSMediaKeySession;\\n    new(): MSMediaKeySession;\\n};\\n\\ninterface MSMediaKeys {\\n    readonly keySystem: string;\\n    createSession(type: string, initData: Uint8Array, cdmData?: Uint8Array | null): MSMediaKeySession;\\n}\\n\\ndeclare var MSMediaKeys: {\\n    prototype: MSMediaKeys;\\n    new(keySystem: string): MSMediaKeys;\\n    isTypeSupported(keySystem: string, type?: string | null): boolean;\\n    isTypeSupportedWithFeatures(keySystem: string, type?: string | null): string;\\n};\\n\\ninterface MSNavigatorDoNotTrack {\\n    confirmSiteSpecificTrackingException(args: ConfirmSiteSpecificExceptionsInformation): boolean;\\n    confirmWebWideTrackingException(args: ExceptionInformation): boolean;\\n    removeSiteSpecificTrackingException(args: ExceptionInformation): void;\\n    removeWebWideTrackingException(args: ExceptionInformation): void;\\n    storeSiteSpecificTrackingException(args: StoreSiteSpecificExceptionsInformation): void;\\n    storeWebWideTrackingException(args: StoreExceptionsInformation): void;\\n}\\n\\ninterface MSPointerEvent extends MouseEvent {\\n    readonly currentPoint: any;\\n    readonly height: number;\\n    readonly hwTimestamp: number;\\n    readonly intermediatePoints: any;\\n    readonly isPrimary: boolean;\\n    readonly pointerId: number;\\n    readonly pointerType: any;\\n    readonly pressure: number;\\n    readonly rotation: number;\\n    readonly tiltX: number;\\n    readonly tiltY: number;\\n    readonly width: number;\\n    getCurrentPoint(element: Element): void;\\n    getIntermediatePoints(element: Element): void;\\n    initPointerEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, offsetXArg: number, offsetYArg: number, widthArg: number, heightArg: number, pressure: number, rotation: number, tiltX: number, tiltY: number, pointerIdArg: number, pointerType: any, hwTimestampArg: number, isPrimary: boolean): void;\\n}\\n\\ndeclare var MSPointerEvent: {\\n    prototype: MSPointerEvent;\\n    new(typeArg: string, eventInitDict?: PointerEventInit): MSPointerEvent;\\n};\\n\\ninterface MSStream {\\n    readonly type: string;\\n    msClose(): void;\\n    msDetachStream(): any;\\n}\\n\\ndeclare var MSStream: {\\n    prototype: MSStream;\\n    new(): MSStream;\\n};\\n\\ninterface MSStreamReaderEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadend\\\": ProgressEvent;\\n    \\\"loadstart\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n}\\n\\ninterface MSStreamReader extends EventTarget {\\n    readonly error: DOMError;\\n    onabort: ((this: MSStreamReader, ev: UIEvent) => any) | null;\\n    onerror: ((this: MSStreamReader, ev: ErrorEvent) => any) | null;\\n    onload: ((this: MSStreamReader, ev: Event) => any) | null;\\n    onloadend: ((this: MSStreamReader, ev: ProgressEvent) => any) | null;\\n    onloadstart: ((this: MSStreamReader, ev: Event) => any) | null;\\n    onprogress: ((this: MSStreamReader, ev: ProgressEvent) => any) | null;\\n    readonly readyState: number;\\n    readonly result: any;\\n    abort(): void;\\n    readAsArrayBuffer(stream: MSStream, size?: number): void;\\n    readAsBinaryString(stream: MSStream, size?: number): void;\\n    readAsBlob(stream: MSStream, size?: number): void;\\n    readAsDataURL(stream: MSStream, size?: number): void;\\n    readAsText(stream: MSStream, encoding?: string, size?: number): void;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n    addEventListener<K extends keyof MSStreamReaderEventMap>(type: K, listener: (this: MSStreamReader, ev: MSStreamReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MSStreamReaderEventMap>(type: K, listener: (this: MSStreamReader, ev: MSStreamReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MSStreamReader: {\\n    prototype: MSStreamReader;\\n    new(): MSStreamReader;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n};\\n\\ninterface MediaDeviceInfo {\\n    readonly deviceId: string;\\n    readonly groupId: string;\\n    readonly kind: MediaDeviceKind;\\n    readonly label: string;\\n}\\n\\ndeclare var MediaDeviceInfo: {\\n    prototype: MediaDeviceInfo;\\n    new(): MediaDeviceInfo;\\n};\\n\\ninterface MediaDevicesEventMap {\\n    \\\"devicechange\\\": Event;\\n}\\n\\ninterface MediaDevices extends EventTarget {\\n    ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;\\n    enumerateDevices(): Promise<MediaDeviceInfo[]>;\\n    getSupportedConstraints(): MediaTrackSupportedConstraints;\\n    getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;\\n    addEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MediaDevices: {\\n    prototype: MediaDevices;\\n    new(): MediaDevices;\\n};\\n\\ninterface MediaElementAudioSourceNode extends AudioNode {\\n}\\n\\ndeclare var MediaElementAudioSourceNode: {\\n    prototype: MediaElementAudioSourceNode;\\n    new(): MediaElementAudioSourceNode;\\n};\\n\\ninterface MediaEncryptedEvent extends Event {\\n    readonly initData: ArrayBuffer | null;\\n    readonly initDataType: string;\\n}\\n\\ndeclare var MediaEncryptedEvent: {\\n    prototype: MediaEncryptedEvent;\\n    new(type: string, eventInitDict?: MediaEncryptedEventInit): MediaEncryptedEvent;\\n};\\n\\ninterface MediaError {\\n    readonly code: number;\\n    readonly msExtendedCode: number;\\n    readonly MEDIA_ERR_ABORTED: number;\\n    readonly MEDIA_ERR_DECODE: number;\\n    readonly MEDIA_ERR_NETWORK: number;\\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;\\n    readonly MS_MEDIA_ERR_ENCRYPTED: number;\\n}\\n\\ndeclare var MediaError: {\\n    prototype: MediaError;\\n    new(): MediaError;\\n    readonly MEDIA_ERR_ABORTED: number;\\n    readonly MEDIA_ERR_DECODE: number;\\n    readonly MEDIA_ERR_NETWORK: number;\\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;\\n    readonly MS_MEDIA_ERR_ENCRYPTED: number;\\n};\\n\\ninterface MediaKeyMessageEvent extends Event {\\n    readonly message: ArrayBuffer;\\n    readonly messageType: MediaKeyMessageType;\\n}\\n\\ndeclare var MediaKeyMessageEvent: {\\n    prototype: MediaKeyMessageEvent;\\n    new(type: string, eventInitDict?: MediaKeyMessageEventInit): MediaKeyMessageEvent;\\n};\\n\\ninterface MediaKeySession extends EventTarget {\\n    readonly closed: Promise<void>;\\n    readonly expiration: number;\\n    readonly keyStatuses: MediaKeyStatusMap;\\n    readonly sessionId: string;\\n    close(): Promise<void>;\\n    generateRequest(initDataType: string, initData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;\\n    load(sessionId: string): Promise<boolean>;\\n    remove(): Promise<void>;\\n    update(response: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;\\n}\\n\\ndeclare var MediaKeySession: {\\n    prototype: MediaKeySession;\\n    new(): MediaKeySession;\\n};\\n\\ninterface MediaKeyStatusMap {\\n    readonly size: number;\\n    forEach(callback: Function, thisArg?: any): void;\\n    get(keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): MediaKeyStatus;\\n    has(keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): boolean;\\n}\\n\\ndeclare var MediaKeyStatusMap: {\\n    prototype: MediaKeyStatusMap;\\n    new(): MediaKeyStatusMap;\\n};\\n\\ninterface MediaKeySystemAccess {\\n    readonly keySystem: string;\\n    createMediaKeys(): Promise<MediaKeys>;\\n    getConfiguration(): MediaKeySystemConfiguration;\\n}\\n\\ndeclare var MediaKeySystemAccess: {\\n    prototype: MediaKeySystemAccess;\\n    new(): MediaKeySystemAccess;\\n};\\n\\ninterface MediaKeys {\\n    createSession(sessionType?: MediaKeySessionType): MediaKeySession;\\n    setServerCertificate(serverCertificate: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;\\n}\\n\\ndeclare var MediaKeys: {\\n    prototype: MediaKeys;\\n    new(): MediaKeys;\\n};\\n\\ninterface MediaList {\\n    readonly length: number;\\n    mediaText: string;\\n    appendMedium(medium: string): void;\\n    deleteMedium(medium: string): void;\\n    item(index: number): string | null;\\n    toString(): number;\\n    [index: number]: string;\\n}\\n\\ndeclare var MediaList: {\\n    prototype: MediaList;\\n    new(): MediaList;\\n};\\n\\ninterface MediaQueryList {\\n    readonly matches: boolean;\\n    readonly media: string;\\n    addListener(listener: MediaQueryListListener): void;\\n    removeListener(listener: MediaQueryListListener): void;\\n}\\n\\ndeclare var MediaQueryList: {\\n    prototype: MediaQueryList;\\n    new(): MediaQueryList;\\n};\\n\\ninterface MediaSource extends EventTarget {\\n    readonly activeSourceBuffers: SourceBufferList;\\n    duration: number;\\n    readonly readyState: string;\\n    readonly sourceBuffers: SourceBufferList;\\n    addSourceBuffer(type: string): SourceBuffer;\\n    endOfStream(error?: number): void;\\n    removeSourceBuffer(sourceBuffer: SourceBuffer): void;\\n}\\n\\ndeclare var MediaSource: {\\n    prototype: MediaSource;\\n    new(): MediaSource;\\n    isTypeSupported(type: string): boolean;\\n};\\n\\ninterface MediaStreamEventMap {\\n    \\\"active\\\": Event;\\n    \\\"addtrack\\\": MediaStreamTrackEvent;\\n    \\\"inactive\\\": Event;\\n    \\\"removetrack\\\": MediaStreamTrackEvent;\\n}\\n\\ninterface MediaStream extends EventTarget {\\n    readonly active: boolean;\\n    readonly id: string;\\n    onactive: ((this: MediaStream, ev: Event) => any) | null;\\n    onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\\n    oninactive: ((this: MediaStream, ev: Event) => any) | null;\\n    onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\\n    addTrack(track: MediaStreamTrack): void;\\n    clone(): MediaStream;\\n    getAudioTracks(): MediaStreamTrack[];\\n    getTrackById(trackId: string): MediaStreamTrack | null;\\n    getTracks(): MediaStreamTrack[];\\n    getVideoTracks(): MediaStreamTrack[];\\n    removeTrack(track: MediaStreamTrack): void;\\n    stop(): void;\\n    addEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MediaStream: {\\n    prototype: MediaStream;\\n    new(): MediaStream;\\n    new(stream: MediaStream): MediaStream;\\n    new(tracks: MediaStreamTrack[]): MediaStream;\\n};\\n\\ninterface MediaStreamAudioSourceNode extends AudioNode {\\n}\\n\\ndeclare var MediaStreamAudioSourceNode: {\\n    prototype: MediaStreamAudioSourceNode;\\n    new(): MediaStreamAudioSourceNode;\\n};\\n\\ninterface MediaStreamError {\\n    readonly constraintName: string | null;\\n    readonly message: string | null;\\n    readonly name: string;\\n}\\n\\ndeclare var MediaStreamError: {\\n    prototype: MediaStreamError;\\n    new(): MediaStreamError;\\n};\\n\\ninterface MediaStreamErrorEvent extends Event {\\n    readonly error: MediaStreamError | null;\\n}\\n\\ndeclare var MediaStreamErrorEvent: {\\n    prototype: MediaStreamErrorEvent;\\n    new(typeArg: string, eventInitDict?: MediaStreamErrorEventInit): MediaStreamErrorEvent;\\n};\\n\\ninterface MediaStreamEvent extends Event {\\n    readonly stream: MediaStream | null;\\n}\\n\\ndeclare var MediaStreamEvent: {\\n    prototype: MediaStreamEvent;\\n    new(type: string, eventInitDict: MediaStreamEventInit): MediaStreamEvent;\\n};\\n\\ninterface MediaStreamTrackEventMap {\\n    \\\"ended\\\": MediaStreamErrorEvent;\\n    \\\"mute\\\": Event;\\n    \\\"overconstrained\\\": MediaStreamErrorEvent;\\n    \\\"unmute\\\": Event;\\n}\\n\\ninterface MediaStreamTrack extends EventTarget {\\n    enabled: boolean;\\n    readonly id: string;\\n    readonly kind: string;\\n    readonly label: string;\\n    readonly muted: boolean;\\n    onended: ((this: MediaStreamTrack, ev: MediaStreamErrorEvent) => any) | null;\\n    onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\\n    onoverconstrained: ((this: MediaStreamTrack, ev: MediaStreamErrorEvent) => any) | null;\\n    onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\\n    readonly readonly: boolean;\\n    readonly readyState: MediaStreamTrackState;\\n    readonly remote: boolean;\\n    applyConstraints(constraints: MediaTrackConstraints): Promise<void>;\\n    clone(): MediaStreamTrack;\\n    getCapabilities(): MediaTrackCapabilities;\\n    getConstraints(): MediaTrackConstraints;\\n    getSettings(): MediaTrackSettings;\\n    stop(): void;\\n    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MediaStreamTrack: {\\n    prototype: MediaStreamTrack;\\n    new(): MediaStreamTrack;\\n};\\n\\ninterface MediaStreamTrackEvent extends Event {\\n    readonly track: MediaStreamTrack;\\n}\\n\\ndeclare var MediaStreamTrackEvent: {\\n    prototype: MediaStreamTrackEvent;\\n    new(typeArg: string, eventInitDict?: MediaStreamTrackEventInit): MediaStreamTrackEvent;\\n};\\n\\ninterface MessageChannel {\\n    readonly port1: MessagePort;\\n    readonly port2: MessagePort;\\n}\\n\\ndeclare var MessageChannel: {\\n    prototype: MessageChannel;\\n    new(): MessageChannel;\\n};\\n\\ninterface MessageEvent extends Event {\\n    readonly data: any;\\n    readonly origin: string;\\n    readonly ports: ReadonlyArray<MessagePort>;\\n    readonly source: Window | null;\\n    initMessageEvent(type: string, bubbles: boolean, cancelable: boolean, data: any, origin: string, lastEventId: string, source: Window): void;\\n}\\n\\ndeclare var MessageEvent: {\\n    prototype: MessageEvent;\\n    new(type: string, eventInitDict?: MessageEventInit): MessageEvent;\\n};\\n\\ninterface MessagePortEventMap {\\n    \\\"message\\\": MessageEvent;\\n}\\n\\ninterface MessagePort extends EventTarget {\\n    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;\\n    close(): void;\\n    postMessage(message?: any, transfer?: any[]): void;\\n    start(): void;\\n    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MessagePort: {\\n    prototype: MessagePort;\\n    new(): MessagePort;\\n};\\n\\ninterface MimeType {\\n    readonly description: string;\\n    readonly enabledPlugin: Plugin;\\n    readonly suffixes: string;\\n    readonly type: string;\\n}\\n\\ndeclare var MimeType: {\\n    prototype: MimeType;\\n    new(): MimeType;\\n};\\n\\ninterface MimeTypeArray {\\n    readonly length: number;\\n    item(index: number): Plugin;\\n    namedItem(type: string): Plugin;\\n    [index: number]: Plugin;\\n}\\n\\ndeclare var MimeTypeArray: {\\n    prototype: MimeTypeArray;\\n    new(): MimeTypeArray;\\n};\\n\\ninterface MouseEvent extends UIEvent {\\n    readonly altKey: boolean;\\n    readonly button: number;\\n    readonly buttons: number;\\n    readonly clientX: number;\\n    readonly clientY: number;\\n    readonly ctrlKey: boolean;\\n    /** @deprecated */\\n    readonly fromElement: Element;\\n    readonly layerX: number;\\n    readonly layerY: number;\\n    readonly metaKey: boolean;\\n    readonly movementX: number;\\n    readonly movementY: number;\\n    readonly offsetX: number;\\n    readonly offsetY: number;\\n    readonly pageX: number;\\n    readonly pageY: number;\\n    readonly relatedTarget: EventTarget;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly shiftKey: boolean;\\n    /** @deprecated */\\n    readonly toElement: Element;\\n    /** @deprecated */\\n    readonly which: number;\\n    readonly x: number;\\n    readonly y: number;\\n    getModifierState(keyArg: string): boolean;\\n    initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void;\\n}\\n\\ndeclare var MouseEvent: {\\n    prototype: MouseEvent;\\n    new(typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\\n};\\n\\ninterface MutationEvent extends Event {\\n    readonly attrChange: number;\\n    readonly attrName: string;\\n    readonly newValue: string;\\n    readonly prevValue: string;\\n    readonly relatedNode: Node;\\n    initMutationEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, relatedNodeArg: Node, prevValueArg: string, newValueArg: string, attrNameArg: string, attrChangeArg: number): void;\\n    readonly ADDITION: number;\\n    readonly MODIFICATION: number;\\n    readonly REMOVAL: number;\\n}\\n\\ndeclare var MutationEvent: {\\n    prototype: MutationEvent;\\n    new(): MutationEvent;\\n    readonly ADDITION: number;\\n    readonly MODIFICATION: number;\\n    readonly REMOVAL: number;\\n};\\n\\ninterface MutationObserver {\\n    disconnect(): void;\\n    observe(target: Node, options: MutationObserverInit): void;\\n    takeRecords(): MutationRecord[];\\n}\\n\\ndeclare var MutationObserver: {\\n    prototype: MutationObserver;\\n    new(callback: MutationCallback): MutationObserver;\\n};\\n\\ninterface MutationRecord {\\n    readonly addedNodes: NodeList;\\n    readonly attributeName: string | null;\\n    readonly attributeNamespace: string | null;\\n    readonly nextSibling: Node | null;\\n    readonly oldValue: string | null;\\n    readonly previousSibling: Node | null;\\n    readonly removedNodes: NodeList;\\n    readonly target: Node;\\n    readonly type: MutationRecordType;\\n}\\n\\ndeclare var MutationRecord: {\\n    prototype: MutationRecord;\\n    new(): MutationRecord;\\n};\\n\\ninterface NamedNodeMap {\\n    readonly length: number;\\n    getNamedItem(qualifiedName: string): Attr | null;\\n    getNamedItemNS(namespace: string | null, localName: string): Attr | null;\\n    item(index: number): Attr | null;\\n    removeNamedItem(qualifiedName: string): Attr;\\n    removeNamedItemNS(namespace: string | null, localName: string): Attr;\\n    setNamedItem(attr: Attr): Attr | null;\\n    setNamedItemNS(attr: Attr): Attr | null;\\n    [index: number]: Attr;\\n}\\n\\ndeclare var NamedNodeMap: {\\n    prototype: NamedNodeMap;\\n    new(): NamedNodeMap;\\n};\\n\\ninterface Navigator extends NavigatorID, NavigatorOnLine, NavigatorContentUtils, NavigatorStorageUtils, MSNavigatorDoNotTrack, MSFileSaver, NavigatorBeacon, NavigatorConcurrentHardware, NavigatorUserMedia, NavigatorLanguage {\\n    readonly activeVRDisplays: ReadonlyArray<VRDisplay>;\\n    readonly authentication: WebAuthentication;\\n    readonly cookieEnabled: boolean;\\n    readonly doNotTrack: string | null;\\n    gamepadInputEmulation: GamepadInputEmulationType;\\n    readonly geolocation: Geolocation;\\n    readonly maxTouchPoints: number;\\n    readonly mimeTypes: MimeTypeArray;\\n    readonly msManipulationViewsEnabled: boolean;\\n    readonly msMaxTouchPoints: number;\\n    readonly msPointerEnabled: boolean;\\n    readonly plugins: PluginArray;\\n    readonly pointerEnabled: boolean;\\n    readonly serviceWorker: ServiceWorkerContainer;\\n    readonly webdriver: boolean;\\n    getGamepads(): (Gamepad | null)[];\\n    getVRDisplays(): Promise<VRDisplay[]>;\\n    javaEnabled(): boolean;\\n    msLaunchUri(uri: string, successCallback?: MSLaunchUriCallback, noHandlerCallback?: MSLaunchUriCallback): void;\\n    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: MediaKeySystemConfiguration[]): Promise<MediaKeySystemAccess>;\\n    vibrate(pattern: number | number[]): boolean;\\n}\\n\\ndeclare var Navigator: {\\n    prototype: Navigator;\\n    new(): Navigator;\\n};\\n\\ninterface NavigatorBeacon {\\n    sendBeacon(url: string, data?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null): boolean;\\n}\\n\\ninterface NavigatorConcurrentHardware {\\n    readonly hardwareConcurrency: number;\\n}\\n\\ninterface NavigatorContentUtils {\\n}\\n\\ninterface NavigatorID {\\n    readonly appCodeName: string;\\n    readonly appName: string;\\n    readonly appVersion: string;\\n    readonly platform: string;\\n    readonly product: string;\\n    readonly productSub: string;\\n    readonly userAgent: string;\\n    readonly vendor: string;\\n    readonly vendorSub: string;\\n}\\n\\ninterface NavigatorLanguage {\\n    readonly language: string;\\n    readonly languages: ReadonlyArray<string>;\\n}\\n\\ninterface NavigatorOnLine {\\n    readonly onLine: boolean;\\n}\\n\\ninterface NavigatorStorageUtils {\\n}\\n\\ninterface NavigatorUserMedia {\\n    readonly mediaDevices: MediaDevices;\\n    getDisplayMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;\\n    getUserMedia(constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void;\\n}\\n\\ninterface Node extends EventTarget {\\n    readonly baseURI: string | null;\\n    readonly childNodes: NodeListOf<Node & ChildNode>;\\n    readonly firstChild: Node | null;\\n    readonly lastChild: Node | null;\\n    readonly localName: string | null;\\n    readonly namespaceURI: string | null;\\n    readonly nextSibling: Node | null;\\n    readonly nodeName: string;\\n    readonly nodeType: number;\\n    nodeValue: string | null;\\n    readonly ownerDocument: Document;\\n    readonly parentElement: HTMLElement | null;\\n    readonly parentNode: Node | null;\\n    readonly previousSibling: Node | null;\\n    textContent: string | null;\\n    appendChild<T extends Node>(newChild: T): T;\\n    cloneNode(deep?: boolean): Node;\\n    compareDocumentPosition(other: Node): number;\\n    contains(child: Node): boolean;\\n    hasChildNodes(): boolean;\\n    insertBefore<T extends Node>(newChild: T, refChild: Node | null): T;\\n    isDefaultNamespace(namespaceURI: string | null): boolean;\\n    isEqualNode(arg: Node): boolean;\\n    isSameNode(other: Node): boolean;\\n    lookupNamespaceURI(prefix: string | null): string | null;\\n    lookupPrefix(namespaceURI: string | null): string | null;\\n    normalize(): void;\\n    removeChild<T extends Node>(oldChild: T): T;\\n    replaceChild<T extends Node>(newChild: Node, oldChild: T): T;\\n    readonly ATTRIBUTE_NODE: number;\\n    readonly CDATA_SECTION_NODE: number;\\n    readonly COMMENT_NODE: number;\\n    readonly DOCUMENT_FRAGMENT_NODE: number;\\n    readonly DOCUMENT_NODE: number;\\n    readonly DOCUMENT_POSITION_CONTAINED_BY: number;\\n    readonly DOCUMENT_POSITION_CONTAINS: number;\\n    readonly DOCUMENT_POSITION_DISCONNECTED: number;\\n    readonly DOCUMENT_POSITION_FOLLOWING: number;\\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\\n    readonly DOCUMENT_POSITION_PRECEDING: number;\\n    readonly DOCUMENT_TYPE_NODE: number;\\n    readonly ELEMENT_NODE: number;\\n    readonly ENTITY_NODE: number;\\n    readonly ENTITY_REFERENCE_NODE: number;\\n    readonly NOTATION_NODE: number;\\n    readonly PROCESSING_INSTRUCTION_NODE: number;\\n    readonly TEXT_NODE: number;\\n}\\n\\ndeclare var Node: {\\n    prototype: Node;\\n    new(): Node;\\n    readonly ATTRIBUTE_NODE: number;\\n    readonly CDATA_SECTION_NODE: number;\\n    readonly COMMENT_NODE: number;\\n    readonly DOCUMENT_FRAGMENT_NODE: number;\\n    readonly DOCUMENT_NODE: number;\\n    readonly DOCUMENT_POSITION_CONTAINED_BY: number;\\n    readonly DOCUMENT_POSITION_CONTAINS: number;\\n    readonly DOCUMENT_POSITION_DISCONNECTED: number;\\n    readonly DOCUMENT_POSITION_FOLLOWING: number;\\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\\n    readonly DOCUMENT_POSITION_PRECEDING: number;\\n    readonly DOCUMENT_TYPE_NODE: number;\\n    readonly ELEMENT_NODE: number;\\n    readonly ENTITY_NODE: number;\\n    readonly ENTITY_REFERENCE_NODE: number;\\n    readonly NOTATION_NODE: number;\\n    readonly PROCESSING_INSTRUCTION_NODE: number;\\n    readonly TEXT_NODE: number;\\n};\\n\\ninterface NodeFilter {\\n    acceptNode(node: Node): number;\\n}\\n\\ndeclare var NodeFilter: {\\n    readonly FILTER_ACCEPT: number;\\n    readonly FILTER_REJECT: number;\\n    readonly FILTER_SKIP: number;\\n    readonly SHOW_ALL: number;\\n    readonly SHOW_ATTRIBUTE: number;\\n    readonly SHOW_CDATA_SECTION: number;\\n    readonly SHOW_COMMENT: number;\\n    readonly SHOW_DOCUMENT: number;\\n    readonly SHOW_DOCUMENT_FRAGMENT: number;\\n    readonly SHOW_DOCUMENT_TYPE: number;\\n    readonly SHOW_ELEMENT: number;\\n    readonly SHOW_ENTITY: number;\\n    readonly SHOW_ENTITY_REFERENCE: number;\\n    readonly SHOW_NOTATION: number;\\n    readonly SHOW_PROCESSING_INSTRUCTION: number;\\n    readonly SHOW_TEXT: number;\\n};\\n\\ninterface NodeIterator {\\n    /** @deprecated */\\n    readonly expandEntityReferences: boolean;\\n    readonly filter: NodeFilter | null;\\n    readonly root: Node;\\n    readonly whatToShow: number;\\n    detach(): void;\\n    nextNode(): Node | null;\\n    previousNode(): Node | null;\\n}\\n\\ndeclare var NodeIterator: {\\n    prototype: NodeIterator;\\n    new(): NodeIterator;\\n};\\n\\ninterface NodeList {\\n    readonly length: number;\\n    item(index: number): Node;\\n    [index: number]: Node;\\n}\\n\\ndeclare var NodeList: {\\n    prototype: NodeList;\\n    new(): NodeList;\\n};\\n\\ninterface NodeListOf<TNode extends Node> extends NodeList {\\n    length: number;\\n    item(index: number): TNode;\\n    [index: number]: TNode;\\n}\\n\\ninterface NodeSelector {\\n    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\\n    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\\n    querySelector<E extends Element = Element>(selectors: string): E | null;\\n    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\\n}\\n\\ninterface NotificationEventMap {\\n    \\\"click\\\": Event;\\n    \\\"close\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"show\\\": Event;\\n}\\n\\ninterface Notification extends EventTarget {\\n    readonly body: string | null;\\n    readonly data: any;\\n    readonly dir: NotificationDirection;\\n    readonly icon: string | null;\\n    readonly lang: string | null;\\n    onclick: ((this: Notification, ev: Event) => any) | null;\\n    onclose: ((this: Notification, ev: Event) => any) | null;\\n    onerror: ((this: Notification, ev: Event) => any) | null;\\n    onshow: ((this: Notification, ev: Event) => any) | null;\\n    readonly permission: NotificationPermission;\\n    readonly tag: string | null;\\n    readonly title: string;\\n    close(): void;\\n    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Notification: {\\n    prototype: Notification;\\n    new(title: string, options?: NotificationOptions): Notification;\\n    requestPermission(callback?: NotificationPermissionCallback): Promise<NotificationPermission>;\\n};\\n\\ninterface OES_element_index_uint {\\n}\\n\\ndeclare var OES_element_index_uint: {\\n    prototype: OES_element_index_uint;\\n    new(): OES_element_index_uint;\\n};\\n\\ninterface OES_standard_derivatives {\\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: number;\\n}\\n\\ndeclare var OES_standard_derivatives: {\\n    prototype: OES_standard_derivatives;\\n    new(): OES_standard_derivatives;\\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: number;\\n};\\n\\ninterface OES_texture_float {\\n}\\n\\ndeclare var OES_texture_float: {\\n    prototype: OES_texture_float;\\n    new(): OES_texture_float;\\n};\\n\\ninterface OES_texture_float_linear {\\n}\\n\\ndeclare var OES_texture_float_linear: {\\n    prototype: OES_texture_float_linear;\\n    new(): OES_texture_float_linear;\\n};\\n\\ninterface OES_texture_half_float {\\n    readonly HALF_FLOAT_OES: number;\\n}\\n\\ndeclare var OES_texture_half_float: {\\n    prototype: OES_texture_half_float;\\n    new(): OES_texture_half_float;\\n    readonly HALF_FLOAT_OES: number;\\n};\\n\\ninterface OES_texture_half_float_linear {\\n}\\n\\ndeclare var OES_texture_half_float_linear: {\\n    prototype: OES_texture_half_float_linear;\\n    new(): OES_texture_half_float_linear;\\n};\\n\\ninterface OES_vertex_array_object {\\n    readonly VERTEX_ARRAY_BINDING_OES: number;\\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): void;\\n    createVertexArrayOES(): WebGLVertexArrayObjectOES;\\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): void;\\n    isVertexArrayOES(value: any): value is WebGLVertexArrayObjectOES;\\n}\\n\\ninterface OfflineAudioCompletionEvent extends Event {\\n    readonly renderedBuffer: AudioBuffer;\\n}\\n\\ndeclare var OfflineAudioCompletionEvent: {\\n    prototype: OfflineAudioCompletionEvent;\\n    new(): OfflineAudioCompletionEvent;\\n};\\n\\ninterface OfflineAudioContextEventMap extends AudioContextEventMap {\\n    \\\"complete\\\": OfflineAudioCompletionEvent;\\n}\\n\\ninterface OfflineAudioContext extends AudioContextBase {\\n    readonly length: number;\\n    oncomplete: ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any) | null;\\n    startRendering(): Promise<AudioBuffer>;\\n    suspend(suspendTime: number): Promise<void>;\\n    addEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var OfflineAudioContext: {\\n    prototype: OfflineAudioContext;\\n    new(numberOfChannels: number, length: number, sampleRate: number): OfflineAudioContext;\\n};\\n\\ninterface OscillatorNodeEventMap {\\n    \\\"ended\\\": Event;\\n}\\n\\ninterface OscillatorNode extends AudioNode {\\n    readonly detune: AudioParam;\\n    readonly frequency: AudioParam;\\n    onended: ((this: OscillatorNode, ev: Event) => any) | null;\\n    type: OscillatorType;\\n    setPeriodicWave(periodicWave: PeriodicWave): void;\\n    start(when?: number): void;\\n    stop(when?: number): void;\\n    addEventListener<K extends keyof OscillatorNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: OscillatorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof OscillatorNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: OscillatorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var OscillatorNode: {\\n    prototype: OscillatorNode;\\n    new(): OscillatorNode;\\n};\\n\\ninterface OverflowEvent extends UIEvent {\\n    readonly horizontalOverflow: boolean;\\n    readonly orient: number;\\n    readonly verticalOverflow: boolean;\\n    readonly BOTH: number;\\n    readonly HORIZONTAL: number;\\n    readonly VERTICAL: number;\\n}\\n\\ndeclare var OverflowEvent: {\\n    prototype: OverflowEvent;\\n    new(): OverflowEvent;\\n    readonly BOTH: number;\\n    readonly HORIZONTAL: number;\\n    readonly VERTICAL: number;\\n};\\n\\ninterface PageTransitionEvent extends Event {\\n    readonly persisted: boolean;\\n}\\n\\ndeclare var PageTransitionEvent: {\\n    prototype: PageTransitionEvent;\\n    new(): PageTransitionEvent;\\n};\\n\\ninterface PannerNode extends AudioNode {\\n    coneInnerAngle: number;\\n    coneOuterAngle: number;\\n    coneOuterGain: number;\\n    distanceModel: DistanceModelType;\\n    maxDistance: number;\\n    panningModel: PanningModelType;\\n    refDistance: number;\\n    rolloffFactor: number;\\n    /** @deprecated */\\n    setOrientation(x: number, y: number, z: number): void;\\n    /** @deprecated */\\n    setPosition(x: number, y: number, z: number): void;\\n    /** @deprecated */\\n    setVelocity(x: number, y: number, z: number): void;\\n}\\n\\ndeclare var PannerNode: {\\n    prototype: PannerNode;\\n    new(): PannerNode;\\n};\\n\\ninterface ParentNode {\\n    readonly children: HTMLCollection;\\n    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\\n    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\\n    querySelector<E extends Element = Element>(selectors: string): E | null;\\n    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\\n}\\n\\ninterface ParentNode {\\n    readonly childElementCount: number;\\n    readonly firstElementChild: Element | null;\\n    readonly lastElementChild: Element | null;\\n}\\n\\ninterface Path2D extends CanvasPathMethods {\\n}\\n\\ndeclare var Path2D: {\\n    prototype: Path2D;\\n    new(d?: Path2D | string): Path2D;\\n};\\n\\ninterface PaymentAddress {\\n    readonly addressLine: string[];\\n    readonly city: string;\\n    readonly country: string;\\n    readonly dependentLocality: string;\\n    readonly languageCode: string;\\n    readonly organization: string;\\n    readonly phone: string;\\n    readonly postalCode: string;\\n    readonly recipient: string;\\n    readonly region: string;\\n    readonly sortingCode: string;\\n    toJSON(): any;\\n}\\n\\ndeclare var PaymentAddress: {\\n    prototype: PaymentAddress;\\n    new(): PaymentAddress;\\n};\\n\\ninterface PaymentRequestEventMap {\\n    \\\"shippingaddresschange\\\": Event;\\n    \\\"shippingoptionchange\\\": Event;\\n}\\n\\ninterface PaymentRequest extends EventTarget {\\n    readonly id: string;\\n    onshippingaddresschange: ((this: PaymentRequest, ev: Event) => any) | null;\\n    onshippingoptionchange: ((this: PaymentRequest, ev: Event) => any) | null;\\n    readonly shippingAddress: PaymentAddress | null;\\n    readonly shippingOption: string | null;\\n    readonly shippingType: PaymentShippingType | null;\\n    abort(): Promise<void>;\\n    canMakePayment(): Promise<boolean>;\\n    show(): Promise<PaymentResponse>;\\n    addEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var PaymentRequest: {\\n    prototype: PaymentRequest;\\n    new(methodData: PaymentMethodData[], details: PaymentDetailsInit, options?: PaymentOptions): PaymentRequest;\\n};\\n\\ninterface PaymentRequestUpdateEvent extends Event {\\n    updateWith(detailsPromise: Promise<PaymentDetailsUpdate>): void;\\n}\\n\\ndeclare var PaymentRequestUpdateEvent: {\\n    prototype: PaymentRequestUpdateEvent;\\n    new(type: string, eventInitDict?: PaymentRequestUpdateEventInit): PaymentRequestUpdateEvent;\\n};\\n\\ninterface PaymentResponse {\\n    readonly details: any;\\n    readonly methodName: string;\\n    readonly payerEmail: string | null;\\n    readonly payerName: string | null;\\n    readonly payerPhone: string | null;\\n    readonly requestId: string;\\n    readonly shippingAddress: PaymentAddress | null;\\n    readonly shippingOption: string | null;\\n    complete(result?: PaymentComplete): Promise<void>;\\n    toJSON(): any;\\n}\\n\\ndeclare var PaymentResponse: {\\n    prototype: PaymentResponse;\\n    new(): PaymentResponse;\\n};\\n\\ninterface PerfWidgetExternal {\\n    readonly activeNetworkRequestCount: number;\\n    readonly averageFrameTime: number;\\n    readonly averagePaintTime: number;\\n    readonly extraInformationEnabled: boolean;\\n    readonly independentRenderingEnabled: boolean;\\n    readonly irDisablingContentString: string;\\n    readonly irStatusAvailable: boolean;\\n    readonly maxCpuSpeed: number;\\n    readonly paintRequestsPerSecond: number;\\n    readonly performanceCounter: number;\\n    readonly performanceCounterFrequency: number;\\n    addEventListener(eventType: string, callback: Function): void;\\n    getMemoryUsage(): number;\\n    getProcessCpuUsage(): number;\\n    getRecentCpuUsage(last: number | null): any;\\n    getRecentFrames(last: number | null): any;\\n    getRecentMemoryUsage(last: number | null): any;\\n    getRecentPaintRequests(last: number | null): any;\\n    removeEventListener(eventType: string, callback: Function): void;\\n    repositionWindow(x: number, y: number): void;\\n    resizeWindow(width: number, height: number): void;\\n}\\n\\ndeclare var PerfWidgetExternal: {\\n    prototype: PerfWidgetExternal;\\n    new(): PerfWidgetExternal;\\n};\\n\\ninterface Performance {\\n    /** @deprecated */\\n    readonly navigation: PerformanceNavigation;\\n    readonly timeOrigin: number;\\n    /** @deprecated */\\n    readonly timing: PerformanceTiming;\\n    clearMarks(markName?: string): void;\\n    clearMeasures(measureName?: string): void;\\n    clearResourceTimings(): void;\\n    getEntries(): any;\\n    getEntriesByName(name: string, type?: string): any;\\n    getEntriesByType(type: string): any;\\n    /** @deprecated */\\n    getMarks(markName?: string): any;\\n    /** @deprecated */\\n    getMeasures(measureName?: string): any;\\n    mark(markName: string): void;\\n    measure(measureName: string, startMarkName?: string, endMarkName?: string): void;\\n    now(): number;\\n    setResourceTimingBufferSize(maxSize: number): void;\\n    toJSON(): any;\\n}\\n\\ndeclare var Performance: {\\n    prototype: Performance;\\n    new(): Performance;\\n};\\n\\ninterface PerformanceEntry {\\n    readonly duration: number;\\n    readonly entryType: string;\\n    readonly name: string;\\n    readonly startTime: number;\\n    toJSON(): any;\\n}\\n\\ndeclare var PerformanceEntry: {\\n    prototype: PerformanceEntry;\\n    new(): PerformanceEntry;\\n};\\n\\ninterface PerformanceMark extends PerformanceEntry {\\n}\\n\\ndeclare var PerformanceMark: {\\n    prototype: PerformanceMark;\\n    new(): PerformanceMark;\\n};\\n\\ninterface PerformanceMeasure extends PerformanceEntry {\\n}\\n\\ndeclare var PerformanceMeasure: {\\n    prototype: PerformanceMeasure;\\n    new(): PerformanceMeasure;\\n};\\n\\ninterface PerformanceNavigation {\\n    readonly redirectCount: number;\\n    readonly type: number;\\n    toJSON(): any;\\n    readonly TYPE_BACK_FORWARD: number;\\n    readonly TYPE_NAVIGATE: number;\\n    readonly TYPE_RELOAD: number;\\n    readonly TYPE_RESERVED: number;\\n}\\n\\ndeclare var PerformanceNavigation: {\\n    prototype: PerformanceNavigation;\\n    new(): PerformanceNavigation;\\n    readonly TYPE_BACK_FORWARD: number;\\n    readonly TYPE_NAVIGATE: number;\\n    readonly TYPE_RELOAD: number;\\n    readonly TYPE_RESERVED: number;\\n};\\n\\ninterface PerformanceNavigationTiming extends PerformanceEntry {\\n    /** @deprecated */\\n    readonly connectEnd: number;\\n    /** @deprecated */\\n    readonly connectStart: number;\\n    readonly domComplete: number;\\n    readonly domContentLoadedEventEnd: number;\\n    readonly domContentLoadedEventStart: number;\\n    readonly domInteractive: number;\\n    /** @deprecated */\\n    readonly domLoading: number;\\n    /** @deprecated */\\n    readonly domainLookupEnd: number;\\n    /** @deprecated */\\n    readonly domainLookupStart: number;\\n    /** @deprecated */\\n    readonly fetchStart: number;\\n    readonly loadEventEnd: number;\\n    readonly loadEventStart: number;\\n    /** @deprecated */\\n    readonly navigationStart: number;\\n    readonly redirectCount: number;\\n    /** @deprecated */\\n    readonly redirectEnd: number;\\n    /** @deprecated */\\n    readonly redirectStart: number;\\n    /** @deprecated */\\n    readonly requestStart: number;\\n    /** @deprecated */\\n    readonly responseEnd: number;\\n    /** @deprecated */\\n    readonly responseStart: number;\\n    readonly type: NavigationType;\\n    readonly unloadEventEnd: number;\\n    readonly unloadEventStart: number;\\n    readonly workerStart: number;\\n}\\n\\ndeclare var PerformanceNavigationTiming: {\\n    prototype: PerformanceNavigationTiming;\\n    new(): PerformanceNavigationTiming;\\n};\\n\\ninterface PerformanceResourceTiming extends PerformanceEntry {\\n    readonly connectEnd: number;\\n    readonly connectStart: number;\\n    readonly domainLookupEnd: number;\\n    readonly domainLookupStart: number;\\n    readonly fetchStart: number;\\n    readonly initiatorType: string;\\n    readonly redirectEnd: number;\\n    readonly redirectStart: number;\\n    readonly requestStart: number;\\n    readonly responseEnd: number;\\n    readonly responseStart: number;\\n    readonly workerStart: number;\\n}\\n\\ndeclare var PerformanceResourceTiming: {\\n    prototype: PerformanceResourceTiming;\\n    new(): PerformanceResourceTiming;\\n};\\n\\ninterface PerformanceTiming {\\n    readonly connectEnd: number;\\n    readonly connectStart: number;\\n    readonly domComplete: number;\\n    readonly domContentLoadedEventEnd: number;\\n    readonly domContentLoadedEventStart: number;\\n    readonly domInteractive: number;\\n    readonly domLoading: number;\\n    readonly domainLookupEnd: number;\\n    readonly domainLookupStart: number;\\n    readonly fetchStart: number;\\n    readonly loadEventEnd: number;\\n    readonly loadEventStart: number;\\n    readonly msFirstPaint: number;\\n    readonly navigationStart: number;\\n    readonly redirectEnd: number;\\n    readonly redirectStart: number;\\n    readonly requestStart: number;\\n    readonly responseEnd: number;\\n    readonly responseStart: number;\\n    readonly secureConnectionStart: number;\\n    readonly unloadEventEnd: number;\\n    readonly unloadEventStart: number;\\n    toJSON(): any;\\n}\\n\\ndeclare var PerformanceTiming: {\\n    prototype: PerformanceTiming;\\n    new(): PerformanceTiming;\\n};\\n\\ninterface PeriodicWave {\\n}\\n\\ndeclare var PeriodicWave: {\\n    prototype: PeriodicWave;\\n    new(): PeriodicWave;\\n};\\n\\ninterface PermissionRequest extends DeferredPermissionRequest {\\n    readonly state: MSWebViewPermissionState;\\n    defer(): void;\\n}\\n\\ndeclare var PermissionRequest: {\\n    prototype: PermissionRequest;\\n    new(): PermissionRequest;\\n};\\n\\ninterface PermissionRequestedEvent extends Event {\\n    readonly permissionRequest: PermissionRequest;\\n}\\n\\ndeclare var PermissionRequestedEvent: {\\n    prototype: PermissionRequestedEvent;\\n    new(): PermissionRequestedEvent;\\n};\\n\\ninterface Plugin {\\n    readonly description: string;\\n    readonly filename: string;\\n    readonly length: number;\\n    readonly name: string;\\n    readonly version: string;\\n    item(index: number): MimeType;\\n    namedItem(type: string): MimeType;\\n    [index: number]: MimeType;\\n}\\n\\ndeclare var Plugin: {\\n    prototype: Plugin;\\n    new(): Plugin;\\n};\\n\\ninterface PluginArray {\\n    readonly length: number;\\n    item(index: number): Plugin;\\n    namedItem(name: string): Plugin;\\n    refresh(reload?: boolean): void;\\n    [index: number]: Plugin;\\n}\\n\\ndeclare var PluginArray: {\\n    prototype: PluginArray;\\n    new(): PluginArray;\\n};\\n\\ninterface PointerEvent extends MouseEvent {\\n    readonly currentPoint: any;\\n    readonly height: number;\\n    readonly hwTimestamp: number;\\n    readonly intermediatePoints: any;\\n    readonly isPrimary: boolean;\\n    readonly pointerId: number;\\n    readonly pointerType: any;\\n    readonly pressure: number;\\n    readonly rotation: number;\\n    readonly tiltX: number;\\n    readonly tiltY: number;\\n    readonly width: number;\\n    getCurrentPoint(element: Element): void;\\n    getIntermediatePoints(element: Element): void;\\n    initPointerEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, offsetXArg: number, offsetYArg: number, widthArg: number, heightArg: number, pressure: number, rotation: number, tiltX: number, tiltY: number, pointerIdArg: number, pointerType: any, hwTimestampArg: number, isPrimary: boolean): void;\\n}\\n\\ndeclare var PointerEvent: {\\n    prototype: PointerEvent;\\n    new(typeArg: string, eventInitDict?: PointerEventInit): PointerEvent;\\n};\\n\\ninterface PopStateEvent extends Event {\\n    readonly state: any;\\n}\\n\\ndeclare var PopStateEvent: {\\n    prototype: PopStateEvent;\\n    new(type: string, eventInitDict?: PopStateEventInit): PopStateEvent;\\n};\\n\\ninterface Position {\\n    readonly coords: Coordinates;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var Position: {\\n    prototype: Position;\\n    new(): Position;\\n};\\n\\ninterface PositionError {\\n    readonly code: number;\\n    readonly message: string;\\n    toString(): string;\\n    readonly PERMISSION_DENIED: number;\\n    readonly POSITION_UNAVAILABLE: number;\\n    readonly TIMEOUT: number;\\n}\\n\\ndeclare var PositionError: {\\n    prototype: PositionError;\\n    new(): PositionError;\\n    readonly PERMISSION_DENIED: number;\\n    readonly POSITION_UNAVAILABLE: number;\\n    readonly TIMEOUT: number;\\n};\\n\\ninterface ProcessingInstruction extends CharacterData {\\n    readonly target: string;\\n}\\n\\ndeclare var ProcessingInstruction: {\\n    prototype: ProcessingInstruction;\\n    new(): ProcessingInstruction;\\n};\\n\\ninterface ProgressEvent extends Event {\\n    readonly lengthComputable: boolean;\\n    readonly loaded: number;\\n    readonly total: number;\\n    initProgressEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, lengthComputableArg: boolean, loadedArg: number, totalArg: number): void;\\n}\\n\\ndeclare var ProgressEvent: {\\n    prototype: ProgressEvent;\\n    new(typeArg: string, eventInitDict?: ProgressEventInit): ProgressEvent;\\n};\\n\\ninterface PromiseRejectionEvent extends Event {\\n    readonly promise: PromiseLike<any>;\\n    readonly reason: any;\\n}\\n\\ninterface PromiseRejectionEventInit extends EventInit {\\n    promise: PromiseLike<any>;\\n    reason?: any;\\n}\\n\\ninterface PushManager {\\n    readonly supportedContentEncodings: ReadonlyArray<string>;\\n    getSubscription(): Promise<PushSubscription | null>;\\n    permissionState(options?: PushSubscriptionOptionsInit): Promise<PushPermissionState>;\\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\\n}\\n\\ndeclare var PushManager: {\\n    prototype: PushManager;\\n    new(): PushManager;\\n};\\n\\ninterface PushSubscription {\\n    readonly endpoint: string;\\n    readonly expirationTime: number | null;\\n    readonly options: PushSubscriptionOptions;\\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\\n    toJSON(): any;\\n    unsubscribe(): Promise<boolean>;\\n}\\n\\ndeclare var PushSubscription: {\\n    prototype: PushSubscription;\\n    new(): PushSubscription;\\n};\\n\\ninterface PushSubscriptionOptions {\\n    readonly applicationServerKey: ArrayBuffer | null;\\n    readonly userVisibleOnly: boolean;\\n}\\n\\ndeclare var PushSubscriptionOptions: {\\n    prototype: PushSubscriptionOptions;\\n    new(): PushSubscriptionOptions;\\n};\\n\\ninterface RTCDTMFToneChangeEvent extends Event {\\n    readonly tone: string;\\n}\\n\\ndeclare var RTCDTMFToneChangeEvent: {\\n    prototype: RTCDTMFToneChangeEvent;\\n    new(typeArg: string, eventInitDict: RTCDTMFToneChangeEventInit): RTCDTMFToneChangeEvent;\\n};\\n\\ninterface RTCDtlsTransportEventMap {\\n    \\\"dtlsstatechange\\\": RTCDtlsTransportStateChangedEvent;\\n    \\\"error\\\": Event;\\n}\\n\\ninterface RTCDtlsTransport extends RTCStatsProvider {\\n    ondtlsstatechange: ((this: RTCDtlsTransport, ev: RTCDtlsTransportStateChangedEvent) => any) | null;\\n    onerror: ((this: RTCDtlsTransport, ev: Event) => any) | null;\\n    readonly state: RTCDtlsTransportState;\\n    readonly transport: RTCIceTransport;\\n    getLocalParameters(): RTCDtlsParameters;\\n    getRemoteCertificates(): ArrayBuffer[];\\n    getRemoteParameters(): RTCDtlsParameters | null;\\n    start(remoteParameters: RTCDtlsParameters): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCDtlsTransport: {\\n    prototype: RTCDtlsTransport;\\n    new(transport: RTCIceTransport): RTCDtlsTransport;\\n};\\n\\ninterface RTCDtlsTransportStateChangedEvent extends Event {\\n    readonly state: RTCDtlsTransportState;\\n}\\n\\ndeclare var RTCDtlsTransportStateChangedEvent: {\\n    prototype: RTCDtlsTransportStateChangedEvent;\\n    new(): RTCDtlsTransportStateChangedEvent;\\n};\\n\\ninterface RTCDtmfSenderEventMap {\\n    \\\"tonechange\\\": RTCDTMFToneChangeEvent;\\n}\\n\\ninterface RTCDtmfSender extends EventTarget {\\n    readonly canInsertDTMF: boolean;\\n    readonly duration: number;\\n    readonly interToneGap: number;\\n    ontonechange: ((this: RTCDtmfSender, ev: RTCDTMFToneChangeEvent) => any) | null;\\n    readonly sender: RTCRtpSender;\\n    readonly toneBuffer: string;\\n    insertDTMF(tones: string, duration?: number, interToneGap?: number): void;\\n    addEventListener<K extends keyof RTCDtmfSenderEventMap>(type: K, listener: (this: RTCDtmfSender, ev: RTCDtmfSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCDtmfSenderEventMap>(type: K, listener: (this: RTCDtmfSender, ev: RTCDtmfSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCDtmfSender: {\\n    prototype: RTCDtmfSender;\\n    new(sender: RTCRtpSender): RTCDtmfSender;\\n};\\n\\ninterface RTCIceCandidate {\\n    candidate: string | null;\\n    sdpMLineIndex: number | null;\\n    sdpMid: string | null;\\n    toJSON(): any;\\n}\\n\\ndeclare var RTCIceCandidate: {\\n    prototype: RTCIceCandidate;\\n    new(candidateInitDict?: RTCIceCandidateInit): RTCIceCandidate;\\n};\\n\\ninterface RTCIceCandidatePairChangedEvent extends Event {\\n    readonly pair: RTCIceCandidatePair;\\n}\\n\\ndeclare var RTCIceCandidatePairChangedEvent: {\\n    prototype: RTCIceCandidatePairChangedEvent;\\n    new(): RTCIceCandidatePairChangedEvent;\\n};\\n\\ninterface RTCIceGathererEventMap {\\n    \\\"error\\\": Event;\\n    \\\"localcandidate\\\": RTCIceGathererEvent;\\n}\\n\\ninterface RTCIceGatherer extends RTCStatsProvider {\\n    readonly component: RTCIceComponent;\\n    onerror: ((this: RTCIceGatherer, ev: Event) => any) | null;\\n    onlocalcandidate: ((this: RTCIceGatherer, ev: RTCIceGathererEvent) => any) | null;\\n    createAssociatedGatherer(): RTCIceGatherer;\\n    getLocalCandidates(): RTCIceCandidateDictionary[];\\n    getLocalParameters(): RTCIceParameters;\\n    addEventListener<K extends keyof RTCIceGathererEventMap>(type: K, listener: (this: RTCIceGatherer, ev: RTCIceGathererEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCIceGathererEventMap>(type: K, listener: (this: RTCIceGatherer, ev: RTCIceGathererEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCIceGatherer: {\\n    prototype: RTCIceGatherer;\\n    new(options: RTCIceGatherOptions): RTCIceGatherer;\\n};\\n\\ninterface RTCIceGathererEvent extends Event {\\n    readonly candidate: RTCIceCandidateDictionary | RTCIceCandidateComplete;\\n}\\n\\ndeclare var RTCIceGathererEvent: {\\n    prototype: RTCIceGathererEvent;\\n    new(): RTCIceGathererEvent;\\n};\\n\\ninterface RTCIceTransportEventMap {\\n    \\\"candidatepairchange\\\": RTCIceCandidatePairChangedEvent;\\n    \\\"icestatechange\\\": RTCIceTransportStateChangedEvent;\\n}\\n\\ninterface RTCIceTransport extends RTCStatsProvider {\\n    readonly component: RTCIceComponent;\\n    readonly iceGatherer: RTCIceGatherer | null;\\n    oncandidatepairchange: ((this: RTCIceTransport, ev: RTCIceCandidatePairChangedEvent) => any) | null;\\n    onicestatechange: ((this: RTCIceTransport, ev: RTCIceTransportStateChangedEvent) => any) | null;\\n    readonly role: RTCIceRole;\\n    readonly state: RTCIceTransportState;\\n    addRemoteCandidate(remoteCandidate: RTCIceCandidateDictionary | RTCIceCandidateComplete): void;\\n    createAssociatedTransport(): RTCIceTransport;\\n    getNominatedCandidatePair(): RTCIceCandidatePair | null;\\n    getRemoteCandidates(): RTCIceCandidateDictionary[];\\n    getRemoteParameters(): RTCIceParameters | null;\\n    setRemoteCandidates(remoteCandidates: RTCIceCandidateDictionary[]): void;\\n    start(gatherer: RTCIceGatherer, remoteParameters: RTCIceParameters, role?: RTCIceRole): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCIceTransport: {\\n    prototype: RTCIceTransport;\\n    new(): RTCIceTransport;\\n};\\n\\ninterface RTCIceTransportStateChangedEvent extends Event {\\n    readonly state: RTCIceTransportState;\\n}\\n\\ndeclare var RTCIceTransportStateChangedEvent: {\\n    prototype: RTCIceTransportStateChangedEvent;\\n    new(): RTCIceTransportStateChangedEvent;\\n};\\n\\ninterface RTCPeerConnectionEventMap {\\n    \\\"addstream\\\": MediaStreamEvent;\\n    \\\"icecandidate\\\": RTCPeerConnectionIceEvent;\\n    \\\"iceconnectionstatechange\\\": Event;\\n    \\\"icegatheringstatechange\\\": Event;\\n    \\\"negotiationneeded\\\": Event;\\n    \\\"removestream\\\": MediaStreamEvent;\\n    \\\"signalingstatechange\\\": Event;\\n}\\n\\ninterface RTCPeerConnection extends EventTarget {\\n    readonly canTrickleIceCandidates: boolean | null;\\n    readonly iceConnectionState: RTCIceConnectionState;\\n    readonly iceGatheringState: RTCIceGatheringState;\\n    readonly localDescription: RTCSessionDescription | null;\\n    onaddstream: ((this: RTCPeerConnection, ev: MediaStreamEvent) => any) | null;\\n    onicecandidate: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any) | null;\\n    oniceconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    onicegatheringstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    onremovestream: ((this: RTCPeerConnection, ev: MediaStreamEvent) => any) | null;\\n    onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    readonly remoteDescription: RTCSessionDescription | null;\\n    readonly signalingState: RTCSignalingState;\\n    addIceCandidate(candidate: RTCIceCandidateInit | RTCIceCandidate): Promise<void>;\\n    addStream(stream: MediaStream): void;\\n    close(): void;\\n    createAnswer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;\\n    createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;\\n    getConfiguration(): RTCConfiguration;\\n    getLocalStreams(): MediaStream[];\\n    getRemoteStreams(): MediaStream[];\\n    getStats(selector: MediaStreamTrack | null, successCallback?: RTCStatsCallback, failureCallback?: RTCPeerConnectionErrorCallback): Promise<RTCStatsReport>;\\n    getStreamById(streamId: string): MediaStream | null;\\n    removeStream(stream: MediaStream): void;\\n    setLocalDescription(description: RTCSessionDescriptionInit): Promise<void>;\\n    setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;\\n    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCPeerConnection: {\\n    prototype: RTCPeerConnection;\\n    new(configuration: RTCConfiguration): RTCPeerConnection;\\n};\\n\\ninterface RTCPeerConnectionIceEvent extends Event {\\n    readonly candidate: RTCIceCandidate;\\n}\\n\\ndeclare var RTCPeerConnectionIceEvent: {\\n    prototype: RTCPeerConnectionIceEvent;\\n    new(type: string, eventInitDict: RTCPeerConnectionIceEventInit): RTCPeerConnectionIceEvent;\\n};\\n\\ninterface RTCRtpReceiverEventMap {\\n    \\\"error\\\": Event;\\n    \\\"msdecodercapacitychange\\\": Event;\\n    \\\"msdsh\\\": Event;\\n}\\n\\ninterface RTCRtpReceiver extends RTCStatsProvider {\\n    onerror: ((this: RTCRtpReceiver, ev: Event) => any) | null;\\n    onmsdecodercapacitychange: ((this: RTCRtpReceiver, ev: Event) => any) | null;\\n    onmsdsh: ((this: RTCRtpReceiver, ev: Event) => any) | null;\\n    readonly rtcpTransport: RTCDtlsTransport;\\n    readonly track: MediaStreamTrack | null;\\n    readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;\\n    getContributingSources(): RTCRtpContributingSource[];\\n    receive(parameters: RTCRtpParameters): void;\\n    requestSendCSRC(csrc: number): void;\\n    setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCRtpReceiverEventMap>(type: K, listener: (this: RTCRtpReceiver, ev: RTCRtpReceiverEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCRtpReceiverEventMap>(type: K, listener: (this: RTCRtpReceiver, ev: RTCRtpReceiverEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCRtpReceiver: {\\n    prototype: RTCRtpReceiver;\\n    new(transport: RTCDtlsTransport | RTCSrtpSdesTransport, kind: string, rtcpTransport?: RTCDtlsTransport): RTCRtpReceiver;\\n    getCapabilities(kind?: string): RTCRtpCapabilities;\\n};\\n\\ninterface RTCRtpSenderEventMap {\\n    \\\"error\\\": Event;\\n    \\\"ssrcconflict\\\": RTCSsrcConflictEvent;\\n}\\n\\ninterface RTCRtpSender extends RTCStatsProvider {\\n    onerror: ((this: RTCRtpSender, ev: Event) => any) | null;\\n    onssrcconflict: ((this: RTCRtpSender, ev: RTCSsrcConflictEvent) => any) | null;\\n    readonly rtcpTransport: RTCDtlsTransport;\\n    readonly track: MediaStreamTrack;\\n    readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;\\n    send(parameters: RTCRtpParameters): void;\\n    setTrack(track: MediaStreamTrack): void;\\n    setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCRtpSenderEventMap>(type: K, listener: (this: RTCRtpSender, ev: RTCRtpSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCRtpSenderEventMap>(type: K, listener: (this: RTCRtpSender, ev: RTCRtpSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCRtpSender: {\\n    prototype: RTCRtpSender;\\n    new(track: MediaStreamTrack, transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): RTCRtpSender;\\n    getCapabilities(kind?: string): RTCRtpCapabilities;\\n};\\n\\ninterface RTCSessionDescription {\\n    sdp: string | null;\\n    type: RTCSdpType | null;\\n    toJSON(): any;\\n}\\n\\ndeclare var RTCSessionDescription: {\\n    prototype: RTCSessionDescription;\\n    new(descriptionInitDict?: RTCSessionDescriptionInit): RTCSessionDescription;\\n};\\n\\ninterface RTCSrtpSdesTransportEventMap {\\n    \\\"error\\\": Event;\\n}\\n\\ninterface RTCSrtpSdesTransport extends EventTarget {\\n    onerror: ((this: RTCSrtpSdesTransport, ev: Event) => any) | null;\\n    readonly transport: RTCIceTransport;\\n    addEventListener<K extends keyof RTCSrtpSdesTransportEventMap>(type: K, listener: (this: RTCSrtpSdesTransport, ev: RTCSrtpSdesTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCSrtpSdesTransportEventMap>(type: K, listener: (this: RTCSrtpSdesTransport, ev: RTCSrtpSdesTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCSrtpSdesTransport: {\\n    prototype: RTCSrtpSdesTransport;\\n    new(transport: RTCIceTransport, encryptParameters: RTCSrtpSdesParameters, decryptParameters: RTCSrtpSdesParameters): RTCSrtpSdesTransport;\\n    getLocalParameters(): RTCSrtpSdesParameters[];\\n};\\n\\ninterface RTCSsrcConflictEvent extends Event {\\n    readonly ssrc: number;\\n}\\n\\ndeclare var RTCSsrcConflictEvent: {\\n    prototype: RTCSsrcConflictEvent;\\n    new(): RTCSsrcConflictEvent;\\n};\\n\\ninterface RTCStatsProvider extends EventTarget {\\n    getStats(): Promise<RTCStatsReport>;\\n    msGetStats(): Promise<RTCStatsReport>;\\n}\\n\\ndeclare var RTCStatsProvider: {\\n    prototype: RTCStatsProvider;\\n    new(): RTCStatsProvider;\\n};\\n\\ninterface RandomSource {\\n    getRandomValues<T extends Int8Array | Uint8ClampedArray | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array>(array: T): T;\\n}\\n\\ndeclare var RandomSource: {\\n    prototype: RandomSource;\\n    new(): RandomSource;\\n};\\n\\ninterface Range {\\n    readonly collapsed: boolean;\\n    readonly commonAncestorContainer: Node;\\n    readonly endContainer: Node;\\n    readonly endOffset: number;\\n    readonly startContainer: Node;\\n    readonly startOffset: number;\\n    cloneContents(): DocumentFragment;\\n    cloneRange(): Range;\\n    collapse(toStart?: boolean): void;\\n    compareBoundaryPoints(how: number, sourceRange: Range): number;\\n    createContextualFragment(fragment: string): DocumentFragment;\\n    deleteContents(): void;\\n    detach(): void;\\n    expand(Unit: ExpandGranularity): boolean;\\n    extractContents(): DocumentFragment;\\n    getBoundingClientRect(): ClientRect | DOMRect;\\n    getClientRects(): ClientRectList | DOMRectList;\\n    insertNode(node: Node): void;\\n    isPointInRange(node: Node, offset: number): boolean;\\n    selectNode(node: Node): void;\\n    selectNodeContents(node: Node): void;\\n    setEnd(node: Node, offset: number): void;\\n    setEndAfter(node: Node): void;\\n    setEndBefore(node: Node): void;\\n    setStart(node: Node, offset: number): void;\\n    setStartAfter(node: Node): void;\\n    setStartBefore(node: Node): void;\\n    surroundContents(newParent: Node): void;\\n    toString(): string;\\n    readonly END_TO_END: number;\\n    readonly END_TO_START: number;\\n    readonly START_TO_END: number;\\n    readonly START_TO_START: number;\\n}\\n\\ndeclare var Range: {\\n    prototype: Range;\\n    new(): Range;\\n    readonly END_TO_END: number;\\n    readonly END_TO_START: number;\\n    readonly START_TO_END: number;\\n    readonly START_TO_START: number;\\n};\\n\\ninterface ReadableStream {\\n    readonly locked: boolean;\\n    cancel(): Promise<void>;\\n    getReader(): ReadableStreamReader;\\n}\\n\\ndeclare var ReadableStream: {\\n    prototype: ReadableStream;\\n    new(): ReadableStream;\\n};\\n\\ninterface ReadableStreamReader {\\n    cancel(): Promise<void>;\\n    read(): Promise<any>;\\n    releaseLock(): void;\\n}\\n\\ndeclare var ReadableStreamReader: {\\n    prototype: ReadableStreamReader;\\n    new(): ReadableStreamReader;\\n};\\n\\ninterface Request extends Body {\\n    readonly cache: RequestCache;\\n    readonly credentials: RequestCredentials;\\n    readonly destination: RequestDestination;\\n    readonly headers: Headers;\\n    readonly integrity: string;\\n    readonly keepalive: boolean;\\n    readonly method: string;\\n    readonly mode: RequestMode;\\n    readonly redirect: RequestRedirect;\\n    readonly referrer: string;\\n    readonly referrerPolicy: ReferrerPolicy;\\n    readonly signal: AbortSignal | null;\\n    readonly type: RequestType;\\n    readonly url: string;\\n    clone(): Request;\\n}\\n\\ndeclare var Request: {\\n    prototype: Request;\\n    new(input: Request | string, init?: RequestInit): Request;\\n};\\n\\ninterface Response extends Body {\\n    readonly body: ReadableStream | null;\\n    readonly headers: Headers;\\n    readonly ok: boolean;\\n    readonly redirected: boolean;\\n    readonly status: number;\\n    readonly statusText: string;\\n    readonly type: ResponseType;\\n    readonly url: string;\\n    clone(): Response;\\n}\\n\\ndeclare var Response: {\\n    prototype: Response;\\n    new(body?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null, init?: ResponseInit): Response;\\n    error(): Response;\\n    redirect(url: string, status?: number): Response;\\n};\\n\\ninterface SVGAElement extends SVGGraphicsElement, SVGURIReference {\\n    readonly target: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGAElement: {\\n    prototype: SVGAElement;\\n    new(): SVGAElement;\\n};\\n\\ninterface SVGAngle {\\n    readonly unitType: number;\\n    value: number;\\n    valueAsString: string;\\n    valueInSpecifiedUnits: number;\\n    convertToSpecifiedUnits(unitType: number): void;\\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\\n    readonly SVG_ANGLETYPE_DEG: number;\\n    readonly SVG_ANGLETYPE_GRAD: number;\\n    readonly SVG_ANGLETYPE_RAD: number;\\n    readonly SVG_ANGLETYPE_UNKNOWN: number;\\n    readonly SVG_ANGLETYPE_UNSPECIFIED: number;\\n}\\n\\ndeclare var SVGAngle: {\\n    prototype: SVGAngle;\\n    new(): SVGAngle;\\n    readonly SVG_ANGLETYPE_DEG: number;\\n    readonly SVG_ANGLETYPE_GRAD: number;\\n    readonly SVG_ANGLETYPE_RAD: number;\\n    readonly SVG_ANGLETYPE_UNKNOWN: number;\\n    readonly SVG_ANGLETYPE_UNSPECIFIED: number;\\n};\\n\\ninterface SVGAnimatedAngle {\\n    readonly animVal: SVGAngle;\\n    readonly baseVal: SVGAngle;\\n}\\n\\ndeclare var SVGAnimatedAngle: {\\n    prototype: SVGAnimatedAngle;\\n    new(): SVGAnimatedAngle;\\n};\\n\\ninterface SVGAnimatedBoolean {\\n    readonly animVal: boolean;\\n    baseVal: boolean;\\n}\\n\\ndeclare var SVGAnimatedBoolean: {\\n    prototype: SVGAnimatedBoolean;\\n    new(): SVGAnimatedBoolean;\\n};\\n\\ninterface SVGAnimatedEnumeration {\\n    readonly animVal: number;\\n    baseVal: number;\\n}\\n\\ndeclare var SVGAnimatedEnumeration: {\\n    prototype: SVGAnimatedEnumeration;\\n    new(): SVGAnimatedEnumeration;\\n};\\n\\ninterface SVGAnimatedInteger {\\n    readonly animVal: number;\\n    baseVal: number;\\n}\\n\\ndeclare var SVGAnimatedInteger: {\\n    prototype: SVGAnimatedInteger;\\n    new(): SVGAnimatedInteger;\\n};\\n\\ninterface SVGAnimatedLength {\\n    readonly animVal: SVGLength;\\n    readonly baseVal: SVGLength;\\n}\\n\\ndeclare var SVGAnimatedLength: {\\n    prototype: SVGAnimatedLength;\\n    new(): SVGAnimatedLength;\\n};\\n\\ninterface SVGAnimatedLengthList {\\n    readonly animVal: SVGLengthList;\\n    readonly baseVal: SVGLengthList;\\n}\\n\\ndeclare var SVGAnimatedLengthList: {\\n    prototype: SVGAnimatedLengthList;\\n    new(): SVGAnimatedLengthList;\\n};\\n\\ninterface SVGAnimatedNumber {\\n    readonly animVal: number;\\n    baseVal: number;\\n}\\n\\ndeclare var SVGAnimatedNumber: {\\n    prototype: SVGAnimatedNumber;\\n    new(): SVGAnimatedNumber;\\n};\\n\\ninterface SVGAnimatedNumberList {\\n    readonly animVal: SVGNumberList;\\n    readonly baseVal: SVGNumberList;\\n}\\n\\ndeclare var SVGAnimatedNumberList: {\\n    prototype: SVGAnimatedNumberList;\\n    new(): SVGAnimatedNumberList;\\n};\\n\\ninterface SVGAnimatedPoints {\\n    readonly animatedPoints: SVGPointList;\\n    readonly points: SVGPointList;\\n}\\n\\ninterface SVGAnimatedPreserveAspectRatio {\\n    readonly animVal: SVGPreserveAspectRatio;\\n    readonly baseVal: SVGPreserveAspectRatio;\\n}\\n\\ndeclare var SVGAnimatedPreserveAspectRatio: {\\n    prototype: SVGAnimatedPreserveAspectRatio;\\n    new(): SVGAnimatedPreserveAspectRatio;\\n};\\n\\ninterface SVGAnimatedRect {\\n    readonly animVal: SVGRect;\\n    readonly baseVal: SVGRect;\\n}\\n\\ndeclare var SVGAnimatedRect: {\\n    prototype: SVGAnimatedRect;\\n    new(): SVGAnimatedRect;\\n};\\n\\ninterface SVGAnimatedString {\\n    readonly animVal: string;\\n    baseVal: string;\\n}\\n\\ndeclare var SVGAnimatedString: {\\n    prototype: SVGAnimatedString;\\n    new(): SVGAnimatedString;\\n};\\n\\ninterface SVGAnimatedTransformList {\\n    readonly animVal: SVGTransformList;\\n    readonly baseVal: SVGTransformList;\\n}\\n\\ndeclare var SVGAnimatedTransformList: {\\n    prototype: SVGAnimatedTransformList;\\n    new(): SVGAnimatedTransformList;\\n};\\n\\ninterface SVGCircleElement extends SVGGraphicsElement {\\n    readonly cx: SVGAnimatedLength;\\n    readonly cy: SVGAnimatedLength;\\n    readonly r: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGCircleElement: {\\n    prototype: SVGCircleElement;\\n    new(): SVGCircleElement;\\n};\\n\\ninterface SVGClipPathElement extends SVGGraphicsElement, SVGUnitTypes {\\n    readonly clipPathUnits: SVGAnimatedEnumeration;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGClipPathElement: {\\n    prototype: SVGClipPathElement;\\n    new(): SVGClipPathElement;\\n};\\n\\ninterface SVGComponentTransferFunctionElement extends SVGElement {\\n    readonly amplitude: SVGAnimatedNumber;\\n    readonly exponent: SVGAnimatedNumber;\\n    readonly intercept: SVGAnimatedNumber;\\n    readonly offset: SVGAnimatedNumber;\\n    readonly slope: SVGAnimatedNumber;\\n    readonly tableValues: SVGAnimatedNumberList;\\n    readonly type: SVGAnimatedEnumeration;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGComponentTransferFunctionElement: {\\n    prototype: SVGComponentTransferFunctionElement;\\n    new(): SVGComponentTransferFunctionElement;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGDefsElement extends SVGGraphicsElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGDefsElement: {\\n    prototype: SVGDefsElement;\\n    new(): SVGDefsElement;\\n};\\n\\ninterface SVGDescElement extends SVGElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGDescElement: {\\n    prototype: SVGDescElement;\\n    new(): SVGDescElement;\\n};\\n\\ninterface SVGElementEventMap extends ElementEventMap {\\n    \\\"click\\\": MouseEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"focusin\\\": FocusEvent;\\n    \\\"focusout\\\": FocusEvent;\\n    \\\"load\\\": Event;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n}\\n\\ninterface SVGElement extends Element, ElementCSSInlineStyle {\\n    readonly className: any;\\n    onclick: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    ondblclick: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onfocusin: ((this: SVGElement, ev: FocusEvent) => any) | null;\\n    onfocusout: ((this: SVGElement, ev: FocusEvent) => any) | null;\\n    onload: ((this: SVGElement, ev: Event) => any) | null;\\n    onmousedown: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmousemove: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmouseout: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmouseover: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmouseup: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    readonly ownerSVGElement: SVGSVGElement | null;\\n    readonly viewportElement: SVGElement | null;\\n    /** @deprecated */\\n    xmlbase: string;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGElement: {\\n    prototype: SVGElement;\\n    new(): SVGElement;\\n};\\n\\ninterface SVGElementInstance extends EventTarget {\\n    readonly childNodes: SVGElementInstanceList;\\n    readonly correspondingElement: SVGElement;\\n    readonly correspondingUseElement: SVGUseElement;\\n    readonly firstChild: SVGElementInstance;\\n    readonly lastChild: SVGElementInstance;\\n    readonly nextSibling: SVGElementInstance;\\n    readonly parentNode: SVGElementInstance;\\n    readonly previousSibling: SVGElementInstance;\\n}\\n\\ndeclare var SVGElementInstance: {\\n    prototype: SVGElementInstance;\\n    new(): SVGElementInstance;\\n};\\n\\ninterface SVGElementInstanceList {\\n    /** @deprecated */\\n    readonly length: number;\\n    /** @deprecated */\\n    item(index: number): SVGElementInstance;\\n}\\n\\ndeclare var SVGElementInstanceList: {\\n    prototype: SVGElementInstanceList;\\n    new(): SVGElementInstanceList;\\n};\\n\\ninterface SVGEllipseElement extends SVGGraphicsElement {\\n    readonly cx: SVGAnimatedLength;\\n    readonly cy: SVGAnimatedLength;\\n    readonly rx: SVGAnimatedLength;\\n    readonly ry: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGEllipseElement: {\\n    prototype: SVGEllipseElement;\\n    new(): SVGEllipseElement;\\n};\\n\\ninterface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly in2: SVGAnimatedString;\\n    readonly mode: SVGAnimatedEnumeration;\\n    readonly SVG_FEBLEND_MODE_COLOR: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;\\n    readonly SVG_FEBLEND_MODE_DARKEN: number;\\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;\\n    readonly SVG_FEBLEND_MODE_EXCLUSION: number;\\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_HUE: number;\\n    readonly SVG_FEBLEND_MODE_LIGHTEN: number;\\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;\\n    readonly SVG_FEBLEND_MODE_MULTIPLY: number;\\n    readonly SVG_FEBLEND_MODE_NORMAL: number;\\n    readonly SVG_FEBLEND_MODE_OVERLAY: number;\\n    readonly SVG_FEBLEND_MODE_SATURATION: number;\\n    readonly SVG_FEBLEND_MODE_SCREEN: number;\\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEBlendElement: {\\n    prototype: SVGFEBlendElement;\\n    new(): SVGFEBlendElement;\\n    readonly SVG_FEBLEND_MODE_COLOR: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;\\n    readonly SVG_FEBLEND_MODE_DARKEN: number;\\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;\\n    readonly SVG_FEBLEND_MODE_EXCLUSION: number;\\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_HUE: number;\\n    readonly SVG_FEBLEND_MODE_LIGHTEN: number;\\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;\\n    readonly SVG_FEBLEND_MODE_MULTIPLY: number;\\n    readonly SVG_FEBLEND_MODE_NORMAL: number;\\n    readonly SVG_FEBLEND_MODE_OVERLAY: number;\\n    readonly SVG_FEBLEND_MODE_SATURATION: number;\\n    readonly SVG_FEBLEND_MODE_SCREEN: number;\\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_UNKNOWN: number;\\n};\\n\\ninterface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly type: SVGAnimatedEnumeration;\\n    readonly values: SVGAnimatedNumberList;\\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEColorMatrixElement: {\\n    prototype: SVGFEColorMatrixElement;\\n    new(): SVGFEColorMatrixElement;\\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEComponentTransferElement: {\\n    prototype: SVGFEComponentTransferElement;\\n    new(): SVGFEComponentTransferElement;\\n};\\n\\ninterface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly in2: SVGAnimatedString;\\n    readonly k1: SVGAnimatedNumber;\\n    readonly k2: SVGAnimatedNumber;\\n    readonly k3: SVGAnimatedNumber;\\n    readonly k4: SVGAnimatedNumber;\\n    readonly operator: SVGAnimatedEnumeration;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFECompositeElement: {\\n    prototype: SVGFECompositeElement;\\n    new(): SVGFECompositeElement;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;\\n};\\n\\ninterface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly bias: SVGAnimatedNumber;\\n    readonly divisor: SVGAnimatedNumber;\\n    readonly edgeMode: SVGAnimatedEnumeration;\\n    readonly in1: SVGAnimatedString;\\n    readonly kernelMatrix: SVGAnimatedNumberList;\\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\\n    readonly orderX: SVGAnimatedInteger;\\n    readonly orderY: SVGAnimatedInteger;\\n    readonly preserveAlpha: SVGAnimatedBoolean;\\n    readonly targetX: SVGAnimatedInteger;\\n    readonly targetY: SVGAnimatedInteger;\\n    readonly SVG_EDGEMODE_DUPLICATE: number;\\n    readonly SVG_EDGEMODE_NONE: number;\\n    readonly SVG_EDGEMODE_UNKNOWN: number;\\n    readonly SVG_EDGEMODE_WRAP: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEConvolveMatrixElement: {\\n    prototype: SVGFEConvolveMatrixElement;\\n    new(): SVGFEConvolveMatrixElement;\\n    readonly SVG_EDGEMODE_DUPLICATE: number;\\n    readonly SVG_EDGEMODE_NONE: number;\\n    readonly SVG_EDGEMODE_UNKNOWN: number;\\n    readonly SVG_EDGEMODE_WRAP: number;\\n};\\n\\ninterface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly diffuseConstant: SVGAnimatedNumber;\\n    readonly in1: SVGAnimatedString;\\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\\n    readonly surfaceScale: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEDiffuseLightingElement: {\\n    prototype: SVGFEDiffuseLightingElement;\\n    new(): SVGFEDiffuseLightingElement;\\n};\\n\\ninterface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly in2: SVGAnimatedString;\\n    readonly scale: SVGAnimatedNumber;\\n    readonly xChannelSelector: SVGAnimatedEnumeration;\\n    readonly yChannelSelector: SVGAnimatedEnumeration;\\n    readonly SVG_CHANNEL_A: number;\\n    readonly SVG_CHANNEL_B: number;\\n    readonly SVG_CHANNEL_G: number;\\n    readonly SVG_CHANNEL_R: number;\\n    readonly SVG_CHANNEL_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEDisplacementMapElement: {\\n    prototype: SVGFEDisplacementMapElement;\\n    new(): SVGFEDisplacementMapElement;\\n    readonly SVG_CHANNEL_A: number;\\n    readonly SVG_CHANNEL_B: number;\\n    readonly SVG_CHANNEL_G: number;\\n    readonly SVG_CHANNEL_R: number;\\n    readonly SVG_CHANNEL_UNKNOWN: number;\\n};\\n\\ninterface SVGFEDistantLightElement extends SVGElement {\\n    readonly azimuth: SVGAnimatedNumber;\\n    readonly elevation: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEDistantLightElement: {\\n    prototype: SVGFEDistantLightElement;\\n    new(): SVGFEDistantLightElement;\\n};\\n\\ninterface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFloodElement: {\\n    prototype: SVGFEFloodElement;\\n    new(): SVGFEFloodElement;\\n};\\n\\ninterface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncAElement: {\\n    prototype: SVGFEFuncAElement;\\n    new(): SVGFEFuncAElement;\\n};\\n\\ninterface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncBElement: {\\n    prototype: SVGFEFuncBElement;\\n    new(): SVGFEFuncBElement;\\n};\\n\\ninterface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncGElement: {\\n    prototype: SVGFEFuncGElement;\\n    new(): SVGFEFuncGElement;\\n};\\n\\ninterface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncRElement: {\\n    prototype: SVGFEFuncRElement;\\n    new(): SVGFEFuncRElement;\\n};\\n\\ninterface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly stdDeviationX: SVGAnimatedNumber;\\n    readonly stdDeviationY: SVGAnimatedNumber;\\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEGaussianBlurElement: {\\n    prototype: SVGFEGaussianBlurElement;\\n    new(): SVGFEGaussianBlurElement;\\n};\\n\\ninterface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {\\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEImageElement: {\\n    prototype: SVGFEImageElement;\\n    new(): SVGFEImageElement;\\n};\\n\\ninterface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEMergeElement: {\\n    prototype: SVGFEMergeElement;\\n    new(): SVGFEMergeElement;\\n};\\n\\ninterface SVGFEMergeNodeElement extends SVGElement {\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEMergeNodeElement: {\\n    prototype: SVGFEMergeNodeElement;\\n    new(): SVGFEMergeNodeElement;\\n};\\n\\ninterface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly operator: SVGAnimatedEnumeration;\\n    readonly radiusX: SVGAnimatedNumber;\\n    readonly radiusY: SVGAnimatedNumber;\\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEMorphologyElement: {\\n    prototype: SVGFEMorphologyElement;\\n    new(): SVGFEMorphologyElement;\\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\\n};\\n\\ninterface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly dx: SVGAnimatedNumber;\\n    readonly dy: SVGAnimatedNumber;\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEOffsetElement: {\\n    prototype: SVGFEOffsetElement;\\n    new(): SVGFEOffsetElement;\\n};\\n\\ninterface SVGFEPointLightElement extends SVGElement {\\n    readonly x: SVGAnimatedNumber;\\n    readonly y: SVGAnimatedNumber;\\n    readonly z: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEPointLightElement: {\\n    prototype: SVGFEPointLightElement;\\n    new(): SVGFEPointLightElement;\\n};\\n\\ninterface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\\n    readonly specularConstant: SVGAnimatedNumber;\\n    readonly specularExponent: SVGAnimatedNumber;\\n    readonly surfaceScale: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFESpecularLightingElement: {\\n    prototype: SVGFESpecularLightingElement;\\n    new(): SVGFESpecularLightingElement;\\n};\\n\\ninterface SVGFESpotLightElement extends SVGElement {\\n    readonly limitingConeAngle: SVGAnimatedNumber;\\n    readonly pointsAtX: SVGAnimatedNumber;\\n    readonly pointsAtY: SVGAnimatedNumber;\\n    readonly pointsAtZ: SVGAnimatedNumber;\\n    readonly specularExponent: SVGAnimatedNumber;\\n    readonly x: SVGAnimatedNumber;\\n    readonly y: SVGAnimatedNumber;\\n    readonly z: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFESpotLightElement: {\\n    prototype: SVGFESpotLightElement;\\n    new(): SVGFESpotLightElement;\\n};\\n\\ninterface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFETileElement: {\\n    prototype: SVGFETileElement;\\n    new(): SVGFETileElement;\\n};\\n\\ninterface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly baseFrequencyX: SVGAnimatedNumber;\\n    readonly baseFrequencyY: SVGAnimatedNumber;\\n    readonly numOctaves: SVGAnimatedInteger;\\n    readonly seed: SVGAnimatedNumber;\\n    readonly stitchTiles: SVGAnimatedEnumeration;\\n    readonly type: SVGAnimatedEnumeration;\\n    readonly SVG_STITCHTYPE_NOSTITCH: number;\\n    readonly SVG_STITCHTYPE_STITCH: number;\\n    readonly SVG_STITCHTYPE_UNKNOWN: number;\\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;\\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFETurbulenceElement: {\\n    prototype: SVGFETurbulenceElement;\\n    new(): SVGFETurbulenceElement;\\n    readonly SVG_STITCHTYPE_NOSTITCH: number;\\n    readonly SVG_STITCHTYPE_STITCH: number;\\n    readonly SVG_STITCHTYPE_UNKNOWN: number;\\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;\\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGFilterElement extends SVGElement, SVGUnitTypes, SVGURIReference {\\n    /** @deprecated */\\n    readonly filterResX: SVGAnimatedInteger;\\n    /** @deprecated */\\n    readonly filterResY: SVGAnimatedInteger;\\n    readonly filterUnits: SVGAnimatedEnumeration;\\n    readonly height: SVGAnimatedLength;\\n    readonly primitiveUnits: SVGAnimatedEnumeration;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    /** @deprecated */\\n    setFilterRes(filterResX: number, filterResY: number): void;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFilterElement: {\\n    prototype: SVGFilterElement;\\n    new(): SVGFilterElement;\\n};\\n\\ninterface SVGFilterPrimitiveStandardAttributes {\\n    readonly height: SVGAnimatedLength;\\n    readonly result: SVGAnimatedString;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n}\\n\\ninterface SVGFitToViewBox {\\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\\n    readonly viewBox: SVGAnimatedRect;\\n}\\n\\ninterface SVGForeignObjectElement extends SVGGraphicsElement {\\n    readonly height: SVGAnimatedLength;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGForeignObjectElement: {\\n    prototype: SVGForeignObjectElement;\\n    new(): SVGForeignObjectElement;\\n};\\n\\ninterface SVGGElement extends SVGGraphicsElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGGElement: {\\n    prototype: SVGGElement;\\n    new(): SVGGElement;\\n};\\n\\ninterface SVGGradientElement extends SVGElement, SVGUnitTypes, SVGURIReference {\\n    readonly gradientTransform: SVGAnimatedTransformList;\\n    readonly gradientUnits: SVGAnimatedEnumeration;\\n    readonly spreadMethod: SVGAnimatedEnumeration;\\n    readonly SVG_SPREADMETHOD_PAD: number;\\n    readonly SVG_SPREADMETHOD_REFLECT: number;\\n    readonly SVG_SPREADMETHOD_REPEAT: number;\\n    readonly SVG_SPREADMETHOD_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGGradientElement: {\\n    prototype: SVGGradientElement;\\n    new(): SVGGradientElement;\\n    readonly SVG_SPREADMETHOD_PAD: number;\\n    readonly SVG_SPREADMETHOD_REFLECT: number;\\n    readonly SVG_SPREADMETHOD_REPEAT: number;\\n    readonly SVG_SPREADMETHOD_UNKNOWN: number;\\n};\\n\\ninterface SVGGraphicsElement extends SVGElement, SVGTests {\\n    /** @deprecated */\\n    readonly farthestViewportElement: SVGElement | null;\\n    /** @deprecated */\\n    readonly nearestViewportElement: SVGElement | null;\\n    readonly transform: SVGAnimatedTransformList;\\n    getBBox(): SVGRect;\\n    getCTM(): SVGMatrix | null;\\n    getScreenCTM(): SVGMatrix | null;\\n    /** @deprecated */\\n    getTransformToElement(element: SVGElement): SVGMatrix;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGGraphicsElement: {\\n    prototype: SVGGraphicsElement;\\n    new(): SVGGraphicsElement;\\n};\\n\\ninterface SVGImageElement extends SVGGraphicsElement, SVGURIReference {\\n    readonly height: SVGAnimatedLength;\\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGImageElement: {\\n    prototype: SVGImageElement;\\n    new(): SVGImageElement;\\n};\\n\\ninterface SVGLength {\\n    readonly unitType: number;\\n    value: number;\\n    valueAsString: string;\\n    valueInSpecifiedUnits: number;\\n    convertToSpecifiedUnits(unitType: number): void;\\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\\n    readonly SVG_LENGTHTYPE_CM: number;\\n    readonly SVG_LENGTHTYPE_EMS: number;\\n    readonly SVG_LENGTHTYPE_EXS: number;\\n    readonly SVG_LENGTHTYPE_IN: number;\\n    readonly SVG_LENGTHTYPE_MM: number;\\n    readonly SVG_LENGTHTYPE_NUMBER: number;\\n    readonly SVG_LENGTHTYPE_PC: number;\\n    readonly SVG_LENGTHTYPE_PERCENTAGE: number;\\n    readonly SVG_LENGTHTYPE_PT: number;\\n    readonly SVG_LENGTHTYPE_PX: number;\\n    readonly SVG_LENGTHTYPE_UNKNOWN: number;\\n}\\n\\ndeclare var SVGLength: {\\n    prototype: SVGLength;\\n    new(): SVGLength;\\n    readonly SVG_LENGTHTYPE_CM: number;\\n    readonly SVG_LENGTHTYPE_EMS: number;\\n    readonly SVG_LENGTHTYPE_EXS: number;\\n    readonly SVG_LENGTHTYPE_IN: number;\\n    readonly SVG_LENGTHTYPE_MM: number;\\n    readonly SVG_LENGTHTYPE_NUMBER: number;\\n    readonly SVG_LENGTHTYPE_PC: number;\\n    readonly SVG_LENGTHTYPE_PERCENTAGE: number;\\n    readonly SVG_LENGTHTYPE_PT: number;\\n    readonly SVG_LENGTHTYPE_PX: number;\\n    readonly SVG_LENGTHTYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGLengthList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGLength): SVGLength;\\n    clear(): void;\\n    getItem(index: number): SVGLength;\\n    initialize(newItem: SVGLength): SVGLength;\\n    insertItemBefore(newItem: SVGLength, index: number): SVGLength;\\n    removeItem(index: number): SVGLength;\\n    replaceItem(newItem: SVGLength, index: number): SVGLength;\\n}\\n\\ndeclare var SVGLengthList: {\\n    prototype: SVGLengthList;\\n    new(): SVGLengthList;\\n};\\n\\ninterface SVGLineElement extends SVGGraphicsElement {\\n    readonly x1: SVGAnimatedLength;\\n    readonly x2: SVGAnimatedLength;\\n    readonly y1: SVGAnimatedLength;\\n    readonly y2: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGLineElement: {\\n    prototype: SVGLineElement;\\n    new(): SVGLineElement;\\n};\\n\\ninterface SVGLinearGradientElement extends SVGGradientElement {\\n    readonly x1: SVGAnimatedLength;\\n    readonly x2: SVGAnimatedLength;\\n    readonly y1: SVGAnimatedLength;\\n    readonly y2: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGLinearGradientElement: {\\n    prototype: SVGLinearGradientElement;\\n    new(): SVGLinearGradientElement;\\n};\\n\\ninterface SVGMarkerElement extends SVGElement, SVGFitToViewBox {\\n    readonly markerHeight: SVGAnimatedLength;\\n    readonly markerUnits: SVGAnimatedEnumeration;\\n    readonly markerWidth: SVGAnimatedLength;\\n    readonly orientAngle: SVGAnimatedAngle;\\n    readonly orientType: SVGAnimatedEnumeration;\\n    readonly refX: SVGAnimatedLength;\\n    readonly refY: SVGAnimatedLength;\\n    setOrientToAngle(angle: SVGAngle): void;\\n    setOrientToAuto(): void;\\n    readonly SVG_MARKERUNITS_STROKEWIDTH: number;\\n    readonly SVG_MARKERUNITS_UNKNOWN: number;\\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;\\n    readonly SVG_MARKER_ORIENT_ANGLE: number;\\n    readonly SVG_MARKER_ORIENT_AUTO: number;\\n    readonly SVG_MARKER_ORIENT_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGMarkerElement: {\\n    prototype: SVGMarkerElement;\\n    new(): SVGMarkerElement;\\n    readonly SVG_MARKERUNITS_STROKEWIDTH: number;\\n    readonly SVG_MARKERUNITS_UNKNOWN: number;\\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;\\n    readonly SVG_MARKER_ORIENT_ANGLE: number;\\n    readonly SVG_MARKER_ORIENT_AUTO: number;\\n    readonly SVG_MARKER_ORIENT_UNKNOWN: number;\\n};\\n\\ninterface SVGMaskElement extends SVGElement, SVGTests, SVGUnitTypes {\\n    readonly height: SVGAnimatedLength;\\n    readonly maskContentUnits: SVGAnimatedEnumeration;\\n    readonly maskUnits: SVGAnimatedEnumeration;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGMaskElement: {\\n    prototype: SVGMaskElement;\\n    new(): SVGMaskElement;\\n};\\n\\ninterface SVGMatrix {\\n    a: number;\\n    b: number;\\n    c: number;\\n    d: number;\\n    e: number;\\n    f: number;\\n    flipX(): SVGMatrix;\\n    flipY(): SVGMatrix;\\n    inverse(): SVGMatrix;\\n    multiply(secondMatrix: SVGMatrix): SVGMatrix;\\n    rotate(angle: number): SVGMatrix;\\n    rotateFromVector(x: number, y: number): SVGMatrix;\\n    scale(scaleFactor: number): SVGMatrix;\\n    scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\\n    skewX(angle: number): SVGMatrix;\\n    skewY(angle: number): SVGMatrix;\\n    translate(x: number, y: number): SVGMatrix;\\n}\\n\\ndeclare var SVGMatrix: {\\n    prototype: SVGMatrix;\\n    new(): SVGMatrix;\\n};\\n\\ninterface SVGMetadataElement extends SVGElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGMetadataElement: {\\n    prototype: SVGMetadataElement;\\n    new(): SVGMetadataElement;\\n};\\n\\ninterface SVGNumber {\\n    value: number;\\n}\\n\\ndeclare var SVGNumber: {\\n    prototype: SVGNumber;\\n    new(): SVGNumber;\\n};\\n\\ninterface SVGNumberList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGNumber): SVGNumber;\\n    clear(): void;\\n    getItem(index: number): SVGNumber;\\n    initialize(newItem: SVGNumber): SVGNumber;\\n    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;\\n    removeItem(index: number): SVGNumber;\\n    replaceItem(newItem: SVGNumber, index: number): SVGNumber;\\n}\\n\\ndeclare var SVGNumberList: {\\n    prototype: SVGNumberList;\\n    new(): SVGNumberList;\\n};\\n\\ninterface SVGPathElement extends SVGGraphicsElement {\\n    /** @deprecated */\\n    readonly pathSegList: SVGPathSegList;\\n    /** @deprecated */\\n    createSVGPathSegArcAbs(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: boolean, sweepFlag: boolean): SVGPathSegArcAbs;\\n    /** @deprecated */\\n    createSVGPathSegArcRel(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: boolean, sweepFlag: boolean): SVGPathSegArcRel;\\n    /** @deprecated */\\n    createSVGPathSegClosePath(): SVGPathSegClosePath;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicAbs(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicRel(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicRel;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicSmoothAbs(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicSmoothRel(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothRel;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticAbs(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticRel(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticRel;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticSmoothAbs(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticSmoothRel(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothRel;\\n    /** @deprecated */\\n    createSVGPathSegLinetoAbs(x: number, y: number): SVGPathSegLinetoAbs;\\n    /** @deprecated */\\n    createSVGPathSegLinetoHorizontalAbs(x: number): SVGPathSegLinetoHorizontalAbs;\\n    /** @deprecated */\\n    createSVGPathSegLinetoHorizontalRel(x: number): SVGPathSegLinetoHorizontalRel;\\n    /** @deprecated */\\n    createSVGPathSegLinetoRel(x: number, y: number): SVGPathSegLinetoRel;\\n    /** @deprecated */\\n    createSVGPathSegLinetoVerticalAbs(y: number): SVGPathSegLinetoVerticalAbs;\\n    /** @deprecated */\\n    createSVGPathSegLinetoVerticalRel(y: number): SVGPathSegLinetoVerticalRel;\\n    /** @deprecated */\\n    createSVGPathSegMovetoAbs(x: number, y: number): SVGPathSegMovetoAbs;\\n    /** @deprecated */\\n    createSVGPathSegMovetoRel(x: number, y: number): SVGPathSegMovetoRel;\\n    /** @deprecated */\\n    getPathSegAtLength(distance: number): number;\\n    getPointAtLength(distance: number): SVGPoint;\\n    getTotalLength(): number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPathElement: {\\n    prototype: SVGPathElement;\\n    new(): SVGPathElement;\\n};\\n\\ninterface SVGPathSeg {\\n    readonly pathSegType: number;\\n    readonly pathSegTypeAsLetter: string;\\n    readonly PATHSEG_ARC_ABS: number;\\n    readonly PATHSEG_ARC_REL: number;\\n    readonly PATHSEG_CLOSEPATH: number;\\n    readonly PATHSEG_CURVETO_CUBIC_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_REL: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\\n    readonly PATHSEG_LINETO_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_REL: number;\\n    readonly PATHSEG_LINETO_REL: number;\\n    readonly PATHSEG_LINETO_VERTICAL_ABS: number;\\n    readonly PATHSEG_LINETO_VERTICAL_REL: number;\\n    readonly PATHSEG_MOVETO_ABS: number;\\n    readonly PATHSEG_MOVETO_REL: number;\\n    readonly PATHSEG_UNKNOWN: number;\\n}\\n\\ndeclare var SVGPathSeg: {\\n    prototype: SVGPathSeg;\\n    new(): SVGPathSeg;\\n    readonly PATHSEG_ARC_ABS: number;\\n    readonly PATHSEG_ARC_REL: number;\\n    readonly PATHSEG_CLOSEPATH: number;\\n    readonly PATHSEG_CURVETO_CUBIC_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_REL: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\\n    readonly PATHSEG_LINETO_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_REL: number;\\n    readonly PATHSEG_LINETO_REL: number;\\n    readonly PATHSEG_LINETO_VERTICAL_ABS: number;\\n    readonly PATHSEG_LINETO_VERTICAL_REL: number;\\n    readonly PATHSEG_MOVETO_ABS: number;\\n    readonly PATHSEG_MOVETO_REL: number;\\n    readonly PATHSEG_UNKNOWN: number;\\n};\\n\\ninterface SVGPathSegArcAbs extends SVGPathSeg {\\n    angle: number;\\n    largeArcFlag: boolean;\\n    r1: number;\\n    r2: number;\\n    sweepFlag: boolean;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegArcAbs: {\\n    prototype: SVGPathSegArcAbs;\\n    new(): SVGPathSegArcAbs;\\n};\\n\\ninterface SVGPathSegArcRel extends SVGPathSeg {\\n    angle: number;\\n    largeArcFlag: boolean;\\n    r1: number;\\n    r2: number;\\n    sweepFlag: boolean;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegArcRel: {\\n    prototype: SVGPathSegArcRel;\\n    new(): SVGPathSegArcRel;\\n};\\n\\ninterface SVGPathSegClosePath extends SVGPathSeg {\\n}\\n\\ndeclare var SVGPathSegClosePath: {\\n    prototype: SVGPathSegClosePath;\\n    new(): SVGPathSegClosePath;\\n};\\n\\ninterface SVGPathSegCurvetoCubicAbs extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    x2: number;\\n    y: number;\\n    y1: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicAbs: {\\n    prototype: SVGPathSegCurvetoCubicAbs;\\n    new(): SVGPathSegCurvetoCubicAbs;\\n};\\n\\ninterface SVGPathSegCurvetoCubicRel extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    x2: number;\\n    y: number;\\n    y1: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicRel: {\\n    prototype: SVGPathSegCurvetoCubicRel;\\n    new(): SVGPathSegCurvetoCubicRel;\\n};\\n\\ninterface SVGPathSegCurvetoCubicSmoothAbs extends SVGPathSeg {\\n    x: number;\\n    x2: number;\\n    y: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicSmoothAbs: {\\n    prototype: SVGPathSegCurvetoCubicSmoothAbs;\\n    new(): SVGPathSegCurvetoCubicSmoothAbs;\\n};\\n\\ninterface SVGPathSegCurvetoCubicSmoothRel extends SVGPathSeg {\\n    x: number;\\n    x2: number;\\n    y: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicSmoothRel: {\\n    prototype: SVGPathSegCurvetoCubicSmoothRel;\\n    new(): SVGPathSegCurvetoCubicSmoothRel;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticAbs extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    y: number;\\n    y1: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticAbs: {\\n    prototype: SVGPathSegCurvetoQuadraticAbs;\\n    new(): SVGPathSegCurvetoQuadraticAbs;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticRel extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    y: number;\\n    y1: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticRel: {\\n    prototype: SVGPathSegCurvetoQuadraticRel;\\n    new(): SVGPathSegCurvetoQuadraticRel;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticSmoothAbs extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticSmoothAbs: {\\n    prototype: SVGPathSegCurvetoQuadraticSmoothAbs;\\n    new(): SVGPathSegCurvetoQuadraticSmoothAbs;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticSmoothRel extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticSmoothRel: {\\n    prototype: SVGPathSegCurvetoQuadraticSmoothRel;\\n    new(): SVGPathSegCurvetoQuadraticSmoothRel;\\n};\\n\\ninterface SVGPathSegLinetoAbs extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoAbs: {\\n    prototype: SVGPathSegLinetoAbs;\\n    new(): SVGPathSegLinetoAbs;\\n};\\n\\ninterface SVGPathSegLinetoHorizontalAbs extends SVGPathSeg {\\n    x: number;\\n}\\n\\ndeclare var SVGPathSegLinetoHorizontalAbs: {\\n    prototype: SVGPathSegLinetoHorizontalAbs;\\n    new(): SVGPathSegLinetoHorizontalAbs;\\n};\\n\\ninterface SVGPathSegLinetoHorizontalRel extends SVGPathSeg {\\n    x: number;\\n}\\n\\ndeclare var SVGPathSegLinetoHorizontalRel: {\\n    prototype: SVGPathSegLinetoHorizontalRel;\\n    new(): SVGPathSegLinetoHorizontalRel;\\n};\\n\\ninterface SVGPathSegLinetoRel extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoRel: {\\n    prototype: SVGPathSegLinetoRel;\\n    new(): SVGPathSegLinetoRel;\\n};\\n\\ninterface SVGPathSegLinetoVerticalAbs extends SVGPathSeg {\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoVerticalAbs: {\\n    prototype: SVGPathSegLinetoVerticalAbs;\\n    new(): SVGPathSegLinetoVerticalAbs;\\n};\\n\\ninterface SVGPathSegLinetoVerticalRel extends SVGPathSeg {\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoVerticalRel: {\\n    prototype: SVGPathSegLinetoVerticalRel;\\n    new(): SVGPathSegLinetoVerticalRel;\\n};\\n\\ninterface SVGPathSegList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGPathSeg): SVGPathSeg;\\n    clear(): void;\\n    getItem(index: number): SVGPathSeg;\\n    initialize(newItem: SVGPathSeg): SVGPathSeg;\\n    insertItemBefore(newItem: SVGPathSeg, index: number): SVGPathSeg;\\n    removeItem(index: number): SVGPathSeg;\\n    replaceItem(newItem: SVGPathSeg, index: number): SVGPathSeg;\\n}\\n\\ndeclare var SVGPathSegList: {\\n    prototype: SVGPathSegList;\\n    new(): SVGPathSegList;\\n};\\n\\ninterface SVGPathSegMovetoAbs extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegMovetoAbs: {\\n    prototype: SVGPathSegMovetoAbs;\\n    new(): SVGPathSegMovetoAbs;\\n};\\n\\ninterface SVGPathSegMovetoRel extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegMovetoRel: {\\n    prototype: SVGPathSegMovetoRel;\\n    new(): SVGPathSegMovetoRel;\\n};\\n\\ninterface SVGPatternElement extends SVGElement, SVGTests, SVGUnitTypes, SVGFitToViewBox, SVGURIReference {\\n    readonly height: SVGAnimatedLength;\\n    readonly patternContentUnits: SVGAnimatedEnumeration;\\n    readonly patternTransform: SVGAnimatedTransformList;\\n    readonly patternUnits: SVGAnimatedEnumeration;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPatternElement: {\\n    prototype: SVGPatternElement;\\n    new(): SVGPatternElement;\\n};\\n\\ninterface SVGPoint {\\n    x: number;\\n    y: number;\\n    matrixTransform(matrix: SVGMatrix): SVGPoint;\\n}\\n\\ndeclare var SVGPoint: {\\n    prototype: SVGPoint;\\n    new(): SVGPoint;\\n};\\n\\ninterface SVGPointList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGPoint): SVGPoint;\\n    clear(): void;\\n    getItem(index: number): SVGPoint;\\n    initialize(newItem: SVGPoint): SVGPoint;\\n    insertItemBefore(newItem: SVGPoint, index: number): SVGPoint;\\n    removeItem(index: number): SVGPoint;\\n    replaceItem(newItem: SVGPoint, index: number): SVGPoint;\\n}\\n\\ndeclare var SVGPointList: {\\n    prototype: SVGPointList;\\n    new(): SVGPointList;\\n};\\n\\ninterface SVGPolygonElement extends SVGGraphicsElement, SVGAnimatedPoints {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPolygonElement: {\\n    prototype: SVGPolygonElement;\\n    new(): SVGPolygonElement;\\n};\\n\\ninterface SVGPolylineElement extends SVGGraphicsElement, SVGAnimatedPoints {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPolylineElement: {\\n    prototype: SVGPolylineElement;\\n    new(): SVGPolylineElement;\\n};\\n\\ninterface SVGPreserveAspectRatio {\\n    align: number;\\n    meetOrSlice: number;\\n    readonly SVG_MEETORSLICE_MEET: number;\\n    readonly SVG_MEETORSLICE_SLICE: number;\\n    readonly SVG_MEETORSLICE_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_NONE: number;\\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\\n}\\n\\ndeclare var SVGPreserveAspectRatio: {\\n    prototype: SVGPreserveAspectRatio;\\n    new(): SVGPreserveAspectRatio;\\n    readonly SVG_MEETORSLICE_MEET: number;\\n    readonly SVG_MEETORSLICE_SLICE: number;\\n    readonly SVG_MEETORSLICE_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_NONE: number;\\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\\n};\\n\\ninterface SVGRadialGradientElement extends SVGGradientElement {\\n    readonly cx: SVGAnimatedLength;\\n    readonly cy: SVGAnimatedLength;\\n    readonly fx: SVGAnimatedLength;\\n    readonly fy: SVGAnimatedLength;\\n    readonly r: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGRadialGradientElement: {\\n    prototype: SVGRadialGradientElement;\\n    new(): SVGRadialGradientElement;\\n};\\n\\ninterface SVGRect {\\n    height: number;\\n    width: number;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGRect: {\\n    prototype: SVGRect;\\n    new(): SVGRect;\\n};\\n\\ninterface SVGRectElement extends SVGGraphicsElement {\\n    readonly height: SVGAnimatedLength;\\n    readonly rx: SVGAnimatedLength;\\n    readonly ry: SVGAnimatedLength;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGRectElement: {\\n    prototype: SVGRectElement;\\n    new(): SVGRectElement;\\n};\\n\\ninterface SVGSVGElementEventMap extends SVGElementEventMap {\\n    \\\"SVGAbort\\\": Event;\\n    \\\"SVGError\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"SVGUnload\\\": Event;\\n    \\\"SVGZoom\\\": SVGZoomEvent;\\n}\\n\\ninterface SVGSVGElement extends SVGGraphicsElement, DocumentEvent, SVGFitToViewBox, SVGZoomAndPan {\\n    /** @deprecated */\\n    contentScriptType: string;\\n    /** @deprecated */\\n    contentStyleType: string;\\n    currentScale: number;\\n    readonly currentTranslate: SVGPoint;\\n    readonly height: SVGAnimatedLength;\\n    onabort: ((this: SVGSVGElement, ev: Event) => any) | null;\\n    onerror: ((this: SVGSVGElement, ev: Event) => any) | null;\\n    onresize: ((this: SVGSVGElement, ev: UIEvent) => any) | null;\\n    onscroll: ((this: SVGSVGElement, ev: UIEvent) => any) | null;\\n    onunload: ((this: SVGSVGElement, ev: Event) => any) | null;\\n    onzoom: ((this: SVGSVGElement, ev: SVGZoomEvent) => any) | null;\\n    /** @deprecated */\\n    readonly pixelUnitToMillimeterX: number;\\n    /** @deprecated */\\n    readonly pixelUnitToMillimeterY: number;\\n    /** @deprecated */\\n    readonly screenPixelToMillimeterX: number;\\n    /** @deprecated */\\n    readonly screenPixelToMillimeterY: number;\\n    /** @deprecated */\\n    readonly viewport: SVGRect;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    checkEnclosure(element: SVGElement, rect: SVGRect): boolean;\\n    checkIntersection(element: SVGElement, rect: SVGRect): boolean;\\n    createSVGAngle(): SVGAngle;\\n    createSVGLength(): SVGLength;\\n    createSVGMatrix(): SVGMatrix;\\n    createSVGNumber(): SVGNumber;\\n    createSVGPoint(): SVGPoint;\\n    createSVGRect(): SVGRect;\\n    createSVGTransform(): SVGTransform;\\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\\n    deselectAll(): void;\\n    /** @deprecated */\\n    forceRedraw(): void;\\n    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\\n    /** @deprecated */\\n    getCurrentTime(): number;\\n    getElementById(elementId: string): Element;\\n    getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\\n    getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\\n    /** @deprecated */\\n    pauseAnimations(): void;\\n    /** @deprecated */\\n    setCurrentTime(seconds: number): void;\\n    /** @deprecated */\\n    suspendRedraw(maxWaitMilliseconds: number): number;\\n    /** @deprecated */\\n    unpauseAnimations(): void;\\n    /** @deprecated */\\n    unsuspendRedraw(suspendHandleID: number): void;\\n    /** @deprecated */\\n    unsuspendRedrawAll(): void;\\n    addEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGSVGElement: {\\n    prototype: SVGSVGElement;\\n    new(): SVGSVGElement;\\n};\\n\\ninterface SVGScriptElement extends SVGElement, SVGURIReference {\\n    type: string;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGScriptElement: {\\n    prototype: SVGScriptElement;\\n    new(): SVGScriptElement;\\n};\\n\\ninterface SVGStopElement extends SVGElement {\\n    readonly offset: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGStopElement: {\\n    prototype: SVGStopElement;\\n    new(): SVGStopElement;\\n};\\n\\ninterface SVGStringList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: string): string;\\n    clear(): void;\\n    getItem(index: number): string;\\n    initialize(newItem: string): string;\\n    insertItemBefore(newItem: string, index: number): string;\\n    removeItem(index: number): string;\\n    replaceItem(newItem: string, index: number): string;\\n}\\n\\ndeclare var SVGStringList: {\\n    prototype: SVGStringList;\\n    new(): SVGStringList;\\n};\\n\\ninterface SVGStylable {\\n    className: any;\\n}\\n\\ndeclare var SVGStylable: {\\n    prototype: SVGStylable;\\n    new(): SVGStylable;\\n};\\n\\ninterface SVGStyleElement extends SVGElement {\\n    disabled: boolean;\\n    media: string;\\n    title: string;\\n    type: string;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGStyleElement: {\\n    prototype: SVGStyleElement;\\n    new(): SVGStyleElement;\\n};\\n\\ninterface SVGSwitchElement extends SVGGraphicsElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGSwitchElement: {\\n    prototype: SVGSwitchElement;\\n    new(): SVGSwitchElement;\\n};\\n\\ninterface SVGSymbolElement extends SVGElement, SVGFitToViewBox {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGSymbolElement: {\\n    prototype: SVGSymbolElement;\\n    new(): SVGSymbolElement;\\n};\\n\\ninterface SVGTSpanElement extends SVGTextPositioningElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTSpanElement: {\\n    prototype: SVGTSpanElement;\\n    new(): SVGTSpanElement;\\n};\\n\\ninterface SVGTests {\\n    readonly requiredExtensions: SVGStringList;\\n    /** @deprecated */\\n    readonly requiredFeatures: SVGStringList;\\n    readonly systemLanguage: SVGStringList;\\n    /** @deprecated */\\n    hasExtension(extension: string): boolean;\\n}\\n\\ninterface SVGTextContentElement extends SVGGraphicsElement {\\n    readonly lengthAdjust: SVGAnimatedEnumeration;\\n    readonly textLength: SVGAnimatedLength;\\n    getCharNumAtPosition(point: SVGPoint): number;\\n    getComputedTextLength(): number;\\n    getEndPositionOfChar(charnum: number): SVGPoint;\\n    getExtentOfChar(charnum: number): SVGRect;\\n    getNumberOfChars(): number;\\n    getRotationOfChar(charnum: number): number;\\n    getStartPositionOfChar(charnum: number): SVGPoint;\\n    getSubStringLength(charnum: number, nchars: number): number;\\n    selectSubString(charnum: number, nchars: number): void;\\n    readonly LENGTHADJUST_SPACING: number;\\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;\\n    readonly LENGTHADJUST_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextContentElement: {\\n    prototype: SVGTextContentElement;\\n    new(): SVGTextContentElement;\\n    readonly LENGTHADJUST_SPACING: number;\\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;\\n    readonly LENGTHADJUST_UNKNOWN: number;\\n};\\n\\ninterface SVGTextElement extends SVGTextPositioningElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextElement: {\\n    prototype: SVGTextElement;\\n    new(): SVGTextElement;\\n};\\n\\ninterface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {\\n    readonly method: SVGAnimatedEnumeration;\\n    readonly spacing: SVGAnimatedEnumeration;\\n    readonly startOffset: SVGAnimatedLength;\\n    readonly TEXTPATH_METHODTYPE_ALIGN: number;\\n    readonly TEXTPATH_METHODTYPE_STRETCH: number;\\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;\\n    readonly TEXTPATH_SPACINGTYPE_AUTO: number;\\n    readonly TEXTPATH_SPACINGTYPE_EXACT: number;\\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextPathElement: {\\n    prototype: SVGTextPathElement;\\n    new(): SVGTextPathElement;\\n    readonly TEXTPATH_METHODTYPE_ALIGN: number;\\n    readonly TEXTPATH_METHODTYPE_STRETCH: number;\\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;\\n    readonly TEXTPATH_SPACINGTYPE_AUTO: number;\\n    readonly TEXTPATH_SPACINGTYPE_EXACT: number;\\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGTextPositioningElement extends SVGTextContentElement {\\n    readonly dx: SVGAnimatedLengthList;\\n    readonly dy: SVGAnimatedLengthList;\\n    readonly rotate: SVGAnimatedNumberList;\\n    readonly x: SVGAnimatedLengthList;\\n    readonly y: SVGAnimatedLengthList;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextPositioningElement: {\\n    prototype: SVGTextPositioningElement;\\n    new(): SVGTextPositioningElement;\\n};\\n\\ninterface SVGTitleElement extends SVGElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTitleElement: {\\n    prototype: SVGTitleElement;\\n    new(): SVGTitleElement;\\n};\\n\\ninterface SVGTransform {\\n    readonly angle: number;\\n    readonly matrix: SVGMatrix;\\n    readonly type: number;\\n    setMatrix(matrix: SVGMatrix): void;\\n    setRotate(angle: number, cx: number, cy: number): void;\\n    setScale(sx: number, sy: number): void;\\n    setSkewX(angle: number): void;\\n    setSkewY(angle: number): void;\\n    setTranslate(tx: number, ty: number): void;\\n    readonly SVG_TRANSFORM_MATRIX: number;\\n    readonly SVG_TRANSFORM_ROTATE: number;\\n    readonly SVG_TRANSFORM_SCALE: number;\\n    readonly SVG_TRANSFORM_SKEWX: number;\\n    readonly SVG_TRANSFORM_SKEWY: number;\\n    readonly SVG_TRANSFORM_TRANSLATE: number;\\n    readonly SVG_TRANSFORM_UNKNOWN: number;\\n}\\n\\ndeclare var SVGTransform: {\\n    prototype: SVGTransform;\\n    new(): SVGTransform;\\n    readonly SVG_TRANSFORM_MATRIX: number;\\n    readonly SVG_TRANSFORM_ROTATE: number;\\n    readonly SVG_TRANSFORM_SCALE: number;\\n    readonly SVG_TRANSFORM_SKEWX: number;\\n    readonly SVG_TRANSFORM_SKEWY: number;\\n    readonly SVG_TRANSFORM_TRANSLATE: number;\\n    readonly SVG_TRANSFORM_UNKNOWN: number;\\n};\\n\\ninterface SVGTransformList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGTransform): SVGTransform;\\n    clear(): void;\\n    consolidate(): SVGTransform;\\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\\n    getItem(index: number): SVGTransform;\\n    initialize(newItem: SVGTransform): SVGTransform;\\n    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;\\n    removeItem(index: number): SVGTransform;\\n    replaceItem(newItem: SVGTransform, index: number): SVGTransform;\\n}\\n\\ndeclare var SVGTransformList: {\\n    prototype: SVGTransformList;\\n    new(): SVGTransformList;\\n};\\n\\ninterface SVGURIReference {\\n    readonly href: SVGAnimatedString;\\n}\\n\\ninterface SVGUnitTypes {\\n    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\\n    readonly SVG_UNIT_TYPE_UNKNOWN: number;\\n    readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;\\n}\\ndeclare var SVGUnitTypes: SVGUnitTypes;\\n\\ninterface SVGUseElement extends SVGGraphicsElement, SVGURIReference {\\n    readonly animatedInstanceRoot: SVGElementInstance | null;\\n    readonly height: SVGAnimatedLength;\\n    readonly instanceRoot: SVGElementInstance | null;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGUseElement: {\\n    prototype: SVGUseElement;\\n    new(): SVGUseElement;\\n};\\n\\ninterface SVGViewElement extends SVGElement, SVGFitToViewBox, SVGZoomAndPan {\\n    /** @deprecated */\\n    readonly viewTarget: SVGStringList;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGViewElement: {\\n    prototype: SVGViewElement;\\n    new(): SVGViewElement;\\n};\\n\\ninterface SVGZoomAndPan {\\n    readonly zoomAndPan: number;\\n}\\n\\ndeclare var SVGZoomAndPan: {\\n    readonly SVG_ZOOMANDPAN_DISABLE: number;\\n    readonly SVG_ZOOMANDPAN_MAGNIFY: number;\\n    readonly SVG_ZOOMANDPAN_UNKNOWN: number;\\n};\\n\\ninterface SVGZoomEvent extends UIEvent {\\n    readonly newScale: number;\\n    readonly newTranslate: SVGPoint;\\n    readonly previousScale: number;\\n    readonly previousTranslate: SVGPoint;\\n    readonly zoomRectScreen: SVGRect;\\n}\\n\\ndeclare var SVGZoomEvent: {\\n    prototype: SVGZoomEvent;\\n    new(): SVGZoomEvent;\\n};\\n\\ninterface ScopedCredential {\\n    readonly id: ArrayBuffer;\\n    readonly type: ScopedCredentialType;\\n}\\n\\ndeclare var ScopedCredential: {\\n    prototype: ScopedCredential;\\n    new(): ScopedCredential;\\n};\\n\\ninterface ScopedCredentialInfo {\\n    readonly credential: ScopedCredential;\\n    readonly publicKey: CryptoKey;\\n}\\n\\ndeclare var ScopedCredentialInfo: {\\n    prototype: ScopedCredentialInfo;\\n    new(): ScopedCredentialInfo;\\n};\\n\\ninterface ScreenEventMap {\\n    \\\"MSOrientationChange\\\": Event;\\n}\\n\\ninterface Screen extends EventTarget {\\n    readonly availHeight: number;\\n    readonly availWidth: number;\\n    /** @deprecated */\\n    bufferDepth: number;\\n    readonly colorDepth: number;\\n    readonly deviceXDPI: number;\\n    readonly deviceYDPI: number;\\n    readonly fontSmoothingEnabled: boolean;\\n    readonly height: number;\\n    readonly logicalXDPI: number;\\n    readonly logicalYDPI: number;\\n    readonly msOrientation: string;\\n    onmsorientationchange: ((this: Screen, ev: Event) => any) | null;\\n    readonly pixelDepth: number;\\n    readonly systemXDPI: number;\\n    readonly systemYDPI: number;\\n    readonly width: number;\\n    lockOrientation(orientations: OrientationLockType | OrientationLockType[]): boolean;\\n    msLockOrientation(orientations: string | string[]): boolean;\\n    msUnlockOrientation(): void;\\n    unlockOrientation(): void;\\n    addEventListener<K extends keyof ScreenEventMap>(type: K, listener: (this: Screen, ev: ScreenEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ScreenEventMap>(type: K, listener: (this: Screen, ev: ScreenEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Screen: {\\n    prototype: Screen;\\n    new(): Screen;\\n};\\n\\ninterface ScriptProcessorNodeEventMap {\\n    \\\"audioprocess\\\": AudioProcessingEvent;\\n}\\n\\ninterface ScriptProcessorNode extends AudioNode {\\n    /** @deprecated */\\n    readonly bufferSize: number;\\n    /** @deprecated */\\n    onaudioprocess: ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any) | null;\\n    addEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ScriptProcessorNode: {\\n    prototype: ScriptProcessorNode;\\n    new(): ScriptProcessorNode;\\n};\\n\\ninterface ScrollIntoViewOptions extends ScrollOptions {\\n    block?: ScrollLogicalPosition;\\n    inline?: ScrollLogicalPosition;\\n}\\n\\ninterface ScrollOptions {\\n    behavior?: ScrollBehavior;\\n}\\n\\ninterface ScrollToOptions extends ScrollOptions {\\n    left?: number;\\n    top?: number;\\n}\\n\\ninterface SecurityPolicyViolationEvent extends Event {\\n    readonly blockedURI: string;\\n    readonly columnNumber: number;\\n    readonly documentURI: string;\\n    readonly effectiveDirective: string;\\n    readonly lineNumber: number;\\n    readonly originalPolicy: string;\\n    readonly referrer: string;\\n    readonly sourceFile: string;\\n    readonly statusCode: number;\\n    readonly violatedDirective: string;\\n}\\n\\ndeclare var SecurityPolicyViolationEvent: {\\n    prototype: SecurityPolicyViolationEvent;\\n    new(type: string, eventInitDict?: SecurityPolicyViolationEventInit): SecurityPolicyViolationEvent;\\n};\\n\\ninterface Selection {\\n    readonly anchorNode: Node;\\n    readonly anchorOffset: number;\\n    readonly baseNode: Node;\\n    readonly baseOffset: number;\\n    readonly extentNode: Node;\\n    readonly extentOffset: number;\\n    readonly focusNode: Node;\\n    readonly focusOffset: number;\\n    readonly isCollapsed: boolean;\\n    readonly rangeCount: number;\\n    readonly type: string;\\n    addRange(range: Range): void;\\n    collapse(parentNode: Node, offset: number): void;\\n    collapseToEnd(): void;\\n    collapseToStart(): void;\\n    containsNode(node: Node, partlyContained: boolean): boolean;\\n    deleteFromDocument(): void;\\n    empty(): void;\\n    extend(newNode: Node, offset: number): void;\\n    getRangeAt(index: number): Range;\\n    removeAllRanges(): void;\\n    removeRange(range: Range): void;\\n    selectAllChildren(parentNode: Node): void;\\n    setBaseAndExtent(baseNode: Node, baseOffset: number, extentNode: Node, extentOffset: number): void;\\n    setPosition(parentNode: Node, offset: number): void;\\n    toString(): string;\\n}\\n\\ndeclare var Selection: {\\n    prototype: Selection;\\n    new(): Selection;\\n};\\n\\ninterface ServiceUIFrameContext {\\n    getCachedFrameMessage(key: string): string;\\n    postFrameMessage(key: string, data: string): void;\\n}\\ndeclare var ServiceUIFrameContext: ServiceUIFrameContext;\\n\\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\\n    \\\"statechange\\\": Event;\\n}\\n\\ninterface ServiceWorker extends EventTarget, AbstractWorker {\\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\\n    readonly scriptURL: string;\\n    readonly state: ServiceWorkerState;\\n    postMessage(message: any, transfer?: any[]): void;\\n    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ServiceWorker: {\\n    prototype: ServiceWorker;\\n    new(): ServiceWorker;\\n};\\n\\ninterface ServiceWorkerContainerEventMap {\\n    \\\"controllerchange\\\": Event;\\n    \\\"message\\\": ServiceWorkerMessageEvent;\\n    \\\"messageerror\\\": MessageEvent;\\n}\\n\\ninterface ServiceWorkerContainer extends EventTarget {\\n    readonly controller: ServiceWorker | null;\\n    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;\\n    onmessage: ((this: ServiceWorkerContainer, ev: ServiceWorkerMessageEvent) => any) | null;\\n    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\\n    readonly ready: Promise<ServiceWorkerRegistration>;\\n    getRegistration(clientURL?: string): Promise<ServiceWorkerRegistration | undefined>;\\n    getRegistrations(): Promise<ServiceWorkerRegistration[]>;\\n    register(scriptURL: string, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;\\n    startMessages(): void;\\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ServiceWorkerContainer: {\\n    prototype: ServiceWorkerContainer;\\n    new(): ServiceWorkerContainer;\\n};\\n\\ninterface ServiceWorkerMessageEvent extends Event {\\n    readonly data: any;\\n    readonly lastEventId: string;\\n    readonly origin: string;\\n    readonly ports: ReadonlyArray<MessagePort> | null;\\n    readonly source: ServiceWorker | MessagePort | null;\\n}\\n\\ndeclare var ServiceWorkerMessageEvent: {\\n    prototype: ServiceWorkerMessageEvent;\\n    new(type: string, eventInitDict?: ServiceWorkerMessageEventInit): ServiceWorkerMessageEvent;\\n};\\n\\ninterface ServiceWorkerRegistrationEventMap {\\n    \\\"updatefound\\\": Event;\\n}\\n\\ninterface ServiceWorkerRegistration extends EventTarget {\\n    readonly active: ServiceWorker | null;\\n    readonly installing: ServiceWorker | null;\\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\\n    readonly pushManager: PushManager;\\n    readonly scope: string;\\n    readonly sync: SyncManager;\\n    readonly waiting: ServiceWorker | null;\\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\\n    showNotification(title: string, options?: NotificationOptions): Promise<void>;\\n    unregister(): Promise<boolean>;\\n    update(): Promise<void>;\\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ServiceWorkerRegistration: {\\n    prototype: ServiceWorkerRegistration;\\n    new(): ServiceWorkerRegistration;\\n};\\n\\ninterface ShadowRoot extends DocumentOrShadowRoot, DocumentFragment {\\n    readonly host: Element;\\n    innerHTML: string;\\n}\\n\\ninterface ShadowRootInit {\\n    delegatesFocus?: boolean;\\n    mode: \\\"open\\\" | \\\"closed\\\";\\n}\\n\\ninterface SourceBuffer extends EventTarget {\\n    appendWindowEnd: number;\\n    appendWindowStart: number;\\n    readonly audioTracks: AudioTrackList;\\n    readonly buffered: TimeRanges;\\n    mode: AppendMode;\\n    timestampOffset: number;\\n    readonly updating: boolean;\\n    readonly videoTracks: VideoTrackList;\\n    abort(): void;\\n    appendBuffer(data: ArrayBuffer | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    appendStream(stream: MSStream, maxSize?: number): void;\\n    remove(start: number, end: number): void;\\n}\\n\\ndeclare var SourceBuffer: {\\n    prototype: SourceBuffer;\\n    new(): SourceBuffer;\\n};\\n\\ninterface SourceBufferList extends EventTarget {\\n    readonly length: number;\\n    item(index: number): SourceBuffer;\\n    [index: number]: SourceBuffer;\\n}\\n\\ndeclare var SourceBufferList: {\\n    prototype: SourceBufferList;\\n    new(): SourceBufferList;\\n};\\n\\ninterface SpeechSynthesisEventMap {\\n    \\\"voiceschanged\\\": Event;\\n}\\n\\ninterface SpeechSynthesis extends EventTarget {\\n    onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;\\n    readonly paused: boolean;\\n    readonly pending: boolean;\\n    readonly speaking: boolean;\\n    cancel(): void;\\n    getVoices(): SpeechSynthesisVoice[];\\n    pause(): void;\\n    resume(): void;\\n    speak(utterance: SpeechSynthesisUtterance): void;\\n    addEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SpeechSynthesis: {\\n    prototype: SpeechSynthesis;\\n    new(): SpeechSynthesis;\\n};\\n\\ninterface SpeechSynthesisEvent extends Event {\\n    readonly charIndex: number;\\n    readonly charLength: number;\\n    readonly elapsedTime: number;\\n    readonly name: string;\\n    readonly utterance: SpeechSynthesisUtterance;\\n}\\n\\ndeclare var SpeechSynthesisEvent: {\\n    prototype: SpeechSynthesisEvent;\\n    new(type: string, eventInitDict?: SpeechSynthesisEventInit): SpeechSynthesisEvent;\\n};\\n\\ninterface SpeechSynthesisUtteranceEventMap {\\n    \\\"boundary\\\": Event;\\n    \\\"end\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"mark\\\": Event;\\n    \\\"pause\\\": Event;\\n    \\\"resume\\\": Event;\\n    \\\"start\\\": Event;\\n}\\n\\ninterface SpeechSynthesisUtterance extends EventTarget {\\n    lang: string;\\n    onboundary: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onend: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onerror: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onmark: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onpause: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onresume: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onstart: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    pitch: number;\\n    rate: number;\\n    text: string;\\n    voice: SpeechSynthesisVoice;\\n    volume: number;\\n    addEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SpeechSynthesisUtterance: {\\n    prototype: SpeechSynthesisUtterance;\\n    new(): SpeechSynthesisUtterance;\\n    new(text: string): SpeechSynthesisUtterance;\\n};\\n\\ninterface SpeechSynthesisVoice {\\n    readonly default: boolean;\\n    readonly lang: string;\\n    readonly localService: boolean;\\n    readonly name: string;\\n    readonly voiceURI: string;\\n}\\n\\ndeclare var SpeechSynthesisVoice: {\\n    prototype: SpeechSynthesisVoice;\\n    new(): SpeechSynthesisVoice;\\n};\\n\\ninterface StereoPannerNode extends AudioNode {\\n    readonly pan: AudioParam;\\n}\\n\\ndeclare var StereoPannerNode: {\\n    prototype: StereoPannerNode;\\n    new(): StereoPannerNode;\\n};\\n\\ninterface Storage {\\n    readonly length: number;\\n    clear(): void;\\n    getItem(key: string): string | null;\\n    key(index: number): string | null;\\n    removeItem(key: string): void;\\n    setItem(key: string, value: string): void;\\n    [key: string]: any;\\n}\\n\\ndeclare var Storage: {\\n    prototype: Storage;\\n    new(): Storage;\\n};\\n\\ninterface StorageEvent extends Event {\\n    readonly key: string | null;\\n    readonly newValue: string | null;\\n    readonly oldValue: string | null;\\n    readonly storageArea: Storage | null;\\n    readonly url: string;\\n}\\n\\ndeclare var StorageEvent: {\\n    prototype: StorageEvent;\\n    new (type: string, eventInitDict?: StorageEventInit): StorageEvent;\\n};\\n\\ninterface StorageEventInit extends EventInit {\\n    key?: string;\\n    newValue?: string;\\n    oldValue?: string;\\n    storageArea?: Storage;\\n    url: string;\\n}\\n\\ninterface StyleMedia {\\n    readonly type: string;\\n    matchMedium(mediaquery: string): boolean;\\n}\\n\\ndeclare var StyleMedia: {\\n    prototype: StyleMedia;\\n    new(): StyleMedia;\\n};\\n\\ninterface StyleSheet {\\n    disabled: boolean;\\n    readonly href: string | null;\\n    readonly media: MediaList;\\n    readonly ownerNode: Node;\\n    readonly parentStyleSheet: StyleSheet | null;\\n    readonly title: string | null;\\n    readonly type: string;\\n}\\n\\ndeclare var StyleSheet: {\\n    prototype: StyleSheet;\\n    new(): StyleSheet;\\n};\\n\\ninterface StyleSheetList {\\n    readonly length: number;\\n    item(index: number): StyleSheet | null;\\n    [index: number]: StyleSheet;\\n}\\n\\ndeclare var StyleSheetList: {\\n    prototype: StyleSheetList;\\n    new(): StyleSheetList;\\n};\\n\\ninterface SubtleCrypto {\\n    decrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    deriveBits(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, length: number): PromiseLike<ArrayBuffer>;\\n    deriveKey(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: string | AesDerivedKeyParams | HmacImportParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    digest(algorithm: string | Algorithm, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    encrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    exportKey(format: \\\"jwk\\\", key: CryptoKey): PromiseLike<JsonWebKey>;\\n    exportKey(format: \\\"raw\\\" | \\\"pkcs8\\\" | \\\"spki\\\", key: CryptoKey): PromiseLike<ArrayBuffer>;\\n    exportKey(format: string, key: CryptoKey): PromiseLike<JsonWebKey | ArrayBuffer>;\\n    generateKey(algorithm: string, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair | CryptoKey>;\\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair>;\\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    importKey(format: \\\"jwk\\\", keyData: JsonWebKey, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    importKey(format: \\\"raw\\\" | \\\"pkcs8\\\" | \\\"spki\\\", keyData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    importKey(format: string, keyData: JsonWebKey | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    sign(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    unwrapKey(format: string, wrappedKey: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: string | Algorithm, unwrappedKeyAlgorithm: string | Algorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    verify(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, signature: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<boolean>;\\n    wrapKey(format: string, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: string | Algorithm): PromiseLike<ArrayBuffer>;\\n}\\n\\ndeclare var SubtleCrypto: {\\n    prototype: SubtleCrypto;\\n    new(): SubtleCrypto;\\n};\\n\\ninterface SyncManager {\\n    getTags(): Promise<string[]>;\\n    register(tag: string): Promise<void>;\\n}\\n\\ndeclare var SyncManager: {\\n    prototype: SyncManager;\\n    new(): SyncManager;\\n};\\n\\ninterface Text extends CharacterData {\\n    readonly assignedSlot: HTMLSlotElement | null;\\n    readonly wholeText: string;\\n    splitText(offset: number): Text;\\n}\\n\\ndeclare var Text: {\\n    prototype: Text;\\n    new(data?: string): Text;\\n};\\n\\ninterface TextDecoder {\\n    readonly encoding: string;\\n    readonly fatal: boolean;\\n    readonly ignoreBOM: boolean;\\n    decode(input?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: TextDecodeOptions): string;\\n}\\n\\ndeclare var TextDecoder: {\\n    prototype: TextDecoder;\\n    new(label?: string, options?: TextDecoderOptions): TextDecoder;\\n};\\n\\ninterface TextEncoder {\\n    readonly encoding: string;\\n    encode(input?: string): Uint8Array;\\n}\\n\\ndeclare var TextEncoder: {\\n    prototype: TextEncoder;\\n    new(): TextEncoder;\\n};\\n\\ninterface TextEvent extends UIEvent {\\n    readonly data: string;\\n    initTextEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, inputMethod: number, locale: string): void;\\n    readonly DOM_INPUT_METHOD_DROP: number;\\n    readonly DOM_INPUT_METHOD_HANDWRITING: number;\\n    readonly DOM_INPUT_METHOD_IME: number;\\n    readonly DOM_INPUT_METHOD_KEYBOARD: number;\\n    readonly DOM_INPUT_METHOD_MULTIMODAL: number;\\n    readonly DOM_INPUT_METHOD_OPTION: number;\\n    readonly DOM_INPUT_METHOD_PASTE: number;\\n    readonly DOM_INPUT_METHOD_SCRIPT: number;\\n    readonly DOM_INPUT_METHOD_UNKNOWN: number;\\n    readonly DOM_INPUT_METHOD_VOICE: number;\\n}\\n\\ndeclare var TextEvent: {\\n    prototype: TextEvent;\\n    new(): TextEvent;\\n    readonly DOM_INPUT_METHOD_DROP: number;\\n    readonly DOM_INPUT_METHOD_HANDWRITING: number;\\n    readonly DOM_INPUT_METHOD_IME: number;\\n    readonly DOM_INPUT_METHOD_KEYBOARD: number;\\n    readonly DOM_INPUT_METHOD_MULTIMODAL: number;\\n    readonly DOM_INPUT_METHOD_OPTION: number;\\n    readonly DOM_INPUT_METHOD_PASTE: number;\\n    readonly DOM_INPUT_METHOD_SCRIPT: number;\\n    readonly DOM_INPUT_METHOD_UNKNOWN: number;\\n    readonly DOM_INPUT_METHOD_VOICE: number;\\n};\\n\\ninterface TextMetrics {\\n    readonly width: number;\\n}\\n\\ndeclare var TextMetrics: {\\n    prototype: TextMetrics;\\n    new(): TextMetrics;\\n};\\n\\ninterface TextTrackEventMap {\\n    \\\"cuechange\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"load\\\": Event;\\n}\\n\\ninterface TextTrack extends EventTarget {\\n    readonly activeCues: TextTrackCueList;\\n    readonly cues: TextTrackCueList;\\n    readonly inBandMetadataTrackDispatchType: string;\\n    readonly kind: string;\\n    readonly label: string;\\n    readonly language: string;\\n    mode: TextTrackMode | number;\\n    oncuechange: ((this: TextTrack, ev: Event) => any) | null;\\n    onerror: ((this: TextTrack, ev: Event) => any) | null;\\n    onload: ((this: TextTrack, ev: Event) => any) | null;\\n    readonly readyState: number;\\n    addCue(cue: TextTrackCue): void;\\n    removeCue(cue: TextTrackCue): void;\\n    readonly DISABLED: number;\\n    readonly ERROR: number;\\n    readonly HIDDEN: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n    readonly SHOWING: number;\\n    addEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var TextTrack: {\\n    prototype: TextTrack;\\n    new(): TextTrack;\\n    readonly DISABLED: number;\\n    readonly ERROR: number;\\n    readonly HIDDEN: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n    readonly SHOWING: number;\\n};\\n\\ninterface TextTrackCueEventMap {\\n    \\\"enter\\\": Event;\\n    \\\"exit\\\": Event;\\n}\\n\\ninterface TextTrackCue extends EventTarget {\\n    endTime: number;\\n    id: string;\\n    onenter: ((this: TextTrackCue, ev: Event) => any) | null;\\n    onexit: ((this: TextTrackCue, ev: Event) => any) | null;\\n    pauseOnExit: boolean;\\n    startTime: number;\\n    text: string;\\n    readonly track: TextTrack;\\n    getCueAsHTML(): DocumentFragment;\\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var TextTrackCue: {\\n    prototype: TextTrackCue;\\n    new(startTime: number, endTime: number, text: string): TextTrackCue;\\n};\\n\\ninterface TextTrackCueList {\\n    readonly length: number;\\n    getCueById(id: string): TextTrackCue;\\n    item(index: number): TextTrackCue;\\n    [index: number]: TextTrackCue;\\n}\\n\\ndeclare var TextTrackCueList: {\\n    prototype: TextTrackCueList;\\n    new(): TextTrackCueList;\\n};\\n\\ninterface TextTrackListEventMap {\\n    \\\"addtrack\\\": TrackEvent;\\n}\\n\\ninterface TextTrackList extends EventTarget {\\n    readonly length: number;\\n    onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;\\n    item(index: number): TextTrack;\\n    addEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [index: number]: TextTrack;\\n}\\n\\ndeclare var TextTrackList: {\\n    prototype: TextTrackList;\\n    new(): TextTrackList;\\n};\\n\\ninterface TimeRanges {\\n    readonly length: number;\\n    end(index: number): number;\\n    start(index: number): number;\\n}\\n\\ndeclare var TimeRanges: {\\n    prototype: TimeRanges;\\n    new(): TimeRanges;\\n};\\n\\ninterface Touch {\\n    readonly clientX: number;\\n    readonly clientY: number;\\n    readonly identifier: number;\\n    readonly pageX: number;\\n    readonly pageY: number;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly target: EventTarget;\\n}\\n\\ndeclare var Touch: {\\n    prototype: Touch;\\n    new(): Touch;\\n};\\n\\ninterface TouchEvent extends UIEvent {\\n    readonly altKey: boolean;\\n    readonly changedTouches: TouchList;\\n    readonly charCode: number;\\n    readonly ctrlKey: boolean;\\n    readonly keyCode: number;\\n    readonly metaKey: boolean;\\n    readonly shiftKey: boolean;\\n    readonly targetTouches: TouchList;\\n    readonly touches: TouchList;\\n    /** @deprecated */\\n    readonly which: number;\\n}\\n\\ndeclare var TouchEvent: {\\n    prototype: TouchEvent;\\n    new(type: string, touchEventInit?: TouchEventInit): TouchEvent;\\n};\\n\\ninterface TouchEventInit extends EventModifierInit {\\n    changedTouches?: Touch[];\\n    targetTouches?: Touch[];\\n    touches?: Touch[];\\n}\\n\\ninterface TouchList {\\n    readonly length: number;\\n    item(index: number): Touch | null;\\n    [index: number]: Touch;\\n}\\n\\ndeclare var TouchList: {\\n    prototype: TouchList;\\n    new(): TouchList;\\n};\\n\\ninterface TrackEvent extends Event {\\n    readonly track: VideoTrack | AudioTrack | TextTrack | null;\\n}\\n\\ndeclare var TrackEvent: {\\n    prototype: TrackEvent;\\n    new(typeArg: string, eventInitDict?: TrackEventInit): TrackEvent;\\n};\\n\\ninterface TransitionEvent extends Event {\\n    readonly elapsedTime: number;\\n    readonly propertyName: string;\\n    initTransitionEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, propertyNameArg: string, elapsedTimeArg: number): void;\\n}\\n\\ndeclare var TransitionEvent: {\\n    prototype: TransitionEvent;\\n    new(typeArg: string, eventInitDict?: TransitionEventInit): TransitionEvent;\\n};\\n\\ninterface TreeWalker {\\n    currentNode: Node;\\n    /** @deprecated */\\n    readonly expandEntityReferences: boolean;\\n    readonly filter: NodeFilter | null;\\n    readonly root: Node;\\n    readonly whatToShow: number;\\n    firstChild(): Node | null;\\n    lastChild(): Node | null;\\n    nextNode(): Node | null;\\n    nextSibling(): Node | null;\\n    parentNode(): Node | null;\\n    previousNode(): Node | null;\\n    previousSibling(): Node | null;\\n}\\n\\ndeclare var TreeWalker: {\\n    prototype: TreeWalker;\\n    new(): TreeWalker;\\n};\\n\\ninterface UIEvent extends Event {\\n    readonly detail: number;\\n    readonly view: Window;\\n    initUIEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number): void;\\n}\\n\\ndeclare var UIEvent: {\\n    prototype: UIEvent;\\n    new(typeArg: string, eventInitDict?: UIEventInit): UIEvent;\\n};\\n\\ninterface URL {\\n    hash: string;\\n    host: string;\\n    hostname: string;\\n    href: string;\\n    readonly origin: string;\\n    password: string;\\n    pathname: string;\\n    port: string;\\n    protocol: string;\\n    search: string;\\n    readonly searchParams: URLSearchParams;\\n    username: string;\\n    toString(): string;\\n}\\n\\ndeclare var URL: {\\n    prototype: URL;\\n    new(url: string, base?: string | URL): URL;\\n    createObjectURL(object: any, options?: ObjectURLOptions): string;\\n    revokeObjectURL(url: string): void;\\n};\\n\\ninterface URLSearchParams {\\n    /**\\n     * Appends a specified key/value pair as a new search parameter.\\n     */\\n    append(name: string, value: string): void;\\n    /**\\n     * Deletes the given search parameter, and its associated value, from the list of all search parameters.\\n     */\\n    delete(name: string): void;\\n    /**\\n     * Returns the first value associated to the given search parameter.\\n     */\\n    get(name: string): string | null;\\n    /**\\n     * Returns all the values association with a given search parameter.\\n     */\\n    getAll(name: string): string[];\\n    /**\\n     * Returns a Boolean indicating if such a search parameter exists.\\n     */\\n    has(name: string): boolean;\\n    /**\\n     * Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\\n     */\\n    set(name: string, value: string): void;\\n}\\n\\ndeclare var URLSearchParams: {\\n    prototype: URLSearchParams;\\n    new (init?: string | URLSearchParams): URLSearchParams;\\n};\\n\\ninterface VRDisplay extends EventTarget {\\n    readonly capabilities: VRDisplayCapabilities;\\n    depthFar: number;\\n    depthNear: number;\\n    readonly displayId: number;\\n    readonly displayName: string;\\n    readonly isConnected: boolean;\\n    readonly isPresenting: boolean;\\n    readonly stageParameters: VRStageParameters | null;\\n    cancelAnimationFrame(handle: number): void;\\n    exitPresent(): Promise<void>;\\n    getEyeParameters(whichEye: string): VREyeParameters;\\n    getFrameData(frameData: VRFrameData): boolean;\\n    getLayers(): VRLayer[];\\n    /** @deprecated */\\n    getPose(): VRPose;\\n    requestAnimationFrame(callback: FrameRequestCallback): number;\\n    requestPresent(layers: VRLayer[]): Promise<void>;\\n    resetPose(): void;\\n    submitFrame(pose?: VRPose): void;\\n}\\n\\ndeclare var VRDisplay: {\\n    prototype: VRDisplay;\\n    new(): VRDisplay;\\n};\\n\\ninterface VRDisplayCapabilities {\\n    readonly canPresent: boolean;\\n    readonly hasExternalDisplay: boolean;\\n    readonly hasOrientation: boolean;\\n    readonly hasPosition: boolean;\\n    readonly maxLayers: number;\\n}\\n\\ndeclare var VRDisplayCapabilities: {\\n    prototype: VRDisplayCapabilities;\\n    new(): VRDisplayCapabilities;\\n};\\n\\ninterface VRDisplayEvent extends Event {\\n    readonly display: VRDisplay;\\n    readonly reason: VRDisplayEventReason | null;\\n}\\n\\ndeclare var VRDisplayEvent: {\\n    prototype: VRDisplayEvent;\\n    new(type: string, eventInitDict: VRDisplayEventInit): VRDisplayEvent;\\n};\\n\\ninterface VREyeParameters {\\n    /** @deprecated */\\n    readonly fieldOfView: VRFieldOfView;\\n    readonly offset: Float32Array;\\n    readonly renderHeight: number;\\n    readonly renderWidth: number;\\n}\\n\\ndeclare var VREyeParameters: {\\n    prototype: VREyeParameters;\\n    new(): VREyeParameters;\\n};\\n\\ninterface VRFieldOfView {\\n    readonly downDegrees: number;\\n    readonly leftDegrees: number;\\n    readonly rightDegrees: number;\\n    readonly upDegrees: number;\\n}\\n\\ndeclare var VRFieldOfView: {\\n    prototype: VRFieldOfView;\\n    new(): VRFieldOfView;\\n};\\n\\ninterface VRFrameData {\\n    readonly leftProjectionMatrix: Float32Array;\\n    readonly leftViewMatrix: Float32Array;\\n    readonly pose: VRPose;\\n    readonly rightProjectionMatrix: Float32Array;\\n    readonly rightViewMatrix: Float32Array;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var VRFrameData: {\\n    prototype: VRFrameData;\\n    new(): VRFrameData;\\n};\\n\\ninterface VRPose {\\n    readonly angularAcceleration: Float32Array | null;\\n    readonly angularVelocity: Float32Array | null;\\n    readonly linearAcceleration: Float32Array | null;\\n    readonly linearVelocity: Float32Array | null;\\n    readonly orientation: Float32Array | null;\\n    readonly position: Float32Array | null;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var VRPose: {\\n    prototype: VRPose;\\n    new(): VRPose;\\n};\\n\\ninterface ValidityState {\\n    readonly badInput: boolean;\\n    readonly customError: boolean;\\n    readonly patternMismatch: boolean;\\n    readonly rangeOverflow: boolean;\\n    readonly rangeUnderflow: boolean;\\n    readonly stepMismatch: boolean;\\n    readonly tooLong: boolean;\\n    readonly tooShort: boolean;\\n    readonly typeMismatch: boolean;\\n    readonly valid: boolean;\\n    readonly valueMissing: boolean;\\n}\\n\\ndeclare var ValidityState: {\\n    prototype: ValidityState;\\n    new(): ValidityState;\\n};\\n\\ninterface VideoPlaybackQuality {\\n    readonly corruptedVideoFrames: number;\\n    readonly creationTime: number;\\n    readonly droppedVideoFrames: number;\\n    readonly totalFrameDelay: number;\\n    readonly totalVideoFrames: number;\\n}\\n\\ndeclare var VideoPlaybackQuality: {\\n    prototype: VideoPlaybackQuality;\\n    new(): VideoPlaybackQuality;\\n};\\n\\ninterface VideoTrack {\\n    readonly id: string;\\n    kind: string;\\n    readonly label: string;\\n    language: string;\\n    selected: boolean;\\n    readonly sourceBuffer: SourceBuffer;\\n}\\n\\ndeclare var VideoTrack: {\\n    prototype: VideoTrack;\\n    new(): VideoTrack;\\n};\\n\\ninterface VideoTrackListEventMap {\\n    \\\"addtrack\\\": TrackEvent;\\n    \\\"change\\\": Event;\\n    \\\"removetrack\\\": TrackEvent;\\n}\\n\\ninterface VideoTrackList extends EventTarget {\\n    readonly length: number;\\n    onaddtrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;\\n    onchange: ((this: VideoTrackList, ev: Event) => any) | null;\\n    onremovetrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;\\n    readonly selectedIndex: number;\\n    getTrackById(id: string): VideoTrack | null;\\n    item(index: number): VideoTrack;\\n    addEventListener<K extends keyof VideoTrackListEventMap>(type: K, listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof VideoTrackListEventMap>(type: K, listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [index: number]: VideoTrack;\\n}\\n\\ndeclare var VideoTrackList: {\\n    prototype: VideoTrackList;\\n    new(): VideoTrackList;\\n};\\n\\ninterface WEBGL_color_buffer_float {\\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: number;\\n    readonly RGB32F_EXT: number;\\n    readonly RGBA32F_EXT: number;\\n    readonly UNSIGNED_NORMALIZED_EXT: number;\\n}\\n\\ninterface WEBGL_compressed_texture_astc {\\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: number;\\n    getSupportedProfiles(): string[];\\n}\\n\\ninterface WEBGL_compressed_texture_s3tc {\\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: number;\\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: number;\\n}\\n\\ndeclare var WEBGL_compressed_texture_s3tc: {\\n    prototype: WEBGL_compressed_texture_s3tc;\\n    new(): WEBGL_compressed_texture_s3tc;\\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: number;\\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: number;\\n};\\n\\ninterface WEBGL_compressed_texture_s3tc_srgb {\\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: number;\\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: number;\\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: number;\\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: number;\\n}\\n\\ninterface WEBGL_debug_renderer_info {\\n    readonly UNMASKED_RENDERER_WEBGL: number;\\n    readonly UNMASKED_VENDOR_WEBGL: number;\\n}\\n\\ndeclare var WEBGL_debug_renderer_info: {\\n    prototype: WEBGL_debug_renderer_info;\\n    new(): WEBGL_debug_renderer_info;\\n    readonly UNMASKED_RENDERER_WEBGL: number;\\n    readonly UNMASKED_VENDOR_WEBGL: number;\\n};\\n\\ninterface WEBGL_debug_shaders {\\n    getTranslatedShaderSource(shader: WebGLShader): string;\\n}\\n\\ninterface WEBGL_depth_texture {\\n    readonly UNSIGNED_INT_24_8_WEBGL: number;\\n}\\n\\ndeclare var WEBGL_depth_texture: {\\n    prototype: WEBGL_depth_texture;\\n    new(): WEBGL_depth_texture;\\n    readonly UNSIGNED_INT_24_8_WEBGL: number;\\n};\\n\\ninterface WEBGL_draw_buffers {\\n    readonly COLOR_ATTACHMENT0_WEBGL: number;\\n    readonly COLOR_ATTACHMENT10_WEBGL: number;\\n    readonly COLOR_ATTACHMENT11_WEBGL: number;\\n    readonly COLOR_ATTACHMENT12_WEBGL: number;\\n    readonly COLOR_ATTACHMENT13_WEBGL: number;\\n    readonly COLOR_ATTACHMENT14_WEBGL: number;\\n    readonly COLOR_ATTACHMENT15_WEBGL: number;\\n    readonly COLOR_ATTACHMENT1_WEBGL: number;\\n    readonly COLOR_ATTACHMENT2_WEBGL: number;\\n    readonly COLOR_ATTACHMENT3_WEBGL: number;\\n    readonly COLOR_ATTACHMENT4_WEBGL: number;\\n    readonly COLOR_ATTACHMENT5_WEBGL: number;\\n    readonly COLOR_ATTACHMENT6_WEBGL: number;\\n    readonly COLOR_ATTACHMENT7_WEBGL: number;\\n    readonly COLOR_ATTACHMENT8_WEBGL: number;\\n    readonly COLOR_ATTACHMENT9_WEBGL: number;\\n    readonly DRAW_BUFFER0_WEBGL: number;\\n    readonly DRAW_BUFFER10_WEBGL: number;\\n    readonly DRAW_BUFFER11_WEBGL: number;\\n    readonly DRAW_BUFFER12_WEBGL: number;\\n    readonly DRAW_BUFFER13_WEBGL: number;\\n    readonly DRAW_BUFFER14_WEBGL: number;\\n    readonly DRAW_BUFFER15_WEBGL: number;\\n    readonly DRAW_BUFFER1_WEBGL: number;\\n    readonly DRAW_BUFFER2_WEBGL: number;\\n    readonly DRAW_BUFFER3_WEBGL: number;\\n    readonly DRAW_BUFFER4_WEBGL: number;\\n    readonly DRAW_BUFFER5_WEBGL: number;\\n    readonly DRAW_BUFFER6_WEBGL: number;\\n    readonly DRAW_BUFFER7_WEBGL: number;\\n    readonly DRAW_BUFFER8_WEBGL: number;\\n    readonly DRAW_BUFFER9_WEBGL: number;\\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: number;\\n    readonly MAX_DRAW_BUFFERS_WEBGL: number;\\n    drawBuffersWEBGL(buffers: number[]): void;\\n}\\n\\ninterface WEBGL_lose_context {\\n    loseContext(): void;\\n    restoreContext(): void;\\n}\\n\\ninterface WaveShaperNode extends AudioNode {\\n    curve: Float32Array | null;\\n    oversample: OverSampleType;\\n}\\n\\ndeclare var WaveShaperNode: {\\n    prototype: WaveShaperNode;\\n    new(): WaveShaperNode;\\n};\\n\\ninterface WebAuthentication {\\n    getAssertion(assertionChallenge: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: AssertionOptions): Promise<WebAuthnAssertion>;\\n    makeCredential(accountInformation: Account, cryptoParameters: ScopedCredentialParameters[], attestationChallenge: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: ScopedCredentialOptions): Promise<ScopedCredentialInfo>;\\n}\\n\\ndeclare var WebAuthentication: {\\n    prototype: WebAuthentication;\\n    new(): WebAuthentication;\\n};\\n\\ninterface WebAuthnAssertion {\\n    readonly authenticatorData: ArrayBuffer;\\n    readonly clientData: ArrayBuffer;\\n    readonly credential: ScopedCredential;\\n    readonly signature: ArrayBuffer;\\n}\\n\\ndeclare var WebAuthnAssertion: {\\n    prototype: WebAuthnAssertion;\\n    new(): WebAuthnAssertion;\\n};\\n\\ninterface WebGLActiveInfo {\\n    readonly name: string;\\n    readonly size: number;\\n    readonly type: number;\\n}\\n\\ndeclare var WebGLActiveInfo: {\\n    prototype: WebGLActiveInfo;\\n    new(): WebGLActiveInfo;\\n};\\n\\ninterface WebGLBuffer extends WebGLObject {\\n}\\n\\ndeclare var WebGLBuffer: {\\n    prototype: WebGLBuffer;\\n    new(): WebGLBuffer;\\n};\\n\\ninterface WebGLContextEvent extends Event {\\n    readonly statusMessage: string;\\n}\\n\\ndeclare var WebGLContextEvent: {\\n    prototype: WebGLContextEvent;\\n    new(typeArg: string, eventInitDict?: WebGLContextEventInit): WebGLContextEvent;\\n};\\n\\ninterface WebGLFramebuffer extends WebGLObject {\\n}\\n\\ndeclare var WebGLFramebuffer: {\\n    prototype: WebGLFramebuffer;\\n    new(): WebGLFramebuffer;\\n};\\n\\ninterface WebGLObject {\\n}\\n\\ndeclare var WebGLObject: {\\n    prototype: WebGLObject;\\n    new(): WebGLObject;\\n};\\n\\ninterface WebGLProgram extends WebGLObject {\\n}\\n\\ndeclare var WebGLProgram: {\\n    prototype: WebGLProgram;\\n    new(): WebGLProgram;\\n};\\n\\ninterface WebGLRenderbuffer extends WebGLObject {\\n}\\n\\ndeclare var WebGLRenderbuffer: {\\n    prototype: WebGLRenderbuffer;\\n    new(): WebGLRenderbuffer;\\n};\\n\\ninterface WebGLRenderingContext {\\n    readonly canvas: HTMLCanvasElement;\\n    readonly drawingBufferHeight: number;\\n    readonly drawingBufferWidth: number;\\n    activeTexture(texture: number): void;\\n    attachShader(program: WebGLProgram | null, shader: WebGLShader | null): void;\\n    bindAttribLocation(program: WebGLProgram | null, index: number, name: string): void;\\n    bindBuffer(target: number, buffer: WebGLBuffer | null): void;\\n    bindFramebuffer(target: number, framebuffer: WebGLFramebuffer | null): void;\\n    bindRenderbuffer(target: number, renderbuffer: WebGLRenderbuffer | null): void;\\n    bindTexture(target: number, texture: WebGLTexture | null): void;\\n    blendColor(red: number, green: number, blue: number, alpha: number): void;\\n    blendEquation(mode: number): void;\\n    blendEquationSeparate(modeRGB: number, modeAlpha: number): void;\\n    blendFunc(sfactor: number, dfactor: number): void;\\n    blendFuncSeparate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void;\\n    bufferData(target: number, size: number | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, usage: number): void;\\n    bufferSubData(target: number, offset: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): void;\\n    checkFramebufferStatus(target: number): number;\\n    clear(mask: number): void;\\n    clearColor(red: number, green: number, blue: number, alpha: number): void;\\n    clearDepth(depth: number): void;\\n    clearStencil(s: number): void;\\n    colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean): void;\\n    compileShader(shader: WebGLShader | null): void;\\n    compressedTexImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    compressedTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    copyTexImage2D(target: number, level: number, internalformat: number, x: number, y: number, width: number, height: number, border: number): void;\\n    copyTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number): void;\\n    createBuffer(): WebGLBuffer | null;\\n    createFramebuffer(): WebGLFramebuffer | null;\\n    createProgram(): WebGLProgram | null;\\n    createRenderbuffer(): WebGLRenderbuffer | null;\\n    createShader(type: number): WebGLShader | null;\\n    createTexture(): WebGLTexture | null;\\n    cullFace(mode: number): void;\\n    deleteBuffer(buffer: WebGLBuffer | null): void;\\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\\n    deleteProgram(program: WebGLProgram | null): void;\\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\\n    deleteShader(shader: WebGLShader | null): void;\\n    deleteTexture(texture: WebGLTexture | null): void;\\n    depthFunc(func: number): void;\\n    depthMask(flag: boolean): void;\\n    depthRange(zNear: number, zFar: number): void;\\n    detachShader(program: WebGLProgram | null, shader: WebGLShader | null): void;\\n    disable(cap: number): void;\\n    disableVertexAttribArray(index: number): void;\\n    drawArrays(mode: number, first: number, count: number): void;\\n    drawElements(mode: number, count: number, type: number, offset: number): void;\\n    enable(cap: number): void;\\n    enableVertexAttribArray(index: number): void;\\n    finish(): void;\\n    flush(): void;\\n    framebufferRenderbuffer(target: number, attachment: number, renderbuffertarget: number, renderbuffer: WebGLRenderbuffer | null): void;\\n    framebufferTexture2D(target: number, attachment: number, textarget: number, texture: WebGLTexture | null, level: number): void;\\n    frontFace(mode: number): void;\\n    generateMipmap(target: number): void;\\n    getActiveAttrib(program: WebGLProgram | null, index: number): WebGLActiveInfo | null;\\n    getActiveUniform(program: WebGLProgram | null, index: number): WebGLActiveInfo | null;\\n    getAttachedShaders(program: WebGLProgram | null): WebGLShader[] | null;\\n    getAttribLocation(program: WebGLProgram | null, name: string): number;\\n    getBufferParameter(target: number, pname: number): any;\\n    getContextAttributes(): WebGLContextAttributes;\\n    getError(): number;\\n    getExtension(extensionName: \\\"EXT_blend_minmax\\\"): EXT_blend_minmax | null;\\n    getExtension(extensionName: \\\"EXT_texture_filter_anisotropic\\\"): EXT_texture_filter_anisotropic | null;\\n    getExtension(extensionName: \\\"EXT_frag_depth\\\"): EXT_frag_depth | null;\\n    getExtension(extensionName: \\\"EXT_shader_texture_lod\\\"): EXT_shader_texture_lod | null;\\n    getExtension(extensionName: \\\"EXT_sRGB\\\"): EXT_sRGB | null;\\n    getExtension(extensionName: \\\"OES_vertex_array_object\\\"): OES_vertex_array_object | null;\\n    getExtension(extensionName: \\\"WEBGL_color_buffer_float\\\"): WEBGL_color_buffer_float | null;\\n    getExtension(extensionName: \\\"WEBGL_compressed_texture_astc\\\"): WEBGL_compressed_texture_astc | null;\\n    getExtension(extensionName: \\\"WEBGL_compressed_texture_s3tc_srgb\\\"): WEBGL_compressed_texture_s3tc_srgb | null;\\n    getExtension(extensionName: \\\"WEBGL_debug_shaders\\\"): WEBGL_debug_shaders | null;\\n    getExtension(extensionName: \\\"WEBGL_draw_buffers\\\"): WEBGL_draw_buffers | null;\\n    getExtension(extensionName: \\\"WEBGL_lose_context\\\"): WEBGL_lose_context | null;\\n    getExtension(extensionName: \\\"WEBGL_depth_texture\\\"): WEBGL_depth_texture | null;\\n    getExtension(extensionName: \\\"WEBGL_debug_renderer_info\\\"): WEBGL_debug_renderer_info | null;\\n    getExtension(extensionName: \\\"WEBGL_compressed_texture_s3tc\\\"): WEBGL_compressed_texture_s3tc | null;\\n    getExtension(extensionName: \\\"OES_texture_half_float_linear\\\"): OES_texture_half_float_linear | null;\\n    getExtension(extensionName: \\\"OES_texture_half_float\\\"): OES_texture_half_float | null;\\n    getExtension(extensionName: \\\"OES_texture_float_linear\\\"): OES_texture_float_linear | null;\\n    getExtension(extensionName: \\\"OES_texture_float\\\"): OES_texture_float | null;\\n    getExtension(extensionName: \\\"OES_standard_derivatives\\\"): OES_standard_derivatives | null;\\n    getExtension(extensionName: \\\"OES_element_index_uint\\\"): OES_element_index_uint | null;\\n    getExtension(extensionName: \\\"ANGLE_instanced_arrays\\\"): ANGLE_instanced_arrays | null;\\n    getExtension(extensionName: string): any;\\n    getFramebufferAttachmentParameter(target: number, attachment: number, pname: number): any;\\n    getParameter(pname: number): any;\\n    getProgramInfoLog(program: WebGLProgram | null): string | null;\\n    getProgramParameter(program: WebGLProgram | null, pname: number): any;\\n    getRenderbufferParameter(target: number, pname: number): any;\\n    getShaderInfoLog(shader: WebGLShader | null): string | null;\\n    getShaderParameter(shader: WebGLShader | null, pname: number): any;\\n    getShaderPrecisionFormat(shadertype: number, precisiontype: number): WebGLShaderPrecisionFormat | null;\\n    getShaderSource(shader: WebGLShader | null): string | null;\\n    getSupportedExtensions(): string[] | null;\\n    getTexParameter(target: number, pname: number): any;\\n    getUniform(program: WebGLProgram | null, location: WebGLUniformLocation | null): any;\\n    getUniformLocation(program: WebGLProgram | null, name: string): WebGLUniformLocation | null;\\n    getVertexAttrib(index: number, pname: number): any;\\n    getVertexAttribOffset(index: number, pname: number): number;\\n    hint(target: number, mode: number): void;\\n    isBuffer(buffer: WebGLBuffer | null): boolean;\\n    isContextLost(): boolean;\\n    isEnabled(cap: number): boolean;\\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): boolean;\\n    isProgram(program: WebGLProgram | null): boolean;\\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): boolean;\\n    isShader(shader: WebGLShader | null): boolean;\\n    isTexture(texture: WebGLTexture | null): boolean;\\n    lineWidth(width: number): void;\\n    linkProgram(program: WebGLProgram | null): void;\\n    pixelStorei(pname: number, param: number | boolean): void;\\n    polygonOffset(factor: number, units: number): void;\\n    readPixels(x: number, y: number, width: number, height: number, format: number, type: number, pixels: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    renderbufferStorage(target: number, internalformat: number, width: number, height: number): void;\\n    sampleCoverage(value: number, invert: boolean): void;\\n    scissor(x: number, y: number, width: number, height: number): void;\\n    shaderSource(shader: WebGLShader | null, source: string): void;\\n    stencilFunc(func: number, ref: number, mask: number): void;\\n    stencilFuncSeparate(face: number, func: number, ref: number, mask: number): void;\\n    stencilMask(mask: number): void;\\n    stencilMaskSeparate(face: number, mask: number): void;\\n    stencilOp(fail: number, zfail: number, zpass: number): void;\\n    stencilOpSeparate(face: number, fail: number, zfail: number, zpass: number): void;\\n    texImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, format: number, type: number, pixels: ArrayBufferView | null): void;\\n    texImage2D(target: number, level: number, internalformat: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void;\\n    texParameterf(target: number, pname: number, param: number): void;\\n    texParameteri(target: number, pname: number, param: number): void;\\n    texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView | null): void;\\n    texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void;\\n    uniform1f(location: WebGLUniformLocation | null, x: number): void;\\n    uniform1fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform1i(location: WebGLUniformLocation | null, x: number): void;\\n    uniform1iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniform2f(location: WebGLUniformLocation | null, x: number, y: number): void;\\n    uniform2fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform2i(location: WebGLUniformLocation | null, x: number, y: number): void;\\n    uniform2iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniform3f(location: WebGLUniformLocation | null, x: number, y: number, z: number): void;\\n    uniform3fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform3i(location: WebGLUniformLocation | null, x: number, y: number, z: number): void;\\n    uniform3iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniform4f(location: WebGLUniformLocation | null, x: number, y: number, z: number, w: number): void;\\n    uniform4fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform4i(location: WebGLUniformLocation | null, x: number, y: number, z: number, w: number): void;\\n    uniform4iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void;\\n    uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void;\\n    uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void;\\n    useProgram(program: WebGLProgram | null): void;\\n    validateProgram(program: WebGLProgram | null): void;\\n    vertexAttrib1f(indx: number, x: number): void;\\n    vertexAttrib1fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttrib2f(indx: number, x: number, y: number): void;\\n    vertexAttrib2fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttrib3f(indx: number, x: number, y: number, z: number): void;\\n    vertexAttrib3fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttrib4f(indx: number, x: number, y: number, z: number, w: number): void;\\n    vertexAttrib4fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttribPointer(indx: number, size: number, type: number, normalized: boolean, stride: number, offset: number): void;\\n    viewport(x: number, y: number, width: number, height: number): void;\\n    readonly ACTIVE_ATTRIBUTES: number;\\n    readonly ACTIVE_TEXTURE: number;\\n    readonly ACTIVE_UNIFORMS: number;\\n    readonly ALIASED_LINE_WIDTH_RANGE: number;\\n    readonly ALIASED_POINT_SIZE_RANGE: number;\\n    readonly ALPHA: number;\\n    readonly ALPHA_BITS: number;\\n    readonly ALWAYS: number;\\n    readonly ARRAY_BUFFER: number;\\n    readonly ARRAY_BUFFER_BINDING: number;\\n    readonly ATTACHED_SHADERS: number;\\n    readonly BACK: number;\\n    readonly BLEND: number;\\n    readonly BLEND_COLOR: number;\\n    readonly BLEND_DST_ALPHA: number;\\n    readonly BLEND_DST_RGB: number;\\n    readonly BLEND_EQUATION: number;\\n    readonly BLEND_EQUATION_ALPHA: number;\\n    readonly BLEND_EQUATION_RGB: number;\\n    readonly BLEND_SRC_ALPHA: number;\\n    readonly BLEND_SRC_RGB: number;\\n    readonly BLUE_BITS: number;\\n    readonly BOOL: number;\\n    readonly BOOL_VEC2: number;\\n    readonly BOOL_VEC3: number;\\n    readonly BOOL_VEC4: number;\\n    readonly BROWSER_DEFAULT_WEBGL: number;\\n    readonly BUFFER_SIZE: number;\\n    readonly BUFFER_USAGE: number;\\n    readonly BYTE: number;\\n    readonly CCW: number;\\n    readonly CLAMP_TO_EDGE: number;\\n    readonly COLOR_ATTACHMENT0: number;\\n    readonly COLOR_BUFFER_BIT: number;\\n    readonly COLOR_CLEAR_VALUE: number;\\n    readonly COLOR_WRITEMASK: number;\\n    readonly COMPILE_STATUS: number;\\n    readonly COMPRESSED_TEXTURE_FORMATS: number;\\n    readonly CONSTANT_ALPHA: number;\\n    readonly CONSTANT_COLOR: number;\\n    readonly CONTEXT_LOST_WEBGL: number;\\n    readonly CULL_FACE: number;\\n    readonly CULL_FACE_MODE: number;\\n    readonly CURRENT_PROGRAM: number;\\n    readonly CURRENT_VERTEX_ATTRIB: number;\\n    readonly CW: number;\\n    readonly DECR: number;\\n    readonly DECR_WRAP: number;\\n    readonly DELETE_STATUS: number;\\n    readonly DEPTH_ATTACHMENT: number;\\n    readonly DEPTH_BITS: number;\\n    readonly DEPTH_BUFFER_BIT: number;\\n    readonly DEPTH_CLEAR_VALUE: number;\\n    readonly DEPTH_COMPONENT: number;\\n    readonly DEPTH_COMPONENT16: number;\\n    readonly DEPTH_FUNC: number;\\n    readonly DEPTH_RANGE: number;\\n    readonly DEPTH_STENCIL: number;\\n    readonly DEPTH_STENCIL_ATTACHMENT: number;\\n    readonly DEPTH_TEST: number;\\n    readonly DEPTH_WRITEMASK: number;\\n    readonly DITHER: number;\\n    readonly DONT_CARE: number;\\n    readonly DST_ALPHA: number;\\n    readonly DST_COLOR: number;\\n    readonly DYNAMIC_DRAW: number;\\n    readonly ELEMENT_ARRAY_BUFFER: number;\\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: number;\\n    readonly EQUAL: number;\\n    readonly FASTEST: number;\\n    readonly FLOAT: number;\\n    readonly FLOAT_MAT2: number;\\n    readonly FLOAT_MAT3: number;\\n    readonly FLOAT_MAT4: number;\\n    readonly FLOAT_VEC2: number;\\n    readonly FLOAT_VEC3: number;\\n    readonly FLOAT_VEC4: number;\\n    readonly FRAGMENT_SHADER: number;\\n    readonly FRAMEBUFFER: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;\\n    readonly FRAMEBUFFER_BINDING: number;\\n    readonly FRAMEBUFFER_COMPLETE: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_UNSUPPORTED: number;\\n    readonly FRONT: number;\\n    readonly FRONT_AND_BACK: number;\\n    readonly FRONT_FACE: number;\\n    readonly FUNC_ADD: number;\\n    readonly FUNC_REVERSE_SUBTRACT: number;\\n    readonly FUNC_SUBTRACT: number;\\n    readonly GENERATE_MIPMAP_HINT: number;\\n    readonly GEQUAL: number;\\n    readonly GREATER: number;\\n    readonly GREEN_BITS: number;\\n    readonly HIGH_FLOAT: number;\\n    readonly HIGH_INT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: number;\\n    readonly INCR: number;\\n    readonly INCR_WRAP: number;\\n    readonly INT: number;\\n    readonly INT_VEC2: number;\\n    readonly INT_VEC3: number;\\n    readonly INT_VEC4: number;\\n    readonly INVALID_ENUM: number;\\n    readonly INVALID_FRAMEBUFFER_OPERATION: number;\\n    readonly INVALID_OPERATION: number;\\n    readonly INVALID_VALUE: number;\\n    readonly INVERT: number;\\n    readonly KEEP: number;\\n    readonly LEQUAL: number;\\n    readonly LESS: number;\\n    readonly LINEAR: number;\\n    readonly LINEAR_MIPMAP_LINEAR: number;\\n    readonly LINEAR_MIPMAP_NEAREST: number;\\n    readonly LINES: number;\\n    readonly LINE_LOOP: number;\\n    readonly LINE_STRIP: number;\\n    readonly LINE_WIDTH: number;\\n    readonly LINK_STATUS: number;\\n    readonly LOW_FLOAT: number;\\n    readonly LOW_INT: number;\\n    readonly LUMINANCE: number;\\n    readonly LUMINANCE_ALPHA: number;\\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: number;\\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: number;\\n    readonly MAX_RENDERBUFFER_SIZE: number;\\n    readonly MAX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_TEXTURE_SIZE: number;\\n    readonly MAX_VARYING_VECTORS: number;\\n    readonly MAX_VERTEX_ATTRIBS: number;\\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_VERTEX_UNIFORM_VECTORS: number;\\n    readonly MAX_VIEWPORT_DIMS: number;\\n    readonly MEDIUM_FLOAT: number;\\n    readonly MEDIUM_INT: number;\\n    readonly MIRRORED_REPEAT: number;\\n    readonly NEAREST: number;\\n    readonly NEAREST_MIPMAP_LINEAR: number;\\n    readonly NEAREST_MIPMAP_NEAREST: number;\\n    readonly NEVER: number;\\n    readonly NICEST: number;\\n    readonly NONE: number;\\n    readonly NOTEQUAL: number;\\n    readonly NO_ERROR: number;\\n    readonly ONE: number;\\n    readonly ONE_MINUS_CONSTANT_ALPHA: number;\\n    readonly ONE_MINUS_CONSTANT_COLOR: number;\\n    readonly ONE_MINUS_DST_ALPHA: number;\\n    readonly ONE_MINUS_DST_COLOR: number;\\n    readonly ONE_MINUS_SRC_ALPHA: number;\\n    readonly ONE_MINUS_SRC_COLOR: number;\\n    readonly OUT_OF_MEMORY: number;\\n    readonly PACK_ALIGNMENT: number;\\n    readonly POINTS: number;\\n    readonly POLYGON_OFFSET_FACTOR: number;\\n    readonly POLYGON_OFFSET_FILL: number;\\n    readonly POLYGON_OFFSET_UNITS: number;\\n    readonly RED_BITS: number;\\n    readonly RENDERBUFFER: number;\\n    readonly RENDERBUFFER_ALPHA_SIZE: number;\\n    readonly RENDERBUFFER_BINDING: number;\\n    readonly RENDERBUFFER_BLUE_SIZE: number;\\n    readonly RENDERBUFFER_DEPTH_SIZE: number;\\n    readonly RENDERBUFFER_GREEN_SIZE: number;\\n    readonly RENDERBUFFER_HEIGHT: number;\\n    readonly RENDERBUFFER_INTERNAL_FORMAT: number;\\n    readonly RENDERBUFFER_RED_SIZE: number;\\n    readonly RENDERBUFFER_STENCIL_SIZE: number;\\n    readonly RENDERBUFFER_WIDTH: number;\\n    readonly RENDERER: number;\\n    readonly REPEAT: number;\\n    readonly REPLACE: number;\\n    readonly RGB: number;\\n    readonly RGB565: number;\\n    readonly RGB5_A1: number;\\n    readonly RGBA: number;\\n    readonly RGBA4: number;\\n    readonly SAMPLER_2D: number;\\n    readonly SAMPLER_CUBE: number;\\n    readonly SAMPLES: number;\\n    readonly SAMPLE_ALPHA_TO_COVERAGE: number;\\n    readonly SAMPLE_BUFFERS: number;\\n    readonly SAMPLE_COVERAGE: number;\\n    readonly SAMPLE_COVERAGE_INVERT: number;\\n    readonly SAMPLE_COVERAGE_VALUE: number;\\n    readonly SCISSOR_BOX: number;\\n    readonly SCISSOR_TEST: number;\\n    readonly SHADER_TYPE: number;\\n    readonly SHADING_LANGUAGE_VERSION: number;\\n    readonly SHORT: number;\\n    readonly SRC_ALPHA: number;\\n    readonly SRC_ALPHA_SATURATE: number;\\n    readonly SRC_COLOR: number;\\n    readonly STATIC_DRAW: number;\\n    readonly STENCIL_ATTACHMENT: number;\\n    readonly STENCIL_BACK_FAIL: number;\\n    readonly STENCIL_BACK_FUNC: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_BACK_REF: number;\\n    readonly STENCIL_BACK_VALUE_MASK: number;\\n    readonly STENCIL_BACK_WRITEMASK: number;\\n    readonly STENCIL_BITS: number;\\n    readonly STENCIL_BUFFER_BIT: number;\\n    readonly STENCIL_CLEAR_VALUE: number;\\n    readonly STENCIL_FAIL: number;\\n    readonly STENCIL_FUNC: number;\\n    readonly STENCIL_INDEX: number;\\n    readonly STENCIL_INDEX8: number;\\n    readonly STENCIL_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_REF: number;\\n    readonly STENCIL_TEST: number;\\n    readonly STENCIL_VALUE_MASK: number;\\n    readonly STENCIL_WRITEMASK: number;\\n    readonly STREAM_DRAW: number;\\n    readonly SUBPIXEL_BITS: number;\\n    readonly TEXTURE: number;\\n    readonly TEXTURE0: number;\\n    readonly TEXTURE1: number;\\n    readonly TEXTURE10: number;\\n    readonly TEXTURE11: number;\\n    readonly TEXTURE12: number;\\n    readonly TEXTURE13: number;\\n    readonly TEXTURE14: number;\\n    readonly TEXTURE15: number;\\n    readonly TEXTURE16: number;\\n    readonly TEXTURE17: number;\\n    readonly TEXTURE18: number;\\n    readonly TEXTURE19: number;\\n    readonly TEXTURE2: number;\\n    readonly TEXTURE20: number;\\n    readonly TEXTURE21: number;\\n    readonly TEXTURE22: number;\\n    readonly TEXTURE23: number;\\n    readonly TEXTURE24: number;\\n    readonly TEXTURE25: number;\\n    readonly TEXTURE26: number;\\n    readonly TEXTURE27: number;\\n    readonly TEXTURE28: number;\\n    readonly TEXTURE29: number;\\n    readonly TEXTURE3: number;\\n    readonly TEXTURE30: number;\\n    readonly TEXTURE31: number;\\n    readonly TEXTURE4: number;\\n    readonly TEXTURE5: number;\\n    readonly TEXTURE6: number;\\n    readonly TEXTURE7: number;\\n    readonly TEXTURE8: number;\\n    readonly TEXTURE9: number;\\n    readonly TEXTURE_2D: number;\\n    readonly TEXTURE_BINDING_2D: number;\\n    readonly TEXTURE_BINDING_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: number;\\n    readonly TEXTURE_MAG_FILTER: number;\\n    readonly TEXTURE_MIN_FILTER: number;\\n    readonly TEXTURE_WRAP_S: number;\\n    readonly TEXTURE_WRAP_T: number;\\n    readonly TRIANGLES: number;\\n    readonly TRIANGLE_FAN: number;\\n    readonly TRIANGLE_STRIP: number;\\n    readonly UNPACK_ALIGNMENT: number;\\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: number;\\n    readonly UNPACK_FLIP_Y_WEBGL: number;\\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;\\n    readonly UNSIGNED_BYTE: number;\\n    readonly UNSIGNED_INT: number;\\n    readonly UNSIGNED_SHORT: number;\\n    readonly UNSIGNED_SHORT_4_4_4_4: number;\\n    readonly UNSIGNED_SHORT_5_5_5_1: number;\\n    readonly UNSIGNED_SHORT_5_6_5: number;\\n    readonly VALIDATE_STATUS: number;\\n    readonly VENDOR: number;\\n    readonly VERSION: number;\\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;\\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: number;\\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: number;\\n    readonly VERTEX_SHADER: number;\\n    readonly VIEWPORT: number;\\n    readonly ZERO: number;\\n}\\n\\ndeclare var WebGLRenderingContext: {\\n    prototype: WebGLRenderingContext;\\n    new(): WebGLRenderingContext;\\n    readonly ACTIVE_ATTRIBUTES: number;\\n    readonly ACTIVE_TEXTURE: number;\\n    readonly ACTIVE_UNIFORMS: number;\\n    readonly ALIASED_LINE_WIDTH_RANGE: number;\\n    readonly ALIASED_POINT_SIZE_RANGE: number;\\n    readonly ALPHA: number;\\n    readonly ALPHA_BITS: number;\\n    readonly ALWAYS: number;\\n    readonly ARRAY_BUFFER: number;\\n    readonly ARRAY_BUFFER_BINDING: number;\\n    readonly ATTACHED_SHADERS: number;\\n    readonly BACK: number;\\n    readonly BLEND: number;\\n    readonly BLEND_COLOR: number;\\n    readonly BLEND_DST_ALPHA: number;\\n    readonly BLEND_DST_RGB: number;\\n    readonly BLEND_EQUATION: number;\\n    readonly BLEND_EQUATION_ALPHA: number;\\n    readonly BLEND_EQUATION_RGB: number;\\n    readonly BLEND_SRC_ALPHA: number;\\n    readonly BLEND_SRC_RGB: number;\\n    readonly BLUE_BITS: number;\\n    readonly BOOL: number;\\n    readonly BOOL_VEC2: number;\\n    readonly BOOL_VEC3: number;\\n    readonly BOOL_VEC4: number;\\n    readonly BROWSER_DEFAULT_WEBGL: number;\\n    readonly BUFFER_SIZE: number;\\n    readonly BUFFER_USAGE: number;\\n    readonly BYTE: number;\\n    readonly CCW: number;\\n    readonly CLAMP_TO_EDGE: number;\\n    readonly COLOR_ATTACHMENT0: number;\\n    readonly COLOR_BUFFER_BIT: number;\\n    readonly COLOR_CLEAR_VALUE: number;\\n    readonly COLOR_WRITEMASK: number;\\n    readonly COMPILE_STATUS: number;\\n    readonly COMPRESSED_TEXTURE_FORMATS: number;\\n    readonly CONSTANT_ALPHA: number;\\n    readonly CONSTANT_COLOR: number;\\n    readonly CONTEXT_LOST_WEBGL: number;\\n    readonly CULL_FACE: number;\\n    readonly CULL_FACE_MODE: number;\\n    readonly CURRENT_PROGRAM: number;\\n    readonly CURRENT_VERTEX_ATTRIB: number;\\n    readonly CW: number;\\n    readonly DECR: number;\\n    readonly DECR_WRAP: number;\\n    readonly DELETE_STATUS: number;\\n    readonly DEPTH_ATTACHMENT: number;\\n    readonly DEPTH_BITS: number;\\n    readonly DEPTH_BUFFER_BIT: number;\\n    readonly DEPTH_CLEAR_VALUE: number;\\n    readonly DEPTH_COMPONENT: number;\\n    readonly DEPTH_COMPONENT16: number;\\n    readonly DEPTH_FUNC: number;\\n    readonly DEPTH_RANGE: number;\\n    readonly DEPTH_STENCIL: number;\\n    readonly DEPTH_STENCIL_ATTACHMENT: number;\\n    readonly DEPTH_TEST: number;\\n    readonly DEPTH_WRITEMASK: number;\\n    readonly DITHER: number;\\n    readonly DONT_CARE: number;\\n    readonly DST_ALPHA: number;\\n    readonly DST_COLOR: number;\\n    readonly DYNAMIC_DRAW: number;\\n    readonly ELEMENT_ARRAY_BUFFER: number;\\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: number;\\n    readonly EQUAL: number;\\n    readonly FASTEST: number;\\n    readonly FLOAT: number;\\n    readonly FLOAT_MAT2: number;\\n    readonly FLOAT_MAT3: number;\\n    readonly FLOAT_MAT4: number;\\n    readonly FLOAT_VEC2: number;\\n    readonly FLOAT_VEC3: number;\\n    readonly FLOAT_VEC4: number;\\n    readonly FRAGMENT_SHADER: number;\\n    readonly FRAMEBUFFER: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;\\n    readonly FRAMEBUFFER_BINDING: number;\\n    readonly FRAMEBUFFER_COMPLETE: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_UNSUPPORTED: number;\\n    readonly FRONT: number;\\n    readonly FRONT_AND_BACK: number;\\n    readonly FRONT_FACE: number;\\n    readonly FUNC_ADD: number;\\n    readonly FUNC_REVERSE_SUBTRACT: number;\\n    readonly FUNC_SUBTRACT: number;\\n    readonly GENERATE_MIPMAP_HINT: number;\\n    readonly GEQUAL: number;\\n    readonly GREATER: number;\\n    readonly GREEN_BITS: number;\\n    readonly HIGH_FLOAT: number;\\n    readonly HIGH_INT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: number;\\n    readonly INCR: number;\\n    readonly INCR_WRAP: number;\\n    readonly INT: number;\\n    readonly INT_VEC2: number;\\n    readonly INT_VEC3: number;\\n    readonly INT_VEC4: number;\\n    readonly INVALID_ENUM: number;\\n    readonly INVALID_FRAMEBUFFER_OPERATION: number;\\n    readonly INVALID_OPERATION: number;\\n    readonly INVALID_VALUE: number;\\n    readonly INVERT: number;\\n    readonly KEEP: number;\\n    readonly LEQUAL: number;\\n    readonly LESS: number;\\n    readonly LINEAR: number;\\n    readonly LINEAR_MIPMAP_LINEAR: number;\\n    readonly LINEAR_MIPMAP_NEAREST: number;\\n    readonly LINES: number;\\n    readonly LINE_LOOP: number;\\n    readonly LINE_STRIP: number;\\n    readonly LINE_WIDTH: number;\\n    readonly LINK_STATUS: number;\\n    readonly LOW_FLOAT: number;\\n    readonly LOW_INT: number;\\n    readonly LUMINANCE: number;\\n    readonly LUMINANCE_ALPHA: number;\\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: number;\\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: number;\\n    readonly MAX_RENDERBUFFER_SIZE: number;\\n    readonly MAX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_TEXTURE_SIZE: number;\\n    readonly MAX_VARYING_VECTORS: number;\\n    readonly MAX_VERTEX_ATTRIBS: number;\\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_VERTEX_UNIFORM_VECTORS: number;\\n    readonly MAX_VIEWPORT_DIMS: number;\\n    readonly MEDIUM_FLOAT: number;\\n    readonly MEDIUM_INT: number;\\n    readonly MIRRORED_REPEAT: number;\\n    readonly NEAREST: number;\\n    readonly NEAREST_MIPMAP_LINEAR: number;\\n    readonly NEAREST_MIPMAP_NEAREST: number;\\n    readonly NEVER: number;\\n    readonly NICEST: number;\\n    readonly NONE: number;\\n    readonly NOTEQUAL: number;\\n    readonly NO_ERROR: number;\\n    readonly ONE: number;\\n    readonly ONE_MINUS_CONSTANT_ALPHA: number;\\n    readonly ONE_MINUS_CONSTANT_COLOR: number;\\n    readonly ONE_MINUS_DST_ALPHA: number;\\n    readonly ONE_MINUS_DST_COLOR: number;\\n    readonly ONE_MINUS_SRC_ALPHA: number;\\n    readonly ONE_MINUS_SRC_COLOR: number;\\n    readonly OUT_OF_MEMORY: number;\\n    readonly PACK_ALIGNMENT: number;\\n    readonly POINTS: number;\\n    readonly POLYGON_OFFSET_FACTOR: number;\\n    readonly POLYGON_OFFSET_FILL: number;\\n    readonly POLYGON_OFFSET_UNITS: number;\\n    readonly RED_BITS: number;\\n    readonly RENDERBUFFER: number;\\n    readonly RENDERBUFFER_ALPHA_SIZE: number;\\n    readonly RENDERBUFFER_BINDING: number;\\n    readonly RENDERBUFFER_BLUE_SIZE: number;\\n    readonly RENDERBUFFER_DEPTH_SIZE: number;\\n    readonly RENDERBUFFER_GREEN_SIZE: number;\\n    readonly RENDERBUFFER_HEIGHT: number;\\n    readonly RENDERBUFFER_INTERNAL_FORMAT: number;\\n    readonly RENDERBUFFER_RED_SIZE: number;\\n    readonly RENDERBUFFER_STENCIL_SIZE: number;\\n    readonly RENDERBUFFER_WIDTH: number;\\n    readonly RENDERER: number;\\n    readonly REPEAT: number;\\n    readonly REPLACE: number;\\n    readonly RGB: number;\\n    readonly RGB565: number;\\n    readonly RGB5_A1: number;\\n    readonly RGBA: number;\\n    readonly RGBA4: number;\\n    readonly SAMPLER_2D: number;\\n    readonly SAMPLER_CUBE: number;\\n    readonly SAMPLES: number;\\n    readonly SAMPLE_ALPHA_TO_COVERAGE: number;\\n    readonly SAMPLE_BUFFERS: number;\\n    readonly SAMPLE_COVERAGE: number;\\n    readonly SAMPLE_COVERAGE_INVERT: number;\\n    readonly SAMPLE_COVERAGE_VALUE: number;\\n    readonly SCISSOR_BOX: number;\\n    readonly SCISSOR_TEST: number;\\n    readonly SHADER_TYPE: number;\\n    readonly SHADING_LANGUAGE_VERSION: number;\\n    readonly SHORT: number;\\n    readonly SRC_ALPHA: number;\\n    readonly SRC_ALPHA_SATURATE: number;\\n    readonly SRC_COLOR: number;\\n    readonly STATIC_DRAW: number;\\n    readonly STENCIL_ATTACHMENT: number;\\n    readonly STENCIL_BACK_FAIL: number;\\n    readonly STENCIL_BACK_FUNC: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_BACK_REF: number;\\n    readonly STENCIL_BACK_VALUE_MASK: number;\\n    readonly STENCIL_BACK_WRITEMASK: number;\\n    readonly STENCIL_BITS: number;\\n    readonly STENCIL_BUFFER_BIT: number;\\n    readonly STENCIL_CLEAR_VALUE: number;\\n    readonly STENCIL_FAIL: number;\\n    readonly STENCIL_FUNC: number;\\n    readonly STENCIL_INDEX: number;\\n    readonly STENCIL_INDEX8: number;\\n    readonly STENCIL_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_REF: number;\\n    readonly STENCIL_TEST: number;\\n    readonly STENCIL_VALUE_MASK: number;\\n    readonly STENCIL_WRITEMASK: number;\\n    readonly STREAM_DRAW: number;\\n    readonly SUBPIXEL_BITS: number;\\n    readonly TEXTURE: number;\\n    readonly TEXTURE0: number;\\n    readonly TEXTURE1: number;\\n    readonly TEXTURE10: number;\\n    readonly TEXTURE11: number;\\n    readonly TEXTURE12: number;\\n    readonly TEXTURE13: number;\\n    readonly TEXTURE14: number;\\n    readonly TEXTURE15: number;\\n    readonly TEXTURE16: number;\\n    readonly TEXTURE17: number;\\n    readonly TEXTURE18: number;\\n    readonly TEXTURE19: number;\\n    readonly TEXTURE2: number;\\n    readonly TEXTURE20: number;\\n    readonly TEXTURE21: number;\\n    readonly TEXTURE22: number;\\n    readonly TEXTURE23: number;\\n    readonly TEXTURE24: number;\\n    readonly TEXTURE25: number;\\n    readonly TEXTURE26: number;\\n    readonly TEXTURE27: number;\\n    readonly TEXTURE28: number;\\n    readonly TEXTURE29: number;\\n    readonly TEXTURE3: number;\\n    readonly TEXTURE30: number;\\n    readonly TEXTURE31: number;\\n    readonly TEXTURE4: number;\\n    readonly TEXTURE5: number;\\n    readonly TEXTURE6: number;\\n    readonly TEXTURE7: number;\\n    readonly TEXTURE8: number;\\n    readonly TEXTURE9: number;\\n    readonly TEXTURE_2D: number;\\n    readonly TEXTURE_BINDING_2D: number;\\n    readonly TEXTURE_BINDING_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: number;\\n    readonly TEXTURE_MAG_FILTER: number;\\n    readonly TEXTURE_MIN_FILTER: number;\\n    readonly TEXTURE_WRAP_S: number;\\n    readonly TEXTURE_WRAP_T: number;\\n    readonly TRIANGLES: number;\\n    readonly TRIANGLE_FAN: number;\\n    readonly TRIANGLE_STRIP: number;\\n    readonly UNPACK_ALIGNMENT: number;\\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: number;\\n    readonly UNPACK_FLIP_Y_WEBGL: number;\\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;\\n    readonly UNSIGNED_BYTE: number;\\n    readonly UNSIGNED_INT: number;\\n    readonly UNSIGNED_SHORT: number;\\n    readonly UNSIGNED_SHORT_4_4_4_4: number;\\n    readonly UNSIGNED_SHORT_5_5_5_1: number;\\n    readonly UNSIGNED_SHORT_5_6_5: number;\\n    readonly VALIDATE_STATUS: number;\\n    readonly VENDOR: number;\\n    readonly VERSION: number;\\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;\\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: number;\\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: number;\\n    readonly VERTEX_SHADER: number;\\n    readonly VIEWPORT: number;\\n    readonly ZERO: number;\\n};\\n\\ninterface WebGLShader extends WebGLObject {\\n}\\n\\ndeclare var WebGLShader: {\\n    prototype: WebGLShader;\\n    new(): WebGLShader;\\n};\\n\\ninterface WebGLShaderPrecisionFormat {\\n    readonly precision: number;\\n    readonly rangeMax: number;\\n    readonly rangeMin: number;\\n}\\n\\ndeclare var WebGLShaderPrecisionFormat: {\\n    prototype: WebGLShaderPrecisionFormat;\\n    new(): WebGLShaderPrecisionFormat;\\n};\\n\\ninterface WebGLTexture extends WebGLObject {\\n}\\n\\ndeclare var WebGLTexture: {\\n    prototype: WebGLTexture;\\n    new(): WebGLTexture;\\n};\\n\\ninterface WebGLUniformLocation {\\n}\\n\\ndeclare var WebGLUniformLocation: {\\n    prototype: WebGLUniformLocation;\\n    new(): WebGLUniformLocation;\\n};\\n\\ninterface WebGLVertexArrayObjectOES {\\n}\\n\\ninterface WebKitCSSMatrix {\\n    a: number;\\n    b: number;\\n    c: number;\\n    d: number;\\n    e: number;\\n    f: number;\\n    m11: number;\\n    m12: number;\\n    m13: number;\\n    m14: number;\\n    m21: number;\\n    m22: number;\\n    m23: number;\\n    m24: number;\\n    m31: number;\\n    m32: number;\\n    m33: number;\\n    m34: number;\\n    m41: number;\\n    m42: number;\\n    m43: number;\\n    m44: number;\\n    inverse(): WebKitCSSMatrix;\\n    multiply(secondMatrix: WebKitCSSMatrix): WebKitCSSMatrix;\\n    rotate(angleX: number, angleY?: number, angleZ?: number): WebKitCSSMatrix;\\n    rotateAxisAngle(x: number, y: number, z: number, angle: number): WebKitCSSMatrix;\\n    scale(scaleX: number, scaleY?: number, scaleZ?: number): WebKitCSSMatrix;\\n    setMatrixValue(value: string): void;\\n    skewX(angle: number): WebKitCSSMatrix;\\n    skewY(angle: number): WebKitCSSMatrix;\\n    toString(): string;\\n    translate(x: number, y: number, z?: number): WebKitCSSMatrix;\\n}\\n\\ndeclare var WebKitCSSMatrix: {\\n    prototype: WebKitCSSMatrix;\\n    new(text?: string): WebKitCSSMatrix;\\n};\\n\\ninterface WebKitDirectoryEntry extends WebKitEntry {\\n    createReader(): WebKitDirectoryReader;\\n}\\n\\ndeclare var WebKitDirectoryEntry: {\\n    prototype: WebKitDirectoryEntry;\\n    new(): WebKitDirectoryEntry;\\n};\\n\\ninterface WebKitDirectoryReader {\\n    readEntries(successCallback: WebKitEntriesCallback, errorCallback?: WebKitErrorCallback): void;\\n}\\n\\ndeclare var WebKitDirectoryReader: {\\n    prototype: WebKitDirectoryReader;\\n    new(): WebKitDirectoryReader;\\n};\\n\\ninterface WebKitEntry {\\n    readonly filesystem: WebKitFileSystem;\\n    readonly fullPath: string;\\n    readonly isDirectory: boolean;\\n    readonly isFile: boolean;\\n    readonly name: string;\\n}\\n\\ndeclare var WebKitEntry: {\\n    prototype: WebKitEntry;\\n    new(): WebKitEntry;\\n};\\n\\ninterface WebKitFileEntry extends WebKitEntry {\\n    file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\\n}\\n\\ndeclare var WebKitFileEntry: {\\n    prototype: WebKitFileEntry;\\n    new(): WebKitFileEntry;\\n};\\n\\ninterface WebKitFileSystem {\\n    readonly name: string;\\n    readonly root: WebKitDirectoryEntry;\\n}\\n\\ndeclare var WebKitFileSystem: {\\n    prototype: WebKitFileSystem;\\n    new(): WebKitFileSystem;\\n};\\n\\ninterface WebKitPoint {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var WebKitPoint: {\\n    prototype: WebKitPoint;\\n    new(x?: number, y?: number): WebKitPoint;\\n};\\n\\ninterface WebSocketEventMap {\\n    \\\"close\\\": CloseEvent;\\n    \\\"error\\\": Event;\\n    \\\"message\\\": MessageEvent;\\n    \\\"open\\\": Event;\\n}\\n\\ninterface WebSocket extends EventTarget {\\n    binaryType: BinaryType;\\n    readonly bufferedAmount: number;\\n    readonly extensions: string;\\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\\n    readonly protocol: string;\\n    readonly readyState: number;\\n    readonly url: string;\\n    close(code?: number, reason?: string): void;\\n    send(data: string | ArrayBuffer | Blob | ArrayBufferView): void;\\n    readonly CLOSED: number;\\n    readonly CLOSING: number;\\n    readonly CONNECTING: number;\\n    readonly OPEN: number;\\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var WebSocket: {\\n    prototype: WebSocket;\\n    new(url: string, protocols?: string | string[]): WebSocket;\\n    readonly CLOSED: number;\\n    readonly CLOSING: number;\\n    readonly CONNECTING: number;\\n    readonly OPEN: number;\\n};\\n\\ninterface WheelEvent extends MouseEvent {\\n    readonly deltaMode: number;\\n    readonly deltaX: number;\\n    readonly deltaY: number;\\n    readonly deltaZ: number;\\n    readonly wheelDelta: number;\\n    readonly wheelDeltaX: number;\\n    readonly wheelDeltaY: number;\\n    getCurrentPoint(element: Element): void;\\n    initWheelEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, deltaXArg: number, deltaYArg: number, deltaZArg: number, deltaMode: number): void;\\n    readonly DOM_DELTA_LINE: number;\\n    readonly DOM_DELTA_PAGE: number;\\n    readonly DOM_DELTA_PIXEL: number;\\n}\\n\\ndeclare var WheelEvent: {\\n    prototype: WheelEvent;\\n    new(typeArg: string, eventInitDict?: WheelEventInit): WheelEvent;\\n    readonly DOM_DELTA_LINE: number;\\n    readonly DOM_DELTA_PAGE: number;\\n    readonly DOM_DELTA_PIXEL: number;\\n};\\n\\ninterface WindowEventMap extends GlobalEventHandlersEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"beforeunload\\\": BeforeUnloadEvent;\\n    \\\"blur\\\": FocusEvent;\\n    \\\"canplay\\\": Event;\\n    \\\"canplaythrough\\\": Event;\\n    \\\"change\\\": Event;\\n    \\\"click\\\": MouseEvent;\\n    \\\"compassneedscalibration\\\": Event;\\n    \\\"contextmenu\\\": PointerEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"devicelight\\\": DeviceLightEvent;\\n    \\\"devicemotion\\\": DeviceMotionEvent;\\n    \\\"deviceorientation\\\": DeviceOrientationEvent;\\n    \\\"drag\\\": DragEvent;\\n    \\\"dragend\\\": DragEvent;\\n    \\\"dragenter\\\": DragEvent;\\n    \\\"dragleave\\\": DragEvent;\\n    \\\"dragover\\\": DragEvent;\\n    \\\"dragstart\\\": DragEvent;\\n    \\\"drop\\\": DragEvent;\\n    \\\"durationchange\\\": Event;\\n    \\\"emptied\\\": Event;\\n    \\\"ended\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"hashchange\\\": HashChangeEvent;\\n    \\\"input\\\": Event;\\n    \\\"invalid\\\": Event;\\n    \\\"keydown\\\": KeyboardEvent;\\n    \\\"keypress\\\": KeyboardEvent;\\n    \\\"keyup\\\": KeyboardEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadeddata\\\": Event;\\n    \\\"loadedmetadata\\\": Event;\\n    \\\"loadstart\\\": Event;\\n    \\\"message\\\": MessageEvent;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mouseenter\\\": MouseEvent;\\n    \\\"mouseleave\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n    \\\"mousewheel\\\": WheelEvent;\\n    \\\"MSGestureChange\\\": Event;\\n    \\\"MSGestureDoubleTap\\\": Event;\\n    \\\"MSGestureEnd\\\": Event;\\n    \\\"MSGestureHold\\\": Event;\\n    \\\"MSGestureStart\\\": Event;\\n    \\\"MSGestureTap\\\": Event;\\n    \\\"MSInertiaStart\\\": Event;\\n    \\\"MSPointerCancel\\\": Event;\\n    \\\"MSPointerDown\\\": Event;\\n    \\\"MSPointerEnter\\\": Event;\\n    \\\"MSPointerLeave\\\": Event;\\n    \\\"MSPointerMove\\\": Event;\\n    \\\"MSPointerOut\\\": Event;\\n    \\\"MSPointerOver\\\": Event;\\n    \\\"MSPointerUp\\\": Event;\\n    \\\"offline\\\": Event;\\n    \\\"online\\\": Event;\\n    \\\"orientationchange\\\": Event;\\n    \\\"pagehide\\\": PageTransitionEvent;\\n    \\\"pageshow\\\": PageTransitionEvent;\\n    \\\"pause\\\": Event;\\n    \\\"play\\\": Event;\\n    \\\"playing\\\": Event;\\n    \\\"popstate\\\": PopStateEvent;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"ratechange\\\": Event;\\n    \\\"readystatechange\\\": ProgressEvent;\\n    \\\"reset\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"seeked\\\": Event;\\n    \\\"seeking\\\": Event;\\n    \\\"select\\\": UIEvent;\\n    \\\"stalled\\\": Event;\\n    \\\"storage\\\": StorageEvent;\\n    \\\"submit\\\": Event;\\n    \\\"suspend\\\": Event;\\n    \\\"timeupdate\\\": Event;\\n    \\\"touchcancel\\\": Event;\\n    \\\"touchend\\\": Event;\\n    \\\"touchmove\\\": Event;\\n    \\\"touchstart\\\": Event;\\n    \\\"unload\\\": Event;\\n    \\\"volumechange\\\": Event;\\n    \\\"vrdisplayactivate\\\": Event;\\n    \\\"vrdisplayblur\\\": Event;\\n    \\\"vrdisplayconnect\\\": Event;\\n    \\\"vrdisplaydeactivate\\\": Event;\\n    \\\"vrdisplaydisconnect\\\": Event;\\n    \\\"vrdisplayfocus\\\": Event;\\n    \\\"vrdisplaypointerrestricted\\\": Event;\\n    \\\"vrdisplaypointerunrestricted\\\": Event;\\n    \\\"vrdisplaypresentchange\\\": Event;\\n    \\\"waiting\\\": Event;\\n}\\n\\ninterface Window extends EventTarget, WindowTimers, WindowSessionStorage, WindowLocalStorage, WindowConsole, GlobalEventHandlers, IDBEnvironment, WindowBase64, GlobalFetch {\\n    Blob: typeof Blob;\\n    URL: typeof URL;\\n    URLSearchParams: typeof URLSearchParams;\\n    readonly applicationCache: ApplicationCache;\\n    readonly caches: CacheStorage;\\n    readonly clientInformation: Navigator;\\n    readonly closed: boolean;\\n    readonly crypto: Crypto;\\n    customElements: CustomElementRegistry;\\n    defaultStatus: string;\\n    readonly devicePixelRatio: number;\\n    readonly doNotTrack: string;\\n    readonly document: Document;\\n    event: Event | undefined;\\n    readonly external: External;\\n    readonly frameElement: Element;\\n    readonly frames: Window;\\n    readonly history: History;\\n    readonly innerHeight: number;\\n    readonly innerWidth: number;\\n    readonly isSecureContext: boolean;\\n    readonly length: number;\\n    location: Location;\\n    readonly locationbar: BarProp;\\n    readonly menubar: BarProp;\\n    readonly msContentScript: ExtensionScriptApis;\\n    readonly msCredentials: MSCredentials;\\n    name: string;\\n    readonly navigator: Navigator;\\n    offscreenBuffering: string | boolean;\\n    onabort: ((this: Window, ev: UIEvent) => any) | null;\\n    onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;\\n    onblur: ((this: Window, ev: FocusEvent) => any) | null;\\n    oncanplay: ((this: Window, ev: Event) => any) | null;\\n    oncanplaythrough: ((this: Window, ev: Event) => any) | null;\\n    onchange: ((this: Window, ev: Event) => any) | null;\\n    onclick: ((this: Window, ev: MouseEvent) => any) | null;\\n    oncompassneedscalibration: ((this: Window, ev: Event) => any) | null;\\n    oncontextmenu: ((this: Window, ev: PointerEvent) => any) | null;\\n    ondblclick: ((this: Window, ev: MouseEvent) => any) | null;\\n    ondevicelight: ((this: Window, ev: DeviceLightEvent) => any) | null;\\n    ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\\n    ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\\n    ondrag: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragend: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragenter: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragleave: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragover: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragstart: ((this: Window, ev: DragEvent) => any) | null;\\n    ondrop: ((this: Window, ev: DragEvent) => any) | null;\\n    ondurationchange: ((this: Window, ev: Event) => any) | null;\\n    onemptied: ((this: Window, ev: Event) => any) | null;\\n    onended: ((this: Window, ev: Event) => any) | null;\\n    onerror: ErrorEventHandler;\\n    onfocus: ((this: Window, ev: FocusEvent) => any) | null;\\n    onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;\\n    oninput: ((this: Window, ev: Event) => any) | null;\\n    oninvalid: ((this: Window, ev: Event) => any) | null;\\n    onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;\\n    onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;\\n    onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;\\n    onload: ((this: Window, ev: Event) => any) | null;\\n    onloadeddata: ((this: Window, ev: Event) => any) | null;\\n    onloadedmetadata: ((this: Window, ev: Event) => any) | null;\\n    onloadstart: ((this: Window, ev: Event) => any) | null;\\n    onmessage: ((this: Window, ev: MessageEvent) => any) | null;\\n    onmousedown: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmousemove: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseout: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseover: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseup: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmousewheel: ((this: Window, ev: WheelEvent) => any) | null;\\n    onmsgesturechange: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturedoubletap: ((this: Window, ev: Event) => any) | null;\\n    onmsgestureend: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturehold: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturestart: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturetap: ((this: Window, ev: Event) => any) | null;\\n    onmsinertiastart: ((this: Window, ev: Event) => any) | null;\\n    onmspointercancel: ((this: Window, ev: Event) => any) | null;\\n    onmspointerdown: ((this: Window, ev: Event) => any) | null;\\n    onmspointerenter: ((this: Window, ev: Event) => any) | null;\\n    onmspointerleave: ((this: Window, ev: Event) => any) | null;\\n    onmspointermove: ((this: Window, ev: Event) => any) | null;\\n    onmspointerout: ((this: Window, ev: Event) => any) | null;\\n    onmspointerover: ((this: Window, ev: Event) => any) | null;\\n    onmspointerup: ((this: Window, ev: Event) => any) | null;\\n    onoffline: ((this: Window, ev: Event) => any) | null;\\n    ononline: ((this: Window, ev: Event) => any) | null;\\n    onorientationchange: ((this: Window, ev: Event) => any) | null;\\n    onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;\\n    onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;\\n    onpause: ((this: Window, ev: Event) => any) | null;\\n    onplay: ((this: Window, ev: Event) => any) | null;\\n    onplaying: ((this: Window, ev: Event) => any) | null;\\n    onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;\\n    onprogress: ((this: Window, ev: ProgressEvent) => any) | null;\\n    onratechange: ((this: Window, ev: Event) => any) | null;\\n    onreadystatechange: ((this: Window, ev: ProgressEvent) => any) | null;\\n    onreset: ((this: Window, ev: Event) => any) | null;\\n    onresize: ((this: Window, ev: UIEvent) => any) | null;\\n    onscroll: ((this: Window, ev: UIEvent) => any) | null;\\n    onseeked: ((this: Window, ev: Event) => any) | null;\\n    onseeking: ((this: Window, ev: Event) => any) | null;\\n    onselect: ((this: Window, ev: UIEvent) => any) | null;\\n    onstalled: ((this: Window, ev: Event) => any) | null;\\n    onstorage: ((this: Window, ev: StorageEvent) => any) | null;\\n    onsubmit: ((this: Window, ev: Event) => any) | null;\\n    onsuspend: ((this: Window, ev: Event) => any) | null;\\n    ontimeupdate: ((this: Window, ev: Event) => any) | null;\\n    ontouchcancel: (ev: TouchEvent) => any;\\n    ontouchend: (ev: TouchEvent) => any;\\n    ontouchmove: (ev: TouchEvent) => any;\\n    ontouchstart: (ev: TouchEvent) => any;\\n    onunload: ((this: Window, ev: Event) => any) | null;\\n    onvolumechange: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayactivate: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayblur: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayconnect: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaydeactivate: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaydisconnect: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayfocus: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaypointerrestricted: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaypointerunrestricted: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaypresentchange: ((this: Window, ev: Event) => any) | null;\\n    onwaiting: ((this: Window, ev: Event) => any) | null;\\n    readonly opener: any;\\n    readonly orientation: string | number;\\n    readonly outerHeight: number;\\n    readonly outerWidth: number;\\n    readonly pageXOffset: number;\\n    readonly pageYOffset: number;\\n    readonly parent: Window;\\n    readonly performance: Performance;\\n    readonly personalbar: BarProp;\\n    readonly screen: Screen;\\n    readonly screenLeft: number;\\n    readonly screenTop: number;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly scrollX: number;\\n    readonly scrollY: number;\\n    readonly scrollbars: BarProp;\\n    readonly self: Window;\\n    readonly speechSynthesis: SpeechSynthesis;\\n    status: string;\\n    readonly statusbar: BarProp;\\n    readonly styleMedia: StyleMedia;\\n    readonly toolbar: BarProp;\\n    readonly top: Window;\\n    readonly window: Window;\\n    alert(message?: any): void;\\n    blur(): void;\\n    cancelAnimationFrame(handle: number): void;\\n    captureEvents(): void;\\n    close(): void;\\n    confirm(message?: string): boolean;\\n    createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\n    createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\n    departFocus(navigationReason: NavigationReason, origin: FocusNavigationOrigin): void;\\n    focus(): void;\\n    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\\n    getMatchedCSSRules(elt: Element, pseudoElt?: string | null): CSSRuleList;\\n    getSelection(): Selection;\\n    matchMedia(mediaQuery: string): MediaQueryList;\\n    moveBy(x?: number, y?: number): void;\\n    moveTo(x?: number, y?: number): void;\\n    msWriteProfilerMark(profilerMarkName: string): void;\\n    open(url?: string, target?: string, features?: string, replace?: boolean): Window | null;\\n    postMessage(message: any, targetOrigin: string, transfer?: any[]): void;\\n    prompt(message?: string, _default?: string): string | null;\\n    releaseEvents(): void;\\n    requestAnimationFrame(callback: FrameRequestCallback): number;\\n    resizeBy(x?: number, y?: number): void;\\n    resizeTo(x?: number, y?: number): void;\\n    scroll(options?: ScrollToOptions): void;\\n    scroll(x?: number, y?: number): void;\\n    scrollBy(options?: ScrollToOptions): void;\\n    scrollBy(x?: number, y?: number): void;\\n    scrollTo(options?: ScrollToOptions): void;\\n    scrollTo(x?: number, y?: number): void;\\n    stop(): void;\\n    webkitCancelAnimationFrame(handle: number): void;\\n    webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;\\n    webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;\\n    webkitRequestAnimationFrame(callback: FrameRequestCallback): number;\\n    addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Window: {\\n    prototype: Window;\\n    new(): Window;\\n};\\n\\ninterface WindowBase64 {\\n    atob(encodedString: string): string;\\n    btoa(rawString: string): string;\\n}\\n\\ninterface WindowConsole {\\n    readonly console: Console;\\n}\\n\\ninterface WindowEventHandlersEventMap {\\n    \\\"afterprint\\\": Event;\\n    \\\"beforeprint\\\": Event;\\n    \\\"beforeunload\\\": BeforeUnloadEvent;\\n    \\\"hashchange\\\": HashChangeEvent;\\n    \\\"message\\\": MessageEvent;\\n    \\\"offline\\\": Event;\\n    \\\"online\\\": Event;\\n    \\\"pagehide\\\": PageTransitionEvent;\\n    \\\"pageshow\\\": PageTransitionEvent;\\n    \\\"popstate\\\": PopStateEvent;\\n    \\\"storage\\\": StorageEvent;\\n    \\\"unload\\\": Event;\\n}\\n\\ninterface WindowEventHandlers {\\n    onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    onbeforeunload: ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any) | null;\\n    onhashchange: ((this: WindowEventHandlers, ev: HashChangeEvent) => any) | null;\\n    onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;\\n    onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    onpagehide: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\\n    onpageshow: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\\n    onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;\\n    onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;\\n    onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    addEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface WindowLocalStorage {\\n    readonly localStorage: Storage;\\n}\\n\\ninterface WindowSessionStorage {\\n    readonly sessionStorage: Storage;\\n}\\n\\ninterface WindowTimers extends WindowTimersExtension {\\n    clearInterval(handle?: number): void;\\n    clearTimeout(handle?: number): void;\\n    setInterval(handler: (...args: any[]) => void, timeout: number): number;\\n    setInterval(handler: any, timeout?: any, ...args: any[]): number;\\n    setTimeout(handler: (...args: any[]) => void, timeout: number): number;\\n    setTimeout(handler: any, timeout?: any, ...args: any[]): number;\\n}\\n\\ninterface WindowTimersExtension {\\n    clearImmediate(handle: number): void;\\n    setImmediate(handler: (...args: any[]) => void): number;\\n    setImmediate(handler: any, ...args: any[]): number;\\n}\\n\\ninterface WorkerEventMap extends AbstractWorkerEventMap {\\n    \\\"message\\\": MessageEvent;\\n}\\n\\ninterface Worker extends EventTarget, AbstractWorker {\\n    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;\\n    /** @deprecated */\\n    postMessage(message: any, transfer?: any[]): void;\\n    terminate(): void;\\n    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Worker: {\\n    prototype: Worker;\\n    new(stringUrl: string): Worker;\\n};\\n\\ninterface WritableStream {\\n    readonly locked: boolean;\\n    abort(reason?: any): Promise<void>;\\n    getWriter(): WritableStreamDefaultWriter;\\n}\\n\\ndeclare var WritableStream: {\\n    prototype: WritableStream;\\n    new(underlyingSink?: UnderlyingSink, strategy?: QueuingStrategy): WritableStream;\\n};\\n\\ninterface WritableStreamDefaultController {\\n    error(error?: any): void;\\n}\\n\\ndeclare var WritableStreamDefaultController: {\\n    prototype: WritableStreamDefaultController;\\n    new(): WritableStreamDefaultController;\\n};\\n\\ninterface WritableStreamDefaultWriter {\\n    readonly closed: Promise<void>;\\n    readonly desiredSize: number;\\n    readonly ready: Promise<void>;\\n    abort(reason?: any): Promise<void>;\\n    close(): Promise<void>;\\n    releaseLock(): void;\\n    write(chunk?: any): Promise<any>;\\n}\\n\\ndeclare var WritableStreamDefaultWriter: {\\n    prototype: WritableStreamDefaultWriter;\\n    new(): WritableStreamDefaultWriter;\\n};\\n\\ninterface XMLDocument extends Document {\\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var XMLDocument: {\\n    prototype: XMLDocument;\\n    new(): XMLDocument;\\n};\\n\\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\\n    \\\"readystatechange\\\": Event;\\n}\\n\\ninterface XMLHttpRequest extends EventTarget, XMLHttpRequestEventTarget {\\n    msCaching: string;\\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    readonly readyState: number;\\n    readonly response: any;\\n    readonly responseText: string;\\n    responseType: XMLHttpRequestResponseType;\\n    readonly responseURL: string;\\n    readonly responseXML: Document | null;\\n    readonly status: number;\\n    readonly statusText: string;\\n    timeout: number;\\n    readonly upload: XMLHttpRequestUpload;\\n    withCredentials: boolean;\\n    abort(): void;\\n    getAllResponseHeaders(): string;\\n    getResponseHeader(header: string): string | null;\\n    msCachingEnabled(): boolean;\\n    open(method: string, url: string, async?: boolean, user?: string | null, password?: string | null): void;\\n    overrideMimeType(mime: string): void;\\n    send(data?: any): void;\\n    setRequestHeader(header: string, value: string): void;\\n    readonly DONE: number;\\n    readonly HEADERS_RECEIVED: number;\\n    readonly LOADING: number;\\n    readonly OPENED: number;\\n    readonly UNSENT: number;\\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var XMLHttpRequest: {\\n    prototype: XMLHttpRequest;\\n    new(): XMLHttpRequest;\\n    readonly DONE: number;\\n    readonly HEADERS_RECEIVED: number;\\n    readonly LOADING: number;\\n    readonly OPENED: number;\\n    readonly UNSENT: number;\\n};\\n\\ninterface XMLHttpRequestEventTargetEventMap {\\n    \\\"abort\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadend\\\": ProgressEvent;\\n    \\\"loadstart\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"timeout\\\": ProgressEvent;\\n}\\n\\ninterface XMLHttpRequestEventTarget {\\n    onabort: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    onerror: ((this: XMLHttpRequest, ev: ErrorEvent) => any) | null;\\n    onload: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\\n    onloadstart: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface XMLHttpRequestUpload extends EventTarget, XMLHttpRequestEventTarget {\\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var XMLHttpRequestUpload: {\\n    prototype: XMLHttpRequestUpload;\\n    new(): XMLHttpRequestUpload;\\n};\\n\\ninterface XMLSerializer {\\n    serializeToString(target: Node): string;\\n}\\n\\ndeclare var XMLSerializer: {\\n    prototype: XMLSerializer;\\n    new(): XMLSerializer;\\n};\\n\\ninterface XPathEvaluator {\\n    createExpression(expression: string, resolver: XPathNSResolver): XPathExpression;\\n    createNSResolver(nodeResolver?: Node): XPathNSResolver;\\n    evaluate(expression: string, contextNode: Node, resolver: XPathNSResolver | null, type: number, result: XPathResult | null): XPathResult;\\n}\\n\\ndeclare var XPathEvaluator: {\\n    prototype: XPathEvaluator;\\n    new(): XPathEvaluator;\\n};\\n\\ninterface XPathExpression {\\n    evaluate(contextNode: Node, type: number, result: XPathResult | null): XPathResult;\\n}\\n\\ndeclare var XPathExpression: {\\n    prototype: XPathExpression;\\n    new(): XPathExpression;\\n};\\n\\ninterface XPathNSResolver {\\n    lookupNamespaceURI(prefix: string): string;\\n}\\n\\ndeclare var XPathNSResolver: {\\n    prototype: XPathNSResolver;\\n    new(): XPathNSResolver;\\n};\\n\\ninterface XPathResult {\\n    readonly booleanValue: boolean;\\n    readonly invalidIteratorState: boolean;\\n    readonly numberValue: number;\\n    readonly resultType: number;\\n    readonly singleNodeValue: Node;\\n    readonly snapshotLength: number;\\n    readonly stringValue: string;\\n    iterateNext(): Node;\\n    snapshotItem(index: number): Node;\\n    readonly ANY_TYPE: number;\\n    readonly ANY_UNORDERED_NODE_TYPE: number;\\n    readonly BOOLEAN_TYPE: number;\\n    readonly FIRST_ORDERED_NODE_TYPE: number;\\n    readonly NUMBER_TYPE: number;\\n    readonly ORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;\\n    readonly STRING_TYPE: number;\\n    readonly UNORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;\\n}\\n\\ndeclare var XPathResult: {\\n    prototype: XPathResult;\\n    new(): XPathResult;\\n    readonly ANY_TYPE: number;\\n    readonly ANY_UNORDERED_NODE_TYPE: number;\\n    readonly BOOLEAN_TYPE: number;\\n    readonly FIRST_ORDERED_NODE_TYPE: number;\\n    readonly NUMBER_TYPE: number;\\n    readonly ORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;\\n    readonly STRING_TYPE: number;\\n    readonly UNORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;\\n};\\n\\ninterface XSLTProcessor {\\n    clearParameters(): void;\\n    getParameter(namespaceURI: string, localName: string): any;\\n    importStylesheet(style: Node): void;\\n    removeParameter(namespaceURI: string, localName: string): void;\\n    reset(): void;\\n    setParameter(namespaceURI: string, localName: string, value: any): void;\\n    transformToDocument(source: Node): Document;\\n    transformToFragment(source: Node, document: Document): DocumentFragment;\\n}\\n\\ndeclare var XSLTProcessor: {\\n    prototype: XSLTProcessor;\\n    new(): XSLTProcessor;\\n};\\n\\ninterface webkitRTCPeerConnection extends RTCPeerConnection {\\n    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: webkitRTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: webkitRTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var webkitRTCPeerConnection: {\\n    prototype: webkitRTCPeerConnection;\\n    new(configuration: RTCConfiguration): webkitRTCPeerConnection;\\n};\\n\\ndeclare type EventListenerOrEventListenerObject = EventListener | EventListenerObject;\\n\\ninterface DecodeErrorCallback {\\n    (error: DOMException): void;\\n}\\n\\ninterface DecodeSuccessCallback {\\n    (decodedData: AudioBuffer): void;\\n}\\n\\ninterface ErrorEventHandler {\\n    (event: Event | string, source?: string, fileno?: number, columnNumber?: number, error?: Error): void;\\n}\\n\\ninterface EventHandlerNonNull {\\n    (event: Event): any;\\n}\\n\\ninterface ForEachCallback {\\n    (keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, status: MediaKeyStatus): void;\\n}\\n\\ninterface FrameRequestCallback {\\n    (time: number): void;\\n}\\n\\ninterface FunctionStringCallback {\\n    (data: string): void;\\n}\\n\\ninterface IntersectionObserverCallback {\\n    (entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;\\n}\\n\\ninterface MSLaunchUriCallback {\\n    (): void;\\n}\\n\\ninterface MediaQueryListListener {\\n    (mql: MediaQueryList): void;\\n}\\n\\ninterface MutationCallback {\\n    (mutations: MutationRecord[], observer: MutationObserver): void;\\n}\\n\\ninterface NavigatorUserMediaErrorCallback {\\n    (error: MediaStreamError): void;\\n}\\n\\ninterface NavigatorUserMediaSuccessCallback {\\n    (stream: MediaStream): void;\\n}\\n\\ninterface NotificationPermissionCallback {\\n    (permission: NotificationPermission): void;\\n}\\n\\ninterface PositionCallback {\\n    (position: Position): void;\\n}\\n\\ninterface PositionErrorCallback {\\n    (error: PositionError): void;\\n}\\n\\ninterface RTCPeerConnectionErrorCallback {\\n    (error: DOMError): void;\\n}\\n\\ninterface RTCSessionDescriptionCallback {\\n    (sdp: RTCSessionDescription): void;\\n}\\n\\ninterface RTCStatsCallback {\\n    (report: RTCStatsReport): void;\\n}\\n\\ninterface VoidFunction {\\n    (): void;\\n}\\n\\ninterface WritableStreamChunkCallback {\\n    (chunk: any, controller: WritableStreamDefaultController): void;\\n}\\n\\ninterface WritableStreamDefaultControllerCallback {\\n    (controller: WritableStreamDefaultController): void;\\n}\\n\\ninterface WritableStreamErrorCallback {\\n    (reason: string): void;\\n}\\n\\ninterface HTMLElementTagNameMap {\\n    \\\"a\\\": HTMLAnchorElement;\\n    \\\"abbr\\\": HTMLElement;\\n    \\\"acronym\\\": HTMLElement;\\n    \\\"address\\\": HTMLElement;\\n    \\\"applet\\\": HTMLAppletElement;\\n    \\\"area\\\": HTMLAreaElement;\\n    \\\"article\\\": HTMLElement;\\n    \\\"aside\\\": HTMLElement;\\n    \\\"audio\\\": HTMLAudioElement;\\n    \\\"b\\\": HTMLElement;\\n    \\\"base\\\": HTMLBaseElement;\\n    \\\"basefont\\\": HTMLBaseFontElement;\\n    \\\"bdo\\\": HTMLElement;\\n    \\\"big\\\": HTMLElement;\\n    \\\"blockquote\\\": HTMLQuoteElement;\\n    \\\"body\\\": HTMLBodyElement;\\n    \\\"br\\\": HTMLBRElement;\\n    \\\"button\\\": HTMLButtonElement;\\n    \\\"canvas\\\": HTMLCanvasElement;\\n    \\\"caption\\\": HTMLTableCaptionElement;\\n    \\\"center\\\": HTMLElement;\\n    \\\"cite\\\": HTMLElement;\\n    \\\"code\\\": HTMLElement;\\n    \\\"col\\\": HTMLTableColElement;\\n    \\\"colgroup\\\": HTMLTableColElement;\\n    \\\"data\\\": HTMLDataElement;\\n    \\\"datalist\\\": HTMLDataListElement;\\n    \\\"dd\\\": HTMLElement;\\n    \\\"del\\\": HTMLModElement;\\n    \\\"dfn\\\": HTMLElement;\\n    \\\"dir\\\": HTMLDirectoryElement;\\n    \\\"div\\\": HTMLDivElement;\\n    \\\"dl\\\": HTMLDListElement;\\n    \\\"dt\\\": HTMLElement;\\n    \\\"em\\\": HTMLElement;\\n    \\\"embed\\\": HTMLEmbedElement;\\n    \\\"fieldset\\\": HTMLFieldSetElement;\\n    \\\"figcaption\\\": HTMLElement;\\n    \\\"figure\\\": HTMLElement;\\n    \\\"font\\\": HTMLFontElement;\\n    \\\"footer\\\": HTMLElement;\\n    \\\"form\\\": HTMLFormElement;\\n    \\\"frame\\\": HTMLFrameElement;\\n    \\\"frameset\\\": HTMLFrameSetElement;\\n    \\\"h1\\\": HTMLHeadingElement;\\n    \\\"h2\\\": HTMLHeadingElement;\\n    \\\"h3\\\": HTMLHeadingElement;\\n    \\\"h4\\\": HTMLHeadingElement;\\n    \\\"h5\\\": HTMLHeadingElement;\\n    \\\"h6\\\": HTMLHeadingElement;\\n    \\\"head\\\": HTMLHeadElement;\\n    \\\"header\\\": HTMLElement;\\n    \\\"hgroup\\\": HTMLElement;\\n    \\\"hr\\\": HTMLHRElement;\\n    \\\"html\\\": HTMLHtmlElement;\\n    \\\"i\\\": HTMLElement;\\n    \\\"iframe\\\": HTMLIFrameElement;\\n    \\\"img\\\": HTMLImageElement;\\n    \\\"input\\\": HTMLInputElement;\\n    \\\"ins\\\": HTMLModElement;\\n    \\\"isindex\\\": HTMLUnknownElement;\\n    \\\"kbd\\\": HTMLElement;\\n    \\\"keygen\\\": HTMLElement;\\n    \\\"label\\\": HTMLLabelElement;\\n    \\\"legend\\\": HTMLLegendElement;\\n    \\\"li\\\": HTMLLIElement;\\n    \\\"link\\\": HTMLLinkElement;\\n    \\\"listing\\\": HTMLPreElement;\\n    \\\"map\\\": HTMLMapElement;\\n    \\\"mark\\\": HTMLElement;\\n    \\\"marquee\\\": HTMLMarqueeElement;\\n    \\\"menu\\\": HTMLMenuElement;\\n    \\\"meta\\\": HTMLMetaElement;\\n    \\\"meter\\\": HTMLMeterElement;\\n    \\\"nav\\\": HTMLElement;\\n    \\\"nextid\\\": HTMLUnknownElement;\\n    \\\"nobr\\\": HTMLElement;\\n    \\\"noframes\\\": HTMLElement;\\n    \\\"noscript\\\": HTMLElement;\\n    \\\"object\\\": HTMLObjectElement;\\n    \\\"ol\\\": HTMLOListElement;\\n    \\\"optgroup\\\": HTMLOptGroupElement;\\n    \\\"option\\\": HTMLOptionElement;\\n    \\\"output\\\": HTMLOutputElement;\\n    \\\"p\\\": HTMLParagraphElement;\\n    \\\"param\\\": HTMLParamElement;\\n    \\\"picture\\\": HTMLPictureElement;\\n    \\\"plaintext\\\": HTMLElement;\\n    \\\"pre\\\": HTMLPreElement;\\n    \\\"progress\\\": HTMLProgressElement;\\n    \\\"q\\\": HTMLQuoteElement;\\n    \\\"rt\\\": HTMLElement;\\n    \\\"ruby\\\": HTMLElement;\\n    \\\"s\\\": HTMLElement;\\n    \\\"samp\\\": HTMLElement;\\n    \\\"script\\\": HTMLScriptElement;\\n    \\\"section\\\": HTMLElement;\\n    \\\"select\\\": HTMLSelectElement;\\n    \\\"slot\\\": HTMLSlotElement;\\n    \\\"small\\\": HTMLElement;\\n    \\\"source\\\": HTMLSourceElement;\\n    \\\"span\\\": HTMLSpanElement;\\n    \\\"strike\\\": HTMLElement;\\n    \\\"strong\\\": HTMLElement;\\n    \\\"style\\\": HTMLStyleElement;\\n    \\\"sub\\\": HTMLElement;\\n    \\\"sup\\\": HTMLElement;\\n    \\\"table\\\": HTMLTableElement;\\n    \\\"tbody\\\": HTMLTableSectionElement;\\n    \\\"td\\\": HTMLTableDataCellElement;\\n    \\\"template\\\": HTMLTemplateElement;\\n    \\\"textarea\\\": HTMLTextAreaElement;\\n    \\\"tfoot\\\": HTMLTableSectionElement;\\n    \\\"th\\\": HTMLTableHeaderCellElement;\\n    \\\"thead\\\": HTMLTableSectionElement;\\n    \\\"time\\\": HTMLTimeElement;\\n    \\\"title\\\": HTMLTitleElement;\\n    \\\"tr\\\": HTMLTableRowElement;\\n    \\\"track\\\": HTMLTrackElement;\\n    \\\"tt\\\": HTMLElement;\\n    \\\"u\\\": HTMLElement;\\n    \\\"ul\\\": HTMLUListElement;\\n    \\\"var\\\": HTMLElement;\\n    \\\"video\\\": HTMLVideoElement;\\n    \\\"wbr\\\": HTMLElement;\\n    \\\"xmp\\\": HTMLPreElement;\\n}\\n\\ninterface SVGElementTagNameMap {\\n    \\\"circle\\\": SVGCircleElement;\\n    \\\"clippath\\\": SVGClipPathElement;\\n    \\\"defs\\\": SVGDefsElement;\\n    \\\"desc\\\": SVGDescElement;\\n    \\\"ellipse\\\": SVGEllipseElement;\\n    \\\"feblend\\\": SVGFEBlendElement;\\n    \\\"fecolormatrix\\\": SVGFEColorMatrixElement;\\n    \\\"fecomponenttransfer\\\": SVGFEComponentTransferElement;\\n    \\\"fecomposite\\\": SVGFECompositeElement;\\n    \\\"feconvolvematrix\\\": SVGFEConvolveMatrixElement;\\n    \\\"fediffuselighting\\\": SVGFEDiffuseLightingElement;\\n    \\\"fedisplacementmap\\\": SVGFEDisplacementMapElement;\\n    \\\"fedistantlight\\\": SVGFEDistantLightElement;\\n    \\\"feflood\\\": SVGFEFloodElement;\\n    \\\"fefunca\\\": SVGFEFuncAElement;\\n    \\\"fefuncb\\\": SVGFEFuncBElement;\\n    \\\"fefuncg\\\": SVGFEFuncGElement;\\n    \\\"fefuncr\\\": SVGFEFuncRElement;\\n    \\\"fegaussianblur\\\": SVGFEGaussianBlurElement;\\n    \\\"feimage\\\": SVGFEImageElement;\\n    \\\"femerge\\\": SVGFEMergeElement;\\n    \\\"femergenode\\\": SVGFEMergeNodeElement;\\n    \\\"femorphology\\\": SVGFEMorphologyElement;\\n    \\\"feoffset\\\": SVGFEOffsetElement;\\n    \\\"fepointlight\\\": SVGFEPointLightElement;\\n    \\\"fespecularlighting\\\": SVGFESpecularLightingElement;\\n    \\\"fespotlight\\\": SVGFESpotLightElement;\\n    \\\"fetile\\\": SVGFETileElement;\\n    \\\"feturbulence\\\": SVGFETurbulenceElement;\\n    \\\"filter\\\": SVGFilterElement;\\n    \\\"foreignobject\\\": SVGForeignObjectElement;\\n    \\\"g\\\": SVGGElement;\\n    \\\"image\\\": SVGImageElement;\\n    \\\"line\\\": SVGLineElement;\\n    \\\"lineargradient\\\": SVGLinearGradientElement;\\n    \\\"marker\\\": SVGMarkerElement;\\n    \\\"mask\\\": SVGMaskElement;\\n    \\\"metadata\\\": SVGMetadataElement;\\n    \\\"path\\\": SVGPathElement;\\n    \\\"pattern\\\": SVGPatternElement;\\n    \\\"polygon\\\": SVGPolygonElement;\\n    \\\"polyline\\\": SVGPolylineElement;\\n    \\\"radialgradient\\\": SVGRadialGradientElement;\\n    \\\"rect\\\": SVGRectElement;\\n    \\\"stop\\\": SVGStopElement;\\n    \\\"svg\\\": SVGSVGElement;\\n    \\\"switch\\\": SVGSwitchElement;\\n    \\\"symbol\\\": SVGSymbolElement;\\n    \\\"text\\\": SVGTextElement;\\n    \\\"textpath\\\": SVGTextPathElement;\\n    \\\"tspan\\\": SVGTSpanElement;\\n    \\\"use\\\": SVGUseElement;\\n    \\\"view\\\": SVGViewElement;\\n}\\n\\n/** @deprecated Directly use HTMLElementTagNameMap or SVGElementTagNameMap as appropriate, instead. */\\ninterface ElementTagNameMap extends HTMLElementTagNameMap, SVGElementTagNameMap { }\\n\\ndeclare var Audio: {\\n    new(src?: string): HTMLAudioElement;\\n};\\ndeclare var Image: {\\n    new(width?: number, height?: number): HTMLImageElement;\\n};\\ndeclare var Option: {\\n    new(text?: string, value?: string, defaultSelected?: boolean, selected?: boolean): HTMLOptionElement;\\n};\\ndeclare var Blob: typeof Blob;\\ndeclare var URL: typeof URL;\\ndeclare var URLSearchParams: typeof URLSearchParams;\\ndeclare var applicationCache: ApplicationCache;\\ndeclare var caches: CacheStorage;\\ndeclare var clientInformation: Navigator;\\ndeclare var closed: boolean;\\ndeclare var crypto: Crypto;\\ndeclare var customElements: CustomElementRegistry;\\ndeclare var defaultStatus: string;\\ndeclare var devicePixelRatio: number;\\ndeclare var doNotTrack: string;\\ndeclare var document: Document;\\ndeclare var event: Event | undefined;\\ndeclare var external: External;\\ndeclare var frameElement: Element;\\ndeclare var frames: Window;\\ndeclare var history: History;\\ndeclare var innerHeight: number;\\ndeclare var innerWidth: number;\\ndeclare var isSecureContext: boolean;\\ndeclare var length: number;\\ndeclare var location: Location;\\ndeclare var locationbar: BarProp;\\ndeclare var menubar: BarProp;\\ndeclare var msContentScript: ExtensionScriptApis;\\ndeclare var msCredentials: MSCredentials;\\ndeclare const name: never;\\ndeclare var navigator: Navigator;\\ndeclare var offscreenBuffering: string | boolean;\\ndeclare var onabort: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;\\ndeclare var onblur: ((this: Window, ev: FocusEvent) => any) | null;\\ndeclare var oncanplay: ((this: Window, ev: Event) => any) | null;\\ndeclare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;\\ndeclare var onchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onclick: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var oncompassneedscalibration: ((this: Window, ev: Event) => any) | null;\\ndeclare var oncontextmenu: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var ondevicelight: ((this: Window, ev: DeviceLightEvent) => any) | null;\\ndeclare var ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\\ndeclare var ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\\ndeclare var ondrag: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragend: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragover: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondrop: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondurationchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onemptied: ((this: Window, ev: Event) => any) | null;\\ndeclare var onended: ((this: Window, ev: Event) => any) | null;\\ndeclare var onerror: ErrorEventHandler;\\ndeclare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;\\ndeclare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;\\ndeclare var oninput: ((this: Window, ev: Event) => any) | null;\\ndeclare var oninvalid: ((this: Window, ev: Event) => any) | null;\\ndeclare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;\\ndeclare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;\\ndeclare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;\\ndeclare var onload: ((this: Window, ev: Event) => any) | null;\\ndeclare var onloadeddata: ((this: Window, ev: Event) => any) | null;\\ndeclare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;\\ndeclare var onloadstart: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;\\ndeclare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmousewheel: ((this: Window, ev: WheelEvent) => any) | null;\\ndeclare var onmsgesturechange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturedoubletap: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgestureend: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturehold: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturestart: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturetap: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsinertiastart: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointercancel: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerdown: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerenter: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerleave: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointermove: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerout: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerover: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerup: ((this: Window, ev: Event) => any) | null;\\ndeclare var onoffline: ((this: Window, ev: Event) => any) | null;\\ndeclare var ononline: ((this: Window, ev: Event) => any) | null;\\ndeclare var onorientationchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;\\ndeclare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;\\ndeclare var onpause: ((this: Window, ev: Event) => any) | null;\\ndeclare var onplay: ((this: Window, ev: Event) => any) | null;\\ndeclare var onplaying: ((this: Window, ev: Event) => any) | null;\\ndeclare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;\\ndeclare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;\\ndeclare var onratechange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onreadystatechange: ((this: Window, ev: ProgressEvent) => any) | null;\\ndeclare var onreset: ((this: Window, ev: Event) => any) | null;\\ndeclare var onresize: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onscroll: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onseeked: ((this: Window, ev: Event) => any) | null;\\ndeclare var onseeking: ((this: Window, ev: Event) => any) | null;\\ndeclare var onselect: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onstalled: ((this: Window, ev: Event) => any) | null;\\ndeclare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;\\ndeclare var onsubmit: ((this: Window, ev: Event) => any) | null;\\ndeclare var onsuspend: ((this: Window, ev: Event) => any) | null;\\ndeclare var ontimeupdate: ((this: Window, ev: Event) => any) | null;\\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\\ndeclare var ontouchend: (ev: TouchEvent) => any;\\ndeclare var ontouchmove: (ev: TouchEvent) => any;\\ndeclare var ontouchstart: (ev: TouchEvent) => any;\\ndeclare var onunload: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvolumechange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayactivate: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayblur: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayconnect: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaydeactivate: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaydisconnect: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayfocus: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaypointerrestricted: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaypointerunrestricted: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaypresentchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onwaiting: ((this: Window, ev: Event) => any) | null;\\ndeclare var opener: any;\\ndeclare var orientation: string | number;\\ndeclare var outerHeight: number;\\ndeclare var outerWidth: number;\\ndeclare var pageXOffset: number;\\ndeclare var pageYOffset: number;\\ndeclare var parent: Window;\\ndeclare var performance: Performance;\\ndeclare var personalbar: BarProp;\\ndeclare var screen: Screen;\\ndeclare var screenLeft: number;\\ndeclare var screenTop: number;\\ndeclare var screenX: number;\\ndeclare var screenY: number;\\ndeclare var scrollX: number;\\ndeclare var scrollY: number;\\ndeclare var scrollbars: BarProp;\\ndeclare var self: Window;\\ndeclare var speechSynthesis: SpeechSynthesis;\\ndeclare var status: string;\\ndeclare var statusbar: BarProp;\\ndeclare var styleMedia: StyleMedia;\\ndeclare var toolbar: BarProp;\\ndeclare var top: Window;\\ndeclare var window: Window;\\ndeclare function alert(message?: any): void;\\ndeclare function blur(): void;\\ndeclare function cancelAnimationFrame(handle: number): void;\\ndeclare function captureEvents(): void;\\ndeclare function close(): void;\\ndeclare function confirm(message?: string): boolean;\\ndeclare function createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\ndeclare function createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\ndeclare function departFocus(navigationReason: NavigationReason, origin: FocusNavigationOrigin): void;\\ndeclare function focus(): void;\\ndeclare function getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\\ndeclare function getMatchedCSSRules(elt: Element, pseudoElt?: string | null): CSSRuleList;\\ndeclare function getSelection(): Selection;\\ndeclare function matchMedia(mediaQuery: string): MediaQueryList;\\ndeclare function moveBy(x?: number, y?: number): void;\\ndeclare function moveTo(x?: number, y?: number): void;\\ndeclare function msWriteProfilerMark(profilerMarkName: string): void;\\ndeclare function open(url?: string, target?: string, features?: string, replace?: boolean): Window | null;\\ndeclare function postMessage(message: any, targetOrigin: string, transfer?: any[]): void;\\ndeclare function prompt(message?: string, _default?: string): string | null;\\ndeclare function releaseEvents(): void;\\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\\ndeclare function resizeBy(x?: number, y?: number): void;\\ndeclare function resizeTo(x?: number, y?: number): void;\\ndeclare function scroll(options?: ScrollToOptions): void;\\ndeclare function scroll(x?: number, y?: number): void;\\ndeclare function scrollBy(options?: ScrollToOptions): void;\\ndeclare function scrollBy(x?: number, y?: number): void;\\ndeclare function scrollTo(options?: ScrollToOptions): void;\\ndeclare function scrollTo(x?: number, y?: number): void;\\ndeclare function stop(): void;\\ndeclare function webkitCancelAnimationFrame(handle: number): void;\\ndeclare function webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;\\ndeclare function webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;\\ndeclare function webkitRequestAnimationFrame(callback: FrameRequestCallback): number;\\ndeclare function toString(): string;\\ndeclare function dispatchEvent(evt: Event): boolean;\\ndeclare function clearInterval(handle?: number): void;\\ndeclare function clearTimeout(handle?: number): void;\\ndeclare function setInterval(handler: (...args: any[]) => void, timeout: number): number;\\ndeclare function setInterval(handler: any, timeout?: any, ...args: any[]): number;\\ndeclare function setTimeout(handler: (...args: any[]) => void, timeout: number): number;\\ndeclare function setTimeout(handler: any, timeout?: any, ...args: any[]): number;\\ndeclare function clearImmediate(handle: number): void;\\ndeclare function setImmediate(handler: (...args: any[]) => void): number;\\ndeclare function setImmediate(handler: any, ...args: any[]): number;\\ndeclare var sessionStorage: Storage;\\ndeclare var localStorage: Storage;\\ndeclare var console: Console;\\ndeclare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;\\ndeclare var indexedDB: IDBFactory;\\ndeclare function atob(encodedString: string): string;\\ndeclare function btoa(rawString: string): string;\\ndeclare function fetch(input?: Request | string, init?: RequestInit): Promise<Response>;\\ndeclare function addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\ndeclare function removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\ntype ScrollBehavior = \\\"auto\\\" | \\\"instant\\\" | \\\"smooth\\\";\\ntype ScrollLogicalPosition = \\\"start\\\" | \\\"center\\\" | \\\"end\\\" | \\\"nearest\\\";\\ntype MouseWheelEvent = WheelEvent;\\ntype ScrollRestoration = \\\"auto\\\" | \\\"manual\\\";\\ntype FormDataEntryValue = string | File;\\ntype InsertPosition = \\\"beforebegin\\\" | \\\"afterbegin\\\" | \\\"beforeend\\\" | \\\"afterend\\\";\\ntype HeadersInit = Headers | string[][] | { [key: string]: string };\\ntype OrientationLockType = \\\"any\\\" | \\\"natural\\\" | \\\"portrait\\\" | \\\"landscape\\\" | \\\"portrait-primary\\\" | \\\"portrait-secondary\\\" | \\\"landscape-primary\\\"| \\\"landscape-secondary\\\";\\ntype IDBValidKey = number | string | Date | IDBArrayKey;\\ntype AlgorithmIdentifier = string | Algorithm;\\ntype MutationRecordType = \\\"attributes\\\" | \\\"characterData\\\" | \\\"childList\\\";\\ntype AAGUID = string;\\ntype BodyInit = any;\\ntype ByteString = string;\\ntype ConstrainBoolean = boolean | ConstrainBooleanParameters;\\ntype ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;\\ntype ConstrainDouble = number | ConstrainDoubleRange;\\ntype ConstrainLong = number | ConstrainLongRange;\\ntype CryptoOperationData = ArrayBufferView;\\ntype GLbitfield = number;\\ntype GLboolean = boolean;\\ntype GLbyte = number;\\ntype GLclampf = number;\\ntype GLenum = number;\\ntype GLfloat = number;\\ntype GLint = number;\\ntype GLintptr = number;\\ntype GLshort = number;\\ntype GLsizei = number;\\ntype GLsizeiptr = number;\\ntype GLubyte = number;\\ntype GLuint = number;\\ntype GLushort = number;\\ntype IDBKeyPath = string;\\ntype MSInboundPayload = MSVideoRecvPayload | MSAudioRecvPayload;\\ntype MSLocalClientEvent = MSLocalClientEventBase | MSAudioLocalClientEvent;\\ntype MSOutboundPayload = MSVideoSendPayload | MSAudioSendPayload;\\ntype RTCIceGatherCandidate = RTCIceCandidateDictionary | RTCIceCandidateComplete;\\ntype RTCTransport = RTCDtlsTransport | RTCSrtpSdesTransport;\\ntype RequestInfo = Request | string;\\ntype USVString = string;\\ntype payloadtype = number;\\ntype BufferSource = ArrayBuffer | ArrayBufferView;\\ntype ClientTypes = \\\"window\\\" | \\\"worker\\\" | \\\"sharedworker\\\" | \\\"all\\\";\\ntype AppendMode = \\\"segments\\\" | \\\"sequence\\\";\\ntype AudioContextLatencyCategory = \\\"balanced\\\" | \\\"interactive\\\" | \\\"playback\\\";\\ntype AudioContextState = \\\"suspended\\\" | \\\"running\\\" | \\\"closed\\\";\\ntype BinaryType = \\\"blob\\\" | \\\"arraybuffer\\\";\\ntype BiquadFilterType = \\\"lowpass\\\" | \\\"highpass\\\" | \\\"bandpass\\\" | \\\"lowshelf\\\" | \\\"highshelf\\\" | \\\"peaking\\\" | \\\"notch\\\" | \\\"allpass\\\";\\ntype CanPlayTypeResult = \\\"\\\" | \\\"maybe\\\" | \\\"probably\\\";\\ntype CanvasFillRule = \\\"nonzero\\\" | \\\"evenodd\\\";\\ntype ChannelCountMode = \\\"max\\\" | \\\"clamped-max\\\" | \\\"explicit\\\";\\ntype ChannelInterpretation = \\\"speakers\\\" | \\\"discrete\\\";\\ntype DisplayCaptureSurfaceType = \\\"monitor\\\" | \\\"window\\\" | \\\"application\\\" | \\\"browser\\\";\\ntype DistanceModelType = \\\"linear\\\" | \\\"inverse\\\" | \\\"exponential\\\";\\ntype EndOfStreamError = \\\"network\\\" | \\\"decode\\\";\\ntype ExpandGranularity = \\\"character\\\" | \\\"word\\\" | \\\"sentence\\\" | \\\"textedit\\\";\\ntype GamepadHand = \\\"\\\" | \\\"left\\\" | \\\"right\\\";\\ntype GamepadHapticActuatorType = \\\"vibration\\\";\\ntype GamepadInputEmulationType = \\\"mouse\\\" | \\\"keyboard\\\" | \\\"gamepad\\\";\\ntype GamepadMappingType = \\\"\\\" | \\\"standard\\\";\\ntype IDBCursorDirection = \\\"next\\\" | \\\"nextunique\\\" | \\\"prev\\\" | \\\"prevunique\\\";\\ntype IDBRequestReadyState = \\\"pending\\\" | \\\"done\\\";\\ntype IDBTransactionMode = \\\"readonly\\\" | \\\"readwrite\\\" | \\\"versionchange\\\";\\ntype KeyFormat = \\\"raw\\\" | \\\"spki\\\" | \\\"pkcs8\\\" | \\\"jwk\\\";\\ntype KeyType = \\\"public\\\" | \\\"private\\\" | \\\"secret\\\";\\ntype KeyUsage = \\\"encrypt\\\" | \\\"decrypt\\\" | \\\"sign\\\" | \\\"verify\\\" | \\\"deriveKey\\\" | \\\"deriveBits\\\" | \\\"wrapKey\\\" | \\\"unwrapKey\\\";\\ntype ListeningState = \\\"inactive\\\" | \\\"active\\\" | \\\"disambiguation\\\";\\ntype MSCredentialType = \\\"FIDO_2_0\\\";\\ntype MSIceAddrType = \\\"os\\\" | \\\"stun\\\" | \\\"turn\\\" | \\\"peer-derived\\\";\\ntype MSIceType = \\\"failed\\\" | \\\"direct\\\" | \\\"relay\\\";\\ntype MSStatsType = \\\"description\\\" | \\\"localclientevent\\\" | \\\"inbound-network\\\" | \\\"outbound-network\\\" | \\\"inbound-payload\\\" | \\\"outbound-payload\\\" | \\\"transportdiagnostics\\\";\\ntype MSTransportType = \\\"Embedded\\\" | \\\"USB\\\" | \\\"NFC\\\" | \\\"BT\\\";\\ntype MSWebViewPermissionState = \\\"unknown\\\" | \\\"defer\\\" | \\\"allow\\\" | \\\"deny\\\";\\ntype MSWebViewPermissionType = \\\"geolocation\\\" | \\\"unlimitedIndexedDBQuota\\\" | \\\"media\\\" | \\\"pointerlock\\\" | \\\"webnotifications\\\";\\ntype MediaDeviceKind = \\\"audioinput\\\" | \\\"audiooutput\\\" | \\\"videoinput\\\";\\ntype MediaKeyMessageType = \\\"license-request\\\" | \\\"license-renewal\\\" | \\\"license-release\\\" | \\\"individualization-request\\\";\\ntype MediaKeySessionType = \\\"temporary\\\" | \\\"persistent-license\\\" | \\\"persistent-release-message\\\";\\ntype MediaKeyStatus = \\\"usable\\\" | \\\"expired\\\" | \\\"output-downscaled\\\" | \\\"output-not-allowed\\\" | \\\"status-pending\\\" | \\\"internal-error\\\";\\ntype MediaKeysRequirement = \\\"required\\\" | \\\"optional\\\" | \\\"not-allowed\\\";\\ntype MediaStreamTrackState = \\\"live\\\" | \\\"ended\\\";\\ntype NavigationReason = \\\"up\\\" | \\\"down\\\" | \\\"left\\\" | \\\"right\\\";\\ntype NavigationType = \\\"navigate\\\" | \\\"reload\\\" | \\\"back_forward\\\" | \\\"prerender\\\";\\ntype NotificationDirection = \\\"auto\\\" | \\\"ltr\\\" | \\\"rtl\\\";\\ntype NotificationPermission = \\\"default\\\" | \\\"denied\\\" | \\\"granted\\\";\\ntype OscillatorType = \\\"sine\\\" | \\\"square\\\" | \\\"sawtooth\\\" | \\\"triangle\\\" | \\\"custom\\\";\\ntype OverSampleType = \\\"none\\\" | \\\"2x\\\" | \\\"4x\\\";\\ntype PanningModelType = \\\"equalpower\\\" | \\\"HRTF\\\";\\ntype PaymentComplete = \\\"success\\\" | \\\"fail\\\" | \\\"unknown\\\";\\ntype PaymentShippingType = \\\"shipping\\\" | \\\"delivery\\\" | \\\"pickup\\\";\\ntype PushEncryptionKeyName = \\\"p256dh\\\" | \\\"auth\\\";\\ntype PushPermissionState = \\\"granted\\\" | \\\"denied\\\" | \\\"prompt\\\";\\ntype RTCBundlePolicy = \\\"balanced\\\" | \\\"max-compat\\\" | \\\"max-bundle\\\";\\ntype RTCDegradationPreference = \\\"maintain-framerate\\\" | \\\"maintain-resolution\\\" | \\\"balanced\\\";\\ntype RTCDtlsRole = \\\"auto\\\" | \\\"client\\\" | \\\"server\\\";\\ntype RTCDtlsTransportState = \\\"new\\\" | \\\"connecting\\\" | \\\"connected\\\" | \\\"closed\\\";\\ntype RTCIceCandidateType = \\\"host\\\" | \\\"srflx\\\" | \\\"prflx\\\" | \\\"relay\\\";\\ntype RTCIceComponent = \\\"RTP\\\" | \\\"RTCP\\\";\\ntype RTCIceConnectionState = \\\"new\\\" | \\\"checking\\\" | \\\"connected\\\" | \\\"completed\\\" | \\\"failed\\\" | \\\"disconnected\\\" | \\\"closed\\\";\\ntype RTCIceGatherPolicy = \\\"all\\\" | \\\"nohost\\\" | \\\"relay\\\";\\ntype RTCIceGathererState = \\\"new\\\" | \\\"gathering\\\" | \\\"complete\\\";\\ntype RTCIceGatheringState = \\\"new\\\" | \\\"gathering\\\" | \\\"complete\\\";\\ntype RTCIceProtocol = \\\"udp\\\" | \\\"tcp\\\";\\ntype RTCIceRole = \\\"controlling\\\" | \\\"controlled\\\";\\ntype RTCIceTcpCandidateType = \\\"active\\\" | \\\"passive\\\" | \\\"so\\\";\\ntype RTCIceTransportPolicy = \\\"none\\\" | \\\"relay\\\" | \\\"all\\\";\\ntype RTCIceTransportState = \\\"new\\\" | \\\"checking\\\" | \\\"connected\\\" | \\\"completed\\\" | \\\"disconnected\\\" | \\\"closed\\\";\\ntype RTCSdpType = \\\"offer\\\" | \\\"pranswer\\\" | \\\"answer\\\";\\ntype RTCSignalingState = \\\"stable\\\" | \\\"have-local-offer\\\" | \\\"have-remote-offer\\\" | \\\"have-local-pranswer\\\" | \\\"have-remote-pranswer\\\" | \\\"closed\\\";\\ntype RTCStatsIceCandidatePairState = \\\"frozen\\\" | \\\"waiting\\\" | \\\"inprogress\\\" | \\\"failed\\\" | \\\"succeeded\\\" | \\\"cancelled\\\";\\ntype RTCStatsIceCandidateType = \\\"host\\\" | \\\"serverreflexive\\\" | \\\"peerreflexive\\\" | \\\"relayed\\\";\\ntype RTCStatsType = \\\"inboundrtp\\\" | \\\"outboundrtp\\\" | \\\"session\\\" | \\\"datachannel\\\" | \\\"track\\\" | \\\"transport\\\" | \\\"candidatepair\\\" | \\\"localcandidate\\\" | \\\"remotecandidate\\\";\\ntype ReadyState = \\\"closed\\\" | \\\"open\\\" | \\\"ended\\\";\\ntype ReferrerPolicy = \\\"\\\" | \\\"no-referrer\\\" | \\\"no-referrer-when-downgrade\\\" | \\\"origin-only\\\" | \\\"origin-when-cross-origin\\\" | \\\"unsafe-url\\\";\\ntype RequestCache = \\\"default\\\" | \\\"no-store\\\" | \\\"reload\\\" | \\\"no-cache\\\" | \\\"force-cache\\\";\\ntype RequestCredentials = \\\"omit\\\" | \\\"same-origin\\\" | \\\"include\\\";\\ntype RequestDestination = \\\"\\\" | \\\"document\\\" | \\\"sharedworker\\\" | \\\"subresource\\\" | \\\"unknown\\\" | \\\"worker\\\";\\ntype RequestMode = \\\"navigate\\\" | \\\"same-origin\\\" | \\\"no-cors\\\" | \\\"cors\\\";\\ntype RequestRedirect = \\\"follow\\\" | \\\"error\\\" | \\\"manual\\\";\\ntype RequestType = \\\"\\\" | \\\"audio\\\" | \\\"font\\\" | \\\"image\\\" | \\\"script\\\" | \\\"style\\\" | \\\"track\\\" | \\\"video\\\";\\ntype ResponseType = \\\"basic\\\" | \\\"cors\\\" | \\\"default\\\" | \\\"error\\\" | \\\"opaque\\\" | \\\"opaqueredirect\\\";\\ntype ScopedCredentialType = \\\"ScopedCred\\\";\\ntype ServiceWorkerState = \\\"installing\\\" | \\\"installed\\\" | \\\"activating\\\" | \\\"activated\\\" | \\\"redundant\\\";\\ntype TextTrackKind = \\\"subtitles\\\" | \\\"captions\\\" | \\\"descriptions\\\" | \\\"chapters\\\" | \\\"metadata\\\";\\ntype TextTrackMode = \\\"disabled\\\" | \\\"hidden\\\" | \\\"showing\\\";\\ntype Transport = \\\"usb\\\" | \\\"nfc\\\" | \\\"ble\\\";\\ntype VRDisplayEventReason = \\\"mounted\\\" | \\\"navigation\\\" | \\\"requested\\\" | \\\"unmounted\\\";\\ntype VREye = \\\"left\\\" | \\\"right\\\";\\ntype VideoFacingModeEnum = \\\"user\\\" | \\\"environment\\\" | \\\"left\\\" | \\\"right\\\";\\ntype VisibilityState = \\\"hidden\\\" | \\\"visible\\\" | \\\"prerender\\\" | \\\"unloaded\\\";\\ntype XMLHttpRequestResponseType = \\\"\\\" | \\\"arraybuffer\\\" | \\\"blob\\\" | \\\"document\\\" | \\\"json\\\" | \\\"text\\\";\\n\\n\\n/////////////////////////////\\n/// WorkerGlobalScope APIs\\n/////////////////////////////\\n// These are only available in a Web Worker\\ndeclare function importScripts(...urls: string[]): void;\\n\\n\\n\\n\\n/////////////////////////////\\n/// Windows Script Host APIS\\n/////////////////////////////\\n\\n\\ninterface ActiveXObject {\\n    new (s: string): any;\\n}\\ndeclare var ActiveXObject: ActiveXObject;\\n\\ninterface ITextWriter {\\n    Write(s: string): void;\\n    WriteLine(s: string): void;\\n    Close(): void;\\n}\\n\\ninterface TextStreamBase {\\n    /**\\n     * The column number of the current character position in an input stream.\\n     */\\n    Column: number;\\n\\n    /**\\n     * The current line number in an input stream.\\n     */\\n    Line: number;\\n\\n    /**\\n     * Closes a text stream.\\n     * It is not necessary to close standard streams; they close automatically when the process ends. If\\n     * you close a standard stream, be aware that any other pointers to that standard stream become invalid.\\n     */\\n    Close(): void;\\n}\\n\\ninterface TextStreamWriter extends TextStreamBase {\\n    /**\\n     * Sends a string to an output stream.\\n     */\\n    Write(s: string): void;\\n\\n    /**\\n     * Sends a specified number of blank lines (newline characters) to an output stream.\\n     */\\n    WriteBlankLines(intLines: number): void;\\n\\n    /**\\n     * Sends a string followed by a newline character to an output stream.\\n     */\\n    WriteLine(s: string): void;\\n}\\n\\ninterface TextStreamReader extends TextStreamBase {\\n    /**\\n     * Returns a specified number of characters from an input stream, starting at the current pointer position.\\n     * Does not return until the ENTER key is pressed.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     */\\n    Read(characters: number): string;\\n\\n    /**\\n     * Returns all characters from an input stream.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     */\\n    ReadAll(): string;\\n\\n    /**\\n     * Returns an entire line from an input stream.\\n     * Although this method extracts the newline character, it does not add it to the returned string.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     */\\n    ReadLine(): string;\\n\\n    /**\\n     * Skips a specified number of characters when reading from an input text stream.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     * @param characters Positive number of characters to skip forward. (Backward skipping is not supported.)\\n     */\\n    Skip(characters: number): void;\\n\\n    /**\\n     * Skips the next line when reading from an input text stream.\\n     * Can only be used on a stream in reading mode, not writing or appending mode.\\n     */\\n    SkipLine(): void;\\n\\n    /**\\n     * Indicates whether the stream pointer position is at the end of a line.\\n     */\\n    AtEndOfLine: boolean;\\n\\n    /**\\n     * Indicates whether the stream pointer position is at the end of a stream.\\n     */\\n    AtEndOfStream: boolean;\\n}\\n\\ndeclare var WScript: {\\n    /**\\n     * Outputs text to either a message box (under WScript.exe) or the command console window followed by\\n     * a newline (under CScript.exe).\\n     */\\n    Echo(s: any): void;\\n\\n    /**\\n     * Exposes the write-only error output stream for the current script.\\n     * Can be accessed only while using CScript.exe.\\n     */\\n    StdErr: TextStreamWriter;\\n\\n    /**\\n     * Exposes the write-only output stream for the current script.\\n     * Can be accessed only while using CScript.exe.\\n     */\\n    StdOut: TextStreamWriter;\\n    Arguments: { length: number; Item(n: number): string; };\\n\\n    /**\\n     *  The full path of the currently running script.\\n     */\\n    ScriptFullName: string;\\n\\n    /**\\n     * Forces the script to stop immediately, with an optional exit code.\\n     */\\n    Quit(exitCode?: number): number;\\n\\n    /**\\n     * The Windows Script Host build version number.\\n     */\\n    BuildVersion: number;\\n\\n    /**\\n     * Fully qualified path of the host executable.\\n     */\\n    FullName: string;\\n\\n    /**\\n     * Gets/sets the script mode - interactive(true) or batch(false).\\n     */\\n    Interactive: boolean;\\n\\n    /**\\n     * The name of the host executable (WScript.exe or CScript.exe).\\n     */\\n    Name: string;\\n\\n    /**\\n     * Path of the directory containing the host executable.\\n     */\\n    Path: string;\\n\\n    /**\\n     * The filename of the currently running script.\\n     */\\n    ScriptName: string;\\n\\n    /**\\n     * Exposes the read-only input stream for the current script.\\n     * Can be accessed only while using CScript.exe.\\n     */\\n    StdIn: TextStreamReader;\\n\\n    /**\\n     * Windows Script Host version\\n     */\\n    Version: string;\\n\\n    /**\\n     * Connects a COM object's event sources to functions named with a given prefix, in the form prefix_event.\\n     */\\n    ConnectObject(objEventSource: any, strPrefix: string): void;\\n\\n    /**\\n     * Creates a COM object.\\n     * @param strProgiID\\n     * @param strPrefix Function names in the form prefix_event will be bound to this object's COM events.\\n     */\\n    CreateObject(strProgID: string, strPrefix?: string): any;\\n\\n    /**\\n     * Disconnects a COM object from its event sources.\\n     */\\n    DisconnectObject(obj: any): void;\\n\\n    /**\\n     * Retrieves an existing object with the specified ProgID from memory, or creates a new one from a file.\\n     * @param strPathname Fully qualified path to the file containing the object persisted to disk.\\n     *                       For objects in memory, pass a zero-length string.\\n     * @param strProgID\\n     * @param strPrefix Function names in the form prefix_event will be bound to this object's COM events.\\n     */\\n    GetObject(strPathname: string, strProgID?: string, strPrefix?: string): any;\\n\\n    /**\\n     * Suspends script execution for a specified length of time, then continues execution.\\n     * @param intTime Interval (in milliseconds) to suspend script execution.\\n     */\\n    Sleep(intTime: number): void;\\n};\\n\\n/**\\n * Represents an Automation SAFEARRAY\\n */\\ndeclare class SafeArray<T = any> {\\n    private constructor();\\n    private SafeArray_typekey: SafeArray<T>;\\n}\\n\\n/**\\n * Allows enumerating over a COM collection, which may not have indexed item access.\\n */\\ninterface Enumerator<T = any> {\\n    /**\\n     * Returns true if the current item is the last one in the collection, or the collection is empty,\\n     * or the current item is undefined.\\n     */\\n    atEnd(): boolean;\\n\\n    /**\\n     * Returns the current item in the collection\\n     */\\n    item(): T;\\n\\n    /**\\n     * Resets the current item in the collection to the first item. If there are no items in the collection,\\n     * the current item is set to undefined.\\n     */\\n    moveFirst(): void;\\n\\n    /**\\n     * Moves the current item to the next item in the collection. If the enumerator is at the end of\\n     * the collection or the collection is empty, the current item is set to undefined.\\n     */\\n    moveNext(): void;\\n}\\n\\ninterface EnumeratorConstructor {\\n    new <T = any>(safearray: SafeArray<T>): Enumerator<T>;\\n    new <T = any>(collection: { Item(index: any): T }): Enumerator<T>;\\n    new <T = any>(collection: any): Enumerator<T>;\\n}\\n\\ndeclare var Enumerator: EnumeratorConstructor;\\n\\n/**\\n * Enables reading from a COM safe array, which might have an alternate lower bound, or multiple dimensions.\\n */\\ninterface VBArray<T = any> {\\n    /**\\n     * Returns the number of dimensions (1-based).\\n     */\\n    dimensions(): number;\\n\\n    /**\\n     * Takes an index for each dimension in the array, and returns the item at the corresponding location.\\n     */\\n    getItem(dimension1Index: number, ...dimensionNIndexes: number[]): T;\\n\\n    /**\\n     * Returns the smallest available index for a given dimension.\\n     * @param dimension 1-based dimension (defaults to 1)\\n     */\\n    lbound(dimension?: number): number;\\n\\n    /**\\n     * Returns the largest available index for a given dimension.\\n     * @param dimension 1-based dimension (defaults to 1)\\n     */\\n    ubound(dimension?: number): number;\\n\\n    /**\\n     * Returns a Javascript array with all the elements in the VBArray. If there are multiple dimensions,\\n     * each successive dimension is appended to the end of the array.\\n     * Example: [[1,2,3],[4,5,6]] becomes [1,2,3,4,5,6]\\n     */\\n    toArray(): T[];\\n}\\n\\ninterface VBArrayConstructor {\\n    new <T = any>(safeArray: SafeArray<T>): VBArray<T>;\\n}\\n\\ndeclare var VBArray: VBArrayConstructor;\\n\\n/**\\n * Automation date (VT_DATE)\\n */\\ndeclare class VarDate {\\n    private constructor();\\n    private VarDate_typekey: VarDate;\\n}\\n\\ninterface DateConstructor {\\n    new (vd: VarDate): Date;\\n}\\n\\ninterface Date {\\n    getVarDate: () => VarDate;\\n}\\n\\n\\n/// <reference path=\\\"lib.dom.d.ts\\\" />\\n\\ninterface DOMTokenList {\\n    [Symbol.iterator](): IterableIterator<string>;\\n}\\n\\ninterface Headers {\\n    [Symbol.iterator](): IterableIterator<[string, string]>;\\n    /**\\n     * Returns an iterator allowing to go through all key/value pairs contained in this object.\\n     */\\n    entries(): IterableIterator<[string, string]>;\\n    /**\\n     * Returns an iterator allowing to go through all keys f the key/value pairs contained in this object.\\n     */\\n    keys(): IterableIterator<string>;\\n    /**\\n     * Returns an iterator allowing to go through all values of the key/value pairs contained in this object.\\n     */\\n    values(): IterableIterator<string>;\\n}\\n\\ninterface NodeList {\\n    /**\\n     * Returns an array of key, value pairs for every entry in the list\\n     */\\n    entries(): IterableIterator<[number, Node]>;\\n    /**\\n     * Performs the specified action for each node in an list.\\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.\\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n     */\\n    forEach(callbackfn: (value: Node, index: number, listObj: NodeList) => void, thisArg?: any): void;\\n    /**\\n     * Returns an list of keys in the list\\n     */\\n    keys(): IterableIterator<number>;\\n\\n    /**\\n     * Returns an list of values in the list\\n     */\\n    values(): IterableIterator<Node>;\\n\\n\\n    [Symbol.iterator](): IterableIterator<Node>;\\n}\\n\\ninterface NodeListOf<TNode extends Node> {\\n\\n    /**\\n     * Returns an array of key, value pairs for every entry in the list\\n     */\\n    entries(): IterableIterator<[number, TNode]>;\\n\\n    /**\\n     * Performs the specified action for each node in an list.\\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.\\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n     */\\n    forEach(callbackfn: (value: TNode, index: number, listObj: NodeListOf<TNode>) => void, thisArg?: any): void;\\n    /**\\n     * Returns an list of keys in the list\\n     */\\n    keys(): IterableIterator<number>;\\n    /**\\n     * Returns an list of values in the list\\n     */\\n    values(): IterableIterator<TNode>;\\n\\n    [Symbol.iterator](): IterableIterator<TNode>;\\n}\\n\\ninterface HTMLCollectionBase {\\n    [Symbol.iterator](): IterableIterator<Element>;\\n}\\n\\ninterface HTMLCollectionOf<T extends Element> {\\n    [Symbol.iterator](): IterableIterator<T>;\\n}\\n\\ninterface FormData {\\n    /**\\n     * Returns an array of key, value pairs for every entry in the list\\n     */\\n    entries(): IterableIterator<[string, string | File]>;\\n    /**\\n     * Returns a list of keys in the list\\n     */\\n    keys(): IterableIterator<string>;\\n    /**\\n     * Returns a list of values in the list\\n     */\\n    values(): IterableIterator<string | File>;\\n\\n    [Symbol.iterator](): IterableIterator<string | File>;\\n}\\n\\ninterface URLSearchParams {\\n    /**\\n     * Returns an array of key, value pairs for every entry in the search params\\n     */\\n    entries(): IterableIterator<[string, string]>;\\n    /**\\n     * Returns a list of keys in the search params\\n     */\\n    keys(): IterableIterator<string>;\\n    /**\\n     * Returns a list of values in the search params\\n     */\\n    values(): IterableIterator<string>;\\n    /**\\n     * iterate over key/value pairs\\n     */\\n    [Symbol.iterator](): IterableIterator<[string, string]>;\\n}\\n\";\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-es6-ts.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-ts.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-ts.js ***!
  \*****************************************************************************/
/*! exports provided: contents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contents\", function() { return contents; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar contents = \"/*! *****************************************************************************\\nCopyright (c) Microsoft Corporation. All rights reserved. \\nLicensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\nthis file except in compliance with the License. You may obtain a copy of the\\nLicense at http://www.apache.org/licenses/LICENSE-2.0  \\n \\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \\nMERCHANTABLITY OR NON-INFRINGEMENT. \\n \\nSee the Apache Version 2.0 License for specific language governing permissions\\nand limitations under the License.\\n***************************************************************************** */\\n\\n\\n\\n/// <reference no-default-lib=\\\"true\\\"/>\\n\\n\\n/////////////////////////////\\n/// ECMAScript APIs\\n/////////////////////////////\\n\\ndeclare const NaN: number;\\ndeclare const Infinity: number;\\n\\n/**\\n  * Evaluates JavaScript code and executes it.\\n  * @param x A String value that contains valid JavaScript code.\\n  */\\ndeclare function eval(x: string): any;\\n\\n/**\\n  * Converts A string to an integer.\\n  * @param s A string to convert into a number.\\n  * @param radix A value between 2 and 36 that specifies the base of the number in numString.\\n  * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\\n  * All other strings are considered decimal.\\n  */\\ndeclare function parseInt(s: string, radix?: number): number;\\n\\n/**\\n  * Converts a string to a floating-point number.\\n  * @param string A string that contains a floating-point number.\\n  */\\ndeclare function parseFloat(string: string): number;\\n\\n/**\\n  * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).\\n  * @param number A numeric value.\\n  */\\ndeclare function isNaN(number: number): boolean;\\n\\n/**\\n  * Determines whether a supplied number is finite.\\n  * @param number Any numeric value.\\n  */\\ndeclare function isFinite(number: number): boolean;\\n\\n/**\\n  * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\\n  * @param encodedURI A value representing an encoded URI.\\n  */\\ndeclare function decodeURI(encodedURI: string): string;\\n\\n/**\\n  * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\\n  * @param encodedURIComponent A value representing an encoded URI component.\\n  */\\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\\n\\n/**\\n  * Encodes a text string as a valid Uniform Resource Identifier (URI)\\n  * @param uri A value representing an encoded URI.\\n  */\\ndeclare function encodeURI(uri: string): string;\\n\\n/**\\n  * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\\n  * @param uriComponent A value representing an encoded URI component.\\n  */\\ndeclare function encodeURIComponent(uriComponent: string): string;\\n\\n/**\\n  * Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.\\n  * @param string A string value\\n  */\\ndeclare function escape(string: string): string;\\n\\n/**\\n  * Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.\\n  * @param string A string value\\n  */\\ndeclare function unescape(string: string): string;\\n\\ninterface PropertyDescriptor {\\n    configurable?: boolean;\\n    enumerable?: boolean;\\n    value?: any;\\n    writable?: boolean;\\n    get?(): any;\\n    set?(v: any): void;\\n}\\n\\ninterface PropertyDescriptorMap {\\n    [s: string]: PropertyDescriptor;\\n}\\n\\ninterface Object {\\n    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */\\n    constructor: Function;\\n\\n    /** Returns a string representation of an object. */\\n    toString(): string;\\n\\n    /** Returns a date converted to a string using the current locale. */\\n    toLocaleString(): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): Object;\\n\\n    /**\\n      * Determines whether an object has a property with the specified name.\\n      * @param v A property name.\\n      */\\n    hasOwnProperty(v: string): boolean;\\n\\n    /**\\n      * Determines whether an object exists in another object's prototype chain.\\n      * @param v Another object whose prototype chain is to be checked.\\n      */\\n    isPrototypeOf(v: Object): boolean;\\n\\n    /**\\n      * Determines whether a specified property is enumerable.\\n      * @param v A property name.\\n      */\\n    propertyIsEnumerable(v: string): boolean;\\n}\\n\\ninterface ObjectConstructor {\\n    new(value?: any): Object;\\n    (): any;\\n    (value: any): any;\\n\\n    /** A reference to the prototype for a class of objects. */\\n    readonly prototype: Object;\\n\\n    /**\\n      * Returns the prototype of an object.\\n      * @param o The object that references the prototype.\\n      */\\n    getPrototypeOf(o: any): any;\\n\\n    /**\\n      * Gets the own property descriptor of the specified object.\\n      * An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.\\n      * @param o Object that contains the property.\\n      * @param p Name of the property.\\n    */\\n    getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor | undefined;\\n\\n    /**\\n      * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\\n      * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\\n      * @param o Object that contains the own properties.\\n      */\\n    getOwnPropertyNames(o: any): string[];\\n\\n    /**\\n      * Creates an object that has the specified prototype or that has null prototype.\\n      * @param o Object to use as a prototype. May be null.\\n      */\\n    create(o: object | null): any;\\n\\n    /**\\n      * Creates an object that has the specified prototype, and that optionally contains specified properties.\\n      * @param o Object to use as a prototype. May be null\\n      * @param properties JavaScript object that contains one or more property descriptors.\\n      */\\n    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;\\n\\n    /**\\n      * Adds a property to an object, or modifies attributes of an existing property.\\n      * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\\n      * @param p The property name.\\n      * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\\n      */\\n    defineProperty(o: any, p: string, attributes: PropertyDescriptor & ThisType<any>): any;\\n\\n    /**\\n      * Adds one or more properties to an object, and/or modifies attributes of existing properties.\\n      * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\\n      * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\\n      */\\n    defineProperties(o: any, properties: PropertyDescriptorMap & ThisType<any>): any;\\n\\n    /**\\n      * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    seal<T>(o: T): T;\\n\\n    /**\\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    freeze<T>(a: T[]): ReadonlyArray<T>;\\n\\n    /**\\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    freeze<T extends Function>(f: T): T;\\n\\n    /**\\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\\n      * @param o Object on which to lock the attributes.\\n      */\\n    freeze<T>(o: T): Readonly<T>;\\n\\n    /**\\n      * Prevents the addition of new properties to an object.\\n      * @param o Object to make non-extensible.\\n      */\\n    preventExtensions<T>(o: T): T;\\n\\n    /**\\n      * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\\n      * @param o Object to test.\\n      */\\n    isSealed(o: any): boolean;\\n\\n    /**\\n      * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\\n      * @param o Object to test.\\n      */\\n    isFrozen(o: any): boolean;\\n\\n    /**\\n      * Returns a value that indicates whether new properties can be added to an object.\\n      * @param o Object to test.\\n      */\\n    isExtensible(o: any): boolean;\\n\\n    /**\\n      * Returns the names of the enumerable properties and methods of an object.\\n      * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\\n      */\\n    keys(o: {}): string[];\\n}\\n\\n/**\\n  * Provides functionality common to all JavaScript objects.\\n  */\\ndeclare const Object: ObjectConstructor;\\n\\n/**\\n  * Creates a new function.\\n  */\\ninterface Function {\\n    /**\\n      * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\\n      * @param thisArg The object to be used as the this object.\\n      * @param argArray A set of arguments to be passed to the function.\\n      */\\n    apply(this: Function, thisArg: any, argArray?: any): any;\\n\\n    /**\\n      * Calls a method of an object, substituting another object for the current object.\\n      * @param thisArg The object to be used as the current object.\\n      * @param argArray A list of arguments to be passed to the method.\\n      */\\n    call(this: Function, thisArg: any, ...argArray: any[]): any;\\n\\n    /**\\n      * For a given function, creates a bound function that has the same body as the original function.\\n      * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\\n      * @param thisArg An object to which the this keyword can refer inside the new function.\\n      * @param argArray A list of arguments to be passed to the new function.\\n      */\\n    bind(this: Function, thisArg: any, ...argArray: any[]): any;\\n\\n    /** Returns a string representation of a function. */\\n    toString(): string;\\n\\n    prototype: any;\\n    readonly length: number;\\n\\n    // Non-standard extensions\\n    arguments: any;\\n    caller: Function;\\n}\\n\\ninterface FunctionConstructor {\\n    /**\\n      * Creates a new function.\\n      * @param args A list of arguments the function accepts.\\n      */\\n    new(...args: string[]): Function;\\n    (...args: string[]): Function;\\n    readonly prototype: Function;\\n}\\n\\ndeclare const Function: FunctionConstructor;\\n\\ninterface IArguments {\\n    [index: number]: any;\\n    length: number;\\n    callee: Function;\\n}\\n\\ninterface String {\\n    /** Returns a string representation of a string. */\\n    toString(): string;\\n\\n    /**\\n      * Returns the character at the specified index.\\n      * @param pos The zero-based index of the desired character.\\n      */\\n    charAt(pos: number): string;\\n\\n    /**\\n      * Returns the Unicode value of the character at the specified location.\\n      * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\\n      */\\n    charCodeAt(index: number): number;\\n\\n    /**\\n      * Returns a string that contains the concatenation of two or more strings.\\n      * @param strings The strings to append to the end of the string.\\n      */\\n    concat(...strings: string[]): string;\\n\\n    /**\\n      * Returns the position of the first occurrence of a substring.\\n      * @param searchString The substring to search for in the string\\n      * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\\n      */\\n    indexOf(searchString: string, position?: number): number;\\n\\n    /**\\n      * Returns the last occurrence of a substring in the string.\\n      * @param searchString The substring to search for.\\n      * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\\n      */\\n    lastIndexOf(searchString: string, position?: number): number;\\n\\n    /**\\n      * Determines whether two strings are equivalent in the current locale.\\n      * @param that String to compare to target string\\n      */\\n    localeCompare(that: string): number;\\n\\n    /**\\n      * Matches a string with a regular expression, and returns an array containing the results of that search.\\n      * @param regexp A variable name or string literal containing the regular expression pattern and flags.\\n      */\\n    match(regexp: string | RegExp): RegExpMatchArray | null;\\n\\n    /**\\n      * Replaces text in a string, using a regular expression or search string.\\n      * @param searchValue A string to search for.\\n      * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n      */\\n    replace(searchValue: string | RegExp, replaceValue: string): string;\\n\\n    /**\\n      * Replaces text in a string, using a regular expression or search string.\\n      * @param searchValue A string to search for.\\n      * @param replacer A function that returns the replacement text.\\n      */\\n    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\\n\\n    /**\\n      * Finds the first substring match in a regular expression search.\\n      * @param regexp The regular expression pattern and applicable flags.\\n      */\\n    search(regexp: string | RegExp): number;\\n\\n    /**\\n      * Returns a section of a string.\\n      * @param start The index to the beginning of the specified portion of stringObj.\\n      * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\n      * If this value is not specified, the substring continues to the end of stringObj.\\n      */\\n    slice(start?: number, end?: number): string;\\n\\n    /**\\n      * Split a string into substrings using the specified separator and return them as an array.\\n      * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n      * @param limit A value used to limit the number of elements returned in the array.\\n      */\\n    split(separator: string | RegExp, limit?: number): string[];\\n\\n    /**\\n      * Returns the substring at the specified location within a String object.\\n      * @param start The zero-based index number indicating the beginning of the substring.\\n      * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\n      * If end is omitted, the characters from start through the end of the original string are returned.\\n      */\\n    substring(start: number, end?: number): string;\\n\\n    /** Converts all the alphabetic characters in a string to lowercase. */\\n    toLowerCase(): string;\\n\\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. */\\n    toLocaleLowerCase(): string;\\n\\n    /** Converts all the alphabetic characters in a string to uppercase. */\\n    toUpperCase(): string;\\n\\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. */\\n    toLocaleUpperCase(): string;\\n\\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\\n    trim(): string;\\n\\n    /** Returns the length of a String object. */\\n    readonly length: number;\\n\\n    // IE extensions\\n    /**\\n      * Gets a substring beginning at the specified location and having the specified length.\\n      * @param from The starting position of the desired substring. The index of the first character in the string is zero.\\n      * @param length The number of characters to include in the returned substring.\\n      */\\n    substr(from: number, length?: number): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): string;\\n\\n    readonly [index: number]: string;\\n}\\n\\ninterface StringConstructor {\\n    new(value?: any): String;\\n    (value?: any): string;\\n    readonly prototype: String;\\n    fromCharCode(...codes: number[]): string;\\n}\\n\\n/**\\n  * Allows manipulation and formatting of text strings and determination and location of substrings within strings.\\n  */\\ndeclare const String: StringConstructor;\\n\\ninterface Boolean {\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): boolean;\\n}\\n\\ninterface BooleanConstructor {\\n    new(value?: any): Boolean;\\n    (value?: any): boolean;\\n    readonly prototype: Boolean;\\n}\\n\\ndeclare const Boolean: BooleanConstructor;\\n\\ninterface Number {\\n    /**\\n      * Returns a string representation of an object.\\n      * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\\n      */\\n    toString(radix?: number): string;\\n\\n    /**\\n      * Returns a string representing a number in fixed-point notation.\\n      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\\n      */\\n    toFixed(fractionDigits?: number): string;\\n\\n    /**\\n      * Returns a string containing a number represented in exponential notation.\\n      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\\n      */\\n    toExponential(fractionDigits?: number): string;\\n\\n    /**\\n      * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n      * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\\n      */\\n    toPrecision(precision?: number): string;\\n\\n    /** Returns the primitive value of the specified object. */\\n    valueOf(): number;\\n}\\n\\ninterface NumberConstructor {\\n    new(value?: any): Number;\\n    (value?: any): number;\\n    readonly prototype: Number;\\n\\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\\n    readonly MAX_VALUE: number;\\n\\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\\n    readonly MIN_VALUE: number;\\n\\n    /**\\n      * A value that is not a number.\\n      * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\\n      */\\n    readonly NaN: number;\\n\\n    /**\\n      * A value that is less than the largest negative number that can be represented in JavaScript.\\n      * JavaScript displays NEGATIVE_INFINITY values as -infinity.\\n      */\\n    readonly NEGATIVE_INFINITY: number;\\n\\n    /**\\n      * A value greater than the largest number that can be represented in JavaScript.\\n      * JavaScript displays POSITIVE_INFINITY values as infinity.\\n      */\\n    readonly POSITIVE_INFINITY: number;\\n}\\n\\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\\ndeclare const Number: NumberConstructor;\\n\\ninterface TemplateStringsArray extends ReadonlyArray<string> {\\n    readonly raw: ReadonlyArray<string>;\\n}\\n\\ninterface Math {\\n    /** The mathematical constant e. This is Euler's number, the base of natural logarithms. */\\n    readonly E: number;\\n    /** The natural logarithm of 10. */\\n    readonly LN10: number;\\n    /** The natural logarithm of 2. */\\n    readonly LN2: number;\\n    /** The base-2 logarithm of e. */\\n    readonly LOG2E: number;\\n    /** The base-10 logarithm of e. */\\n    readonly LOG10E: number;\\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\\n    readonly PI: number;\\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\\n    readonly SQRT1_2: number;\\n    /** The square root of 2. */\\n    readonly SQRT2: number;\\n    /**\\n      * Returns the absolute value of a number (the value without regard to whether it is positive or negative).\\n      * For example, the absolute value of -5 is the same as the absolute value of 5.\\n      * @param x A numeric expression for which the absolute value is needed.\\n      */\\n    abs(x: number): number;\\n    /**\\n      * Returns the arc cosine (or inverse cosine) of a number.\\n      * @param x A numeric expression.\\n      */\\n    acos(x: number): number;\\n    /**\\n      * Returns the arcsine of a number.\\n      * @param x A numeric expression.\\n      */\\n    asin(x: number): number;\\n    /**\\n      * Returns the arctangent of a number.\\n      * @param x A numeric expression for which the arctangent is needed.\\n      */\\n    atan(x: number): number;\\n    /**\\n      * Returns the angle (in radians) from the X axis to a point.\\n      * @param y A numeric expression representing the cartesian y-coordinate.\\n      * @param x A numeric expression representing the cartesian x-coordinate.\\n      */\\n    atan2(y: number, x: number): number;\\n    /**\\n      * Returns the smallest integer greater than or equal to its numeric argument.\\n      * @param x A numeric expression.\\n      */\\n    ceil(x: number): number;\\n    /**\\n      * Returns the cosine of a number.\\n      * @param x A numeric expression that contains an angle measured in radians.\\n      */\\n    cos(x: number): number;\\n    /**\\n      * Returns e (the base of natural logarithms) raised to a power.\\n      * @param x A numeric expression representing the power of e.\\n      */\\n    exp(x: number): number;\\n    /**\\n      * Returns the greatest integer less than or equal to its numeric argument.\\n      * @param x A numeric expression.\\n      */\\n    floor(x: number): number;\\n    /**\\n      * Returns the natural logarithm (base e) of a number.\\n      * @param x A numeric expression.\\n      */\\n    log(x: number): number;\\n    /**\\n      * Returns the larger of a set of supplied numeric expressions.\\n      * @param values Numeric expressions to be evaluated.\\n      */\\n    max(...values: number[]): number;\\n    /**\\n      * Returns the smaller of a set of supplied numeric expressions.\\n      * @param values Numeric expressions to be evaluated.\\n      */\\n    min(...values: number[]): number;\\n    /**\\n      * Returns the value of a base expression taken to a specified power.\\n      * @param x The base value of the expression.\\n      * @param y The exponent value of the expression.\\n      */\\n    pow(x: number, y: number): number;\\n    /** Returns a pseudorandom number between 0 and 1. */\\n    random(): number;\\n    /**\\n      * Returns a supplied numeric expression rounded to the nearest number.\\n      * @param x The value to be rounded to the nearest number.\\n      */\\n    round(x: number): number;\\n    /**\\n      * Returns the sine of a number.\\n      * @param x A numeric expression that contains an angle measured in radians.\\n      */\\n    sin(x: number): number;\\n    /**\\n      * Returns the square root of a number.\\n      * @param x A numeric expression.\\n      */\\n    sqrt(x: number): number;\\n    /**\\n      * Returns the tangent of a number.\\n      * @param x A numeric expression that contains an angle measured in radians.\\n      */\\n    tan(x: number): number;\\n}\\n/** An intrinsic object that provides basic mathematics functionality and constants. */\\ndeclare const Math: Math;\\n\\n/** Enables basic storage and retrieval of dates and times. */\\ninterface Date {\\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\\n    toString(): string;\\n    /** Returns a date as a string value. */\\n    toDateString(): string;\\n    /** Returns a time as a string value. */\\n    toTimeString(): string;\\n    /** Returns a value as a string value appropriate to the host environment's current locale. */\\n    toLocaleString(): string;\\n    /** Returns a date as a string value appropriate to the host environment's current locale. */\\n    toLocaleDateString(): string;\\n    /** Returns a time as a string value appropriate to the host environment's current locale. */\\n    toLocaleTimeString(): string;\\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\\n    valueOf(): number;\\n    /** Gets the time value in milliseconds. */\\n    getTime(): number;\\n    /** Gets the year, using local time. */\\n    getFullYear(): number;\\n    /** Gets the year using Universal Coordinated Time (UTC). */\\n    getUTCFullYear(): number;\\n    /** Gets the month, using local time. */\\n    getMonth(): number;\\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCMonth(): number;\\n    /** Gets the day-of-the-month, using local time. */\\n    getDate(): number;\\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\\n    getUTCDate(): number;\\n    /** Gets the day of the week, using local time. */\\n    getDay(): number;\\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\\n    getUTCDay(): number;\\n    /** Gets the hours in a date, using local time. */\\n    getHours(): number;\\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\\n    getUTCHours(): number;\\n    /** Gets the minutes of a Date object, using local time. */\\n    getMinutes(): number;\\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCMinutes(): number;\\n    /** Gets the seconds of a Date object, using local time. */\\n    getSeconds(): number;\\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCSeconds(): number;\\n    /** Gets the milliseconds of a Date, using local time. */\\n    getMilliseconds(): number;\\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\\n    getUTCMilliseconds(): number;\\n    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */\\n    getTimezoneOffset(): number;\\n    /**\\n      * Sets the date and time value in the Date object.\\n      * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.\\n      */\\n    setTime(time: number): number;\\n    /**\\n      * Sets the milliseconds value in the Date object using local time.\\n      * @param ms A numeric value equal to the millisecond value.\\n      */\\n    setMilliseconds(ms: number): number;\\n    /**\\n      * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\\n      * @param ms A numeric value equal to the millisecond value.\\n      */\\n    setUTCMilliseconds(ms: number): number;\\n\\n    /**\\n      * Sets the seconds value in the Date object using local time.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setSeconds(sec: number, ms?: number): number;\\n    /**\\n      * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setUTCSeconds(sec: number, ms?: number): number;\\n    /**\\n      * Sets the minutes value in the Date object using local time.\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setMinutes(min: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setUTCMinutes(min: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the hour value in the Date object using local time.\\n      * @param hours A numeric value equal to the hours value.\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setHours(hours: number, min?: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\\n      * @param hours A numeric value equal to the hours value.\\n      * @param min A numeric value equal to the minutes value.\\n      * @param sec A numeric value equal to the seconds value.\\n      * @param ms A numeric value equal to the milliseconds value.\\n      */\\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;\\n    /**\\n      * Sets the numeric day-of-the-month value of the Date object using local time.\\n      * @param date A numeric value equal to the day of the month.\\n      */\\n    setDate(date: number): number;\\n    /**\\n      * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\\n      * @param date A numeric value equal to the day of the month.\\n      */\\n    setUTCDate(date: number): number;\\n    /**\\n      * Sets the month value in the Date object using local time.\\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\\n      * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\\n      */\\n    setMonth(month: number, date?: number): number;\\n    /**\\n      * Sets the month value in the Date object using Universal Coordinated Time (UTC).\\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\\n      * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\\n      */\\n    setUTCMonth(month: number, date?: number): number;\\n    /**\\n      * Sets the year of the Date object using local time.\\n      * @param year A numeric value for the year.\\n      * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\\n      * @param date A numeric value equal for the day of the month.\\n      */\\n    setFullYear(year: number, month?: number, date?: number): number;\\n    /**\\n      * Sets the year value in the Date object using Universal Coordinated Time (UTC).\\n      * @param year A numeric value equal to the year.\\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\\n      * @param date A numeric value equal to the day of the month.\\n      */\\n    setUTCFullYear(year: number, month?: number, date?: number): number;\\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\\n    toUTCString(): string;\\n    /** Returns a date as a string value in ISO format. */\\n    toISOString(): string;\\n    /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */\\n    toJSON(key?: any): string;\\n}\\n\\ninterface DateConstructor {\\n    new(): Date;\\n    new(value: number): Date;\\n    new(value: string): Date;\\n    new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\\n    (): string;\\n    readonly prototype: Date;\\n    /**\\n      * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\\n      * @param s A date string\\n      */\\n    parse(s: string): number;\\n    /**\\n      * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\\n      * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\\n      * @param month The month as an number between 0 and 11 (January to December).\\n      * @param date The date as an number between 1 and 31.\\n      * @param hours Must be supplied if minutes is supplied. An number from 0 to 23 (midnight to 11pm) that specifies the hour.\\n      * @param minutes Must be supplied if seconds is supplied. An number from 0 to 59 that specifies the minutes.\\n      * @param seconds Must be supplied if milliseconds is supplied. An number from 0 to 59 that specifies the seconds.\\n      * @param ms An number from 0 to 999 that specifies the milliseconds.\\n      */\\n    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\\n    now(): number;\\n}\\n\\ndeclare const Date: DateConstructor;\\n\\ninterface RegExpMatchArray extends Array<string> {\\n    index?: number;\\n    input?: string;\\n}\\n\\ninterface RegExpExecArray extends Array<string> {\\n    index: number;\\n    input: string;\\n}\\n\\ninterface RegExp {\\n    /**\\n      * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\\n      * @param string The String object or string literal on which to perform the search.\\n      */\\n    exec(string: string): RegExpExecArray | null;\\n\\n    /**\\n      * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\\n      * @param string String on which to perform the search.\\n      */\\n    test(string: string): boolean;\\n\\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */\\n    readonly source: string;\\n\\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\\n    readonly global: boolean;\\n\\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\\n    readonly ignoreCase: boolean;\\n\\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\\n    readonly multiline: boolean;\\n\\n    lastIndex: number;\\n\\n    // Non-standard extensions\\n    compile(): this;\\n}\\n\\ninterface RegExpConstructor {\\n    new(pattern: RegExp | string): RegExp;\\n    new(pattern: string, flags?: string): RegExp;\\n    (pattern: RegExp | string): RegExp;\\n    (pattern: string, flags?: string): RegExp;\\n    readonly prototype: RegExp;\\n\\n    // Non-standard extensions\\n    $1: string;\\n    $2: string;\\n    $3: string;\\n    $4: string;\\n    $5: string;\\n    $6: string;\\n    $7: string;\\n    $8: string;\\n    $9: string;\\n    lastMatch: string;\\n}\\n\\ndeclare const RegExp: RegExpConstructor;\\n\\ninterface Error {\\n    name: string;\\n    message: string;\\n    stack?: string;\\n}\\n\\ninterface ErrorConstructor {\\n    new(message?: string): Error;\\n    (message?: string): Error;\\n    readonly prototype: Error;\\n}\\n\\ndeclare const Error: ErrorConstructor;\\n\\ninterface EvalError extends Error {\\n}\\n\\ninterface EvalErrorConstructor {\\n    new(message?: string): EvalError;\\n    (message?: string): EvalError;\\n    readonly prototype: EvalError;\\n}\\n\\ndeclare const EvalError: EvalErrorConstructor;\\n\\ninterface RangeError extends Error {\\n}\\n\\ninterface RangeErrorConstructor {\\n    new(message?: string): RangeError;\\n    (message?: string): RangeError;\\n    readonly prototype: RangeError;\\n}\\n\\ndeclare const RangeError: RangeErrorConstructor;\\n\\ninterface ReferenceError extends Error {\\n}\\n\\ninterface ReferenceErrorConstructor {\\n    new(message?: string): ReferenceError;\\n    (message?: string): ReferenceError;\\n    readonly prototype: ReferenceError;\\n}\\n\\ndeclare const ReferenceError: ReferenceErrorConstructor;\\n\\ninterface SyntaxError extends Error {\\n}\\n\\ninterface SyntaxErrorConstructor {\\n    new(message?: string): SyntaxError;\\n    (message?: string): SyntaxError;\\n    readonly prototype: SyntaxError;\\n}\\n\\ndeclare const SyntaxError: SyntaxErrorConstructor;\\n\\ninterface TypeError extends Error {\\n}\\n\\ninterface TypeErrorConstructor {\\n    new(message?: string): TypeError;\\n    (message?: string): TypeError;\\n    readonly prototype: TypeError;\\n}\\n\\ndeclare const TypeError: TypeErrorConstructor;\\n\\ninterface URIError extends Error {\\n}\\n\\ninterface URIErrorConstructor {\\n    new(message?: string): URIError;\\n    (message?: string): URIError;\\n    readonly prototype: URIError;\\n}\\n\\ndeclare const URIError: URIErrorConstructor;\\n\\ninterface JSON {\\n    /**\\n      * Converts a JavaScript Object Notation (JSON) string into an object.\\n      * @param text A valid JSON string.\\n      * @param reviver A function that transforms the results. This function is called for each member of the object.\\n      * If a member contains nested objects, the nested objects are transformed before the parent object is.\\n      */\\n    parse(text: string, reviver?: (key: any, value: any) => any): any;\\n    /**\\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\\n      * @param value A JavaScript value, usually an object or array, to be converted.\\n      * @param replacer A function that transforms the results.\\n      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\\n      */\\n    stringify(value: any, replacer?: (key: string, value: any) => any, space?: string | number): string;\\n    /**\\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\\n      * @param value A JavaScript value, usually an object or array, to be converted.\\n      * @param replacer An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.\\n      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\\n      */\\n    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;\\n}\\n\\n/**\\n  * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\\n  */\\ndeclare const JSON: JSON;\\n\\n\\n/////////////////////////////\\n/// ECMAScript Array API (specially handled by compiler)\\n/////////////////////////////\\n\\ninterface ReadonlyArray<T> {\\n    /**\\n      * Gets the length of the array. This is a number one higher than the highest element defined in an array.\\n      */\\n    readonly length: number;\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n    /**\\n      * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\\n      */\\n    toLocaleString(): string;\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: ConcatArray<T>[]): T[];\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: (T | ConcatArray<T>)[]): T[];\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): T[];\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\\n      */\\n    indexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Returns the index of the last occurrence of a specified value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\\n      */\\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => void, thisArg?: any): void;\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map<U>(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => U, thisArg?: any): U[];\\n    /**\\n     * Returns the elements of an array that meet the condition specified in a callback function.\\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n     */\\n    filter<S extends T>(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => value is S, thisArg?: any): S[];\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: T, index: number, array: ReadonlyArray<T>) => any, thisArg?: any): T[];\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T): T;\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => U, initialValue: U): U;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T): T;\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: ReadonlyArray<T>) => U, initialValue: U): U;\\n\\n    readonly [n: number]: T;\\n}\\n\\ninterface ConcatArray<T> {\\n    readonly length: number;\\n    readonly [n: number]: T;\\n    join(separator?: string): string;\\n    slice(start?: number, end?: number): T[];\\n}\\n\\ninterface Array<T> {\\n    /**\\n      * Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\\n      */\\n    length: number;\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n    /**\\n      * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\\n      */\\n    toLocaleString(): string;\\n    /**\\n      * Appends new elements to an array, and returns the new length of the array.\\n      * @param items New elements of the Array.\\n      */\\n    push(...items: T[]): number;\\n    /**\\n      * Removes the last element from an array and returns it.\\n      */\\n    pop(): T | undefined;\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: ConcatArray<T>[]): T[];\\n    /**\\n      * Combines two or more arrays.\\n      * @param items Additional items to add to the end of array1.\\n      */\\n    concat(...items: (T | ConcatArray<T>)[]): T[];\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): T[];\\n    /**\\n      * Removes the first element from an array and returns it.\\n      */\\n    shift(): T | undefined;\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): T[];\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: T, b: T) => number): this;\\n    /**\\n      * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n      * @param start The zero-based location in the array from which to start removing elements.\\n      * @param deleteCount The number of elements to remove.\\n      */\\n    splice(start: number, deleteCount?: number): T[];\\n    /**\\n      * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n      * @param start The zero-based location in the array from which to start removing elements.\\n      * @param deleteCount The number of elements to remove.\\n      * @param items Elements to insert into the array in place of the deleted elements.\\n      */\\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\\n    /**\\n      * Inserts new elements at the start of an array.\\n      * @param items  Elements to insert at the start of the Array.\\n      */\\n    unshift(...items: T[]): number;\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\\n      */\\n    indexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Returns the index of the last occurrence of a specified value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\\n      */\\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\\n    /**\\n     * Returns the elements of an array that meet the condition specified in a callback function.\\n     * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n     */\\n    filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: T, index: number, array: T[]) => any, thisArg?: any): T[];\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\\n\\n    [n: number]: T;\\n}\\n\\ninterface ArrayConstructor {\\n    new(arrayLength?: number): any[];\\n    new <T>(arrayLength: number): T[];\\n    new <T>(...items: T[]): T[];\\n    (arrayLength?: number): any[];\\n    <T>(arrayLength: number): T[];\\n    <T>(...items: T[]): T[];\\n    isArray(arg: any): arg is Array<any>;\\n    readonly prototype: Array<any>;\\n}\\n\\ndeclare const Array: ArrayConstructor;\\n\\ninterface TypedPropertyDescriptor<T> {\\n    enumerable?: boolean;\\n    configurable?: boolean;\\n    writable?: boolean;\\n    value?: T;\\n    get?: () => T;\\n    set?: (value: T) => void;\\n}\\n\\ndeclare type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;\\ndeclare type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void;\\ndeclare type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\\ndeclare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) => void;\\n\\ndeclare type PromiseConstructorLike = new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;\\n\\ninterface PromiseLike<T> {\\n    /**\\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\\n     * @param onfulfilled The callback to execute when the Promise is resolved.\\n     * @param onrejected The callback to execute when the Promise is rejected.\\n     * @returns A Promise for the completion of which ever callback is executed.\\n     */\\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;\\n}\\n\\n/**\\n * Represents the completion of an asynchronous operation\\n */\\ninterface Promise<T> {\\n    /**\\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\\n     * @param onfulfilled The callback to execute when the Promise is resolved.\\n     * @param onrejected The callback to execute when the Promise is rejected.\\n     * @returns A Promise for the completion of which ever callback is executed.\\n     */\\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\\n\\n    /**\\n     * Attaches a callback for only the rejection of the Promise.\\n     * @param onrejected The callback to execute when the Promise is rejected.\\n     * @returns A Promise for the completion of the callback.\\n     */\\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;\\n}\\n\\ninterface ArrayLike<T> {\\n    readonly length: number;\\n    readonly [n: number]: T;\\n}\\n\\n/**\\n * Make all properties in T optional\\n */\\ntype Partial<T> = {\\n    [P in keyof T]?: T[P];\\n};\\n\\n/**\\n * Make all properties in T required\\n */\\ntype Required<T> = {\\n    [P in keyof T]-?: T[P];\\n};\\n\\n/**\\n * Make all properties in T readonly\\n */\\ntype Readonly<T> = {\\n    readonly [P in keyof T]: T[P];\\n};\\n\\n/**\\n * From T pick a set of properties K\\n */\\ntype Pick<T, K extends keyof T> = {\\n    [P in K]: T[P];\\n};\\n\\n/**\\n * Construct a type with a set of properties K of type T\\n */\\ntype Record<K extends string, T> = {\\n    [P in K]: T;\\n};\\n\\n/**\\n * Exclude from T those types that are assignable to U\\n */\\ntype Exclude<T, U> = T extends U ? never : T;\\n\\n/**\\n * Extract from T those types that are assignable to U\\n */\\ntype Extract<T, U> = T extends U ? T : never;\\n\\n/**\\n * Exclude null and undefined from T\\n */\\ntype NonNullable<T> = T extends null | undefined ? never : T;\\n\\n/**\\n * Obtain the return type of a function type\\n */\\ntype ReturnType<T extends (...args: any[]) => any> = T extends (...args: any[]) => infer R ? R : any;\\n\\n/**\\n * Obtain the return type of a constructor function type\\n */\\ntype InstanceType<T extends new (...args: any[]) => any> = T extends new (...args: any[]) => infer R ? R : any;\\n\\n/**\\n * Marker for contextual 'this' type\\n */\\ninterface ThisType<T> { }\\n\\n/**\\n  * Represents a raw buffer of binary data, which is used to store data for the\\n  * different typed arrays. ArrayBuffers cannot be read from or written to directly,\\n  * but can be passed to a typed array or DataView Object to interpret the raw\\n  * buffer as needed.\\n  */\\ninterface ArrayBuffer {\\n    /**\\n      * Read-only. The length of the ArrayBuffer (in bytes).\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * Returns a section of an ArrayBuffer.\\n      */\\n    slice(begin: number, end?: number): ArrayBuffer;\\n}\\n\\n/**\\n * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.\\n */\\ninterface ArrayBufferTypes {\\n    ArrayBuffer: ArrayBuffer;\\n}\\ntype ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];\\n\\ninterface ArrayBufferConstructor {\\n    readonly prototype: ArrayBuffer;\\n    new(byteLength: number): ArrayBuffer;\\n    isView(arg: any): arg is ArrayBufferView;\\n}\\ndeclare const ArrayBuffer: ArrayBufferConstructor;\\n\\ninterface ArrayBufferView {\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    byteOffset: number;\\n}\\n\\ninterface DataView {\\n    readonly buffer: ArrayBuffer;\\n    readonly byteLength: number;\\n    readonly byteOffset: number;\\n    /**\\n      * Gets the Float32 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Float64 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Int8 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getInt8(byteOffset: number): number;\\n\\n    /**\\n      * Gets the Int16 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\\n    /**\\n      * Gets the Int32 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Uint8 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getUint8(byteOffset: number): number;\\n\\n    /**\\n      * Gets the Uint16 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Gets the Uint32 value at the specified byte offset from the start of the view. There is\\n      * no alignment constraint; multi-byte values may be fetched from any offset.\\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\\n      */\\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\\n\\n    /**\\n      * Stores an Float32 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Float64 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Int8 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      */\\n    setInt8(byteOffset: number, value: number): void;\\n\\n    /**\\n      * Stores an Int16 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Int32 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Uint8 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      */\\n    setUint8(byteOffset: number, value: number): void;\\n\\n    /**\\n      * Stores an Uint16 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\\n\\n    /**\\n      * Stores an Uint32 value at the specified byte offset from the start of the view.\\n      * @param byteOffset The place in the buffer at which the value should be set.\\n      * @param value The value to set.\\n      * @param littleEndian If false or undefined, a big-endian value should be written,\\n      * otherwise a little-endian value should be written.\\n      */\\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\\n}\\n\\ninterface DataViewConstructor {\\n    new(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number): DataView;\\n}\\ndeclare const DataView: DataViewConstructor;\\n\\n/**\\n  * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\\n  * number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Int8Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Int8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Int8Array) => any, thisArg?: any): Int8Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Int8Array) => number, thisArg?: any): Int8Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Int8Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Int8Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Int8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Int8Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\ninterface Int8ArrayConstructor {\\n    readonly prototype: Int8Array;\\n    new(length: number): Int8Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int8Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int8Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Int8Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;\\n\\n\\n}\\ndeclare const Int8Array: Int8ArrayConstructor;\\n\\n/**\\n  * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint8Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint8Array) => any, thisArg?: any): Uint8Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint8Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint8Array) => number, thisArg?: any): Uint8Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint8Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint8Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint8Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint8Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint8ArrayConstructor {\\n    readonly prototype: Uint8Array;\\n    new(length: number): Uint8Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint8Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;\\n\\n}\\ndeclare const Uint8Array: Uint8ArrayConstructor;\\n\\n/**\\n  * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\\n  * If the requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint8ClampedArray {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => any, thisArg?: any): Uint8ClampedArray;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => number, thisArg?: any): Uint8ClampedArray;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint8ClampedArray;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint8ClampedArray;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint8ClampedArray;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint8ClampedArrayConstructor {\\n    readonly prototype: Uint8ClampedArray;\\n    new(length: number): Uint8ClampedArray;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint8ClampedArray;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint8ClampedArray;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;\\n}\\ndeclare const Uint8ClampedArray: Uint8ClampedArrayConstructor;\\n\\n/**\\n  * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Int16Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Int16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Int16Array) => any, thisArg?: any): Int16Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Int16Array) => void, thisArg?: any): void;\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Int16Array) => number, thisArg?: any): Int16Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Int16Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Int16Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Int16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Int16Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Int16ArrayConstructor {\\n    readonly prototype: Int16Array;\\n    new(length: number): Int16Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int16Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int16Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Int16Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;\\n\\n\\n}\\ndeclare const Int16Array: Int16ArrayConstructor;\\n\\n/**\\n  * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint16Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint16Array) => any, thisArg?: any): Uint16Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint16Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint16Array) => number, thisArg?: any): Uint16Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint16Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint16Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint16Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint16Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint16ArrayConstructor {\\n    readonly prototype: Uint16Array;\\n    new(length: number): Uint16Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint16Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint16Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint16Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;\\n\\n\\n}\\ndeclare const Uint16Array: Uint16ArrayConstructor;\\n/**\\n  * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Int32Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Int32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Int32Array) => any, thisArg?: any): Int32Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Int32Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Int32Array) => number, thisArg?: any): Int32Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Int32Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Int32Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Int32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Int32Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Int32ArrayConstructor {\\n    readonly prototype: Int32Array;\\n    new(length: number): Int32Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Int32Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Int32Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Int32Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;\\n\\n}\\ndeclare const Int32Array: Int32ArrayConstructor;\\n\\n/**\\n  * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\\n  * requested number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Uint32Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Uint32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Uint32Array) => any, thisArg?: any): Uint32Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Uint32Array) => void, thisArg?: any): void;\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Uint32Array) => number, thisArg?: any): Uint32Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Uint32Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Uint32Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Uint32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Uint32Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Uint32ArrayConstructor {\\n    readonly prototype: Uint32Array;\\n    new(length: number): Uint32Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Uint32Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Uint32Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Uint32Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;\\n\\n}\\ndeclare const Uint32Array: Uint32ArrayConstructor;\\n\\n/**\\n  * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\\n  * of bytes could not be allocated an exception is raised.\\n  */\\ninterface Float32Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Float32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Float32Array) => any, thisArg?: any): Float32Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Float32Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Float32Array) => number, thisArg?: any): Float32Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Float32Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Float32Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Float32Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Float32Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Float32ArrayConstructor {\\n    readonly prototype: Float32Array;\\n    new(length: number): Float32Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float32Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float32Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Float32Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;\\n\\n\\n}\\ndeclare const Float32Array: Float32ArrayConstructor;\\n\\n/**\\n  * A typed array of 64-bit float values. The contents are initialized to 0. If the requested\\n  * number of bytes could not be allocated an exception is raised.\\n  */\\ninterface Float64Array {\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * The ArrayBuffer instance referenced by the array.\\n      */\\n    readonly buffer: ArrayBufferLike;\\n\\n    /**\\n      * The length in bytes of the array.\\n      */\\n    readonly byteLength: number;\\n\\n    /**\\n      * The offset in bytes of the array.\\n      */\\n    readonly byteOffset: number;\\n\\n    /**\\n      * Returns the this object after copying a section of the array identified by start and end\\n      * to the same array starting at position target\\n      * @param target If target is negative, it is treated as length+target where length is the\\n      * length of the array.\\n      * @param start If start is negative, it is treated as length+start. If end is negative, it\\n      * is treated as length+end.\\n      * @param end If not specified, length of the this object is used as its default value.\\n      */\\n    copyWithin(target: number, start: number, end?: number): this;\\n\\n    /**\\n      * Determines whether all the members of an array satisfy the specified test.\\n      * @param callbackfn A function that accepts up to three arguments. The every method calls\\n      * the callbackfn function for each element in array1 until the callbackfn returns false,\\n      * or until the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    every(callbackfn: (value: number, index: number, array: Float64Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n        * Returns the this object after filling the section identified by start and end with value\\n        * @param value value to fill array section with\\n        * @param start index to start filling the array at. If start is negative, it is treated as\\n        * length+start where length is the length of the array.\\n        * @param end index to stop filling the array at. If end is negative, it is treated as\\n        * length+end.\\n        */\\n    fill(value: number, start?: number, end?: number): this;\\n\\n    /**\\n      * Returns the elements of an array that meet the condition specified in a callback function.\\n      * @param callbackfn A function that accepts up to three arguments. The filter method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    filter(callbackfn: (value: number, index: number, array: Float64Array) => any, thisArg?: any): Float64Array;\\n\\n    /**\\n      * Returns the value of the first element in the array where predicate is true, and undefined\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found, find\\n      * immediately returns that element value. Otherwise, find returns undefined.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    find(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number | undefined;\\n\\n    /**\\n      * Returns the index of the first element in the array where predicate is true, and -1\\n      * otherwise.\\n      * @param predicate find calls predicate once for each element of the array, in ascending\\n      * order, until it finds one where predicate returns true. If such an element is found,\\n      * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n      * @param thisArg If provided, it will be used as the this value for each invocation of\\n      * predicate. If it is not provided, undefined is used instead.\\n      */\\n    findIndex(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number;\\n\\n    /**\\n      * Performs the specified action for each element in an array.\\n      * @param callbackfn  A function that accepts up to three arguments. forEach calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    forEach(callbackfn: (value: number, index: number, array: Float64Array) => void, thisArg?: any): void;\\n\\n    /**\\n      * Returns the index of the first occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      *  search starts at index 0.\\n      */\\n    indexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * Adds all the elements of an array separated by the specified separator string.\\n      * @param separator A string used to separate one element of an array from the next in the\\n      * resulting String. If omitted, the array elements are separated with a comma.\\n      */\\n    join(separator?: string): string;\\n\\n    /**\\n      * Returns the index of the last occurrence of a value in an array.\\n      * @param searchElement The value to locate in the array.\\n      * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\\n      * search starts at index 0.\\n      */\\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\\n\\n    /**\\n      * The length of the array.\\n      */\\n    readonly length: number;\\n\\n    /**\\n      * Calls a defined callback function on each element of an array, and returns an array that\\n      * contains the results.\\n      * @param callbackfn A function that accepts up to three arguments. The map method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    map(callbackfn: (value: number, index: number, array: Float64Array) => number, thisArg?: any): Float64Array;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array. The return value of\\n      * the callback function is the accumulated result, and is provided as an argument in the next\\n      * call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\\n      * callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an\\n      * argument instead of an array value.\\n      */\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\\n\\n    /**\\n      * Calls the specified callback function for all the elements in an array, in descending order.\\n      * The return value of the callback function is the accumulated result, and is provided as an\\n      * argument in the next call to the callback function.\\n      * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\\n      * the callbackfn function one time for each element in the array.\\n      * @param initialValue If initialValue is specified, it is used as the initial value to start\\n      * the accumulation. The first call to the callbackfn function provides this value as an argument\\n      * instead of an array value.\\n      */\\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\\n\\n    /**\\n      * Reverses the elements in an Array.\\n      */\\n    reverse(): Float64Array;\\n\\n    /**\\n      * Sets a value or an array of values.\\n      * @param array A typed or untyped array of values to set.\\n      * @param offset The index in the current array at which the values are to be written.\\n      */\\n    set(array: ArrayLike<number>, offset?: number): void;\\n\\n    /**\\n      * Returns a section of an array.\\n      * @param start The beginning of the specified portion of the array.\\n      * @param end The end of the specified portion of the array.\\n      */\\n    slice(start?: number, end?: number): Float64Array;\\n\\n    /**\\n      * Determines whether the specified callback function returns true for any element of an array.\\n      * @param callbackfn A function that accepts up to three arguments. The some method calls the\\n      * callbackfn function for each element in array1 until the callbackfn returns true, or until\\n      * the end of the array.\\n      * @param thisArg An object to which the this keyword can refer in the callbackfn function.\\n      * If thisArg is omitted, undefined is used as the this value.\\n      */\\n    some(callbackfn: (value: number, index: number, array: Float64Array) => boolean, thisArg?: any): boolean;\\n\\n    /**\\n      * Sorts an array.\\n      * @param compareFn The name of the function used to determine the order of the elements. If\\n      * omitted, the elements are sorted in ascending, ASCII character order.\\n      */\\n    sort(compareFn?: (a: number, b: number) => number): this;\\n\\n    /**\\n      * Gets a new Float64Array view of the ArrayBuffer store for this array, referencing the elements\\n      * at begin, inclusive, up to end, exclusive.\\n      * @param begin The index of the beginning of the array.\\n      * @param end The index of the end of the array.\\n      */\\n    subarray(begin: number, end?: number): Float64Array;\\n\\n    /**\\n      * Converts a number to a string by using the current locale.\\n      */\\n    toLocaleString(): string;\\n\\n    /**\\n      * Returns a string representation of an array.\\n      */\\n    toString(): string;\\n\\n    [index: number]: number;\\n}\\n\\ninterface Float64ArrayConstructor {\\n    readonly prototype: Float64Array;\\n    new(length: number): Float64Array;\\n    new(arrayOrArrayBuffer: ArrayLike<number> | ArrayBufferLike): Float64Array;\\n    new(buffer: ArrayBufferLike, byteOffset: number, length?: number): Float64Array;\\n\\n    /**\\n      * The size in bytes of each element in the array.\\n      */\\n    readonly BYTES_PER_ELEMENT: number;\\n\\n    /**\\n      * Returns a new array from a set of elements.\\n      * @param items A set of elements to include in the new array object.\\n      */\\n    of(...items: number[]): Float64Array;\\n\\n    /**\\n      * Creates an array from an array-like or iterable object.\\n      * @param arrayLike An array-like or iterable object to convert to an array.\\n      * @param mapfn A mapping function to call on every element of the array.\\n      * @param thisArg Value of 'this' used to invoke the mapfn.\\n      */\\n    from(arrayLike: ArrayLike<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;\\n\\n}\\ndeclare const Float64Array: Float64ArrayConstructor;\\n\\n/////////////////////////////\\n/// ECMAScript Internationalization API\\n/////////////////////////////\\n\\ndeclare namespace Intl {\\n    interface CollatorOptions {\\n        usage?: string;\\n        localeMatcher?: string;\\n        numeric?: boolean;\\n        caseFirst?: string;\\n        sensitivity?: string;\\n        ignorePunctuation?: boolean;\\n    }\\n\\n    interface ResolvedCollatorOptions {\\n        locale: string;\\n        usage: string;\\n        sensitivity: string;\\n        ignorePunctuation: boolean;\\n        collation: string;\\n        caseFirst: string;\\n        numeric: boolean;\\n    }\\n\\n    interface Collator {\\n        compare(x: string, y: string): number;\\n        resolvedOptions(): ResolvedCollatorOptions;\\n    }\\n    var Collator: {\\n        new(locales?: string | string[], options?: CollatorOptions): Collator;\\n        (locales?: string | string[], options?: CollatorOptions): Collator;\\n        supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];\\n    };\\n\\n    interface NumberFormatOptions {\\n        localeMatcher?: string;\\n        style?: string;\\n        currency?: string;\\n        currencyDisplay?: string;\\n        useGrouping?: boolean;\\n        minimumIntegerDigits?: number;\\n        minimumFractionDigits?: number;\\n        maximumFractionDigits?: number;\\n        minimumSignificantDigits?: number;\\n        maximumSignificantDigits?: number;\\n    }\\n\\n    interface ResolvedNumberFormatOptions {\\n        locale: string;\\n        numberingSystem: string;\\n        style: string;\\n        currency?: string;\\n        currencyDisplay?: string;\\n        minimumIntegerDigits: number;\\n        minimumFractionDigits: number;\\n        maximumFractionDigits: number;\\n        minimumSignificantDigits?: number;\\n        maximumSignificantDigits?: number;\\n        useGrouping: boolean;\\n    }\\n\\n    interface NumberFormat {\\n        format(value: number): string;\\n        resolvedOptions(): ResolvedNumberFormatOptions;\\n    }\\n    var NumberFormat: {\\n        new(locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\\n        (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\\n        supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];\\n    };\\n\\n    interface DateTimeFormatOptions {\\n        localeMatcher?: string;\\n        weekday?: string;\\n        era?: string;\\n        year?: string;\\n        month?: string;\\n        day?: string;\\n        hour?: string;\\n        minute?: string;\\n        second?: string;\\n        timeZoneName?: string;\\n        formatMatcher?: string;\\n        hour12?: boolean;\\n        timeZone?: string;\\n    }\\n\\n    interface ResolvedDateTimeFormatOptions {\\n        locale: string;\\n        calendar: string;\\n        numberingSystem: string;\\n        timeZone: string;\\n        hour12?: boolean;\\n        weekday?: string;\\n        era?: string;\\n        year?: string;\\n        month?: string;\\n        day?: string;\\n        hour?: string;\\n        minute?: string;\\n        second?: string;\\n        timeZoneName?: string;\\n    }\\n\\n    interface DateTimeFormat {\\n        format(date?: Date | number): string;\\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\\n    }\\n    var DateTimeFormat: {\\n        new(locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\\n        (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\\n        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];\\n    };\\n}\\n\\ninterface String {\\n    /**\\n      * Determines whether two strings are equivalent in the current or specified locale.\\n      * @param that String to compare to target string\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n      * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\\n      */\\n    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): number;\\n}\\n\\ninterface Number {\\n    /**\\n      * Converts a number to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\\n}\\n\\ninterface Date {\\n    /**\\n      * Converts a date and time to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\\n    /**\\n      * Converts a date to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\\n\\n    /**\\n      * Converts a time to a string by using the current or specified locale.\\n      * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n      * @param options An object that contains one or more properties that specify comparison options.\\n      */\\n    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\\n}\\n\\n\\n/////////////////////////////\\n/// DOM APIs\\n/////////////////////////////\\n\\ninterface Account {\\n    displayName: string;\\n    id: string;\\n    imageURL?: string;\\n    name?: string;\\n    rpDisplayName: string;\\n}\\n\\ninterface AddEventListenerOptions extends EventListenerOptions {\\n    once?: boolean;\\n    passive?: boolean;\\n}\\n\\ninterface AesCbcParams extends Algorithm {\\n    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface AesCtrParams extends Algorithm {\\n    counter: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    length: number;\\n}\\n\\ninterface AesDerivedKeyParams extends Algorithm {\\n    length: number;\\n}\\n\\ninterface AesGcmParams extends Algorithm {\\n    additionalData?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    tagLength?: number;\\n}\\n\\ninterface AesKeyAlgorithm extends KeyAlgorithm {\\n    length: number;\\n}\\n\\ninterface AesKeyGenParams extends Algorithm {\\n    length: number;\\n}\\n\\ninterface Algorithm {\\n    name: string;\\n}\\n\\ninterface AnalyserOptions extends AudioNodeOptions {\\n    fftSize?: number;\\n    maxDecibels?: number;\\n    minDecibels?: number;\\n    smoothingTimeConstant?: number;\\n}\\n\\ninterface AnimationEventInit extends EventInit {\\n    animationName?: string;\\n    elapsedTime?: number;\\n}\\n\\ninterface AssertionOptions {\\n    allowList?: ScopedCredentialDescriptor[];\\n    extensions?: WebAuthnExtensions;\\n    rpId?: string;\\n    timeoutSeconds?: number;\\n}\\n\\ninterface AudioBufferOptions {\\n    length: number;\\n    numberOfChannels?: number;\\n    sampleRate: number;\\n}\\n\\ninterface AudioBufferSourceOptions {\\n    buffer?: AudioBuffer | null;\\n    detune?: number;\\n    loop?: boolean;\\n    loopEnd?: number;\\n    loopStart?: number;\\n    playbackRate?: number;\\n}\\n\\ninterface AudioContextInfo {\\n    currentTime?: number;\\n    sampleRate?: number;\\n}\\n\\ninterface AudioContextOptions {\\n    latencyHint?: AudioContextLatencyCategory | number;\\n    sampleRate?: number;\\n}\\n\\ninterface AudioNodeOptions {\\n    channelCount?: number;\\n    channelCountMode?: ChannelCountMode;\\n    channelInterpretation?: ChannelInterpretation;\\n}\\n\\ninterface AudioParamDescriptor {\\n    defaultValue?: number;\\n    maxValue?: number;\\n    minValue?: number;\\n    name?: string;\\n}\\n\\ninterface AudioProcessingEventInit extends EventInit {\\n    inputBuffer: AudioBuffer;\\n    outputBuffer: AudioBuffer;\\n    playbackTime: number;\\n}\\n\\ninterface AudioTimestamp {\\n    contextTime?: number;\\n    performanceTime?: number;\\n}\\n\\ninterface BiquadFilterOptions extends AudioNodeOptions {\\n    Q?: number;\\n    detune?: number;\\n    frequency?: number;\\n    gain?: number;\\n    type?: BiquadFilterType;\\n}\\n\\ninterface ByteLengthChunk {\\n    byteLength?: number;\\n}\\n\\ninterface CacheQueryOptions {\\n    cacheName?: string;\\n    ignoreMethod?: boolean;\\n    ignoreSearch?: boolean;\\n    ignoreVary?: boolean;\\n}\\n\\ninterface ChannelMergerOptions extends AudioNodeOptions {\\n    numberOfInputs?: number;\\n}\\n\\ninterface ChannelSplitterOptions extends AudioNodeOptions {\\n    numberOfOutputs?: number;\\n}\\n\\ninterface ClientData {\\n    challenge: string;\\n    extensions?: WebAuthnExtensions;\\n    hashAlg: string | Algorithm;\\n    origin: string;\\n    rpId: string;\\n    tokenBinding?: string;\\n}\\n\\ninterface ClientQueryOptions {\\n    includeReserved?: boolean;\\n    includeUncontrolled?: boolean;\\n    type?: ClientTypes;\\n}\\n\\ninterface CloseEventInit extends EventInit {\\n    code?: number;\\n    reason?: string;\\n    wasClean?: boolean;\\n}\\n\\ninterface CompositionEventInit extends UIEventInit {\\n    data?: string;\\n}\\n\\ninterface ConfirmSiteSpecificExceptionsInformation extends ExceptionInformation {\\n    arrayOfDomainStrings?: string[];\\n}\\n\\ninterface ConstantSourceOptions {\\n    offset?: number;\\n}\\n\\ninterface ConstrainBooleanParameters {\\n    exact?: boolean;\\n    ideal?: boolean;\\n}\\n\\ninterface ConstrainDOMStringParameters {\\n    exact?: string | string[];\\n    ideal?: string | string[];\\n}\\n\\ninterface ConstrainDoubleRange extends DoubleRange {\\n    exact?: number;\\n    ideal?: number;\\n}\\n\\ninterface ConstrainLongRange extends LongRange {\\n    exact?: number;\\n    ideal?: number;\\n}\\n\\ninterface ConstrainVideoFacingModeParameters {\\n    exact?: VideoFacingModeEnum | VideoFacingModeEnum[];\\n    ideal?: VideoFacingModeEnum | VideoFacingModeEnum[];\\n}\\n\\ninterface ConvolverOptions extends AudioNodeOptions {\\n    buffer?: AudioBuffer | null;\\n    disableNormalization?: boolean;\\n}\\n\\ninterface CustomEventInit<T = any> extends EventInit {\\n    detail?: T;\\n}\\n\\ninterface DOMRectInit {\\n    height?: number;\\n    width?: number;\\n    x?: number;\\n    y?: number;\\n}\\n\\ninterface DelayOptions extends AudioNodeOptions {\\n    delayTime?: number;\\n    maxDelayTime?: number;\\n}\\n\\ninterface DeviceAccelerationDict {\\n    x?: number | null;\\n    y?: number | null;\\n    z?: number | null;\\n}\\n\\ninterface DeviceLightEventInit extends EventInit {\\n    value?: number;\\n}\\n\\ninterface DeviceMotionEventInit extends EventInit {\\n    acceleration?: DeviceAccelerationDict | null;\\n    accelerationIncludingGravity?: DeviceAccelerationDict | null;\\n    interval?: number | null;\\n    rotationRate?: DeviceRotationRateDict | null;\\n}\\n\\ninterface DeviceOrientationEventInit extends EventInit {\\n    absolute?: boolean;\\n    alpha?: number | null;\\n    beta?: number | null;\\n    gamma?: number | null;\\n}\\n\\ninterface DeviceRotationRateDict {\\n    alpha?: number | null;\\n    beta?: number | null;\\n    gamma?: number | null;\\n}\\n\\ninterface DoubleRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface DynamicsCompressorOptions extends AudioNodeOptions {\\n    attack?: number;\\n    knee?: number;\\n    ratio?: number;\\n    release?: number;\\n    threshold?: number;\\n}\\n\\ninterface EcKeyAlgorithm extends KeyAlgorithm {\\n    namedCurve: string;\\n}\\n\\ninterface EcKeyGenParams extends Algorithm {\\n    namedCurve: string;\\n}\\n\\ninterface EcKeyImportParams extends Algorithm {\\n    namedCurve: string;\\n}\\n\\ninterface EcdhKeyDeriveParams extends Algorithm {\\n    public: CryptoKey;\\n}\\n\\ninterface EcdsaParams extends Algorithm {\\n    hash: string | Algorithm;\\n}\\n\\ninterface ErrorEventInit extends EventInit {\\n    colno?: number;\\n    error?: any;\\n    filename?: string;\\n    lineno?: number;\\n    message?: string;\\n}\\n\\ninterface EventInit {\\n    bubbles?: boolean;\\n    cancelable?: boolean;\\n    scoped?: boolean;\\n}\\n\\ninterface EventListenerOptions {\\n    capture?: boolean;\\n}\\n\\ninterface EventModifierInit extends UIEventInit {\\n    altKey?: boolean;\\n    ctrlKey?: boolean;\\n    metaKey?: boolean;\\n    modifierAltGraph?: boolean;\\n    modifierCapsLock?: boolean;\\n    modifierFn?: boolean;\\n    modifierFnLock?: boolean;\\n    modifierHyper?: boolean;\\n    modifierNumLock?: boolean;\\n    modifierOS?: boolean;\\n    modifierScrollLock?: boolean;\\n    modifierSuper?: boolean;\\n    modifierSymbol?: boolean;\\n    modifierSymbolLock?: boolean;\\n    shiftKey?: boolean;\\n}\\n\\ninterface ExceptionInformation {\\n    domain?: string | null;\\n}\\n\\ninterface ExtendableEventInit extends EventInit {\\n}\\n\\ninterface ExtendableMessageEventInit extends ExtendableEventInit {\\n    data?: any;\\n    lastEventId?: string;\\n    origin?: string;\\n    ports?: MessagePort[] | null;\\n    source?: object | ServiceWorker | MessagePort | null;\\n}\\n\\ninterface FetchEventInit extends ExtendableEventInit {\\n    clientId?: string;\\n    request: Request;\\n    reservedClientId?: string;\\n    targetClientId?: string;\\n}\\n\\ninterface FocusEventInit extends UIEventInit {\\n    relatedTarget?: EventTarget | null;\\n}\\n\\ninterface FocusNavigationEventInit extends EventInit {\\n    navigationReason?: string | null;\\n    originHeight?: number;\\n    originLeft?: number;\\n    originTop?: number;\\n    originWidth?: number;\\n}\\n\\ninterface FocusNavigationOrigin {\\n    originHeight?: number;\\n    originLeft?: number;\\n    originTop?: number;\\n    originWidth?: number;\\n}\\n\\ninterface GainOptions extends AudioNodeOptions {\\n    gain?: number;\\n}\\n\\ninterface GamepadEventInit extends EventInit {\\n    gamepad?: Gamepad;\\n}\\n\\ninterface GetNotificationOptions {\\n    tag?: string;\\n}\\n\\ninterface HashChangeEventInit extends EventInit {\\n    newURL?: string;\\n    oldURL?: string;\\n}\\n\\ninterface HkdfParams extends Algorithm {\\n    hash: string | Algorithm;\\n    info: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    salt: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface HmacImportParams extends Algorithm {\\n    hash: string | Algorithm;\\n    length?: number;\\n}\\n\\ninterface HmacKeyAlgorithm extends KeyAlgorithm {\\n    hash: KeyAlgorithm;\\n    length: number;\\n}\\n\\ninterface HmacKeyGenParams extends Algorithm {\\n    hash: string | Algorithm;\\n    length?: number;\\n}\\n\\ninterface IDBIndexParameters {\\n    multiEntry?: boolean;\\n    unique?: boolean;\\n}\\n\\ninterface IDBObjectStoreParameters {\\n    autoIncrement?: boolean;\\n    keyPath?: string | string[];\\n}\\n\\ninterface IIRFilterOptions extends AudioNodeOptions {\\n    feedback: number[];\\n    feedforward: number[];\\n}\\n\\ninterface IntersectionObserverEntryInit {\\n    boundingClientRect: DOMRectInit;\\n    intersectionRect: DOMRectInit;\\n    isIntersecting: boolean;\\n    rootBounds: DOMRectInit;\\n    target: Element;\\n    time: number;\\n}\\n\\ninterface IntersectionObserverInit {\\n    root?: Element | null;\\n    rootMargin?: string;\\n    threshold?: number | number[];\\n}\\n\\ninterface JsonWebKey {\\n    alg?: string;\\n    crv?: string;\\n    d?: string;\\n    dp?: string;\\n    dq?: string;\\n    e?: string;\\n    ext?: boolean;\\n    k?: string;\\n    key_ops?: string[];\\n    kty?: string;\\n    n?: string;\\n    oth?: RsaOtherPrimesInfo[];\\n    p?: string;\\n    q?: string;\\n    qi?: string;\\n    use?: string;\\n    x?: string;\\n    y?: string;\\n}\\n\\ninterface KeyAlgorithm {\\n    name: string;\\n}\\n\\ninterface KeyboardEventInit extends EventModifierInit {\\n    code?: string;\\n    key?: string;\\n    location?: number;\\n    repeat?: boolean;\\n}\\n\\ninterface LongRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface MSAccountInfo {\\n    accountImageUri?: string;\\n    accountName?: string;\\n    rpDisplayName: string;\\n    userDisplayName: string;\\n    userId?: string;\\n}\\n\\ninterface MSAudioLocalClientEvent extends MSLocalClientEventBase {\\n    cpuInsufficientEventRatio?: number;\\n    deviceCaptureNotFunctioningEventRatio?: number;\\n    deviceClippingEventRatio?: number;\\n    deviceEchoEventRatio?: number;\\n    deviceGlitchesEventRatio?: number;\\n    deviceHalfDuplexAECEventRatio?: number;\\n    deviceHowlingEventCount?: number;\\n    deviceLowSNREventRatio?: number;\\n    deviceLowSpeechLevelEventRatio?: number;\\n    deviceMultipleEndpointsEventCount?: number;\\n    deviceNearEndToEchoRatioEventRatio?: number;\\n    deviceRenderMuteEventRatio?: number;\\n    deviceRenderNotFunctioningEventRatio?: number;\\n    deviceRenderZeroVolumeEventRatio?: number;\\n    networkDelayEventRatio?: number;\\n    networkSendQualityEventRatio?: number;\\n}\\n\\ninterface MSAudioRecvPayload extends MSPayloadBase {\\n    burstLossLength1?: number;\\n    burstLossLength2?: number;\\n    burstLossLength3?: number;\\n    burstLossLength4?: number;\\n    burstLossLength5?: number;\\n    burstLossLength6?: number;\\n    burstLossLength7?: number;\\n    burstLossLength8OrHigher?: number;\\n    fecRecvDistance1?: number;\\n    fecRecvDistance2?: number;\\n    fecRecvDistance3?: number;\\n    packetReorderDepthAvg?: number;\\n    packetReorderDepthMax?: number;\\n    packetReorderRatio?: number;\\n    ratioCompressedSamplesAvg?: number;\\n    ratioConcealedSamplesAvg?: number;\\n    ratioStretchedSamplesAvg?: number;\\n    samplingRate?: number;\\n    signal?: MSAudioRecvSignal;\\n}\\n\\ninterface MSAudioRecvSignal {\\n    initialSignalLevelRMS?: number;\\n    recvNoiseLevelCh1?: number;\\n    recvSignalLevelCh1?: number;\\n    renderLoopbackSignalLevel?: number;\\n    renderNoiseLevel?: number;\\n    renderSignalLevel?: number;\\n}\\n\\ninterface MSAudioSendPayload extends MSPayloadBase {\\n    audioFECUsed?: boolean;\\n    samplingRate?: number;\\n    sendMutePercent?: number;\\n    signal?: MSAudioSendSignal;\\n}\\n\\ninterface MSAudioSendSignal {\\n    noiseLevel?: number;\\n    sendNoiseLevelCh1?: number;\\n    sendSignalLevelCh1?: number;\\n}\\n\\ninterface MSConnectivity {\\n    iceType?: MSIceType;\\n    iceWarningFlags?: MSIceWarningFlags;\\n    relayAddress?: MSRelayAddress;\\n}\\n\\ninterface MSCredentialFilter {\\n    accept?: MSCredentialSpec[];\\n}\\n\\ninterface MSCredentialParameters {\\n    type?: MSCredentialType;\\n}\\n\\ninterface MSCredentialSpec {\\n    id?: string;\\n    type: MSCredentialType;\\n}\\n\\ninterface MSDCCEventInit extends EventInit {\\n    maxFr?: number;\\n    maxFs?: number;\\n}\\n\\ninterface MSDSHEventInit extends EventInit {\\n    sources?: number[];\\n    timestamp?: number;\\n}\\n\\ninterface MSDelay {\\n    roundTrip?: number;\\n    roundTripMax?: number;\\n}\\n\\ninterface MSDescription extends RTCStats {\\n    connectivity?: MSConnectivity;\\n    deviceDevName?: string;\\n    localAddr?: MSIPAddressInfo;\\n    networkconnectivity?: MSNetworkConnectivityInfo;\\n    reflexiveLocalIPAddr?: MSIPAddressInfo;\\n    remoteAddr?: MSIPAddressInfo;\\n    transport?: RTCIceProtocol;\\n}\\n\\ninterface MSFIDOCredentialParameters extends MSCredentialParameters {\\n    algorithm?: string | Algorithm;\\n    authenticators?: string[];\\n}\\n\\ninterface MSIPAddressInfo {\\n    ipAddr?: string;\\n    manufacturerMacAddrMask?: string;\\n    port?: number;\\n}\\n\\ninterface MSIceWarningFlags {\\n    allocationMessageIntegrityFailed?: boolean;\\n    alternateServerReceived?: boolean;\\n    connCheckMessageIntegrityFailed?: boolean;\\n    connCheckOtherError?: boolean;\\n    fipsAllocationFailure?: boolean;\\n    multipleRelayServersAttempted?: boolean;\\n    noRelayServersConfigured?: boolean;\\n    portRangeExhausted?: boolean;\\n    pseudoTLSFailure?: boolean;\\n    tcpNatConnectivityFailed?: boolean;\\n    tcpRelayConnectivityFailed?: boolean;\\n    turnAuthUnknownUsernameError?: boolean;\\n    turnTcpAllocateFailed?: boolean;\\n    turnTcpSendFailed?: boolean;\\n    turnTcpTimedOut?: boolean;\\n    turnTurnTcpConnectivityFailed?: boolean;\\n    turnUdpAllocateFailed?: boolean;\\n    turnUdpSendFailed?: boolean;\\n    udpLocalConnectivityFailed?: boolean;\\n    udpNatConnectivityFailed?: boolean;\\n    udpRelayConnectivityFailed?: boolean;\\n    useCandidateChecksFailed?: boolean;\\n}\\n\\ninterface MSJitter {\\n    interArrival?: number;\\n    interArrivalMax?: number;\\n    interArrivalSD?: number;\\n}\\n\\ninterface MSLocalClientEventBase extends RTCStats {\\n    networkBandwidthLowEventRatio?: number;\\n    networkReceiveQualityEventRatio?: number;\\n}\\n\\ninterface MSNetwork extends RTCStats {\\n    delay?: MSDelay;\\n    jitter?: MSJitter;\\n    packetLoss?: MSPacketLoss;\\n    utilization?: MSUtilization;\\n}\\n\\ninterface MSNetworkConnectivityInfo {\\n    linkspeed?: number;\\n    networkConnectionDetails?: string;\\n    vpn?: boolean;\\n}\\n\\ninterface MSNetworkInterfaceType {\\n    interfaceTypeEthernet?: boolean;\\n    interfaceTypePPP?: boolean;\\n    interfaceTypeTunnel?: boolean;\\n    interfaceTypeWWAN?: boolean;\\n    interfaceTypeWireless?: boolean;\\n}\\n\\ninterface MSOutboundNetwork extends MSNetwork {\\n    appliedBandwidthLimit?: number;\\n}\\n\\ninterface MSPacketLoss {\\n    lossRate?: number;\\n    lossRateMax?: number;\\n}\\n\\ninterface MSPayloadBase extends RTCStats {\\n    payloadDescription?: string;\\n}\\n\\ninterface MSPortRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface MSRelayAddress {\\n    port?: number;\\n    relayAddress?: string;\\n}\\n\\ninterface MSSignatureParameters {\\n    userPrompt?: string;\\n}\\n\\ninterface MSTransportDiagnosticsStats extends RTCStats {\\n    allocationTimeInMs?: number;\\n    baseAddress?: string;\\n    baseInterface?: MSNetworkInterfaceType;\\n    iceRole?: RTCIceRole;\\n    iceWarningFlags?: MSIceWarningFlags;\\n    interfaces?: MSNetworkInterfaceType;\\n    localAddrType?: MSIceAddrType;\\n    localAddress?: string;\\n    localInterface?: MSNetworkInterfaceType;\\n    localMR?: string;\\n    localMRTCPPort?: number;\\n    localSite?: string;\\n    msRtcEngineVersion?: string;\\n    networkName?: string;\\n    numConsentReqReceived?: number;\\n    numConsentReqSent?: number;\\n    numConsentRespReceived?: number;\\n    numConsentRespSent?: number;\\n    portRangeMax?: number;\\n    portRangeMin?: number;\\n    protocol?: RTCIceProtocol;\\n    remoteAddrType?: MSIceAddrType;\\n    remoteAddress?: string;\\n    remoteMR?: string;\\n    remoteMRTCPPort?: number;\\n    remoteSite?: string;\\n    rtpRtcpMux?: boolean;\\n    stunVer?: number;\\n}\\n\\ninterface MSUtilization {\\n    bandwidthEstimation?: number;\\n    bandwidthEstimationAvg?: number;\\n    bandwidthEstimationMax?: number;\\n    bandwidthEstimationMin?: number;\\n    bandwidthEstimationStdDev?: number;\\n    packets?: number;\\n}\\n\\ninterface MSVideoPayload extends MSPayloadBase {\\n    durationSeconds?: number;\\n    resolution?: string;\\n    videoBitRateAvg?: number;\\n    videoBitRateMax?: number;\\n    videoFrameRateAvg?: number;\\n    videoPacketLossRate?: number;\\n}\\n\\ninterface MSVideoRecvPayload extends MSVideoPayload {\\n    lowBitRateCallPercent?: number;\\n    lowFrameRateCallPercent?: number;\\n    recvBitRateAverage?: number;\\n    recvBitRateMaximum?: number;\\n    recvCodecType?: string;\\n    recvFpsHarmonicAverage?: number;\\n    recvFrameRateAverage?: number;\\n    recvNumResSwitches?: number;\\n    recvReorderBufferMaxSuccessfullyOrderedExtent?: number;\\n    recvReorderBufferMaxSuccessfullyOrderedLateTime?: number;\\n    recvReorderBufferPacketsDroppedDueToBufferExhaustion?: number;\\n    recvReorderBufferPacketsDroppedDueToTimeout?: number;\\n    recvReorderBufferReorderedPackets?: number;\\n    recvResolutionHeight?: number;\\n    recvResolutionWidth?: number;\\n    recvVideoStreamsMax?: number;\\n    recvVideoStreamsMin?: number;\\n    recvVideoStreamsMode?: number;\\n    reorderBufferTotalPackets?: number;\\n    videoFrameLossRate?: number;\\n    videoPostFECPLR?: number;\\n    videoResolutions?: MSVideoResolutionDistribution;\\n}\\n\\ninterface MSVideoResolutionDistribution {\\n    cifQuality?: number;\\n    h1080Quality?: number;\\n    h1440Quality?: number;\\n    h2160Quality?: number;\\n    h720Quality?: number;\\n    vgaQuality?: number;\\n}\\n\\ninterface MSVideoSendPayload extends MSVideoPayload {\\n    sendBitRateAverage?: number;\\n    sendBitRateMaximum?: number;\\n    sendFrameRateAverage?: number;\\n    sendResolutionHeight?: number;\\n    sendResolutionWidth?: number;\\n    sendVideoStreamsMax?: number;\\n}\\n\\ninterface MediaElementAudioSourceOptions {\\n    mediaElement: HTMLMediaElement;\\n}\\n\\ninterface MediaEncryptedEventInit extends EventInit {\\n    initData?: ArrayBuffer | null;\\n    initDataType?: string;\\n}\\n\\ninterface MediaKeyMessageEventInit extends EventInit {\\n    message?: ArrayBuffer | null;\\n    messageType?: MediaKeyMessageType;\\n}\\n\\ninterface MediaKeySystemConfiguration {\\n    audioCapabilities?: MediaKeySystemMediaCapability[];\\n    distinctiveIdentifier?: MediaKeysRequirement;\\n    initDataTypes?: string[];\\n    persistentState?: MediaKeysRequirement;\\n    videoCapabilities?: MediaKeySystemMediaCapability[];\\n}\\n\\ninterface MediaKeySystemMediaCapability {\\n    contentType?: string;\\n    robustness?: string;\\n}\\n\\ninterface MediaStreamConstraints {\\n    audio?: boolean | MediaTrackConstraints;\\n    video?: boolean | MediaTrackConstraints;\\n}\\n\\ninterface MediaStreamErrorEventInit extends EventInit {\\n    error?: MediaStreamError | null;\\n}\\n\\ninterface MediaStreamEventInit extends EventInit {\\n    stream?: MediaStream;\\n}\\n\\ninterface MediaStreamTrackEventInit extends EventInit {\\n    track?: MediaStreamTrack | null;\\n}\\n\\ninterface MediaTrackCapabilities {\\n    aspectRatio?: number | DoubleRange;\\n    deviceId?: string;\\n    echoCancellation?: boolean[];\\n    facingMode?: string;\\n    frameRate?: number | DoubleRange;\\n    groupId?: string;\\n    height?: number | LongRange;\\n    sampleRate?: number | LongRange;\\n    sampleSize?: number | LongRange;\\n    volume?: number | DoubleRange;\\n    width?: number | LongRange;\\n}\\n\\ninterface MediaTrackConstraintSet {\\n    aspectRatio?: number | ConstrainDoubleRange;\\n    channelCount?: number | ConstrainLongRange;\\n    deviceId?: string | string[] | ConstrainDOMStringParameters;\\n    displaySurface?: string | string[] | ConstrainDOMStringParameters;\\n    echoCancellation?: boolean | ConstrainBooleanParameters;\\n    facingMode?: string | string[] | ConstrainDOMStringParameters;\\n    frameRate?: number | ConstrainDoubleRange;\\n    groupId?: string | string[] | ConstrainDOMStringParameters;\\n    height?: number | ConstrainLongRange;\\n    latency?: number | ConstrainDoubleRange;\\n    logicalSurface?: boolean | ConstrainBooleanParameters;\\n    sampleRate?: number | ConstrainLongRange;\\n    sampleSize?: number | ConstrainLongRange;\\n    volume?: number | ConstrainDoubleRange;\\n    width?: number | ConstrainLongRange;\\n}\\n\\ninterface MediaTrackConstraints extends MediaTrackConstraintSet {\\n    advanced?: MediaTrackConstraintSet[];\\n}\\n\\ninterface MediaTrackSettings {\\n    aspectRatio?: number;\\n    deviceId?: string;\\n    echoCancellation?: boolean;\\n    facingMode?: string;\\n    frameRate?: number;\\n    groupId?: string;\\n    height?: number;\\n    sampleRate?: number;\\n    sampleSize?: number;\\n    volume?: number;\\n    width?: number;\\n}\\n\\ninterface MediaTrackSupportedConstraints {\\n    aspectRatio?: boolean;\\n    deviceId?: boolean;\\n    echoCancellation?: boolean;\\n    facingMode?: boolean;\\n    frameRate?: boolean;\\n    groupId?: boolean;\\n    height?: boolean;\\n    sampleRate?: boolean;\\n    sampleSize?: boolean;\\n    volume?: boolean;\\n    width?: boolean;\\n}\\n\\ninterface MessageEventInit extends EventInit {\\n    channel?: string;\\n    data?: any;\\n    lastEventId?: string;\\n    origin?: string;\\n    ports?: MessagePort[];\\n    source?: Window | null;\\n}\\n\\ninterface MouseEventInit extends EventModifierInit {\\n    button?: number;\\n    buttons?: number;\\n    clientX?: number;\\n    clientY?: number;\\n    relatedTarget?: EventTarget | null;\\n    screenX?: number;\\n    screenY?: number;\\n}\\n\\ninterface MsZoomToOptions {\\n    animate?: string;\\n    contentX?: number;\\n    contentY?: number;\\n    scaleFactor?: number;\\n    viewportX?: string | null;\\n    viewportY?: string | null;\\n}\\n\\ninterface MutationObserverInit {\\n    attributeFilter?: string[];\\n    attributeOldValue?: boolean;\\n    attributes?: boolean;\\n    characterData?: boolean;\\n    characterDataOldValue?: boolean;\\n    childList?: boolean;\\n    subtree?: boolean;\\n}\\n\\ninterface NotificationEventInit extends ExtendableEventInit {\\n    action?: string;\\n    notification: Notification;\\n}\\n\\ninterface NotificationOptions {\\n    body?: string;\\n    data?: any;\\n    dir?: NotificationDirection;\\n    icon?: string;\\n    lang?: string;\\n    tag?: string;\\n}\\n\\ninterface ObjectURLOptions {\\n    oneTimeOnly?: boolean;\\n}\\n\\ninterface OfflineAudioCompletionEventInit extends EventInit {\\n    renderedBuffer: AudioBuffer;\\n}\\n\\ninterface OscillatorOptions extends AudioNodeOptions {\\n    detune?: number;\\n    frequency?: number;\\n    periodicWave?: PeriodicWave;\\n    type?: OscillatorType;\\n}\\n\\ninterface PannerOptions extends AudioNodeOptions {\\n    coneInnerAngle?: number;\\n    coneOuterAngle?: number;\\n    coneOuterGain?: number;\\n    distanceModel?: DistanceModelType;\\n    maxDistance?: number;\\n    orientationX?: number;\\n    orientationY?: number;\\n    orientationZ?: number;\\n    panningModel?: PanningModelType;\\n    positionX?: number;\\n    positionY?: number;\\n    positionZ?: number;\\n    refDistance?: number;\\n    rolloffFactor?: number;\\n}\\n\\ninterface PaymentCurrencyAmount {\\n    currency: string;\\n    currencySystem?: string;\\n    value: string;\\n}\\n\\ninterface PaymentDetailsBase {\\n    displayItems?: PaymentItem[];\\n    modifiers?: PaymentDetailsModifier[];\\n    shippingOptions?: PaymentShippingOption[];\\n}\\n\\ninterface PaymentDetailsInit extends PaymentDetailsBase {\\n    id?: string;\\n    total: PaymentItem;\\n}\\n\\ninterface PaymentDetailsModifier {\\n    additionalDisplayItems?: PaymentItem[];\\n    data?: any;\\n    supportedMethods: string | string[];\\n    total?: PaymentItem;\\n}\\n\\ninterface PaymentDetailsUpdate extends PaymentDetailsBase {\\n    error?: string;\\n    total?: PaymentItem;\\n}\\n\\ninterface PaymentItem {\\n    amount: PaymentCurrencyAmount;\\n    label: string;\\n    pending?: boolean;\\n}\\n\\ninterface PaymentMethodData {\\n    data?: any;\\n    supportedMethods: string | string[];\\n}\\n\\ninterface PaymentOptions {\\n    requestPayerEmail?: boolean;\\n    requestPayerName?: boolean;\\n    requestPayerPhone?: boolean;\\n    requestShipping?: boolean;\\n    shippingType?: string;\\n}\\n\\ninterface PaymentRequestUpdateEventInit extends EventInit {\\n}\\n\\ninterface PaymentShippingOption {\\n    amount: PaymentCurrencyAmount;\\n    id: string;\\n    label: string;\\n    selected?: boolean;\\n}\\n\\ninterface Pbkdf2Params extends Algorithm {\\n    hash: string | Algorithm;\\n    iterations: number;\\n    salt: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface PeriodicWaveConstraints {\\n    disableNormalization?: boolean;\\n}\\n\\ninterface PeriodicWaveOptions extends PeriodicWaveConstraints {\\n    imag?: number[];\\n    real?: number[];\\n}\\n\\ninterface PointerEventInit extends MouseEventInit {\\n    height?: number;\\n    isPrimary?: boolean;\\n    pointerId?: number;\\n    pointerType?: string;\\n    pressure?: number;\\n    tiltX?: number;\\n    tiltY?: number;\\n    width?: number;\\n}\\n\\ninterface PopStateEventInit extends EventInit {\\n    state?: any;\\n}\\n\\ninterface PositionOptions {\\n    enableHighAccuracy?: boolean;\\n    maximumAge?: number;\\n    timeout?: number;\\n}\\n\\ninterface ProgressEventInit extends EventInit {\\n    lengthComputable?: boolean;\\n    loaded?: number;\\n    total?: number;\\n}\\n\\ninterface PushEventInit extends ExtendableEventInit {\\n    data?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | string | null;\\n}\\n\\ninterface PushSubscriptionChangeInit extends ExtendableEventInit {\\n    newSubscription?: PushSubscription;\\n    oldSubscription?: PushSubscription;\\n}\\n\\ninterface PushSubscriptionOptionsInit {\\n    applicationServerKey?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | string | null;\\n    userVisibleOnly?: boolean;\\n}\\n\\ninterface QueuingStrategy {\\n    highWaterMark?: number;\\n    size?: WritableStreamChunkCallback;\\n}\\n\\ninterface RTCConfiguration {\\n    bundlePolicy?: RTCBundlePolicy;\\n    iceServers?: RTCIceServer[];\\n    iceTransportPolicy?: RTCIceTransportPolicy;\\n    peerIdentity?: string;\\n}\\n\\ninterface RTCDTMFToneChangeEventInit extends EventInit {\\n    tone?: string;\\n}\\n\\ninterface RTCDtlsFingerprint {\\n    algorithm?: string;\\n    value?: string;\\n}\\n\\ninterface RTCDtlsParameters {\\n    fingerprints?: RTCDtlsFingerprint[];\\n    role?: RTCDtlsRole;\\n}\\n\\ninterface RTCIceCandidateAttributes extends RTCStats {\\n    addressSourceUrl?: string;\\n    candidateType?: RTCStatsIceCandidateType;\\n    ipAddress?: string;\\n    portNumber?: number;\\n    priority?: number;\\n    transport?: string;\\n}\\n\\ninterface RTCIceCandidateComplete {\\n}\\n\\ninterface RTCIceCandidateDictionary {\\n    foundation?: string;\\n    ip?: string;\\n    msMTurnSessionId?: string;\\n    port?: number;\\n    priority?: number;\\n    protocol?: RTCIceProtocol;\\n    relatedAddress?: string;\\n    relatedPort?: number;\\n    tcpType?: RTCIceTcpCandidateType;\\n    type?: RTCIceCandidateType;\\n}\\n\\ninterface RTCIceCandidateInit {\\n    candidate?: string;\\n    sdpMLineIndex?: number;\\n    sdpMid?: string;\\n}\\n\\ninterface RTCIceCandidatePair {\\n    local?: RTCIceCandidateDictionary;\\n    remote?: RTCIceCandidateDictionary;\\n}\\n\\ninterface RTCIceCandidatePairStats extends RTCStats {\\n    availableIncomingBitrate?: number;\\n    availableOutgoingBitrate?: number;\\n    bytesReceived?: number;\\n    bytesSent?: number;\\n    localCandidateId?: string;\\n    nominated?: boolean;\\n    priority?: number;\\n    readable?: boolean;\\n    remoteCandidateId?: string;\\n    roundTripTime?: number;\\n    state?: RTCStatsIceCandidatePairState;\\n    transportId?: string;\\n    writable?: boolean;\\n}\\n\\ninterface RTCIceGatherOptions {\\n    gatherPolicy?: RTCIceGatherPolicy;\\n    iceservers?: RTCIceServer[];\\n    portRange?: MSPortRange;\\n}\\n\\ninterface RTCIceParameters {\\n    iceLite?: boolean | null;\\n    password?: string;\\n    usernameFragment?: string;\\n}\\n\\ninterface RTCIceServer {\\n    credential?: string | null;\\n    urls?: any;\\n    username?: string | null;\\n}\\n\\ninterface RTCInboundRTPStreamStats extends RTCRTPStreamStats {\\n    bytesReceived?: number;\\n    fractionLost?: number;\\n    jitter?: number;\\n    packetsLost?: number;\\n    packetsReceived?: number;\\n}\\n\\ninterface RTCMediaStreamTrackStats extends RTCStats {\\n    audioLevel?: number;\\n    echoReturnLoss?: number;\\n    echoReturnLossEnhancement?: number;\\n    frameHeight?: number;\\n    frameWidth?: number;\\n    framesCorrupted?: number;\\n    framesDecoded?: number;\\n    framesDropped?: number;\\n    framesPerSecond?: number;\\n    framesReceived?: number;\\n    framesSent?: number;\\n    remoteSource?: boolean;\\n    ssrcIds?: string[];\\n    trackIdentifier?: string;\\n}\\n\\ninterface RTCOfferOptions {\\n    iceRestart?: boolean;\\n    offerToReceiveAudio?: number;\\n    offerToReceiveVideo?: number;\\n    voiceActivityDetection?: boolean;\\n}\\n\\ninterface RTCOutboundRTPStreamStats extends RTCRTPStreamStats {\\n    bytesSent?: number;\\n    packetsSent?: number;\\n    roundTripTime?: number;\\n    targetBitrate?: number;\\n}\\n\\ninterface RTCPeerConnectionIceEventInit extends EventInit {\\n    candidate?: RTCIceCandidate;\\n}\\n\\ninterface RTCRTPStreamStats extends RTCStats {\\n    associateStatsId?: string;\\n    codecId?: string;\\n    firCount?: number;\\n    isRemote?: boolean;\\n    mediaTrackId?: string;\\n    mediaType?: string;\\n    nackCount?: number;\\n    pliCount?: number;\\n    sliCount?: number;\\n    ssrc?: string;\\n    transportId?: string;\\n}\\n\\ninterface RTCRtcpFeedback {\\n    parameter?: string;\\n    type?: string;\\n}\\n\\ninterface RTCRtcpParameters {\\n    cname?: string;\\n    mux?: boolean;\\n    reducedSize?: boolean;\\n    ssrc?: number;\\n}\\n\\ninterface RTCRtpCapabilities {\\n    codecs?: RTCRtpCodecCapability[];\\n    fecMechanisms?: string[];\\n    headerExtensions?: RTCRtpHeaderExtension[];\\n}\\n\\ninterface RTCRtpCodecCapability {\\n    clockRate?: number;\\n    kind?: string;\\n    maxSpatialLayers?: number;\\n    maxTemporalLayers?: number;\\n    maxptime?: number;\\n    name?: string;\\n    numChannels?: number;\\n    options?: any;\\n    parameters?: any;\\n    preferredPayloadType?: number;\\n    ptime?: number;\\n    rtcpFeedback?: RTCRtcpFeedback[];\\n    svcMultiStreamSupport?: boolean;\\n}\\n\\ninterface RTCRtpCodecParameters {\\n    clockRate?: number;\\n    maxptime?: number;\\n    name?: string;\\n    numChannels?: number;\\n    parameters?: any;\\n    payloadType?: number;\\n    ptime?: number;\\n    rtcpFeedback?: RTCRtcpFeedback[];\\n}\\n\\ninterface RTCRtpContributingSource {\\n    audioLevel?: number;\\n    csrc?: number;\\n    timestamp?: number;\\n}\\n\\ninterface RTCRtpEncodingParameters {\\n    active?: boolean;\\n    codecPayloadType?: number;\\n    dependencyEncodingIds?: string[];\\n    encodingId?: string;\\n    fec?: RTCRtpFecParameters;\\n    framerateScale?: number;\\n    maxBitrate?: number;\\n    maxFramerate?: number;\\n    minQuality?: number;\\n    priority?: number;\\n    resolutionScale?: number;\\n    rtx?: RTCRtpRtxParameters;\\n    ssrc?: number;\\n    ssrcRange?: RTCSsrcRange;\\n}\\n\\ninterface RTCRtpFecParameters {\\n    mechanism?: string;\\n    ssrc?: number;\\n}\\n\\ninterface RTCRtpHeaderExtension {\\n    kind?: string;\\n    preferredEncrypt?: boolean;\\n    preferredId?: number;\\n    uri?: string;\\n}\\n\\ninterface RTCRtpHeaderExtensionParameters {\\n    encrypt?: boolean;\\n    id?: number;\\n    uri?: string;\\n}\\n\\ninterface RTCRtpParameters {\\n    codecs?: RTCRtpCodecParameters[];\\n    degradationPreference?: RTCDegradationPreference;\\n    encodings?: RTCRtpEncodingParameters[];\\n    headerExtensions?: RTCRtpHeaderExtensionParameters[];\\n    muxId?: string;\\n    rtcp?: RTCRtcpParameters;\\n}\\n\\ninterface RTCRtpRtxParameters {\\n    ssrc?: number;\\n}\\n\\ninterface RTCRtpUnhandled {\\n    muxId?: string;\\n    payloadType?: number;\\n    ssrc?: number;\\n}\\n\\ninterface RTCSessionDescriptionInit {\\n    sdp?: string;\\n    type?: RTCSdpType;\\n}\\n\\ninterface RTCSrtpKeyParam {\\n    keyMethod?: string;\\n    keySalt?: string;\\n    lifetime?: string;\\n    mkiLength?: number;\\n    mkiValue?: number;\\n}\\n\\ninterface RTCSrtpSdesParameters {\\n    cryptoSuite?: string;\\n    keyParams?: RTCSrtpKeyParam[];\\n    sessionParams?: string[];\\n    tag?: number;\\n}\\n\\ninterface RTCSsrcRange {\\n    max?: number;\\n    min?: number;\\n}\\n\\ninterface RTCStats {\\n    id?: string;\\n    msType?: MSStatsType;\\n    timestamp?: number;\\n    type?: RTCStatsType;\\n}\\n\\ninterface RTCStatsReport {\\n}\\n\\ninterface RTCTransportStats extends RTCStats {\\n    activeConnection?: boolean;\\n    bytesReceived?: number;\\n    bytesSent?: number;\\n    localCertificateId?: string;\\n    remoteCertificateId?: string;\\n    rtcpTransportStatsId?: string;\\n    selectedCandidatePairId?: string;\\n}\\n\\ninterface RegistrationOptions {\\n    scope?: string;\\n}\\n\\ninterface RequestInit {\\n    body?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null;\\n    cache?: RequestCache;\\n    credentials?: RequestCredentials;\\n    headers?: HeadersInit;\\n    integrity?: string;\\n    keepalive?: boolean;\\n    method?: string;\\n    mode?: RequestMode;\\n    redirect?: RequestRedirect;\\n    referrer?: string;\\n    referrerPolicy?: ReferrerPolicy;\\n    signal?: AbortSignal;\\n    window?: any;\\n}\\n\\ninterface ResponseInit {\\n    headers?: HeadersInit;\\n    status?: number;\\n    statusText?: string;\\n}\\n\\ninterface RsaHashedImportParams extends Algorithm {\\n    hash: string | Algorithm;\\n}\\n\\ninterface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {\\n    hash: KeyAlgorithm;\\n}\\n\\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\\n    hash: string | Algorithm;\\n}\\n\\ninterface RsaKeyAlgorithm extends KeyAlgorithm {\\n    modulusLength: number;\\n    publicExponent: Uint8Array;\\n}\\n\\ninterface RsaKeyGenParams extends Algorithm {\\n    modulusLength: number;\\n    publicExponent: Uint8Array;\\n}\\n\\ninterface RsaOaepParams extends Algorithm {\\n    label?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n}\\n\\ninterface RsaOtherPrimesInfo {\\n    d?: string;\\n    r?: string;\\n    t?: string;\\n}\\n\\ninterface RsaPssParams extends Algorithm {\\n    saltLength: number;\\n}\\n\\ninterface ScopedCredentialDescriptor {\\n    id: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null;\\n    transports?: Transport[];\\n    type: ScopedCredentialType;\\n}\\n\\ninterface ScopedCredentialOptions {\\n    excludeList?: ScopedCredentialDescriptor[];\\n    extensions?: WebAuthnExtensions;\\n    rpId?: string;\\n    timeoutSeconds?: number;\\n}\\n\\ninterface ScopedCredentialParameters {\\n    algorithm: string | Algorithm;\\n    type: ScopedCredentialType;\\n}\\n\\ninterface SecurityPolicyViolationEventInit extends EventInit {\\n    blockedURI?: string;\\n    columnNumber?: number;\\n    documentURI?: string;\\n    effectiveDirective?: string;\\n    lineNumber?: number;\\n    originalPolicy?: string;\\n    referrer?: string;\\n    sourceFile?: string;\\n    statusCode?: number;\\n    violatedDirective?: string;\\n}\\n\\ninterface ServiceWorkerMessageEventInit extends EventInit {\\n    data?: any;\\n    lastEventId?: string;\\n    origin?: string;\\n    ports?: MessagePort[] | null;\\n    source?: ServiceWorker | MessagePort | null;\\n}\\n\\ninterface SpeechSynthesisEventInit extends EventInit {\\n    charIndex?: number;\\n    charLength?: number;\\n    elapsedTime?: number;\\n    name?: string;\\n    utterance?: SpeechSynthesisUtterance | null;\\n}\\n\\ninterface StereoPannerOptions extends AudioNodeOptions {\\n    pan?: number;\\n}\\n\\ninterface StoreExceptionsInformation extends ExceptionInformation {\\n    detailURI?: string | null;\\n    explanationString?: string | null;\\n    siteName?: string | null;\\n}\\n\\ninterface StoreSiteSpecificExceptionsInformation extends StoreExceptionsInformation {\\n    arrayOfDomainStrings?: string[];\\n}\\n\\ninterface SyncEventInit extends ExtendableEventInit {\\n    lastChance?: boolean;\\n    tag: string;\\n}\\n\\ninterface TextDecodeOptions {\\n    stream?: boolean;\\n}\\n\\ninterface TextDecoderOptions {\\n    fatal?: boolean;\\n    ignoreBOM?: boolean;\\n}\\n\\ninterface TrackEventInit extends EventInit {\\n    track?: VideoTrack | AudioTrack | TextTrack | null;\\n}\\n\\ninterface TransitionEventInit extends EventInit {\\n    elapsedTime?: number;\\n    propertyName?: string;\\n}\\n\\ninterface UIEventInit extends EventInit {\\n    detail?: number;\\n    view?: Window | null;\\n}\\n\\ninterface UnderlyingSink {\\n    abort?: WritableStreamErrorCallback;\\n    close?: WritableStreamDefaultControllerCallback;\\n    start: WritableStreamDefaultControllerCallback;\\n    write?: WritableStreamChunkCallback;\\n}\\n\\ninterface VRDisplayEventInit extends EventInit {\\n    display: VRDisplay;\\n    reason?: VRDisplayEventReason;\\n}\\n\\ninterface VRLayer {\\n    leftBounds?: number[] | null;\\n    rightBounds?: number[] | null;\\n    source?: HTMLCanvasElement | null;\\n}\\n\\ninterface VRStageParameters {\\n    sittingToStandingTransform?: Float32Array;\\n    sizeX?: number;\\n    sizeY?: number;\\n}\\n\\ninterface WaveShaperOptions extends AudioNodeOptions {\\n    curve?: number[];\\n    oversample?: OverSampleType;\\n}\\n\\ninterface WebAuthnExtensions {\\n}\\n\\ninterface WebGLContextAttributes {\\n    alpha?: boolean;\\n    antialias?: boolean;\\n    depth?: boolean;\\n    failIfMajorPerformanceCaveat?: boolean;\\n    premultipliedAlpha?: boolean;\\n    preserveDrawingBuffer?: boolean;\\n    stencil?: boolean;\\n}\\n\\ninterface WebGLContextEventInit extends EventInit {\\n    statusMessage?: string;\\n}\\n\\ninterface WheelEventInit extends MouseEventInit {\\n    deltaMode?: number;\\n    deltaX?: number;\\n    deltaY?: number;\\n    deltaZ?: number;\\n}\\n\\ninterface EventListener {\\n    (evt: Event): void;\\n}\\n\\ntype WebKitEntriesCallback = ((entries: WebKitEntry[]) => void) | { handleEvent(entries: WebKitEntry[]): void; };\\n\\ntype WebKitErrorCallback = ((err: DOMError) => void) | { handleEvent(err: DOMError): void; };\\n\\ntype WebKitFileCallback = ((file: File) => void) | { handleEvent(file: File): void; };\\n\\ninterface ANGLE_instanced_arrays {\\n    drawArraysInstancedANGLE(mode: number, first: number, count: number, primcount: number): void;\\n    drawElementsInstancedANGLE(mode: number, count: number, type: number, offset: number, primcount: number): void;\\n    vertexAttribDivisorANGLE(index: number, divisor: number): void;\\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: number;\\n}\\n\\ndeclare var ANGLE_instanced_arrays: {\\n    prototype: ANGLE_instanced_arrays;\\n    new(): ANGLE_instanced_arrays;\\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: number;\\n};\\n\\ninterface AbortController {\\n    readonly signal: AbortSignal;\\n    abort(): void;\\n}\\n\\ndeclare var AbortController: {\\n    prototype: AbortController;\\n    new(): AbortController;\\n};\\n\\ninterface AbortSignalEventMap {\\n    \\\"abort\\\": ProgressEvent;\\n}\\n\\ninterface AbortSignal extends EventTarget {\\n    readonly aborted: boolean;\\n    onabort: ((this: AbortSignal, ev: ProgressEvent) => any) | null;\\n    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var AbortSignal: {\\n    prototype: AbortSignal;\\n    new(): AbortSignal;\\n};\\n\\ninterface AbstractWorkerEventMap {\\n    \\\"error\\\": ErrorEvent;\\n}\\n\\ninterface AbstractWorker {\\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface AesCfbParams extends Algorithm {\\n    iv: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;\\n}\\n\\ninterface AesCmacParams extends Algorithm {\\n    length: number;\\n}\\n\\ninterface AnalyserNode extends AudioNode {\\n    fftSize: number;\\n    readonly frequencyBinCount: number;\\n    maxDecibels: number;\\n    minDecibels: number;\\n    smoothingTimeConstant: number;\\n    getByteFrequencyData(array: Uint8Array): void;\\n    getByteTimeDomainData(array: Uint8Array): void;\\n    getFloatFrequencyData(array: Float32Array): void;\\n    getFloatTimeDomainData(array: Float32Array): void;\\n}\\n\\ndeclare var AnalyserNode: {\\n    prototype: AnalyserNode;\\n    new(): AnalyserNode;\\n};\\n\\ninterface Animation {\\n    currentTime: number | null;\\n    effect: AnimationEffectReadOnly;\\n    readonly finished: Promise<Animation>;\\n    id: string;\\n    readonly pending: boolean;\\n    readonly playState: \\\"idle\\\" | \\\"running\\\" | \\\"paused\\\" | \\\"finished\\\";\\n    playbackRate: number;\\n    readonly ready: Promise<Animation>;\\n    startTime: number;\\n    timeline: AnimationTimeline;\\n    cancel(): void;\\n    finish(): void;\\n    oncancel: (this: Animation, ev: AnimationPlaybackEvent) => any;\\n    onfinish: (this: Animation, ev: AnimationPlaybackEvent) => any;\\n    pause(): void;\\n    play(): void;\\n    reverse(): void;\\n}\\n\\ndeclare var Animation: {\\n    prototype: Animation;\\n    new(effect?: AnimationEffectReadOnly, timeline?: AnimationTimeline): Animation;\\n};\\n\\ninterface AnimationEffectReadOnly {\\n    readonly timing: number;\\n    getComputedTiming(): ComputedTimingProperties;\\n}\\n\\ninterface AnimationEvent extends Event {\\n    readonly animationName: string;\\n    readonly elapsedTime: number;\\n}\\n\\ndeclare var AnimationEvent: {\\n    prototype: AnimationEvent;\\n    new(typeArg: string, eventInitDict?: AnimationEventInit): AnimationEvent;\\n};\\n\\ninterface AnimationKeyFrame {\\n    easing?: string | string[];\\n    offset?: number | null | (number | null)[];\\n    [index: string]: string | number | number[] | string[] | null | (number | null)[] | undefined;\\n}\\n\\ninterface AnimationOptions {\\n    delay?: number;\\n    direction?: \\\"normal\\\" | \\\"reverse\\\" | \\\"alternate\\\" | \\\"alternate-reverse\\\";\\n    duration?: number;\\n    easing?: string;\\n    endDelay?: number;\\n    fill?: \\\"none\\\" | \\\"forwards\\\" | \\\"backwards\\\" | \\\"both\\\"| \\\"auto\\\";\\n    id?: string;\\n    iterationStart?: number;\\n    iterations?: number;\\n}\\n\\ninterface AnimationPlaybackEvent extends Event {\\n    readonly currentTime: number | null;\\n    readonly timelineTime: number | null;\\n}\\n\\ndeclare var AnimationPlaybackEvent: {\\n    prototype: AnimationPlaybackEvent;\\n    new(type: string, eventInitDict?: AnimationPlaybackEventInit): AnimationPlaybackEvent;\\n};\\n\\ninterface AnimationPlaybackEventInit extends EventInit {\\n    currentTime?: number | null;\\n    timelineTime?: number | null;\\n}\\n\\ninterface AnimationTimeline {\\n    readonly currentTime: number | null;\\n}\\n\\ninterface ApplicationCacheEventMap {\\n    \\\"cached\\\": Event;\\n    \\\"checking\\\": Event;\\n    \\\"downloading\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"noupdate\\\": Event;\\n    \\\"obsolete\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"updateready\\\": Event;\\n}\\n\\ninterface ApplicationCache extends EventTarget {\\n    oncached: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onchecking: ((this: ApplicationCache, ev: Event) => any) | null;\\n    ondownloading: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onerror: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onnoupdate: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onobsolete: ((this: ApplicationCache, ev: Event) => any) | null;\\n    onprogress: ((this: ApplicationCache, ev: ProgressEvent) => any) | null;\\n    onupdateready: ((this: ApplicationCache, ev: Event) => any) | null;\\n    readonly status: number;\\n    abort(): void;\\n    swapCache(): void;\\n    update(): void;\\n    readonly CHECKING: number;\\n    readonly DOWNLOADING: number;\\n    readonly IDLE: number;\\n    readonly OBSOLETE: number;\\n    readonly UNCACHED: number;\\n    readonly UPDATEREADY: number;\\n    addEventListener<K extends keyof ApplicationCacheEventMap>(type: K, listener: (this: ApplicationCache, ev: ApplicationCacheEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ApplicationCacheEventMap>(type: K, listener: (this: ApplicationCache, ev: ApplicationCacheEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ApplicationCache: {\\n    prototype: ApplicationCache;\\n    new(): ApplicationCache;\\n    readonly CHECKING: number;\\n    readonly DOWNLOADING: number;\\n    readonly IDLE: number;\\n    readonly OBSOLETE: number;\\n    readonly UNCACHED: number;\\n    readonly UPDATEREADY: number;\\n};\\n\\ninterface AssignedNodesOptions {\\n    flatten?: boolean;\\n}\\n\\ninterface Attr extends Node {\\n    readonly name: string;\\n    readonly ownerElement: Element | null;\\n    readonly prefix: string | null;\\n    readonly specified: boolean;\\n    value: string;\\n}\\n\\ndeclare var Attr: {\\n    prototype: Attr;\\n    new(): Attr;\\n};\\n\\ninterface AudioBuffer {\\n    readonly duration: number;\\n    readonly length: number;\\n    readonly numberOfChannels: number;\\n    readonly sampleRate: number;\\n    copyFromChannel(destination: Float32Array, channelNumber: number, startInChannel?: number): void;\\n    copyToChannel(source: Float32Array, channelNumber: number, startInChannel?: number): void;\\n    getChannelData(channel: number): Float32Array;\\n}\\n\\ndeclare var AudioBuffer: {\\n    prototype: AudioBuffer;\\n    new(): AudioBuffer;\\n};\\n\\ninterface AudioBufferSourceNodeEventMap {\\n    \\\"ended\\\": Event;\\n}\\n\\ninterface AudioBufferSourceNode extends AudioNode {\\n    buffer: AudioBuffer | null;\\n    readonly detune: AudioParam;\\n    loop: boolean;\\n    loopEnd: number;\\n    loopStart: number;\\n    onended: ((this: AudioBufferSourceNode, ev: Event) => any) | null;\\n    readonly playbackRate: AudioParam;\\n    start(when?: number, offset?: number, duration?: number): void;\\n    stop(when?: number): void;\\n    addEventListener<K extends keyof AudioBufferSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioBufferSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AudioBufferSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioBufferSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var AudioBufferSourceNode: {\\n    prototype: AudioBufferSourceNode;\\n    new(): AudioBufferSourceNode;\\n};\\n\\ninterface AudioContextEventMap {\\n    \\\"statechange\\\": Event;\\n}\\n\\ninterface AudioContextBase extends EventTarget {\\n    readonly currentTime: number;\\n    readonly destination: AudioDestinationNode;\\n    readonly listener: AudioListener;\\n    onstatechange: ((this: AudioContext, ev: Event) => any) | null;\\n    readonly sampleRate: number;\\n    readonly state: AudioContextState;\\n    close(): Promise<void>;\\n    createAnalyser(): AnalyserNode;\\n    createBiquadFilter(): BiquadFilterNode;\\n    createBuffer(numberOfChannels: number, length: number, sampleRate: number): AudioBuffer;\\n    createBufferSource(): AudioBufferSourceNode;\\n    createChannelMerger(numberOfInputs?: number): ChannelMergerNode;\\n    createChannelSplitter(numberOfOutputs?: number): ChannelSplitterNode;\\n    createConvolver(): ConvolverNode;\\n    createDelay(maxDelayTime?: number): DelayNode;\\n    createDynamicsCompressor(): DynamicsCompressorNode;\\n    createGain(): GainNode;\\n    createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;\\n    createMediaElementSource(mediaElement: HTMLMediaElement): MediaElementAudioSourceNode;\\n    createMediaStreamSource(mediaStream: MediaStream): MediaStreamAudioSourceNode;\\n    createOscillator(): OscillatorNode;\\n    createPanner(): PannerNode;\\n    createPeriodicWave(real: Float32Array, imag: Float32Array, constraints?: PeriodicWaveConstraints): PeriodicWave;\\n    createScriptProcessor(bufferSize?: number, numberOfInputChannels?: number, numberOfOutputChannels?: number): ScriptProcessorNode;\\n    createStereoPanner(): StereoPannerNode;\\n    createWaveShaper(): WaveShaperNode;\\n    decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback, errorCallback?: DecodeErrorCallback): Promise<AudioBuffer>;\\n    resume(): Promise<void>;\\n    addEventListener<K extends keyof AudioContextEventMap>(type: K, listener: (this: AudioContext, ev: AudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AudioContextEventMap>(type: K, listener: (this: AudioContext, ev: AudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface AudioContext extends AudioContextBase {\\n    suspend(): Promise<void>;\\n}\\n\\ndeclare var AudioContext: {\\n    prototype: AudioContext;\\n    new(): AudioContext;\\n};\\n\\ninterface AudioDestinationNode extends AudioNode {\\n    readonly maxChannelCount: number;\\n}\\n\\ndeclare var AudioDestinationNode: {\\n    prototype: AudioDestinationNode;\\n    new(): AudioDestinationNode;\\n};\\n\\ninterface AudioListener {\\n    /** @deprecated */\\n    dopplerFactor: number;\\n    /** @deprecated */\\n    speedOfSound: number;\\n    /** @deprecated */\\n    setOrientation(x: number, y: number, z: number, xUp: number, yUp: number, zUp: number): void;\\n    /** @deprecated */\\n    setPosition(x: number, y: number, z: number): void;\\n    /** @deprecated */\\n    setVelocity(x: number, y: number, z: number): void;\\n}\\n\\ndeclare var AudioListener: {\\n    prototype: AudioListener;\\n    new(): AudioListener;\\n};\\n\\ninterface AudioNode extends EventTarget {\\n    channelCount: number;\\n    channelCountMode: ChannelCountMode;\\n    channelInterpretation: ChannelInterpretation;\\n    readonly context: AudioContext;\\n    readonly numberOfInputs: number;\\n    readonly numberOfOutputs: number;\\n    connect(destination: AudioNode, output?: number, input?: number): AudioNode;\\n    connect(destination: AudioParam, output?: number): void;\\n    disconnect(): void;\\n    disconnect(output: number): void;\\n    disconnect(destination: AudioNode): void;\\n    disconnect(destination: AudioNode, output: number): void;\\n    disconnect(destination: AudioNode, output: number, input: number): void;\\n    disconnect(destination: AudioParam): void;\\n    disconnect(destination: AudioParam, output: number): void;\\n}\\n\\ndeclare var AudioNode: {\\n    prototype: AudioNode;\\n    new(): AudioNode;\\n};\\n\\ninterface AudioParam {\\n    readonly defaultValue: number;\\n    value: number;\\n    cancelScheduledValues(cancelTime: number): AudioParam;\\n    exponentialRampToValueAtTime(value: number, endTime: number): AudioParam;\\n    linearRampToValueAtTime(value: number, endTime: number): AudioParam;\\n    setTargetAtTime(target: number, startTime: number, timeConstant: number): AudioParam;\\n    setValueAtTime(value: number, startTime: number): AudioParam;\\n    setValueCurveAtTime(values: number[], startTime: number, duration: number): AudioParam;\\n}\\n\\ndeclare var AudioParam: {\\n    prototype: AudioParam;\\n    new(): AudioParam;\\n};\\n\\ninterface AudioProcessingEvent extends Event {\\n    readonly inputBuffer: AudioBuffer;\\n    readonly outputBuffer: AudioBuffer;\\n    readonly playbackTime: number;\\n}\\n\\ndeclare var AudioProcessingEvent: {\\n    prototype: AudioProcessingEvent;\\n    new(): AudioProcessingEvent;\\n};\\n\\ninterface AudioTrack {\\n    enabled: boolean;\\n    readonly id: string;\\n    kind: string;\\n    readonly label: string;\\n    language: string;\\n    readonly sourceBuffer: SourceBuffer;\\n}\\n\\ndeclare var AudioTrack: {\\n    prototype: AudioTrack;\\n    new(): AudioTrack;\\n};\\n\\ninterface AudioTrackListEventMap {\\n    \\\"addtrack\\\": TrackEvent;\\n    \\\"change\\\": Event;\\n    \\\"removetrack\\\": TrackEvent;\\n}\\n\\ninterface AudioTrackList extends EventTarget {\\n    readonly length: number;\\n    onaddtrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;\\n    onchange: ((this: AudioTrackList, ev: Event) => any) | null;\\n    onremovetrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;\\n    getTrackById(id: string): AudioTrack | null;\\n    item(index: number): AudioTrack;\\n    addEventListener<K extends keyof AudioTrackListEventMap>(type: K, listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof AudioTrackListEventMap>(type: K, listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [index: number]: AudioTrack;\\n}\\n\\ndeclare var AudioTrackList: {\\n    prototype: AudioTrackList;\\n    new(): AudioTrackList;\\n};\\n\\ninterface BarProp {\\n    readonly visible: boolean;\\n}\\n\\ndeclare var BarProp: {\\n    prototype: BarProp;\\n    new(): BarProp;\\n};\\n\\ninterface BeforeUnloadEvent extends Event {\\n    returnValue: any;\\n}\\n\\ndeclare var BeforeUnloadEvent: {\\n    prototype: BeforeUnloadEvent;\\n    new(): BeforeUnloadEvent;\\n};\\n\\ninterface BhxBrowser {\\n    readonly lastError: DOMException;\\n    checkMatchesGlobExpression(pattern: string, value: string): boolean;\\n    checkMatchesUriExpression(pattern: string, value: string): boolean;\\n    clearLastError(): void;\\n    currentWindowId(): number;\\n    fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;\\n    genericFunction(functionId: number, destination: any, parameters?: string, callbackId?: number): void;\\n    genericSynchronousFunction(functionId: number, parameters?: string): string;\\n    getExtensionId(): string;\\n    getThisAddress(): any;\\n    registerGenericFunctionCallbackHandler(callbackHandler: Function): void;\\n    registerGenericListenerHandler(eventHandler: Function): void;\\n    setLastError(parameters: string): void;\\n    webPlatformGenericFunction(destination: any, parameters?: string, callbackId?: number): void;\\n}\\n\\ndeclare var BhxBrowser: {\\n    prototype: BhxBrowser;\\n    new(): BhxBrowser;\\n};\\n\\ninterface BiquadFilterNode extends AudioNode {\\n    readonly Q: AudioParam;\\n    readonly detune: AudioParam;\\n    readonly frequency: AudioParam;\\n    readonly gain: AudioParam;\\n    type: BiquadFilterType;\\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\\n}\\n\\ndeclare var BiquadFilterNode: {\\n    prototype: BiquadFilterNode;\\n    new(): BiquadFilterNode;\\n};\\n\\ninterface Blob {\\n    readonly size: number;\\n    readonly type: string;\\n    msClose(): void;\\n    msDetachStream(): any;\\n    slice(start?: number, end?: number, contentType?: string): Blob;\\n}\\n\\ndeclare var Blob: {\\n    prototype: Blob;\\n    new (blobParts?: any[], options?: BlobPropertyBag): Blob;\\n};\\n\\ninterface BlobPropertyBag {\\n    endings?: string;\\n    type?: string;\\n}\\n\\ninterface Body {\\n    readonly bodyUsed: boolean;\\n    arrayBuffer(): Promise<ArrayBuffer>;\\n    blob(): Promise<Blob>;\\n    formData(): Promise<FormData>;\\n    json(): Promise<any>;\\n    text(): Promise<string>;\\n}\\n\\ninterface BroadcastChannel extends EventTarget {\\n    readonly name: string;\\n    onmessage: (ev: MessageEvent) => any;\\n    onmessageerror: (ev: MessageEvent) => any;\\n    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    close(): void;\\n    postMessage(message: any): void;\\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var BroadcastChannel: {\\n    prototype: BroadcastChannel;\\n    new(name: string): BroadcastChannel;\\n};\\n\\ninterface BroadcastChannelEventMap {\\n    message: MessageEvent;\\n    messageerror: MessageEvent;\\n}\\n\\ninterface ByteLengthQueuingStrategy {\\n    highWaterMark: number;\\n    size(chunk?: any): number;\\n}\\n\\ndeclare var ByteLengthQueuingStrategy: {\\n    prototype: ByteLengthQueuingStrategy;\\n    new(strategy: QueuingStrategy): ByteLengthQueuingStrategy;\\n};\\n\\ninterface CDATASection extends Text {\\n}\\n\\ndeclare var CDATASection: {\\n    prototype: CDATASection;\\n    new(): CDATASection;\\n};\\n\\ninterface CSS {\\n    escape(value: string): string;\\n    supports(property: string, value?: string): boolean;\\n}\\ndeclare var CSS: CSS;\\n\\ninterface CSSConditionRule extends CSSGroupingRule {\\n    conditionText: string;\\n}\\n\\ndeclare var CSSConditionRule: {\\n    prototype: CSSConditionRule;\\n    new(): CSSConditionRule;\\n};\\n\\ninterface CSSFontFaceRule extends CSSRule {\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSFontFaceRule: {\\n    prototype: CSSFontFaceRule;\\n    new(): CSSFontFaceRule;\\n};\\n\\ninterface CSSGroupingRule extends CSSRule {\\n    readonly cssRules: CSSRuleList;\\n    deleteRule(index: number): void;\\n    insertRule(rule: string, index: number): number;\\n}\\n\\ndeclare var CSSGroupingRule: {\\n    prototype: CSSGroupingRule;\\n    new(): CSSGroupingRule;\\n};\\n\\ninterface CSSImportRule extends CSSRule {\\n    readonly href: string;\\n    readonly media: MediaList;\\n    readonly styleSheet: CSSStyleSheet;\\n}\\n\\ndeclare var CSSImportRule: {\\n    prototype: CSSImportRule;\\n    new(): CSSImportRule;\\n};\\n\\ninterface CSSKeyframeRule extends CSSRule {\\n    keyText: string;\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSKeyframeRule: {\\n    prototype: CSSKeyframeRule;\\n    new(): CSSKeyframeRule;\\n};\\n\\ninterface CSSKeyframesRule extends CSSRule {\\n    readonly cssRules: CSSRuleList;\\n    name: string;\\n    appendRule(rule: string): void;\\n    deleteRule(rule: string): void;\\n    findRule(rule: string): CSSKeyframeRule | null;\\n}\\n\\ndeclare var CSSKeyframesRule: {\\n    prototype: CSSKeyframesRule;\\n    new(): CSSKeyframesRule;\\n};\\n\\ninterface CSSMediaRule extends CSSConditionRule {\\n    readonly media: MediaList;\\n}\\n\\ndeclare var CSSMediaRule: {\\n    prototype: CSSMediaRule;\\n    new(): CSSMediaRule;\\n};\\n\\ninterface CSSNamespaceRule extends CSSRule {\\n    readonly namespaceURI: string;\\n    readonly prefix: string;\\n}\\n\\ndeclare var CSSNamespaceRule: {\\n    prototype: CSSNamespaceRule;\\n    new(): CSSNamespaceRule;\\n};\\n\\ninterface CSSPageRule extends CSSRule {\\n    readonly pseudoClass: string;\\n    readonly selector: string;\\n    selectorText: string;\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSPageRule: {\\n    prototype: CSSPageRule;\\n    new(): CSSPageRule;\\n};\\n\\ninterface CSSRule {\\n    cssText: string;\\n    readonly parentRule: CSSRule | null;\\n    readonly parentStyleSheet: CSSStyleSheet | null;\\n    readonly type: number;\\n    readonly CHARSET_RULE: number;\\n    readonly FONT_FACE_RULE: number;\\n    readonly IMPORT_RULE: number;\\n    readonly KEYFRAMES_RULE: number;\\n    readonly KEYFRAME_RULE: number;\\n    readonly MEDIA_RULE: number;\\n    readonly NAMESPACE_RULE: number;\\n    readonly PAGE_RULE: number;\\n    readonly STYLE_RULE: number;\\n    readonly SUPPORTS_RULE: number;\\n    readonly UNKNOWN_RULE: number;\\n    readonly VIEWPORT_RULE: number;\\n}\\n\\ndeclare var CSSRule: {\\n    prototype: CSSRule;\\n    new(): CSSRule;\\n    readonly CHARSET_RULE: number;\\n    readonly FONT_FACE_RULE: number;\\n    readonly IMPORT_RULE: number;\\n    readonly KEYFRAMES_RULE: number;\\n    readonly KEYFRAME_RULE: number;\\n    readonly MEDIA_RULE: number;\\n    readonly NAMESPACE_RULE: number;\\n    readonly PAGE_RULE: number;\\n    readonly STYLE_RULE: number;\\n    readonly SUPPORTS_RULE: number;\\n    readonly UNKNOWN_RULE: number;\\n    readonly VIEWPORT_RULE: number;\\n};\\n\\ninterface CSSRuleList {\\n    readonly length: number;\\n    item(index: number): CSSRule | null;\\n    [index: number]: CSSRule;\\n}\\n\\ndeclare var CSSRuleList: {\\n    prototype: CSSRuleList;\\n    new(): CSSRuleList;\\n};\\n\\ninterface CSSStyleDeclaration {\\n    alignContent: string | null;\\n    alignItems: string | null;\\n    alignSelf: string | null;\\n    alignmentBaseline: string | null;\\n    animation: string | null;\\n    animationDelay: string | null;\\n    animationDirection: string | null;\\n    animationDuration: string | null;\\n    animationFillMode: string | null;\\n    animationIterationCount: string | null;\\n    animationName: string | null;\\n    animationPlayState: string | null;\\n    animationTimingFunction: string | null;\\n    backfaceVisibility: string | null;\\n    background: string | null;\\n    backgroundAttachment: string | null;\\n    backgroundClip: string | null;\\n    backgroundColor: string | null;\\n    backgroundImage: string | null;\\n    backgroundOrigin: string | null;\\n    backgroundPosition: string | null;\\n    backgroundPositionX: string | null;\\n    backgroundPositionY: string | null;\\n    backgroundRepeat: string | null;\\n    backgroundSize: string | null;\\n    baselineShift: string | null;\\n    border: string | null;\\n    borderBottom: string | null;\\n    borderBottomColor: string | null;\\n    borderBottomLeftRadius: string | null;\\n    borderBottomRightRadius: string | null;\\n    borderBottomStyle: string | null;\\n    borderBottomWidth: string | null;\\n    borderCollapse: string | null;\\n    borderColor: string | null;\\n    borderImage: string | null;\\n    borderImageOutset: string | null;\\n    borderImageRepeat: string | null;\\n    borderImageSlice: string | null;\\n    borderImageSource: string | null;\\n    borderImageWidth: string | null;\\n    borderLeft: string | null;\\n    borderLeftColor: string | null;\\n    borderLeftStyle: string | null;\\n    borderLeftWidth: string | null;\\n    borderRadius: string | null;\\n    borderRight: string | null;\\n    borderRightColor: string | null;\\n    borderRightStyle: string | null;\\n    borderRightWidth: string | null;\\n    borderSpacing: string | null;\\n    borderStyle: string | null;\\n    borderTop: string | null;\\n    borderTopColor: string | null;\\n    borderTopLeftRadius: string | null;\\n    borderTopRightRadius: string | null;\\n    borderTopStyle: string | null;\\n    borderTopWidth: string | null;\\n    borderWidth: string | null;\\n    bottom: string | null;\\n    boxShadow: string | null;\\n    boxSizing: string | null;\\n    breakAfter: string | null;\\n    breakBefore: string | null;\\n    breakInside: string | null;\\n    captionSide: string | null;\\n    clear: string | null;\\n    clip: string | null;\\n    clipPath: string | null;\\n    clipRule: string | null;\\n    color: string | null;\\n    colorInterpolationFilters: string | null;\\n    columnCount: any;\\n    columnFill: string | null;\\n    columnGap: any;\\n    columnRule: string | null;\\n    columnRuleColor: any;\\n    columnRuleStyle: string | null;\\n    columnRuleWidth: any;\\n    columnSpan: string | null;\\n    columnWidth: any;\\n    columns: string | null;\\n    content: string | null;\\n    counterIncrement: string | null;\\n    counterReset: string | null;\\n    cssFloat: string | null;\\n    cssText: string;\\n    cursor: string | null;\\n    direction: string | null;\\n    display: string | null;\\n    dominantBaseline: string | null;\\n    emptyCells: string | null;\\n    enableBackground: string | null;\\n    fill: string | null;\\n    fillOpacity: string | null;\\n    fillRule: string | null;\\n    filter: string | null;\\n    flex: string | null;\\n    flexBasis: string | null;\\n    flexDirection: string | null;\\n    flexFlow: string | null;\\n    flexGrow: string | null;\\n    flexShrink: string | null;\\n    flexWrap: string | null;\\n    floodColor: string | null;\\n    floodOpacity: string | null;\\n    font: string | null;\\n    fontFamily: string | null;\\n    fontFeatureSettings: string | null;\\n    fontSize: string | null;\\n    fontSizeAdjust: string | null;\\n    fontStretch: string | null;\\n    fontStyle: string | null;\\n    fontVariant: string | null;\\n    fontWeight: string | null;\\n    gap: string | null;\\n    glyphOrientationHorizontal: string | null;\\n    glyphOrientationVertical: string | null;\\n    grid: string | null;\\n    gridArea: string | null;\\n    gridAutoColumns: string | null;\\n    gridAutoFlow: string | null;\\n    gridAutoRows: string | null;\\n    gridColumn: string | null;\\n    gridColumnEnd: string | null;\\n    gridColumnGap: string | null;\\n    gridColumnStart: string | null;\\n    gridGap: string | null;\\n    gridRow: string | null;\\n    gridRowEnd: string | null;\\n    gridRowGap: string | null;\\n    gridRowStart: string | null;\\n    gridTemplate: string | null;\\n    gridTemplateAreas: string | null;\\n    gridTemplateColumns: string | null;\\n    gridTemplateRows: string | null;\\n    height: string | null;\\n    imeMode: string | null;\\n    justifyContent: string | null;\\n    justifyItems: string | null;\\n    justifySelf: string | null;\\n    kerning: string | null;\\n    layoutGrid: string | null;\\n    layoutGridChar: string | null;\\n    layoutGridLine: string | null;\\n    layoutGridMode: string | null;\\n    layoutGridType: string | null;\\n    left: string | null;\\n    readonly length: number;\\n    letterSpacing: string | null;\\n    lightingColor: string | null;\\n    lineBreak: string | null;\\n    lineHeight: string | null;\\n    listStyle: string | null;\\n    listStyleImage: string | null;\\n    listStylePosition: string | null;\\n    listStyleType: string | null;\\n    margin: string | null;\\n    marginBottom: string | null;\\n    marginLeft: string | null;\\n    marginRight: string | null;\\n    marginTop: string | null;\\n    marker: string | null;\\n    markerEnd: string | null;\\n    markerMid: string | null;\\n    markerStart: string | null;\\n    mask: string | null;\\n    maskImage: string | null;\\n    maxHeight: string | null;\\n    maxWidth: string | null;\\n    minHeight: string | null;\\n    minWidth: string | null;\\n    msContentZoomChaining: string | null;\\n    msContentZoomLimit: string | null;\\n    msContentZoomLimitMax: any;\\n    msContentZoomLimitMin: any;\\n    msContentZoomSnap: string | null;\\n    msContentZoomSnapPoints: string | null;\\n    msContentZoomSnapType: string | null;\\n    msContentZooming: string | null;\\n    msFlowFrom: string | null;\\n    msFlowInto: string | null;\\n    msFontFeatureSettings: string | null;\\n    msGridColumn: any;\\n    msGridColumnAlign: string | null;\\n    msGridColumnSpan: any;\\n    msGridColumns: string | null;\\n    msGridRow: any;\\n    msGridRowAlign: string | null;\\n    msGridRowSpan: any;\\n    msGridRows: string | null;\\n    msHighContrastAdjust: string | null;\\n    msHyphenateLimitChars: string | null;\\n    msHyphenateLimitLines: any;\\n    msHyphenateLimitZone: any;\\n    msHyphens: string | null;\\n    msImeAlign: string | null;\\n    msOverflowStyle: string | null;\\n    msScrollChaining: string | null;\\n    msScrollLimit: string | null;\\n    msScrollLimitXMax: any;\\n    msScrollLimitXMin: any;\\n    msScrollLimitYMax: any;\\n    msScrollLimitYMin: any;\\n    msScrollRails: string | null;\\n    msScrollSnapPointsX: string | null;\\n    msScrollSnapPointsY: string | null;\\n    msScrollSnapType: string | null;\\n    msScrollSnapX: string | null;\\n    msScrollSnapY: string | null;\\n    msScrollTranslation: string | null;\\n    msTextCombineHorizontal: string | null;\\n    msTextSizeAdjust: any;\\n    msTouchAction: string | null;\\n    msTouchSelect: string | null;\\n    msUserSelect: string | null;\\n    msWrapFlow: string;\\n    msWrapMargin: any;\\n    msWrapThrough: string;\\n    objectFit: string | null;\\n    objectPosition: string | null;\\n    opacity: string | null;\\n    order: string | null;\\n    orphans: string | null;\\n    outline: string | null;\\n    outlineColor: string | null;\\n    outlineOffset: string | null;\\n    outlineStyle: string | null;\\n    outlineWidth: string | null;\\n    overflow: string | null;\\n    overflowX: string | null;\\n    overflowY: string | null;\\n    padding: string | null;\\n    paddingBottom: string | null;\\n    paddingLeft: string | null;\\n    paddingRight: string | null;\\n    paddingTop: string | null;\\n    pageBreakAfter: string | null;\\n    pageBreakBefore: string | null;\\n    pageBreakInside: string | null;\\n    readonly parentRule: CSSRule;\\n    penAction: string | null;\\n    perspective: string | null;\\n    perspectiveOrigin: string | null;\\n    pointerEvents: string | null;\\n    position: string | null;\\n    quotes: string | null;\\n    resize: string | null;\\n    right: string | null;\\n    rotate: string | null;\\n    rowGap: string | null;\\n    rubyAlign: string | null;\\n    rubyOverhang: string | null;\\n    rubyPosition: string | null;\\n    scale: string | null;\\n    stopColor: string | null;\\n    stopOpacity: string | null;\\n    stroke: string | null;\\n    strokeDasharray: string | null;\\n    strokeDashoffset: string | null;\\n    strokeLinecap: string | null;\\n    strokeLinejoin: string | null;\\n    strokeMiterlimit: string | null;\\n    strokeOpacity: string | null;\\n    strokeWidth: string | null;\\n    tableLayout: string | null;\\n    textAlign: string | null;\\n    textAlignLast: string | null;\\n    textAnchor: string | null;\\n    textCombineUpright: string | null;\\n    textDecoration: string | null;\\n    textIndent: string | null;\\n    textJustify: string | null;\\n    textKashida: string | null;\\n    textKashidaSpace: string | null;\\n    textOverflow: string | null;\\n    textShadow: string | null;\\n    textTransform: string | null;\\n    textUnderlinePosition: string | null;\\n    top: string | null;\\n    touchAction: string | null;\\n    transform: string | null;\\n    transformOrigin: string | null;\\n    transformStyle: string | null;\\n    transition: string | null;\\n    transitionDelay: string | null;\\n    transitionDuration: string | null;\\n    transitionProperty: string | null;\\n    transitionTimingFunction: string | null;\\n    translate: string | null;\\n    unicodeBidi: string | null;\\n    userSelect: string | null;\\n    verticalAlign: string | null;\\n    visibility: string | null;\\n    webkitAlignContent: string | null;\\n    webkitAlignItems: string | null;\\n    webkitAlignSelf: string | null;\\n    webkitAnimation: string | null;\\n    webkitAnimationDelay: string | null;\\n    webkitAnimationDirection: string | null;\\n    webkitAnimationDuration: string | null;\\n    webkitAnimationFillMode: string | null;\\n    webkitAnimationIterationCount: string | null;\\n    webkitAnimationName: string | null;\\n    webkitAnimationPlayState: string | null;\\n    webkitAnimationTimingFunction: string | null;\\n    webkitAppearance: string | null;\\n    webkitBackfaceVisibility: string | null;\\n    webkitBackgroundClip: string | null;\\n    webkitBackgroundOrigin: string | null;\\n    webkitBackgroundSize: string | null;\\n    webkitBorderBottomLeftRadius: string | null;\\n    webkitBorderBottomRightRadius: string | null;\\n    webkitBorderImage: string | null;\\n    webkitBorderRadius: string | null;\\n    webkitBorderTopLeftRadius: string | null;\\n    webkitBorderTopRightRadius: string | null;\\n    webkitBoxAlign: string | null;\\n    webkitBoxDirection: string | null;\\n    webkitBoxFlex: string | null;\\n    webkitBoxOrdinalGroup: string | null;\\n    webkitBoxOrient: string | null;\\n    webkitBoxPack: string | null;\\n    webkitBoxSizing: string | null;\\n    webkitColumnBreakAfter: string | null;\\n    webkitColumnBreakBefore: string | null;\\n    webkitColumnBreakInside: string | null;\\n    webkitColumnCount: any;\\n    webkitColumnGap: any;\\n    webkitColumnRule: string | null;\\n    webkitColumnRuleColor: any;\\n    webkitColumnRuleStyle: string | null;\\n    webkitColumnRuleWidth: any;\\n    webkitColumnSpan: string | null;\\n    webkitColumnWidth: any;\\n    webkitColumns: string | null;\\n    webkitFilter: string | null;\\n    webkitFlex: string | null;\\n    webkitFlexBasis: string | null;\\n    webkitFlexDirection: string | null;\\n    webkitFlexFlow: string | null;\\n    webkitFlexGrow: string | null;\\n    webkitFlexShrink: string | null;\\n    webkitFlexWrap: string | null;\\n    webkitJustifyContent: string | null;\\n    webkitOrder: string | null;\\n    webkitPerspective: string | null;\\n    webkitPerspectiveOrigin: string | null;\\n    webkitTapHighlightColor: string | null;\\n    webkitTextFillColor: string | null;\\n    webkitTextSizeAdjust: any;\\n    webkitTextStroke: string | null;\\n    webkitTextStrokeColor: string | null;\\n    webkitTextStrokeWidth: string | null;\\n    webkitTransform: string | null;\\n    webkitTransformOrigin: string | null;\\n    webkitTransformStyle: string | null;\\n    webkitTransition: string | null;\\n    webkitTransitionDelay: string | null;\\n    webkitTransitionDuration: string | null;\\n    webkitTransitionProperty: string | null;\\n    webkitTransitionTimingFunction: string | null;\\n    webkitUserModify: string | null;\\n    webkitUserSelect: string | null;\\n    webkitWritingMode: string | null;\\n    whiteSpace: string | null;\\n    widows: string | null;\\n    width: string | null;\\n    wordBreak: string | null;\\n    wordSpacing: string | null;\\n    wordWrap: string | null;\\n    writingMode: string | null;\\n    zIndex: string | null;\\n    zoom: string | null;\\n    getPropertyPriority(propertyName: string): string;\\n    getPropertyValue(propertyName: string): string;\\n    item(index: number): string;\\n    removeProperty(propertyName: string): string;\\n    setProperty(propertyName: string, value: string | null, priority?: string | null): void;\\n    [index: number]: string;\\n}\\n\\ndeclare var CSSStyleDeclaration: {\\n    prototype: CSSStyleDeclaration;\\n    new(): CSSStyleDeclaration;\\n};\\n\\ninterface CSSStyleRule extends CSSRule {\\n    selectorText: string;\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ndeclare var CSSStyleRule: {\\n    prototype: CSSStyleRule;\\n    new(): CSSStyleRule;\\n};\\n\\ninterface CSSStyleSheet extends StyleSheet {\\n    readonly cssRules: CSSRuleList;\\n    /** @deprecated */\\n    cssText: string;\\n    /** @deprecated */\\n    readonly id: string;\\n    /** @deprecated */\\n    readonly imports: StyleSheetList;\\n    /** @deprecated */\\n    readonly isAlternate: boolean;\\n    /** @deprecated */\\n    readonly isPrefAlternate: boolean;\\n    readonly ownerRule: CSSRule | null;\\n    /** @deprecated */\\n    readonly owningElement: Element;\\n    /** @deprecated */\\n    readonly pages: any;\\n    /** @deprecated */\\n    readonly readOnly: boolean;\\n    readonly rules: CSSRuleList;\\n    /** @deprecated */\\n    addImport(bstrURL: string, lIndex?: number): number;\\n    /** @deprecated */\\n    addPageRule(bstrSelector: string, bstrStyle: string, lIndex?: number): number;\\n    addRule(bstrSelector: string, bstrStyle?: string, lIndex?: number): number;\\n    deleteRule(index?: number): void;\\n    insertRule(rule: string, index?: number): number;\\n    /** @deprecated */\\n    removeImport(lIndex: number): void;\\n    removeRule(lIndex: number): void;\\n}\\n\\ndeclare var CSSStyleSheet: {\\n    prototype: CSSStyleSheet;\\n    new(): CSSStyleSheet;\\n};\\n\\ninterface CSSSupportsRule extends CSSConditionRule {\\n}\\n\\ndeclare var CSSSupportsRule: {\\n    prototype: CSSSupportsRule;\\n    new(): CSSSupportsRule;\\n};\\n\\ninterface Cache {\\n    add(request: Request | string): Promise<void>;\\n    addAll(requests: (Request | string)[]): Promise<void>;\\n    delete(request: Request | string, options?: CacheQueryOptions): Promise<boolean>;\\n    keys(request?: Request | string, options?: CacheQueryOptions): Promise<Request[]>;\\n    match(request: Request | string, options?: CacheQueryOptions): Promise<Response>;\\n    matchAll(request?: Request | string, options?: CacheQueryOptions): Promise<Response[]>;\\n    put(request: Request | string, response: Response): Promise<void>;\\n}\\n\\ndeclare var Cache: {\\n    prototype: Cache;\\n    new(): Cache;\\n};\\n\\ninterface CacheStorage {\\n    delete(cacheName: string): Promise<boolean>;\\n    has(cacheName: string): Promise<boolean>;\\n    keys(): Promise<string[]>;\\n    match(request: Request | string, options?: CacheQueryOptions): Promise<any>;\\n    open(cacheName: string): Promise<Cache>;\\n}\\n\\ndeclare var CacheStorage: {\\n    prototype: CacheStorage;\\n    new(): CacheStorage;\\n};\\n\\ninterface Canvas2DContextAttributes {\\n    alpha?: boolean;\\n    storage?: boolean;\\n    willReadFrequently?: boolean;\\n    [attribute: string]: boolean | string | undefined;\\n}\\n\\ninterface CanvasGradient {\\n    addColorStop(offset: number, color: string): void;\\n}\\n\\ndeclare var CanvasGradient: {\\n    prototype: CanvasGradient;\\n    new(): CanvasGradient;\\n};\\n\\ninterface CanvasPathMethods {\\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\\n    arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;\\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\\n    closePath(): void;\\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\\n    lineTo(x: number, y: number): void;\\n    moveTo(x: number, y: number): void;\\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\\n    rect(x: number, y: number, w: number, h: number): void;\\n}\\n\\ninterface CanvasPattern {\\n    setTransform(matrix: SVGMatrix): void;\\n}\\n\\ndeclare var CanvasPattern: {\\n    prototype: CanvasPattern;\\n    new(): CanvasPattern;\\n};\\n\\ninterface CanvasRenderingContext2D extends CanvasPathMethods {\\n    readonly canvas: HTMLCanvasElement;\\n    fillStyle: string | CanvasGradient | CanvasPattern;\\n    font: string;\\n    globalAlpha: number;\\n    globalCompositeOperation: string;\\n    imageSmoothingEnabled: boolean;\\n    lineCap: string;\\n    lineDashOffset: number;\\n    lineJoin: string;\\n    lineWidth: number;\\n    miterLimit: number;\\n    mozImageSmoothingEnabled: boolean;\\n    msFillRule: CanvasFillRule;\\n    oImageSmoothingEnabled: boolean;\\n    shadowBlur: number;\\n    shadowColor: string;\\n    shadowOffsetX: number;\\n    shadowOffsetY: number;\\n    strokeStyle: string | CanvasGradient | CanvasPattern;\\n    textAlign: string;\\n    textBaseline: string;\\n    webkitImageSmoothingEnabled: boolean;\\n    beginPath(): void;\\n    clearRect(x: number, y: number, w: number, h: number): void;\\n    clip(fillRule?: CanvasFillRule): void;\\n    clip(path: Path2D, fillRule?: CanvasFillRule): void;\\n    createImageData(imageDataOrSw: number | ImageData, sh?: number): ImageData;\\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\\n    createPattern(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement, repetition: string): CanvasPattern;\\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\\n    drawFocusIfNeeded(element: Element): void;\\n    drawFocusIfNeeded(path: Path2D, element: Element): void;\\n    drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number): void;\\n    drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, dstX: number, dstY: number, dstW: number, dstH: number): void;\\n    drawImage(image: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap, srcX: number, srcY: number, srcW: number, srcH: number, dstX: number, dstY: number, dstW: number, dstH: number): void;\\n    fill(fillRule?: CanvasFillRule): void;\\n    fill(path: Path2D, fillRule?: CanvasFillRule): void;\\n    fillRect(x: number, y: number, w: number, h: number): void;\\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\\n    getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\\n    getLineDash(): number[];\\n    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    isPointInStroke(x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    isPointInStroke(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\\n    measureText(text: string): TextMetrics;\\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): void;\\n    restore(): void;\\n    rotate(angle: number): void;\\n    save(): void;\\n    scale(x: number, y: number): void;\\n    setLineDash(segments: number[]): void;\\n    setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\\n    stroke(path?: Path2D): void;\\n    strokeRect(x: number, y: number, w: number, h: number): void;\\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\\n    transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\\n    translate(x: number, y: number): void;\\n}\\n\\ndeclare var CanvasRenderingContext2D: {\\n    prototype: CanvasRenderingContext2D;\\n    new(): CanvasRenderingContext2D;\\n};\\n\\ninterface ChannelMergerNode extends AudioNode {\\n}\\n\\ndeclare var ChannelMergerNode: {\\n    prototype: ChannelMergerNode;\\n    new(): ChannelMergerNode;\\n};\\n\\ninterface ChannelSplitterNode extends AudioNode {\\n}\\n\\ndeclare var ChannelSplitterNode: {\\n    prototype: ChannelSplitterNode;\\n    new(): ChannelSplitterNode;\\n};\\n\\ninterface CharacterData extends Node, ChildNode {\\n    data: string;\\n    readonly length: number;\\n    appendData(arg: string): void;\\n    deleteData(offset: number, count: number): void;\\n    insertData(offset: number, arg: string): void;\\n    replaceData(offset: number, count: number, arg: string): void;\\n    substringData(offset: number, count: number): string;\\n}\\n\\ndeclare var CharacterData: {\\n    prototype: CharacterData;\\n    new(): CharacterData;\\n};\\n\\ninterface ChildNode {\\n    remove(): void;\\n}\\n\\ninterface ClientRect {\\n    bottom: number;\\n    readonly height: number;\\n    left: number;\\n    right: number;\\n    top: number;\\n    readonly width: number;\\n}\\n\\ndeclare var ClientRect: {\\n    prototype: ClientRect;\\n    new(): ClientRect;\\n};\\n\\ninterface ClientRectList {\\n    readonly length: number;\\n    item(index: number): ClientRect;\\n    [index: number]: ClientRect;\\n}\\n\\ndeclare var ClientRectList: {\\n    prototype: ClientRectList;\\n    new(): ClientRectList;\\n};\\n\\ninterface ClipboardEvent extends Event {\\n    readonly clipboardData: DataTransfer;\\n}\\n\\ndeclare var ClipboardEvent: {\\n    prototype: ClipboardEvent;\\n    new(type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent;\\n};\\n\\ninterface ClipboardEventInit extends EventInit {\\n    data?: string;\\n    dataType?: string;\\n}\\n\\ninterface CloseEvent extends Event {\\n    readonly code: number;\\n    readonly reason: string;\\n    readonly wasClean: boolean;\\n    /** @deprecated */\\n    initCloseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, wasCleanArg: boolean, codeArg: number, reasonArg: string): void;\\n}\\n\\ndeclare var CloseEvent: {\\n    prototype: CloseEvent;\\n    new(type: string, eventInitDict?: CloseEventInit): CloseEvent;\\n};\\n\\ninterface Comment extends CharacterData {\\n    text: string;\\n}\\n\\ndeclare var Comment: {\\n    prototype: Comment;\\n    new(data?: string): Comment;\\n};\\n\\ninterface CompositionEvent extends UIEvent {\\n    readonly data: string;\\n    readonly locale: string;\\n    initCompositionEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, locale: string): void;\\n}\\n\\ndeclare var CompositionEvent: {\\n    prototype: CompositionEvent;\\n    new(typeArg: string, eventInitDict?: CompositionEventInit): CompositionEvent;\\n};\\n\\ninterface ComputedTimingProperties {\\n    activeDuration: number;\\n    currentIteration: number | null;\\n    endTime: number;\\n    localTime: number | null;\\n    progress: number | null;\\n}\\n\\ninterface ConcatParams extends Algorithm {\\n    algorithmId: Uint8Array;\\n    hash?: string | Algorithm;\\n    partyUInfo: Uint8Array;\\n    partyVInfo: Uint8Array;\\n    privateInfo?: Uint8Array;\\n    publicInfo?: Uint8Array;\\n}\\n\\ninterface Console {\\n    memory: any;\\n    assert(condition?: boolean, message?: string, ...data: any[]): void;\\n    clear(): void;\\n    count(label?: string): void;\\n    debug(message?: any, ...optionalParams: any[]): void;\\n    dir(value?: any, ...optionalParams: any[]): void;\\n    dirxml(value: any): void;\\n    error(message?: any, ...optionalParams: any[]): void;\\n    exception(message?: string, ...optionalParams: any[]): void;\\n    group(groupTitle?: string, ...optionalParams: any[]): void;\\n    groupCollapsed(groupTitle?: string, ...optionalParams: any[]): void;\\n    groupEnd(): void;\\n    info(message?: any, ...optionalParams: any[]): void;\\n    log(message?: any, ...optionalParams: any[]): void;\\n    markTimeline(label?: string): void;\\n    msIsIndependentlyComposed(element: Element): boolean;\\n    profile(reportName?: string): void;\\n    profileEnd(): void;\\n    select(element: Element): void;\\n    table(...tabularData: any[]): void;\\n    time(label?: string): void;\\n    timeEnd(label?: string): void;\\n    timeStamp(label?: string): void;\\n    timeline(label?: string): void;\\n    timelineEnd(label?: string): void;\\n    trace(message?: any, ...optionalParams: any[]): void;\\n    warn(message?: any, ...optionalParams: any[]): void;\\n}\\n\\ndeclare var Console: {\\n    prototype: Console;\\n    new(): Console;\\n};\\n\\ninterface ContentScriptGlobalScope extends EventTarget {\\n    readonly msContentScript: ExtensionScriptApis;\\n    readonly window: Window;\\n}\\n\\ndeclare var ContentScriptGlobalScope: {\\n    prototype: ContentScriptGlobalScope;\\n    new(): ContentScriptGlobalScope;\\n};\\n\\ninterface ConvolverNode extends AudioNode {\\n    buffer: AudioBuffer | null;\\n    normalize: boolean;\\n}\\n\\ndeclare var ConvolverNode: {\\n    prototype: ConvolverNode;\\n    new(): ConvolverNode;\\n};\\n\\ninterface Coordinates {\\n    readonly accuracy: number;\\n    readonly altitude: number | null;\\n    readonly altitudeAccuracy: number | null;\\n    readonly heading: number | null;\\n    readonly latitude: number;\\n    readonly longitude: number;\\n    readonly speed: number | null;\\n}\\n\\ndeclare var Coordinates: {\\n    prototype: Coordinates;\\n    new(): Coordinates;\\n};\\n\\ninterface CountQueuingStrategy {\\n    highWaterMark: number;\\n    size(): number;\\n}\\n\\ndeclare var CountQueuingStrategy: {\\n    prototype: CountQueuingStrategy;\\n    new(strategy: QueuingStrategy): CountQueuingStrategy;\\n};\\n\\ninterface Crypto {\\n    readonly subtle: SubtleCrypto;\\n    getRandomValues(array: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null;\\n}\\n\\ndeclare var Crypto: {\\n    prototype: Crypto;\\n    new(): Crypto;\\n};\\n\\ninterface CryptoKey {\\n    readonly algorithm: KeyAlgorithm;\\n    readonly extractable: boolean;\\n    readonly type: string;\\n    readonly usages: string[];\\n}\\n\\ndeclare var CryptoKey: {\\n    prototype: CryptoKey;\\n    new(): CryptoKey;\\n};\\n\\ninterface CryptoKeyPair {\\n    privateKey: CryptoKey;\\n    publicKey: CryptoKey;\\n}\\n\\ndeclare var CryptoKeyPair: {\\n    prototype: CryptoKeyPair;\\n    new(): CryptoKeyPair;\\n};\\n\\ninterface CustomElementRegistry {\\n    define(name: string, constructor: Function, options?: ElementDefinitionOptions): void;\\n    get(name: string): any;\\n    whenDefined(name: string): PromiseLike<void>;\\n}\\n\\ninterface CustomEvent<T = any> extends Event {\\n    readonly detail: T;\\n    initCustomEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, detailArg: T): void;\\n}\\n\\ndeclare var CustomEvent: {\\n    prototype: CustomEvent;\\n    new<T>(typeArg: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;\\n};\\n\\ninterface DOMError {\\n    readonly name: string;\\n    toString(): string;\\n}\\n\\ndeclare var DOMError: {\\n    prototype: DOMError;\\n    new(): DOMError;\\n};\\n\\ninterface DOMException {\\n    readonly code: number;\\n    readonly message: string;\\n    readonly name: string;\\n    toString(): string;\\n    readonly ABORT_ERR: number;\\n    readonly DATA_CLONE_ERR: number;\\n    readonly DOMSTRING_SIZE_ERR: number;\\n    readonly HIERARCHY_REQUEST_ERR: number;\\n    readonly INDEX_SIZE_ERR: number;\\n    readonly INUSE_ATTRIBUTE_ERR: number;\\n    readonly INVALID_ACCESS_ERR: number;\\n    readonly INVALID_CHARACTER_ERR: number;\\n    readonly INVALID_MODIFICATION_ERR: number;\\n    readonly INVALID_NODE_TYPE_ERR: number;\\n    readonly INVALID_STATE_ERR: number;\\n    readonly NAMESPACE_ERR: number;\\n    readonly NETWORK_ERR: number;\\n    readonly NOT_FOUND_ERR: number;\\n    readonly NOT_SUPPORTED_ERR: number;\\n    readonly NO_DATA_ALLOWED_ERR: number;\\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\\n    readonly PARSE_ERR: number;\\n    readonly QUOTA_EXCEEDED_ERR: number;\\n    readonly SECURITY_ERR: number;\\n    readonly SERIALIZE_ERR: number;\\n    readonly SYNTAX_ERR: number;\\n    readonly TIMEOUT_ERR: number;\\n    readonly TYPE_MISMATCH_ERR: number;\\n    readonly URL_MISMATCH_ERR: number;\\n    readonly VALIDATION_ERR: number;\\n    readonly WRONG_DOCUMENT_ERR: number;\\n}\\n\\ndeclare var DOMException: {\\n    prototype: DOMException;\\n    new(message?: string, name?: string): DOMException;\\n    readonly ABORT_ERR: number;\\n    readonly DATA_CLONE_ERR: number;\\n    readonly DOMSTRING_SIZE_ERR: number;\\n    readonly HIERARCHY_REQUEST_ERR: number;\\n    readonly INDEX_SIZE_ERR: number;\\n    readonly INUSE_ATTRIBUTE_ERR: number;\\n    readonly INVALID_ACCESS_ERR: number;\\n    readonly INVALID_CHARACTER_ERR: number;\\n    readonly INVALID_MODIFICATION_ERR: number;\\n    readonly INVALID_NODE_TYPE_ERR: number;\\n    readonly INVALID_STATE_ERR: number;\\n    readonly NAMESPACE_ERR: number;\\n    readonly NETWORK_ERR: number;\\n    readonly NOT_FOUND_ERR: number;\\n    readonly NOT_SUPPORTED_ERR: number;\\n    readonly NO_DATA_ALLOWED_ERR: number;\\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\\n    readonly PARSE_ERR: number;\\n    readonly QUOTA_EXCEEDED_ERR: number;\\n    readonly SECURITY_ERR: number;\\n    readonly SERIALIZE_ERR: number;\\n    readonly SYNTAX_ERR: number;\\n    readonly TIMEOUT_ERR: number;\\n    readonly TYPE_MISMATCH_ERR: number;\\n    readonly URL_MISMATCH_ERR: number;\\n    readonly VALIDATION_ERR: number;\\n    readonly WRONG_DOCUMENT_ERR: number;\\n};\\n\\ninterface DOMImplementation {\\n    createDocument(namespaceURI: string | null, qualifiedName: string | null, doctype: DocumentType | null): Document;\\n    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;\\n    createHTMLDocument(title?: string): Document;\\n    hasFeature(feature: string | null, version: string | null): boolean;\\n}\\n\\ndeclare var DOMImplementation: {\\n    prototype: DOMImplementation;\\n    new(): DOMImplementation;\\n};\\n\\ninterface DOML2DeprecatedColorProperty {\\n    color: string;\\n}\\n\\ninterface DOML2DeprecatedSizeProperty {\\n    size: number;\\n}\\n\\ninterface DOMParser {\\n    parseFromString(source: string, mimeType: string): Document;\\n}\\n\\ndeclare var DOMParser: {\\n    prototype: DOMParser;\\n    new(): DOMParser;\\n};\\n\\ninterface DOMRect extends DOMRectReadOnly {\\n    height: number;\\n    width: number;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var DOMRect: {\\n    prototype: DOMRect;\\n    new (x?: number, y?: number, width?: number, height?: number): DOMRect;\\n    fromRect(rectangle?: DOMRectInit): DOMRect;\\n};\\n\\ninterface DOMRectList {\\n    readonly length: number;\\n    item(index: number): DOMRect | null;\\n    [index: number]: DOMRect;\\n}\\n\\ninterface DOMRectReadOnly {\\n    readonly bottom: number;\\n    readonly height: number;\\n    readonly left: number;\\n    readonly right: number;\\n    readonly top: number;\\n    readonly width: number;\\n    readonly x: number;\\n    readonly y: number;\\n}\\n\\ndeclare var DOMRectReadOnly: {\\n    prototype: DOMRectReadOnly;\\n    new (x?: number, y?: number, width?: number, height?: number): DOMRectReadOnly;\\n    fromRect(rectangle?: DOMRectInit): DOMRectReadOnly;\\n};\\n\\ninterface DOMSettableTokenList extends DOMTokenList {\\n    value: string;\\n}\\n\\ndeclare var DOMSettableTokenList: {\\n    prototype: DOMSettableTokenList;\\n    new(): DOMSettableTokenList;\\n};\\n\\ninterface DOMStringList {\\n    readonly length: number;\\n    contains(str: string): boolean;\\n    item(index: number): string | null;\\n    [index: number]: string;\\n}\\n\\ndeclare var DOMStringList: {\\n    prototype: DOMStringList;\\n    new(): DOMStringList;\\n};\\n\\ninterface DOMStringMap {\\n    [name: string]: string | undefined;\\n}\\n\\ndeclare var DOMStringMap: {\\n    prototype: DOMStringMap;\\n    new(): DOMStringMap;\\n};\\n\\ninterface DOMTokenList {\\n    readonly length: number;\\n    add(...tokens: string[]): void;\\n    contains(token: string): boolean;\\n    item(index: number): string | null;\\n    remove(...tokens: string[]): void;\\n    toString(): string;\\n    toggle(token: string, force?: boolean): boolean;\\n    [index: number]: string;\\n}\\n\\ndeclare var DOMTokenList: {\\n    prototype: DOMTokenList;\\n    new(): DOMTokenList;\\n};\\n\\ninterface DataCue extends TextTrackCue {\\n    data: ArrayBuffer;\\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: DataCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: DataCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var DataCue: {\\n    prototype: DataCue;\\n    new(): DataCue;\\n};\\n\\ninterface DataTransfer {\\n    dropEffect: string;\\n    effectAllowed: string;\\n    readonly files: FileList;\\n    readonly items: DataTransferItemList;\\n    readonly types: string[];\\n    clearData(format?: string): boolean;\\n    getData(format: string): string;\\n    setData(format: string, data: string): boolean;\\n    setDragImage(image: Element, x: number, y: number): void;\\n}\\n\\ndeclare var DataTransfer: {\\n    prototype: DataTransfer;\\n    new(): DataTransfer;\\n};\\n\\ninterface DataTransferItem {\\n    readonly kind: string;\\n    readonly type: string;\\n    getAsFile(): File | null;\\n    getAsString(_callback: FunctionStringCallback | null): void;\\n    webkitGetAsEntry(): any;\\n}\\n\\ndeclare var DataTransferItem: {\\n    prototype: DataTransferItem;\\n    new(): DataTransferItem;\\n};\\n\\ninterface DataTransferItemList {\\n    readonly length: number;\\n    add(data: File): DataTransferItem | null;\\n    add(data: string, type: string): DataTransferItem | null;\\n    clear(): void;\\n    item(index: number): DataTransferItem;\\n    remove(index: number): void;\\n    [name: number]: DataTransferItem;\\n}\\n\\ndeclare var DataTransferItemList: {\\n    prototype: DataTransferItemList;\\n    new(): DataTransferItemList;\\n};\\n\\ninterface DeferredPermissionRequest {\\n    readonly id: number;\\n    readonly type: MSWebViewPermissionType;\\n    readonly uri: string;\\n    allow(): void;\\n    deny(): void;\\n}\\n\\ndeclare var DeferredPermissionRequest: {\\n    prototype: DeferredPermissionRequest;\\n    new(): DeferredPermissionRequest;\\n};\\n\\ninterface DelayNode extends AudioNode {\\n    readonly delayTime: AudioParam;\\n}\\n\\ndeclare var DelayNode: {\\n    prototype: DelayNode;\\n    new(): DelayNode;\\n};\\n\\ninterface DeviceAcceleration {\\n    readonly x: number | null;\\n    readonly y: number | null;\\n    readonly z: number | null;\\n}\\n\\ndeclare var DeviceAcceleration: {\\n    prototype: DeviceAcceleration;\\n    new(): DeviceAcceleration;\\n};\\n\\ninterface DeviceLightEvent extends Event {\\n    readonly value: number;\\n}\\n\\ndeclare var DeviceLightEvent: {\\n    prototype: DeviceLightEvent;\\n    new(typeArg: string, eventInitDict?: DeviceLightEventInit): DeviceLightEvent;\\n};\\n\\ninterface DeviceMotionEvent extends Event {\\n    readonly acceleration: DeviceAcceleration | null;\\n    readonly accelerationIncludingGravity: DeviceAcceleration | null;\\n    readonly interval: number | null;\\n    readonly rotationRate: DeviceRotationRate | null;\\n    initDeviceMotionEvent(type: string, bubbles: boolean, cancelable: boolean, acceleration: DeviceAccelerationDict | null, accelerationIncludingGravity: DeviceAccelerationDict | null, rotationRate: DeviceRotationRateDict | null, interval: number | null): void;\\n}\\n\\ndeclare var DeviceMotionEvent: {\\n    prototype: DeviceMotionEvent;\\n    new(typeArg: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;\\n};\\n\\ninterface DeviceOrientationEvent extends Event {\\n    readonly absolute: boolean;\\n    readonly alpha: number | null;\\n    readonly beta: number | null;\\n    readonly gamma: number | null;\\n    initDeviceOrientationEvent(type: string, bubbles: boolean, cancelable: boolean, alpha: number | null, beta: number | null, gamma: number | null, absolute: boolean): void;\\n}\\n\\ndeclare var DeviceOrientationEvent: {\\n    prototype: DeviceOrientationEvent;\\n    new(typeArg: string, eventInitDict?: DeviceOrientationEventInit): DeviceOrientationEvent;\\n};\\n\\ninterface DeviceRotationRate {\\n    readonly alpha: number | null;\\n    readonly beta: number | null;\\n    readonly gamma: number | null;\\n}\\n\\ndeclare var DeviceRotationRate: {\\n    prototype: DeviceRotationRate;\\n    new(): DeviceRotationRate;\\n};\\n\\ninterface DhImportKeyParams extends Algorithm {\\n    generator: Uint8Array;\\n    prime: Uint8Array;\\n}\\n\\ninterface DhKeyAlgorithm extends KeyAlgorithm {\\n    generator: Uint8Array;\\n    prime: Uint8Array;\\n}\\n\\ninterface DhKeyDeriveParams extends Algorithm {\\n    public: CryptoKey;\\n}\\n\\ninterface DhKeyGenParams extends Algorithm {\\n    generator: Uint8Array;\\n    prime: Uint8Array;\\n}\\n\\ninterface DocumentEventMap extends GlobalEventHandlersEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"activate\\\": Event;\\n    \\\"beforeactivate\\\": Event;\\n    \\\"beforedeactivate\\\": Event;\\n    \\\"blur\\\": FocusEvent;\\n    \\\"canplay\\\": Event;\\n    \\\"canplaythrough\\\": Event;\\n    \\\"change\\\": Event;\\n    \\\"click\\\": MouseEvent;\\n    \\\"contextmenu\\\": PointerEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"deactivate\\\": Event;\\n    \\\"drag\\\": DragEvent;\\n    \\\"dragend\\\": DragEvent;\\n    \\\"dragenter\\\": DragEvent;\\n    \\\"dragleave\\\": DragEvent;\\n    \\\"dragover\\\": DragEvent;\\n    \\\"dragstart\\\": DragEvent;\\n    \\\"drop\\\": DragEvent;\\n    \\\"durationchange\\\": Event;\\n    \\\"emptied\\\": Event;\\n    \\\"ended\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"fullscreenchange\\\": Event;\\n    \\\"fullscreenerror\\\": Event;\\n    \\\"input\\\": Event;\\n    \\\"invalid\\\": Event;\\n    \\\"keydown\\\": KeyboardEvent;\\n    \\\"keypress\\\": KeyboardEvent;\\n    \\\"keyup\\\": KeyboardEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadeddata\\\": Event;\\n    \\\"loadedmetadata\\\": Event;\\n    \\\"loadstart\\\": Event;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n    \\\"mousewheel\\\": WheelEvent;\\n    \\\"MSContentZoom\\\": Event;\\n    \\\"MSGestureChange\\\": Event;\\n    \\\"MSGestureDoubleTap\\\": Event;\\n    \\\"MSGestureEnd\\\": Event;\\n    \\\"MSGestureHold\\\": Event;\\n    \\\"MSGestureStart\\\": Event;\\n    \\\"MSGestureTap\\\": Event;\\n    \\\"MSInertiaStart\\\": Event;\\n    \\\"MSManipulationStateChanged\\\": Event;\\n    \\\"MSPointerCancel\\\": Event;\\n    \\\"MSPointerDown\\\": Event;\\n    \\\"MSPointerEnter\\\": Event;\\n    \\\"MSPointerLeave\\\": Event;\\n    \\\"MSPointerMove\\\": Event;\\n    \\\"MSPointerOut\\\": Event;\\n    \\\"MSPointerOver\\\": Event;\\n    \\\"MSPointerUp\\\": Event;\\n    \\\"mssitemodejumplistitemremoved\\\": Event;\\n    \\\"msthumbnailclick\\\": Event;\\n    \\\"pause\\\": Event;\\n    \\\"play\\\": Event;\\n    \\\"playing\\\": Event;\\n    \\\"pointerlockchange\\\": Event;\\n    \\\"pointerlockerror\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"ratechange\\\": Event;\\n    \\\"readystatechange\\\": Event;\\n    \\\"reset\\\": Event;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"seeked\\\": Event;\\n    \\\"seeking\\\": Event;\\n    \\\"select\\\": UIEvent;\\n    \\\"selectionchange\\\": Event;\\n    \\\"selectstart\\\": Event;\\n    \\\"stalled\\\": Event;\\n    \\\"stop\\\": Event;\\n    \\\"submit\\\": Event;\\n    \\\"suspend\\\": Event;\\n    \\\"timeupdate\\\": Event;\\n    \\\"touchcancel\\\": Event;\\n    \\\"touchend\\\": Event;\\n    \\\"touchmove\\\": Event;\\n    \\\"touchstart\\\": Event;\\n    \\\"volumechange\\\": Event;\\n    \\\"waiting\\\": Event;\\n    \\\"webkitfullscreenchange\\\": Event;\\n    \\\"webkitfullscreenerror\\\": Event;\\n}\\n\\ninterface Document extends Node, GlobalEventHandlers, ParentNode, DocumentEvent {\\n    /**\\n     * Sets or gets the URL for the current document.\\n     */\\n    readonly URL: string;\\n    /**\\n     * Gets the URL for the document, stripped of any character encoding.\\n     */\\n    readonly URLUnencoded: string;\\n    /**\\n     * Gets the object that has the focus when the parent document has focus.\\n     */\\n    readonly activeElement: Element;\\n    /**\\n     * Sets or gets the color of all active links in the document.\\n     */\\n    alinkColor: string;\\n    /**\\n     * Returns a reference to the collection of elements contained by the object.\\n     */\\n    readonly all: HTMLAllCollection;\\n    /**\\n     * Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.\\n     */\\n    readonly anchors: HTMLCollectionOf<HTMLAnchorElement>;\\n    /**\\n     * Retrieves a collection of all applet objects in the document.\\n     */\\n    readonly applets: HTMLCollectionOf<HTMLAppletElement>;\\n    /**\\n     * Deprecated. Sets or retrieves a value that indicates the background color behind the object.\\n     */\\n    bgColor: string;\\n    /**\\n     * Specifies the beginning and end of the document body.\\n     */\\n    body: HTMLElement;\\n    readonly characterSet: string;\\n    /**\\n     * Gets or sets the character set used to encode the object.\\n     */\\n    charset: string;\\n    /**\\n     * Gets a value that indicates whether standards-compliant mode is switched on for the object.\\n     */\\n    readonly compatMode: string;\\n    cookie: string;\\n    readonly currentScript: HTMLScriptElement | SVGScriptElement | null;\\n    readonly defaultView: Window;\\n    /**\\n     * Sets or gets a value that indicates whether the document can be edited.\\n     */\\n    designMode: string;\\n    /**\\n     * Sets or retrieves a value that indicates the reading order of the object.\\n     */\\n    dir: string;\\n    /**\\n     * Gets an object representing the document type declaration associated with the current document.\\n     */\\n    readonly doctype: DocumentType;\\n    /**\\n     * Gets a reference to the root node of the document.\\n     */\\n    readonly documentElement: HTMLElement;\\n    /**\\n     * Sets or gets the security domain of the document.\\n     */\\n    domain: string;\\n    /**\\n     * Retrieves a collection of all embed objects in the document.\\n     */\\n    readonly embeds: HTMLCollectionOf<HTMLEmbedElement>;\\n    /**\\n     * Sets or gets the foreground (text) color of the document.\\n     */\\n    fgColor: string;\\n    /**\\n     * Retrieves a collection, in source order, of all form objects in the document.\\n     */\\n    readonly forms: HTMLCollectionOf<HTMLFormElement>;\\n    readonly fullscreenElement: Element | null;\\n    readonly fullscreenEnabled: boolean;\\n    readonly head: HTMLHeadElement;\\n    readonly hidden: boolean;\\n    /**\\n     * Retrieves a collection, in source order, of img objects in the document.\\n     */\\n    readonly images: HTMLCollectionOf<HTMLImageElement>;\\n    /**\\n     * Gets the implementation object of the current document.\\n     */\\n    readonly implementation: DOMImplementation;\\n    /**\\n     * Returns the character encoding used to create the webpage that is loaded into the document object.\\n     */\\n    readonly inputEncoding: string | null;\\n    /**\\n     * Gets the date that the page was last modified, if the page supplies one.\\n     */\\n    readonly lastModified: string;\\n    /**\\n     * Sets or gets the color of the document links.\\n     */\\n    linkColor: string;\\n    /**\\n     * Retrieves a collection of all a objects that specify the href property and all area objects in the document.\\n     */\\n    readonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>;\\n    /**\\n     * Contains information about the current URL.\\n     */\\n    location: Location;\\n    msCSSOMElementFloatMetrics: boolean;\\n    msCapsLockWarningOff: boolean;\\n    /**\\n     * Fires when the user aborts the download.\\n     * @param ev The event.\\n     */\\n    onabort: ((this: Document, ev: UIEvent) => any) | null;\\n    /**\\n     * Fires when the object is set as the active element.\\n     * @param ev The event.\\n     */\\n    onactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires immediately before the object is set as the active element.\\n     * @param ev The event.\\n     */\\n    onbeforeactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires immediately before the activeElement is changed from the current object to another object in the parent document.\\n     * @param ev The event.\\n     */\\n    onbeforedeactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the object loses the input focus.\\n     * @param ev The focus event.\\n     */\\n    onblur: ((this: Document, ev: FocusEvent) => any) | null;\\n    /**\\n     * Occurs when playback is possible, but would require further buffering.\\n     * @param ev The event.\\n     */\\n    oncanplay: ((this: Document, ev: Event) => any) | null;\\n    oncanplaythrough: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the contents of the object or selection have changed.\\n     * @param ev The event.\\n     */\\n    onchange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user clicks the left mouse button on the object\\n     * @param ev The mouse event.\\n     */\\n    onclick: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user clicks the right mouse button in the client area, opening the context menu.\\n     * @param ev The mouse event.\\n     */\\n    oncontextmenu: ((this: Document, ev: PointerEvent) => any) | null;\\n    /**\\n     * Fires when the user double-clicks the object.\\n     * @param ev The mouse event.\\n     */\\n    ondblclick: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the activeElement is changed from the current object to another object in the parent document.\\n     * @param ev The UI Event\\n     */\\n    ondeactivate: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires on the source object continuously during a drag operation.\\n     * @param ev The event.\\n     */\\n    ondrag: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the source object when the user releases the mouse at the close of a drag operation.\\n     * @param ev The event.\\n     */\\n    ondragend: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the target element when the user drags the object to a valid drop target.\\n     * @param ev The drag event.\\n     */\\n    ondragenter: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.\\n     * @param ev The drag event.\\n     */\\n    ondragleave: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the target element continuously while the user drags the object over a valid drop target.\\n     * @param ev The event.\\n     */\\n    ondragover: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Fires on the source object when the user starts to drag a text selection or selected object.\\n     * @param ev The event.\\n     */\\n    ondragstart: ((this: Document, ev: DragEvent) => any) | null;\\n    ondrop: ((this: Document, ev: DragEvent) => any) | null;\\n    /**\\n     * Occurs when the duration attribute is updated.\\n     * @param ev The event.\\n     */\\n    ondurationchange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the media element is reset to its initial state.\\n     * @param ev The event.\\n     */\\n    onemptied: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the end of playback is reached.\\n     * @param ev The event\\n     */\\n    onended: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when an error occurs during object loading.\\n     * @param ev The event.\\n     */\\n    onerror: ((this: Document, ev: ErrorEvent) => any) | null;\\n    /**\\n     * Fires when the object receives focus.\\n     * @param ev The event.\\n     */\\n    onfocus: ((this: Document, ev: FocusEvent) => any) | null;\\n    onfullscreenchange: ((this: Document, ev: Event) => any) | null;\\n    onfullscreenerror: ((this: Document, ev: Event) => any) | null;\\n    oninput: ((this: Document, ev: Event) => any) | null;\\n    oninvalid: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user presses a key.\\n     * @param ev The keyboard event\\n     */\\n    onkeydown: ((this: Document, ev: KeyboardEvent) => any) | null;\\n    /**\\n     * Fires when the user presses an alphanumeric key.\\n     * @param ev The event.\\n     */\\n    onkeypress: ((this: Document, ev: KeyboardEvent) => any) | null;\\n    /**\\n     * Fires when the user releases a key.\\n     * @param ev The keyboard event\\n     */\\n    onkeyup: ((this: Document, ev: KeyboardEvent) => any) | null;\\n    /**\\n     * Fires immediately after the browser loads the object.\\n     * @param ev The event.\\n     */\\n    onload: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when media data is loaded at the current playback position.\\n     * @param ev The event.\\n     */\\n    onloadeddata: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the duration and dimensions of the media have been determined.\\n     * @param ev The event.\\n     */\\n    onloadedmetadata: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when Internet Explorer begins looking for media data.\\n     * @param ev The event.\\n     */\\n    onloadstart: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user clicks the object with either mouse button.\\n     * @param ev The mouse event.\\n     */\\n    onmousedown: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user moves the mouse over the object.\\n     * @param ev The mouse event.\\n     */\\n    onmousemove: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user moves the mouse pointer outside the boundaries of the object.\\n     * @param ev The mouse event.\\n     */\\n    onmouseout: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user moves the mouse pointer into the object.\\n     * @param ev The mouse event.\\n     */\\n    onmouseover: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the user releases a mouse button while the mouse is over the object.\\n     * @param ev The mouse event.\\n     */\\n    onmouseup: ((this: Document, ev: MouseEvent) => any) | null;\\n    /**\\n     * Fires when the wheel button is rotated.\\n     * @param ev The mouse event\\n     */\\n    onmousewheel: ((this: Document, ev: WheelEvent) => any) | null;\\n    onmscontentzoom: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturechange: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturedoubletap: ((this: Document, ev: Event) => any) | null;\\n    onmsgestureend: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturehold: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturestart: ((this: Document, ev: Event) => any) | null;\\n    onmsgesturetap: ((this: Document, ev: Event) => any) | null;\\n    onmsinertiastart: ((this: Document, ev: Event) => any) | null;\\n    onmsmanipulationstatechanged: ((this: Document, ev: Event) => any) | null;\\n    onmspointercancel: ((this: Document, ev: Event) => any) | null;\\n    onmspointerdown: ((this: Document, ev: Event) => any) | null;\\n    onmspointerenter: ((this: Document, ev: Event) => any) | null;\\n    onmspointerleave: ((this: Document, ev: Event) => any) | null;\\n    onmspointermove: ((this: Document, ev: Event) => any) | null;\\n    onmspointerout: ((this: Document, ev: Event) => any) | null;\\n    onmspointerover: ((this: Document, ev: Event) => any) | null;\\n    onmspointerup: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when an item is removed from a Jump List of a webpage running in Site Mode.\\n     * @param ev The event.\\n     */\\n    onmssitemodejumplistitemremoved: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when a user clicks a button in a Thumbnail Toolbar of a webpage running in Site Mode.\\n     * @param ev The event.\\n     */\\n    onmsthumbnailclick: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when playback is paused.\\n     * @param ev The event.\\n     */\\n    onpause: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the play method is requested.\\n     * @param ev The event.\\n     */\\n    onplay: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the audio or video has started playing.\\n     * @param ev The event.\\n     */\\n    onplaying: ((this: Document, ev: Event) => any) | null;\\n    onpointerlockchange: ((this: Document, ev: Event) => any) | null;\\n    onpointerlockerror: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs to indicate progress while downloading media data.\\n     * @param ev The event.\\n     */\\n    onprogress: ((this: Document, ev: ProgressEvent) => any) | null;\\n    /**\\n     * Occurs when the playback rate is increased or decreased.\\n     * @param ev The event.\\n     */\\n    onratechange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the state of the object has changed.\\n     * @param ev The event\\n     */\\n    onreadystatechange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user resets a form.\\n     * @param ev The event.\\n     */\\n    onreset: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user repositions the scroll box in the scroll bar on the object.\\n     * @param ev The event.\\n     */\\n    onscroll: ((this: Document, ev: UIEvent) => any) | null;\\n    /**\\n     * Occurs when the seek operation ends.\\n     * @param ev The event.\\n     */\\n    onseeked: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the current playback position is moved.\\n     * @param ev The event.\\n     */\\n    onseeking: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the current selection changes.\\n     * @param ev The event.\\n     */\\n    onselect: ((this: Document, ev: UIEvent) => any) | null;\\n    /**\\n     * Fires when the selection state of a document changes.\\n     * @param ev The event.\\n     */\\n    onselectionchange: ((this: Document, ev: Event) => any) | null;\\n    onselectstart: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when the download has stopped.\\n     * @param ev The event.\\n     */\\n    onstalled: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Fires when the user clicks the Stop button or leaves the Web page.\\n     * @param ev The event.\\n     */\\n    onstop: ((this: Document, ev: Event) => any) | null;\\n    onsubmit: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs if the load operation has been intentionally halted.\\n     * @param ev The event.\\n     */\\n    onsuspend: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs to indicate the current playback position.\\n     * @param ev The event.\\n     */\\n    ontimeupdate: ((this: Document, ev: Event) => any) | null;\\n    ontouchcancel: ((this: Document, ev: Event) => any) | null;\\n    ontouchend: ((this: Document, ev: Event) => any) | null;\\n    ontouchmove: ((this: Document, ev: Event) => any) | null;\\n    ontouchstart: ((this: Document, ev: Event) => any) | null;\\n    onvisibilitychange: (this: Document, ev: Event) => any;\\n    /**\\n     * Occurs when the volume is changed, or playback is muted or unmuted.\\n     * @param ev The event.\\n     */\\n    onvolumechange: ((this: Document, ev: Event) => any) | null;\\n    /**\\n     * Occurs when playback stops because the next frame of a video resource is not available.\\n     * @param ev The event.\\n     */\\n    onwaiting: ((this: Document, ev: Event) => any) | null;\\n    onwebkitfullscreenchange: ((this: Document, ev: Event) => any) | null;\\n    onwebkitfullscreenerror: ((this: Document, ev: Event) => any) | null;\\n    readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;\\n    readonly pointerLockElement: Element;\\n    /**\\n     * Retrieves a value that indicates the current state of the object.\\n     */\\n    readonly readyState: string;\\n    /**\\n     * Gets the URL of the location that referred the user to the current page.\\n     */\\n    readonly referrer: string;\\n    /**\\n     * Gets the root svg element in the document hierarchy.\\n     */\\n    readonly rootElement: SVGSVGElement;\\n    /**\\n     * Retrieves a collection of all script objects in the document.\\n     */\\n    readonly scripts: HTMLCollectionOf<HTMLScriptElement>;\\n    readonly scrollingElement: Element | null;\\n    /**\\n     * Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document.\\n     */\\n    readonly styleSheets: StyleSheetList;\\n    /**\\n     * Contains the title of the document.\\n     */\\n    title: string;\\n    readonly visibilityState: VisibilityState;\\n    /**\\n     * Sets or gets the color of the links that the user has visited.\\n     */\\n    vlinkColor: string;\\n    readonly webkitCurrentFullScreenElement: Element | null;\\n    readonly webkitFullscreenElement: Element | null;\\n    readonly webkitFullscreenEnabled: boolean;\\n    readonly webkitIsFullScreen: boolean;\\n    readonly xmlEncoding: string | null;\\n    xmlStandalone: boolean;\\n    /**\\n     * Gets or sets the version attribute specified in the declaration of an XML document.\\n     */\\n    xmlVersion: string | null;\\n    adoptNode<T extends Node>(source: T): T;\\n    captureEvents(): void;\\n    caretRangeFromPoint(x: number, y: number): Range;\\n    clear(): void;\\n    /**\\n     * Closes an output stream and forces the sent data to display.\\n     */\\n    close(): void;\\n    /**\\n     * Creates an attribute object with a specified name.\\n     * @param name String that sets the attribute object's name.\\n     */\\n    createAttribute(name: string): Attr;\\n    createAttributeNS(namespaceURI: string | null, qualifiedName: string): Attr;\\n    createCDATASection(data: string): CDATASection;\\n    /**\\n     * Creates a comment object with the specified data.\\n     * @param data Sets the comment object's data.\\n     */\\n    createComment(data: string): Comment;\\n    /**\\n     * Creates a new document.\\n     */\\n    createDocumentFragment(): DocumentFragment;\\n    /**\\n     * Creates an instance of the element for the specified tag.\\n     * @param tagName The name of an element.\\n     */\\n    createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K];\\n    createElement(tagName: string, options?: ElementCreationOptions): HTMLElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/1999/xhtml\\\", qualifiedName: string): HTMLElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"a\\\"): SVGAElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"circle\\\"): SVGCircleElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"clipPath\\\"): SVGClipPathElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"componentTransferFunction\\\"): SVGComponentTransferFunctionElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"defs\\\"): SVGDefsElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"desc\\\"): SVGDescElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"ellipse\\\"): SVGEllipseElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feBlend\\\"): SVGFEBlendElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feColorMatrix\\\"): SVGFEColorMatrixElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feComponentTransfer\\\"): SVGFEComponentTransferElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feComposite\\\"): SVGFECompositeElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feConvolveMatrix\\\"): SVGFEConvolveMatrixElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feDiffuseLighting\\\"): SVGFEDiffuseLightingElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feDisplacementMap\\\"): SVGFEDisplacementMapElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feDistantLight\\\"): SVGFEDistantLightElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFlood\\\"): SVGFEFloodElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncA\\\"): SVGFEFuncAElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncB\\\"): SVGFEFuncBElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncG\\\"): SVGFEFuncGElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feFuncR\\\"): SVGFEFuncRElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feGaussianBlur\\\"): SVGFEGaussianBlurElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feImage\\\"): SVGFEImageElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feMerge\\\"): SVGFEMergeElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feMergeNode\\\"): SVGFEMergeNodeElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feMorphology\\\"): SVGFEMorphologyElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feOffset\\\"): SVGFEOffsetElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"fePointLight\\\"): SVGFEPointLightElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feSpecularLighting\\\"): SVGFESpecularLightingElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feSpotLight\\\"): SVGFESpotLightElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feTile\\\"): SVGFETileElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"feTurbulence\\\"): SVGFETurbulenceElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"filter\\\"): SVGFilterElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"foreignObject\\\"): SVGForeignObjectElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"g\\\"): SVGGElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"image\\\"): SVGImageElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"gradient\\\"): SVGGradientElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"line\\\"): SVGLineElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"linearGradient\\\"): SVGLinearGradientElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"marker\\\"): SVGMarkerElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"mask\\\"): SVGMaskElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"path\\\"): SVGPathElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"metadata\\\"): SVGMetadataElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"pattern\\\"): SVGPatternElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"polygon\\\"): SVGPolygonElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"polyline\\\"): SVGPolylineElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"radialGradient\\\"): SVGRadialGradientElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"rect\\\"): SVGRectElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"svg\\\"): SVGSVGElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"script\\\"): SVGScriptElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"stop\\\"): SVGStopElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"style\\\"): SVGStyleElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"switch\\\"): SVGSwitchElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"symbol\\\"): SVGSymbolElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"tspan\\\"): SVGTSpanElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"textContent\\\"): SVGTextContentElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"text\\\"): SVGTextElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"textPath\\\"): SVGTextPathElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"textPositioning\\\"): SVGTextPositioningElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"title\\\"): SVGTitleElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"use\\\"): SVGUseElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: \\\"view\\\"): SVGViewElement;\\n    createElementNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", qualifiedName: string): SVGElement;\\n    createElementNS(namespaceURI: string | null, qualifiedName: string): Element;\\n    createExpression(expression: string, resolver: XPathNSResolver): XPathExpression;\\n    createNSResolver(nodeResolver: Node): XPathNSResolver;\\n    /**\\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\\n     * @param root The root element or node to start traversing on.\\n     * @param whatToShow The type of nodes or elements to appear in the node list\\n     * @param filter A custom NodeFilter function to use. For more information, see filter. Use null for no filter.\\n     * @param entityReferenceExpansion A flag that specifies whether entity reference nodes are expanded.\\n     */\\n    createNodeIterator(root: Node, whatToShow?: number, filter?: NodeFilter, entityReferenceExpansion?: boolean): NodeIterator;\\n    createProcessingInstruction(target: string, data: string): ProcessingInstruction;\\n    /**\\n     *  Returns an empty range object that has both of its boundary points positioned at the beginning of the document.\\n     */\\n    createRange(): Range;\\n    /**\\n     * Creates a text string from the specified value.\\n     * @param data String that specifies the nodeValue property of the text node.\\n     */\\n    createTextNode(data: string): Text;\\n    createTouch(view: Window, target: EventTarget, identifier: number, pageX: number, pageY: number, screenX: number, screenY: number): Touch;\\n    createTouchList(...touches: Touch[]): TouchList;\\n    /**\\n     * Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.\\n     * @param root The root element or node to start traversing on.\\n     * @param whatToShow The type of nodes or elements to appear in the node list. For more information, see whatToShow.\\n     * @param filter A custom NodeFilter function to use.\\n     * @param entityReferenceExpansion A flag that specifies whether entity reference nodes are expanded.\\n     */\\n    createTreeWalker(root: Node, whatToShow?: number, filter?: NodeFilter, entityReferenceExpansion?: boolean): TreeWalker;\\n    /**\\n     * Returns the element for the specified x coordinate and the specified y coordinate.\\n     * @param x The x-offset\\n     * @param y The y-offset\\n     */\\n    elementFromPoint(x: number, y: number): Element;\\n    evaluate(expression: string, contextNode: Node, resolver: XPathNSResolver | null, type: number, result: XPathResult | null): XPathResult;\\n    /**\\n     * Executes a command on the current document, current selection, or the given range.\\n     * @param commandId String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.\\n     * @param showUI Display the user interface, defaults to false.\\n     * @param value Value to assign.\\n     */\\n    execCommand(commandId: string, showUI?: boolean, value?: any): boolean;\\n    /**\\n     * Displays help information for the given command identifier.\\n     * @param commandId Displays help information for the given command identifier.\\n     */\\n    execCommandShowHelp(commandId: string): boolean;\\n    exitFullscreen(): void;\\n    exitPointerLock(): void;\\n    /**\\n     * Causes the element to receive the focus and executes the code specified by the onfocus event.\\n     */\\n    /** @deprecated */\\n    focus(): void;\\n    /**\\n     * Returns a reference to the first object with the specified value of the ID or NAME attribute.\\n     * @param elementId String that specifies the ID value. Case-insensitive.\\n     */\\n    getElementById(elementId: string): HTMLElement | null;\\n    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;\\n    /**\\n     * Gets a collection of objects based on the value of the NAME or ID attribute.\\n     * @param elementName Gets a collection of objects based on the value of the NAME or ID attribute.\\n     */\\n    getElementsByName(elementName: string): NodeListOf<HTMLElement>;\\n    /**\\n     * Retrieves a collection of objects based on the specified element name.\\n     * @param name Specifies the name of an element.\\n     */\\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(tagname: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(tagname: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    getElementsByTagName(tagname: string): NodeListOf<Element>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/1999/xhtml\\\", localName: string): HTMLCollectionOf<HTMLElement>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", localName: string): HTMLCollectionOf<SVGElement>;\\n    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;\\n    /**\\n     * Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.\\n     */\\n    getSelection(): Selection;\\n    /**\\n     * Gets a value indicating whether the object currently has focus.\\n     */\\n    hasFocus(): boolean;\\n    importNode<T extends Node>(importedNode: T, deep: boolean): T;\\n    msElementsFromPoint(x: number, y: number): NodeListOf<Element>;\\n    msElementsFromRect(left: number, top: number, width: number, height: number): NodeListOf<Element>;\\n    /**\\n     * Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.\\n     * @param url Specifies a MIME type for the document.\\n     * @param name Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.\\n     * @param features Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, \\\"fullscreen=yes, toolbar=yes\\\"). The following values are supported.\\n     * @param replace Specifies whether the existing entry for the document is replaced in the history list.\\n     */\\n    open(url?: string, name?: string, features?: string, replace?: boolean): Document;\\n    /**\\n     * Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.\\n     * @param commandId Specifies a command identifier.\\n     */\\n    queryCommandEnabled(commandId: string): boolean;\\n    /**\\n     * Returns a Boolean value that indicates whether the specified command is in the indeterminate state.\\n     * @param commandId String that specifies a command identifier.\\n     */\\n    queryCommandIndeterm(commandId: string): boolean;\\n    /**\\n     * Returns a Boolean value that indicates the current state of the command.\\n     * @param commandId String that specifies a command identifier.\\n     */\\n    queryCommandState(commandId: string): boolean;\\n    /**\\n     * Returns a Boolean value that indicates whether the current command is supported on the current range.\\n     * @param commandId Specifies a command identifier.\\n     */\\n    queryCommandSupported(commandId: string): boolean;\\n    /**\\n     * Retrieves the string associated with a command.\\n     * @param commandId String that contains the identifier of a command. This can be any command identifier given in the list of Command Identifiers.\\n     */\\n    queryCommandText(commandId: string): string;\\n    /**\\n     * Returns the current value of the document, range, or current selection for the given command.\\n     * @param commandId String that specifies a command identifier.\\n     */\\n    queryCommandValue(commandId: string): string;\\n    releaseEvents(): void;\\n    webkitCancelFullScreen(): void;\\n    webkitExitFullscreen(): void;\\n    /**\\n     * Writes one or more HTML expressions to a document in the specified window.\\n     * @param content Specifies the text and HTML tags to write.\\n     */\\n    write(...content: string[]): void;\\n    /**\\n     * Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.\\n     * @param content The text and HTML tags to write.\\n     */\\n    writeln(...content: string[]): void;\\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Document: {\\n    prototype: Document;\\n    new(): Document;\\n};\\n\\ninterface DocumentEvent {\\n    createEvent(eventInterface: \\\"AnimationEvent\\\"): AnimationEvent;\\n    createEvent(eventInterface: \\\"AnimationPlaybackEvent\\\"): AnimationPlaybackEvent;\\n    createEvent(eventInterface: \\\"AudioProcessingEvent\\\"): AudioProcessingEvent;\\n    createEvent(eventInterface: \\\"BeforeUnloadEvent\\\"): BeforeUnloadEvent;\\n    createEvent(eventInterface: \\\"ClipboardEvent\\\"): ClipboardEvent;\\n    createEvent(eventInterface: \\\"CloseEvent\\\"): CloseEvent;\\n    createEvent(eventInterface: \\\"CompositionEvent\\\"): CompositionEvent;\\n    createEvent(eventInterface: \\\"CustomEvent\\\"): CustomEvent;\\n    createEvent(eventInterface: \\\"DeviceLightEvent\\\"): DeviceLightEvent;\\n    createEvent(eventInterface: \\\"DeviceMotionEvent\\\"): DeviceMotionEvent;\\n    createEvent(eventInterface: \\\"DeviceOrientationEvent\\\"): DeviceOrientationEvent;\\n    createEvent(eventInterface: \\\"DragEvent\\\"): DragEvent;\\n    createEvent(eventInterface: \\\"ErrorEvent\\\"): ErrorEvent;\\n    createEvent(eventInterface: \\\"Event\\\"): Event;\\n    createEvent(eventInterface: \\\"Events\\\"): Event;\\n    createEvent(eventInterface: \\\"FocusEvent\\\"): FocusEvent;\\n    createEvent(eventInterface: \\\"FocusNavigationEvent\\\"): FocusNavigationEvent;\\n    createEvent(eventInterface: \\\"GamepadEvent\\\"): GamepadEvent;\\n    createEvent(eventInterface: \\\"HashChangeEvent\\\"): HashChangeEvent;\\n    createEvent(eventInterface: \\\"IDBVersionChangeEvent\\\"): IDBVersionChangeEvent;\\n    createEvent(eventInterface: \\\"KeyboardEvent\\\"): KeyboardEvent;\\n    createEvent(eventInterface: \\\"ListeningStateChangedEvent\\\"): ListeningStateChangedEvent;\\n    createEvent(eventInterface: \\\"MSDCCEvent\\\"): MSDCCEvent;\\n    createEvent(eventInterface: \\\"MSDSHEvent\\\"): MSDSHEvent;\\n    createEvent(eventInterface: \\\"MSMediaKeyMessageEvent\\\"): MSMediaKeyMessageEvent;\\n    createEvent(eventInterface: \\\"MSMediaKeyNeededEvent\\\"): MSMediaKeyNeededEvent;\\n    createEvent(eventInterface: \\\"MediaEncryptedEvent\\\"): MediaEncryptedEvent;\\n    createEvent(eventInterface: \\\"MediaKeyMessageEvent\\\"): MediaKeyMessageEvent;\\n    createEvent(eventInterface: \\\"MediaStreamErrorEvent\\\"): MediaStreamErrorEvent;\\n    createEvent(eventInterface: \\\"MediaStreamEvent\\\"): MediaStreamEvent;\\n    createEvent(eventInterface: \\\"MediaStreamTrackEvent\\\"): MediaStreamTrackEvent;\\n    createEvent(eventInterface: \\\"MessageEvent\\\"): MessageEvent;\\n    createEvent(eventInterface: \\\"MouseEvent\\\"): MouseEvent;\\n    createEvent(eventInterface: \\\"MouseEvents\\\"): MouseEvent;\\n    createEvent(eventInterface: \\\"MutationEvent\\\"): MutationEvent;\\n    createEvent(eventInterface: \\\"MutationEvents\\\"): MutationEvent;\\n    createEvent(eventInterface: \\\"OfflineAudioCompletionEvent\\\"): OfflineAudioCompletionEvent;\\n    createEvent(eventInterface: \\\"OverflowEvent\\\"): OverflowEvent;\\n    createEvent(eventInterface: \\\"PageTransitionEvent\\\"): PageTransitionEvent;\\n    createEvent(eventInterface: \\\"PaymentRequestUpdateEvent\\\"): PaymentRequestUpdateEvent;\\n    createEvent(eventInterface: \\\"PermissionRequestedEvent\\\"): PermissionRequestedEvent;\\n    createEvent(eventInterface: \\\"PointerEvent\\\"): PointerEvent;\\n    createEvent(eventInterface: \\\"PopStateEvent\\\"): PopStateEvent;\\n    createEvent(eventInterface: \\\"ProgressEvent\\\"): ProgressEvent;\\n    createEvent(eventInterface: \\\"PromiseRejectionEvent\\\"): PromiseRejectionEvent;\\n    createEvent(eventInterface: \\\"RTCDTMFToneChangeEvent\\\"): RTCDTMFToneChangeEvent;\\n    createEvent(eventInterface: \\\"RTCDtlsTransportStateChangedEvent\\\"): RTCDtlsTransportStateChangedEvent;\\n    createEvent(eventInterface: \\\"RTCIceCandidatePairChangedEvent\\\"): RTCIceCandidatePairChangedEvent;\\n    createEvent(eventInterface: \\\"RTCIceGathererEvent\\\"): RTCIceGathererEvent;\\n    createEvent(eventInterface: \\\"RTCIceTransportStateChangedEvent\\\"): RTCIceTransportStateChangedEvent;\\n    createEvent(eventInterface: \\\"RTCPeerConnectionIceEvent\\\"): RTCPeerConnectionIceEvent;\\n    createEvent(eventInterface: \\\"RTCSsrcConflictEvent\\\"): RTCSsrcConflictEvent;\\n    createEvent(eventInterface: \\\"SVGZoomEvent\\\"): SVGZoomEvent;\\n    createEvent(eventInterface: \\\"SVGZoomEvents\\\"): SVGZoomEvent;\\n    createEvent(eventInterface: \\\"SecurityPolicyViolationEvent\\\"): SecurityPolicyViolationEvent;\\n    createEvent(eventInterface: \\\"ServiceWorkerMessageEvent\\\"): ServiceWorkerMessageEvent;\\n    createEvent(eventInterface: \\\"SpeechSynthesisEvent\\\"): SpeechSynthesisEvent;\\n    createEvent(eventInterface: \\\"StorageEvent\\\"): StorageEvent;\\n    createEvent(eventInterface: \\\"TextEvent\\\"): TextEvent;\\n    createEvent(eventInterface: \\\"TrackEvent\\\"): TrackEvent;\\n    createEvent(eventInterface: \\\"TransitionEvent\\\"): TransitionEvent;\\n    createEvent(eventInterface: \\\"UIEvent\\\"): UIEvent;\\n    createEvent(eventInterface: \\\"UIEvents\\\"): UIEvent;\\n    createEvent(eventInterface: \\\"VRDisplayEvent\\\"): VRDisplayEvent;\\n    createEvent(eventInterface: \\\"VRDisplayEvent \\\"): VRDisplayEvent ;\\n    createEvent(eventInterface: \\\"WebGLContextEvent\\\"): WebGLContextEvent;\\n    createEvent(eventInterface: \\\"WheelEvent\\\"): WheelEvent;\\n    createEvent(eventInterface: string): Event;\\n}\\n\\ninterface DocumentFragment extends Node, ParentNode {\\n    getElementById(elementId: string): HTMLElement | null;\\n}\\n\\ndeclare var DocumentFragment: {\\n    prototype: DocumentFragment;\\n    new(): DocumentFragment;\\n};\\n\\ninterface DocumentOrShadowRoot {\\n    readonly activeElement: Element | null;\\n    readonly styleSheets: StyleSheetList;\\n    elementFromPoint(x: number, y: number): Element | null;\\n    elementsFromPoint(x: number, y: number): Element[];\\n    getSelection(): Selection | null;\\n}\\n\\ninterface DocumentType extends Node, ChildNode {\\n    readonly entities: NamedNodeMap;\\n    readonly internalSubset: string | null;\\n    readonly name: string;\\n    readonly notations: NamedNodeMap;\\n    readonly publicId: string;\\n    readonly systemId: string;\\n}\\n\\ndeclare var DocumentType: {\\n    prototype: DocumentType;\\n    new(): DocumentType;\\n};\\n\\ninterface DragEvent extends MouseEvent {\\n    readonly dataTransfer: DataTransfer;\\n    initDragEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, dataTransferArg: DataTransfer): void;\\n    msConvertURL(file: File, targetType: string, targetURL?: string): void;\\n}\\n\\ndeclare var DragEvent: {\\n    prototype: DragEvent;\\n    new(type: \\\"drag\\\" | \\\"dragend\\\" | \\\"dragenter\\\" | \\\"dragexit\\\" | \\\"dragleave\\\" | \\\"dragover\\\" | \\\"dragstart\\\" | \\\"drop\\\", dragEventInit?: { dataTransfer?: DataTransfer }): DragEvent;\\n};\\n\\ninterface DynamicsCompressorNode extends AudioNode {\\n    readonly attack: AudioParam;\\n    readonly knee: AudioParam;\\n    readonly ratio: AudioParam;\\n    readonly reduction: number;\\n    readonly release: AudioParam;\\n    readonly threshold: AudioParam;\\n}\\n\\ndeclare var DynamicsCompressorNode: {\\n    prototype: DynamicsCompressorNode;\\n    new(): DynamicsCompressorNode;\\n};\\n\\ninterface EXT_blend_minmax {\\n    readonly MAX_EXT: number;\\n    readonly MIN_EXT: number;\\n}\\n\\ninterface EXT_frag_depth {\\n}\\n\\ninterface EXT_sRGB {\\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: number;\\n    readonly SRGB8_ALPHA8_EXT: number;\\n    readonly SRGB_ALPHA_EXT: number;\\n    readonly SRGB_EXT: number;\\n}\\n\\ninterface EXT_shader_texture_lod {\\n}\\n\\ninterface EXT_texture_filter_anisotropic {\\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: number;\\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: number;\\n}\\n\\ndeclare var EXT_texture_filter_anisotropic: {\\n    prototype: EXT_texture_filter_anisotropic;\\n    new(): EXT_texture_filter_anisotropic;\\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: number;\\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: number;\\n};\\n\\ninterface ElementEventMap extends GlobalEventHandlersEventMap {\\n    \\\"ariarequest\\\": Event;\\n    \\\"command\\\": Event;\\n    \\\"gotpointercapture\\\": PointerEvent;\\n    \\\"lostpointercapture\\\": PointerEvent;\\n    \\\"MSGestureChange\\\": Event;\\n    \\\"MSGestureDoubleTap\\\": Event;\\n    \\\"MSGestureEnd\\\": Event;\\n    \\\"MSGestureHold\\\": Event;\\n    \\\"MSGestureStart\\\": Event;\\n    \\\"MSGestureTap\\\": Event;\\n    \\\"MSGotPointerCapture\\\": Event;\\n    \\\"MSInertiaStart\\\": Event;\\n    \\\"MSLostPointerCapture\\\": Event;\\n    \\\"MSPointerCancel\\\": Event;\\n    \\\"MSPointerDown\\\": Event;\\n    \\\"MSPointerEnter\\\": Event;\\n    \\\"MSPointerLeave\\\": Event;\\n    \\\"MSPointerMove\\\": Event;\\n    \\\"MSPointerOut\\\": Event;\\n    \\\"MSPointerOver\\\": Event;\\n    \\\"MSPointerUp\\\": Event;\\n    \\\"touchcancel\\\": Event;\\n    \\\"touchend\\\": Event;\\n    \\\"touchmove\\\": Event;\\n    \\\"touchstart\\\": Event;\\n    \\\"webkitfullscreenchange\\\": Event;\\n    \\\"webkitfullscreenerror\\\": Event;\\n}\\n\\ninterface Element extends Node, GlobalEventHandlers, ElementTraversal, ParentNode, ChildNode {\\n    readonly assignedSlot: HTMLSlotElement | null;\\n    readonly attributes: NamedNodeMap;\\n    readonly classList: DOMTokenList;\\n    className: string;\\n    readonly clientHeight: number;\\n    readonly clientLeft: number;\\n    readonly clientTop: number;\\n    readonly clientWidth: number;\\n    id: string;\\n    innerHTML: string;\\n    msContentZoomFactor: number;\\n    readonly msRegionOverflow: string;\\n    onariarequest: ((this: Element, ev: Event) => any) | null;\\n    oncommand: ((this: Element, ev: Event) => any) | null;\\n    ongotpointercapture: ((this: Element, ev: PointerEvent) => any) | null;\\n    onlostpointercapture: ((this: Element, ev: PointerEvent) => any) | null;\\n    onmsgesturechange: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturedoubletap: ((this: Element, ev: Event) => any) | null;\\n    onmsgestureend: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturehold: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturestart: ((this: Element, ev: Event) => any) | null;\\n    onmsgesturetap: ((this: Element, ev: Event) => any) | null;\\n    onmsgotpointercapture: ((this: Element, ev: Event) => any) | null;\\n    onmsinertiastart: ((this: Element, ev: Event) => any) | null;\\n    onmslostpointercapture: ((this: Element, ev: Event) => any) | null;\\n    onmspointercancel: ((this: Element, ev: Event) => any) | null;\\n    onmspointerdown: ((this: Element, ev: Event) => any) | null;\\n    onmspointerenter: ((this: Element, ev: Event) => any) | null;\\n    onmspointerleave: ((this: Element, ev: Event) => any) | null;\\n    onmspointermove: ((this: Element, ev: Event) => any) | null;\\n    onmspointerout: ((this: Element, ev: Event) => any) | null;\\n    onmspointerover: ((this: Element, ev: Event) => any) | null;\\n    onmspointerup: ((this: Element, ev: Event) => any) | null;\\n    ontouchcancel: ((this: Element, ev: Event) => any) | null;\\n    ontouchend: ((this: Element, ev: Event) => any) | null;\\n    ontouchmove: ((this: Element, ev: Event) => any) | null;\\n    ontouchstart: ((this: Element, ev: Event) => any) | null;\\n    onwebkitfullscreenchange: ((this: Element, ev: Event) => any) | null;\\n    onwebkitfullscreenerror: ((this: Element, ev: Event) => any) | null;\\n    outerHTML: string;\\n    readonly prefix: string | null;\\n    readonly scrollHeight: number;\\n    scrollLeft: number;\\n    scrollTop: number;\\n    readonly scrollWidth: number;\\n    readonly shadowRoot: ShadowRoot | null;\\n    slot: string;\\n    readonly tagName: string;\\n    attachShadow(shadowRootInitDict: ShadowRootInit): ShadowRoot;\\n    closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null;\\n    closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null;\\n    closest(selector: string): Element | null;\\n    getAttribute(qualifiedName: string): string | null;\\n    getAttributeNS(namespaceURI: string, localName: string): string;\\n    getAttributeNode(name: string): Attr | null;\\n    getAttributeNodeNS(namespaceURI: string, localName: string): Attr | null;\\n    getBoundingClientRect(): ClientRect | DOMRect;\\n    getClientRects(): ClientRectList | DOMRectList;\\n    getElementsByClassName(classNames: string): NodeListOf<Element>;\\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(name: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(name: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    getElementsByTagName(name: string): NodeListOf<Element>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/1999/xhtml\\\", localName: string): HTMLCollectionOf<HTMLElement>;\\n    getElementsByTagNameNS(namespaceURI: \\\"http://www.w3.org/2000/svg\\\", localName: string): HTMLCollectionOf<SVGElement>;\\n    getElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>;\\n    hasAttribute(name: string): boolean;\\n    hasAttributeNS(namespaceURI: string, localName: string): boolean;\\n    hasAttributes(): boolean;\\n    insertAdjacentElement(position: InsertPosition, insertedElement: Element): Element | null;\\n    insertAdjacentHTML(where: InsertPosition, html: string): void;\\n    insertAdjacentText(where: InsertPosition, text: string): void;\\n    matches(selectors: string): boolean;\\n    msGetRegionContent(): any;\\n    msGetUntransformedBounds(): ClientRect;\\n    msMatchesSelector(selectors: string): boolean;\\n    msReleasePointerCapture(pointerId: number): void;\\n    msSetPointerCapture(pointerId: number): void;\\n    msZoomTo(args: MsZoomToOptions): void;\\n    releasePointerCapture(pointerId: number): void;\\n    removeAttribute(qualifiedName: string): void;\\n    removeAttributeNS(namespaceURI: string, localName: string): void;\\n    removeAttributeNode(oldAttr: Attr): Attr;\\n    requestFullscreen(): void;\\n    requestPointerLock(): void;\\n    scroll(options?: ScrollToOptions): void;\\n    scroll(x: number, y: number): void;\\n    scrollBy(options?: ScrollToOptions): void;\\n    scrollBy(x: number, y: number): void;\\n    scrollIntoView(arg?: boolean | ScrollIntoViewOptions): void;\\n    scrollTo(options?: ScrollToOptions): void;\\n    scrollTo(x: number, y: number): void;\\n    setAttribute(qualifiedName: string, value: string): void;\\n    setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\\n    setAttributeNode(newAttr: Attr): Attr;\\n    setAttributeNodeNS(newAttr: Attr): Attr;\\n    setPointerCapture(pointerId: number): void;\\n    webkitMatchesSelector(selectors: string): boolean;\\n    webkitRequestFullScreen(): void;\\n    webkitRequestFullscreen(): void;\\n    addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Element: {\\n    prototype: Element;\\n    new(): Element;\\n};\\n\\ninterface ElementCSSInlineStyle {\\n    readonly style: CSSStyleDeclaration;\\n}\\n\\ninterface ElementCreationOptions {\\n    is?: string;\\n}\\n\\ninterface ElementDefinitionOptions {\\n    extends: string;\\n}\\n\\ninterface ElementTraversal {\\n    readonly childElementCount: number;\\n    readonly firstElementChild: Element | null;\\n    readonly lastElementChild: Element | null;\\n    readonly nextElementSibling: Element | null;\\n    readonly previousElementSibling: Element | null;\\n}\\n\\ninterface ErrorEvent extends Event {\\n    readonly colno: number;\\n    readonly error: any;\\n    readonly filename: string;\\n    readonly lineno: number;\\n    readonly message: string;\\n    initErrorEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, messageArg: string, filenameArg: string, linenoArg: number): void;\\n}\\n\\ndeclare var ErrorEvent: {\\n    prototype: ErrorEvent;\\n    new(typeArg: string, eventInitDict?: ErrorEventInit): ErrorEvent;\\n};\\n\\ninterface Event {\\n    readonly bubbles: boolean;\\n    cancelBubble: boolean;\\n    readonly cancelable: boolean;\\n    readonly currentTarget: EventTarget | null;\\n    readonly defaultPrevented: boolean;\\n    readonly eventPhase: number;\\n    readonly isTrusted: boolean;\\n    returnValue: boolean;\\n    readonly scoped: boolean;\\n    readonly srcElement: Element | null;\\n    readonly target: EventTarget | null;\\n    readonly timeStamp: number;\\n    readonly type: string;\\n    deepPath(): EventTarget[];\\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\\n    preventDefault(): void;\\n    stopImmediatePropagation(): void;\\n    stopPropagation(): void;\\n    readonly AT_TARGET: number;\\n    readonly BUBBLING_PHASE: number;\\n    readonly CAPTURING_PHASE: number;\\n    readonly NONE: number;\\n}\\n\\ndeclare var Event: {\\n    prototype: Event;\\n    new(typeArg: string, eventInitDict?: EventInit): Event;\\n    readonly AT_TARGET: number;\\n    readonly BUBBLING_PHASE: number;\\n    readonly CAPTURING_PHASE: number;\\n    readonly NONE: number;\\n};\\n\\ninterface EventListenerObject {\\n    handleEvent(evt: Event): void;\\n}\\n\\ninterface EventSource extends EventTarget {\\n    readonly CLOSED: number;\\n    readonly CONNECTING: number;\\n    readonly OPEN: number;\\n    onerror: (evt: MessageEvent) => any;\\n    onmessage: (evt: MessageEvent) => any;\\n    onopen: (evt: MessageEvent) => any;\\n    readonly readyState: number;\\n    readonly url: string;\\n    readonly withCredentials: boolean;\\n    close(): void;\\n}\\n\\ndeclare var EventSource: {\\n    prototype: EventSource;\\n    new(url: string, eventSourceInitDict?: EventSourceInit): EventSource;\\n};\\n\\ninterface EventSourceInit {\\n    readonly withCredentials: boolean;\\n}\\n\\ninterface EventTarget {\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions): void;\\n    dispatchEvent(evt: Event): boolean;\\n    removeEventListener(type: string, listener?: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;\\n}\\n\\ndeclare var EventTarget: {\\n    prototype: EventTarget;\\n    new(): EventTarget;\\n};\\n\\ninterface ExtensionScriptApis {\\n    extensionIdToShortId(extensionId: string): number;\\n    fireExtensionApiTelemetry(functionName: string, isSucceeded: boolean, isSupported: boolean, errorString: string): void;\\n    genericFunction(routerAddress: any, parameters?: string, callbackId?: number): void;\\n    genericSynchronousFunction(functionId: number, parameters?: string): string;\\n    genericWebRuntimeCallout(to: any, from: any, payload: string): void;\\n    getExtensionId(): string;\\n    registerGenericFunctionCallbackHandler(callbackHandler: Function): void;\\n    registerGenericPersistentCallbackHandler(callbackHandler: Function): void;\\n    registerWebRuntimeCallbackHandler(handler: Function): any;\\n}\\n\\ndeclare var ExtensionScriptApis: {\\n    prototype: ExtensionScriptApis;\\n    new(): ExtensionScriptApis;\\n};\\n\\ninterface External {\\n}\\n\\ndeclare var External: {\\n    prototype: External;\\n    new(): External;\\n};\\n\\ninterface File extends Blob {\\n    readonly lastModified: number;\\n    /** @deprecated */\\n    readonly lastModifiedDate: Date;\\n    readonly name: string;\\n    readonly webkitRelativePath: string;\\n}\\n\\ndeclare var File: {\\n    prototype: File;\\n    new (parts: (ArrayBuffer | ArrayBufferView | Blob | string)[], filename: string, properties?: FilePropertyBag): File;\\n};\\n\\ninterface FileList {\\n    readonly length: number;\\n    item(index: number): File | null;\\n    [index: number]: File;\\n}\\n\\ndeclare var FileList: {\\n    prototype: FileList;\\n    new(): FileList;\\n};\\n\\ninterface FilePropertyBag extends BlobPropertyBag {\\n    lastModified?: number;\\n}\\n\\ninterface FileReaderEventMap {\\n    \\\"abort\\\": ProgressEvent;\\n    \\\"error\\\": ProgressEvent;\\n    \\\"load\\\": ProgressEvent;\\n    \\\"loadend\\\": ProgressEvent;\\n    \\\"loadstart\\\": ProgressEvent;\\n    \\\"progress\\\": ProgressEvent;\\n}\\n\\ninterface FileReader extends EventTarget {\\n    readonly error: DOMException | null;\\n    onabort: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onerror: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onload: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onloadend: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onloadstart: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    onprogress: ((this: FileReader, ev: ProgressEvent) => any) | null;\\n    readonly readyState: number;\\n    readonly result: any;\\n    abort(): void;\\n    readAsArrayBuffer(blob: Blob): void;\\n    readAsBinaryString(blob: Blob): void;\\n    readAsDataURL(blob: Blob): void;\\n    readAsText(blob: Blob, label?: string): void;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var FileReader: {\\n    prototype: FileReader;\\n    new(): FileReader;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n};\\n\\ninterface FocusEvent extends UIEvent {\\n    readonly relatedTarget: EventTarget;\\n    initFocusEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, relatedTargetArg: EventTarget): void;\\n}\\n\\ndeclare var FocusEvent: {\\n    prototype: FocusEvent;\\n    new(typeArg: string, eventInitDict?: FocusEventInit): FocusEvent;\\n};\\n\\ninterface FocusNavigationEvent extends Event {\\n    readonly navigationReason: NavigationReason;\\n    readonly originHeight: number;\\n    readonly originLeft: number;\\n    readonly originTop: number;\\n    readonly originWidth: number;\\n    requestFocus(): void;\\n}\\n\\ndeclare var FocusNavigationEvent: {\\n    prototype: FocusNavigationEvent;\\n    new(type: string, eventInitDict?: FocusNavigationEventInit): FocusNavigationEvent;\\n};\\n\\ninterface FormData {\\n    append(name: string, value: string | Blob, fileName?: string): void;\\n    delete(name: string): void;\\n    get(name: string): FormDataEntryValue | null;\\n    getAll(name: string): FormDataEntryValue[];\\n    has(name: string): boolean;\\n    set(name: string, value: string | Blob, fileName?: string): void;\\n}\\n\\ndeclare var FormData: {\\n    prototype: FormData;\\n    new(): FormData;\\n    new(form: HTMLFormElement): FormData;\\n};\\n\\ninterface GainNode extends AudioNode {\\n    readonly gain: AudioParam;\\n}\\n\\ndeclare var GainNode: {\\n    prototype: GainNode;\\n    new(): GainNode;\\n};\\n\\ninterface Gamepad {\\n    readonly axes: number[];\\n    readonly buttons: GamepadButton[];\\n    readonly connected: boolean;\\n    readonly displayId: number;\\n    readonly hand: GamepadHand;\\n    readonly hapticActuators: GamepadHapticActuator[];\\n    readonly id: string;\\n    readonly index: number;\\n    readonly mapping: GamepadMappingType;\\n    readonly pose: GamepadPose | null;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var Gamepad: {\\n    prototype: Gamepad;\\n    new(): Gamepad;\\n};\\n\\ninterface GamepadButton {\\n    readonly pressed: boolean;\\n    readonly touched: boolean;\\n    readonly value: number;\\n}\\n\\ndeclare var GamepadButton: {\\n    prototype: GamepadButton;\\n    new(): GamepadButton;\\n};\\n\\ninterface GamepadEvent extends Event {\\n    readonly gamepad: Gamepad;\\n}\\n\\ndeclare var GamepadEvent: {\\n    prototype: GamepadEvent;\\n    new(typeArg: string, eventInitDict?: GamepadEventInit): GamepadEvent;\\n};\\n\\ninterface GamepadHapticActuator {\\n    readonly type: GamepadHapticActuatorType;\\n    pulse(value: number, duration: number): Promise<boolean>;\\n}\\n\\ndeclare var GamepadHapticActuator: {\\n    prototype: GamepadHapticActuator;\\n    new(): GamepadHapticActuator;\\n};\\n\\ninterface GamepadPose {\\n    readonly angularAcceleration: Float32Array | null;\\n    readonly angularVelocity: Float32Array | null;\\n    readonly hasOrientation: boolean;\\n    readonly hasPosition: boolean;\\n    readonly linearAcceleration: Float32Array | null;\\n    readonly linearVelocity: Float32Array | null;\\n    readonly orientation: Float32Array | null;\\n    readonly position: Float32Array | null;\\n}\\n\\ndeclare var GamepadPose: {\\n    prototype: GamepadPose;\\n    new(): GamepadPose;\\n};\\n\\ninterface Geolocation {\\n    clearWatch(watchId: number): void;\\n    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): void;\\n    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): number;\\n}\\n\\ndeclare var Geolocation: {\\n    prototype: Geolocation;\\n    new(): Geolocation;\\n};\\n\\ninterface GetSVGDocument {\\n    getSVGDocument(): Document;\\n}\\n\\ninterface GlobalEventHandlersEventMap {\\n    \\\"pointercancel\\\": PointerEvent;\\n    \\\"pointerdown\\\": PointerEvent;\\n    \\\"pointerenter\\\": PointerEvent;\\n    \\\"pointerleave\\\": PointerEvent;\\n    \\\"pointermove\\\": PointerEvent;\\n    \\\"pointerout\\\": PointerEvent;\\n    \\\"pointerover\\\": PointerEvent;\\n    \\\"pointerup\\\": PointerEvent;\\n    \\\"wheel\\\": WheelEvent;\\n}\\n\\ninterface GlobalEventHandlers {\\n    onpointercancel: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\\n    onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;\\n    addEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface GlobalFetch {\\n    fetch(input?: Request | string, init?: RequestInit): Promise<Response>;\\n}\\n\\ninterface HTMLAllCollection {\\n    readonly length: number;\\n    item(nameOrIndex?: string): HTMLCollection | Element | null;\\n    namedItem(name: string): HTMLCollection | Element | null;\\n    [index: number]: Element;\\n}\\n\\ndeclare var HTMLAllCollection: {\\n    prototype: HTMLAllCollection;\\n    new(): HTMLAllCollection;\\n};\\n\\ninterface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {\\n    Methods: string;\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    /** @deprecated */\\n    charset: string;\\n    /**\\n     * Sets or retrieves the coordinates of the object.\\n     */\\n    /** @deprecated */\\n    coords: string;\\n    download: string;\\n    /**\\n     * Sets or retrieves the language code of the object.\\n     */\\n    hreflang: string;\\n    readonly mimeType: string;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    readonly nameProp: string;\\n    readonly protocolLong: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    rel: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    /** @deprecated */\\n    rev: string;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    /** @deprecated */\\n    shape: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    /**\\n     * Retrieves or sets the text of the object as a string.\\n     */\\n    text: string;\\n    type: string;\\n    urn: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAnchorElement: {\\n    prototype: HTMLAnchorElement;\\n    new(): HTMLAnchorElement;\\n};\\n\\ninterface HTMLAppletElement extends HTMLElement {\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    /** @deprecated */\\n    alt: string;\\n    /**\\n     * Sets or retrieves a character string that can be used to implement your own archive functionality for the object.\\n     */\\n    /** @deprecated */\\n    archive: string;\\n    /** @deprecated */\\n    code: string;\\n    /**\\n     * Sets or retrieves the URL of the component.\\n     */\\n    /** @deprecated */\\n    codeBase: string;\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    /** @deprecated */\\n    height: string;\\n    /** @deprecated */\\n    hspace: number;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /** @deprecated */\\n    object: string;\\n    /** @deprecated */\\n    vspace: number;\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAppletElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAppletElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAppletElement: {\\n    prototype: HTMLAppletElement;\\n    new(): HTMLAppletElement;\\n};\\n\\ninterface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    alt: string;\\n    /**\\n     * Sets or retrieves the coordinates of the object.\\n     */\\n    coords: string;\\n    download: string;\\n    /**\\n     * Sets or gets whether clicks in this region cause action.\\n     */\\n    /** @deprecated */\\n    noHref: boolean;\\n    rel: string;\\n    /**\\n     * Sets or retrieves the shape of the object.\\n     */\\n    shape: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAreaElement: {\\n    prototype: HTMLAreaElement;\\n    new(): HTMLAreaElement;\\n};\\n\\ninterface HTMLAreasCollection extends HTMLCollectionBase {\\n}\\n\\ndeclare var HTMLAreasCollection: {\\n    prototype: HTMLAreasCollection;\\n    new(): HTMLAreasCollection;\\n};\\n\\ninterface HTMLAudioElement extends HTMLMediaElement {\\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLAudioElement: {\\n    prototype: HTMLAudioElement;\\n    new(): HTMLAudioElement;\\n};\\n\\ninterface HTMLBRElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.\\n     */\\n    /** @deprecated */\\n    clear: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBRElement: {\\n    prototype: HTMLBRElement;\\n    new(): HTMLBRElement;\\n};\\n\\ninterface HTMLBaseElement extends HTMLElement {\\n    /**\\n     * Gets or sets the baseline URL on which relative links are based.\\n     */\\n    href: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBaseElement: {\\n    prototype: HTMLBaseElement;\\n    new(): HTMLBaseElement;\\n};\\n\\ninterface HTMLBaseFontElement extends HTMLElement, DOML2DeprecatedColorProperty {\\n    /**\\n     * Sets or retrieves the current typeface family.\\n     */\\n    /** @deprecated */\\n    face: string;\\n    /**\\n     * Sets or retrieves the font size of the object.\\n     */\\n    /** @deprecated */\\n    size: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBaseFontElement: {\\n    prototype: HTMLBaseFontElement;\\n    new(): HTMLBaseFontElement;\\n};\\n\\ninterface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\\n    \\\"blur\\\": FocusEvent;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"load\\\": Event;\\n    \\\"orientationchange\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n}\\n\\ninterface HTMLBodyElement extends HTMLElement, WindowEventHandlers {\\n    /** @deprecated */\\n    aLink: string;\\n    /** @deprecated */\\n    background: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    bgProperties: string;\\n    /** @deprecated */\\n    link: string;\\n    /** @deprecated */\\n    noWrap: boolean;\\n    onorientationchange: ((this: HTMLBodyElement, ev: Event) => any) | null;\\n    onresize: ((this: HTMLBodyElement, ev: UIEvent) => any) | null;\\n    /** @deprecated */\\n    text: string;\\n    /** @deprecated */\\n    vLink: string;\\n    addEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLBodyElement: {\\n    prototype: HTMLBodyElement;\\n    new(): HTMLBodyElement;\\n};\\n\\ninterface HTMLButtonElement extends HTMLElement {\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Overrides the action attribute (where the data on a form is sent) on the parent form element.\\n     */\\n    formAction: string;\\n    /**\\n     * Used to override the encoding (formEnctype attribute) specified on the form element.\\n     */\\n    formEnctype: string;\\n    /**\\n     * Overrides the submit method attribute previously specified on a form element.\\n     */\\n    formMethod: string;\\n    /**\\n     * Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \\\"save draft\\\"-type submit option.\\n     */\\n    formNoValidate: boolean;\\n    /**\\n     * Overrides the target attribute on a form element.\\n     */\\n    formTarget: string;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    status: any;\\n    /**\\n     * Gets the classification and default behavior of the button.\\n     */\\n    type: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Sets or retrieves the default or selected value of the control.\\n     */\\n    value: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLButtonElement: {\\n    prototype: HTMLButtonElement;\\n    new(): HTMLButtonElement;\\n};\\n\\ninterface HTMLCanvasElement extends HTMLElement {\\n    /**\\n     * Gets or sets the height of a canvas element on a document.\\n     */\\n    height: number;\\n    /**\\n     * Gets or sets the width of a canvas element on a document.\\n     */\\n    width: number;\\n    /**\\n     * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.\\n     * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext(\\\"2d\\\"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext(\\\"experimental-webgl\\\");\\n     */\\n    getContext(contextId: \\\"2d\\\", contextAttributes?: Canvas2DContextAttributes): CanvasRenderingContext2D | null;\\n    getContext(contextId: \\\"webgl\\\" | \\\"experimental-webgl\\\", contextAttributes?: WebGLContextAttributes): WebGLRenderingContext | null;\\n    getContext(contextId: string, contextAttributes?: {}): CanvasRenderingContext2D | WebGLRenderingContext | null;\\n    /**\\n     * Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.\\n     */\\n    msToBlob(): Blob;\\n    toBlob(callback: (result: Blob | null) => void, type?: string, ...arguments: any[]): void;\\n    /**\\n     * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.\\n     * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.\\n     */\\n    toDataURL(type?: string, ...args: any[]): string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLCanvasElement: {\\n    prototype: HTMLCanvasElement;\\n    new(): HTMLCanvasElement;\\n};\\n\\ninterface HTMLCollectionBase {\\n    /**\\n     * Sets or retrieves the number of objects in a collection.\\n     */\\n    readonly length: number;\\n    /**\\n     * Retrieves an object from various collections.\\n     */\\n    item(index: number): Element;\\n    [index: number]: Element;\\n}\\n\\ninterface HTMLCollection extends HTMLCollectionBase {\\n    /**\\n     * Retrieves a select object or an object from an options collection.\\n     */\\n    namedItem(name: string): Element | null;\\n}\\n\\ndeclare var HTMLCollection: {\\n    prototype: HTMLCollection;\\n    new(): HTMLCollection;\\n};\\n\\ninterface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {\\n    item(index: number): T;\\n    namedItem(name: string): T;\\n    [index: number]: T;\\n}\\n\\ninterface HTMLDListElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDListElement: {\\n    prototype: HTMLDListElement;\\n    new(): HTMLDListElement;\\n};\\n\\ninterface HTMLDataElement extends HTMLElement {\\n    value: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDataElement: {\\n    prototype: HTMLDataElement;\\n    new(): HTMLDataElement;\\n};\\n\\ninterface HTMLDataListElement extends HTMLElement {\\n    readonly options: HTMLCollectionOf<HTMLOptionElement>;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDataListElement: {\\n    prototype: HTMLDataListElement;\\n    new(): HTMLDataListElement;\\n};\\n\\ninterface HTMLDetailsElement extends HTMLElement {\\n    open: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDetailsElement: {\\n    prototype: HTMLDetailsElement;\\n    new(): HTMLDetailsElement;\\n};\\n\\ninterface HTMLDialogElement extends HTMLElement {\\n    open: boolean;\\n    returnValue: string;\\n    close(returnValue?: string): void;\\n    show(): void;\\n    showModal(): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDialogElement: {\\n    prototype: HTMLDialogElement;\\n    new(): HTMLDialogElement;\\n};\\n\\ninterface HTMLDirectoryElement extends HTMLElement {\\n    compact: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDirectoryElement: {\\n    prototype: HTMLDirectoryElement;\\n    new(): HTMLDirectoryElement;\\n};\\n\\ninterface HTMLDivElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves whether the browser automatically performs wordwrap.\\n     */\\n    noWrap: boolean;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDivElement: {\\n    prototype: HTMLDivElement;\\n    new(): HTMLDivElement;\\n};\\n\\ninterface HTMLDocument extends Document {\\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLDocument: {\\n    prototype: HTMLDocument;\\n    new(): HTMLDocument;\\n};\\n\\ninterface HTMLElementEventMap extends ElementEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"activate\\\": Event;\\n    \\\"beforeactivate\\\": Event;\\n    \\\"beforecopy\\\": Event;\\n    \\\"beforecut\\\": Event;\\n    \\\"beforedeactivate\\\": Event;\\n    \\\"beforepaste\\\": Event;\\n    \\\"blur\\\": FocusEvent;\\n    \\\"canplay\\\": Event;\\n    \\\"canplaythrough\\\": Event;\\n    \\\"change\\\": Event;\\n    \\\"click\\\": MouseEvent;\\n    \\\"contextmenu\\\": PointerEvent;\\n    \\\"copy\\\": ClipboardEvent;\\n    \\\"cuechange\\\": Event;\\n    \\\"cut\\\": ClipboardEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"deactivate\\\": Event;\\n    \\\"drag\\\": DragEvent;\\n    \\\"dragend\\\": DragEvent;\\n    \\\"dragenter\\\": DragEvent;\\n    \\\"dragleave\\\": DragEvent;\\n    \\\"dragover\\\": DragEvent;\\n    \\\"dragstart\\\": DragEvent;\\n    \\\"drop\\\": DragEvent;\\n    \\\"durationchange\\\": Event;\\n    \\\"emptied\\\": Event;\\n    \\\"ended\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"input\\\": Event;\\n    \\\"invalid\\\": Event;\\n    \\\"keydown\\\": KeyboardEvent;\\n    \\\"keypress\\\": KeyboardEvent;\\n    \\\"keyup\\\": KeyboardEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadeddata\\\": Event;\\n    \\\"loadedmetadata\\\": Event;\\n    \\\"loadstart\\\": Event;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mouseenter\\\": MouseEvent;\\n    \\\"mouseleave\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n    \\\"mousewheel\\\": WheelEvent;\\n    \\\"MSContentZoom\\\": Event;\\n    \\\"MSManipulationStateChanged\\\": Event;\\n    \\\"paste\\\": ClipboardEvent;\\n    \\\"pause\\\": Event;\\n    \\\"play\\\": Event;\\n    \\\"playing\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"ratechange\\\": Event;\\n    \\\"reset\\\": Event;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"seeked\\\": Event;\\n    \\\"seeking\\\": Event;\\n    \\\"select\\\": UIEvent;\\n    \\\"selectstart\\\": Event;\\n    \\\"stalled\\\": Event;\\n    \\\"submit\\\": Event;\\n    \\\"suspend\\\": Event;\\n    \\\"timeupdate\\\": Event;\\n    \\\"volumechange\\\": Event;\\n    \\\"waiting\\\": Event;\\n}\\n\\ninterface HTMLElement extends Element, ElementCSSInlineStyle {\\n    accessKey: string;\\n    contentEditable: string;\\n    readonly dataset: DOMStringMap;\\n    dir: string;\\n    draggable: boolean;\\n    hidden: boolean;\\n    hideFocus: boolean;\\n    innerText: string;\\n    readonly isContentEditable: boolean;\\n    lang: string;\\n    readonly offsetHeight: number;\\n    readonly offsetLeft: number;\\n    readonly offsetParent: Element;\\n    readonly offsetTop: number;\\n    readonly offsetWidth: number;\\n    onabort: ((this: HTMLElement, ev: UIEvent) => any) | null;\\n    onactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforeactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforecopy: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforecut: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforedeactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onbeforepaste: ((this: HTMLElement, ev: Event) => any) | null;\\n    onblur: ((this: HTMLElement, ev: FocusEvent) => any) | null;\\n    oncanplay: ((this: HTMLElement, ev: Event) => any) | null;\\n    oncanplaythrough: ((this: HTMLElement, ev: Event) => any) | null;\\n    onchange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onclick: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    oncontextmenu: ((this: HTMLElement, ev: PointerEvent) => any) | null;\\n    oncopy: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;\\n    oncuechange: ((this: HTMLElement, ev: Event) => any) | null;\\n    oncut: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;\\n    ondblclick: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    ondeactivate: ((this: HTMLElement, ev: Event) => any) | null;\\n    ondrag: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragend: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragenter: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragleave: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragover: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondragstart: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondrop: ((this: HTMLElement, ev: DragEvent) => any) | null;\\n    ondurationchange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onemptied: ((this: HTMLElement, ev: Event) => any) | null;\\n    onended: ((this: HTMLElement, ev: Event) => any) | null;\\n    onerror: ((this: HTMLElement, ev: ErrorEvent) => any) | null;\\n    onfocus: ((this: HTMLElement, ev: FocusEvent) => any) | null;\\n    oninput: ((this: HTMLElement, ev: Event) => any) | null;\\n    oninvalid: ((this: HTMLElement, ev: Event) => any) | null;\\n    onkeydown: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;\\n    onkeypress: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;\\n    onkeyup: ((this: HTMLElement, ev: KeyboardEvent) => any) | null;\\n    onload: ((this: HTMLElement, ev: Event) => any) | null;\\n    onloadeddata: ((this: HTMLElement, ev: Event) => any) | null;\\n    onloadedmetadata: ((this: HTMLElement, ev: Event) => any) | null;\\n    onloadstart: ((this: HTMLElement, ev: Event) => any) | null;\\n    onmousedown: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseenter: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseleave: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmousemove: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseout: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseover: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmouseup: ((this: HTMLElement, ev: MouseEvent) => any) | null;\\n    onmousewheel: ((this: HTMLElement, ev: WheelEvent) => any) | null;\\n    onmscontentzoom: ((this: HTMLElement, ev: Event) => any) | null;\\n    onmsmanipulationstatechanged: ((this: HTMLElement, ev: Event) => any) | null;\\n    onpaste: ((this: HTMLElement, ev: ClipboardEvent) => any) | null;\\n    onpause: ((this: HTMLElement, ev: Event) => any) | null;\\n    onplay: ((this: HTMLElement, ev: Event) => any) | null;\\n    onplaying: ((this: HTMLElement, ev: Event) => any) | null;\\n    onprogress: ((this: HTMLElement, ev: ProgressEvent) => any) | null;\\n    onratechange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onreset: ((this: HTMLElement, ev: Event) => any) | null;\\n    onscroll: ((this: HTMLElement, ev: UIEvent) => any) | null;\\n    onseeked: ((this: HTMLElement, ev: Event) => any) | null;\\n    onseeking: ((this: HTMLElement, ev: Event) => any) | null;\\n    onselect: ((this: HTMLElement, ev: UIEvent) => any) | null;\\n    onselectstart: ((this: HTMLElement, ev: Event) => any) | null;\\n    onstalled: ((this: HTMLElement, ev: Event) => any) | null;\\n    onsubmit: ((this: HTMLElement, ev: Event) => any) | null;\\n    onsuspend: ((this: HTMLElement, ev: Event) => any) | null;\\n    ontimeupdate: ((this: HTMLElement, ev: Event) => any) | null;\\n    onvolumechange: ((this: HTMLElement, ev: Event) => any) | null;\\n    onwaiting: ((this: HTMLElement, ev: Event) => any) | null;\\n    outerText: string;\\n    spellcheck: boolean;\\n    tabIndex: number;\\n    title: string;\\n    animate(keyframes: AnimationKeyFrame | AnimationKeyFrame[], options: number | AnimationOptions): Animation;\\n    blur(): void;\\n    click(): void;\\n    dragDrop(): boolean;\\n    focus(): void;\\n    msGetInputContext(): MSInputMethodContext;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLElement: {\\n    prototype: HTMLElement;\\n    new(): HTMLElement;\\n};\\n\\ninterface HTMLEmbedElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string;\\n    hidden: any;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    /**\\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\\n     */\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /**\\n     * Retrieves the palette used for the embedded document.\\n     */\\n    readonly palette: string;\\n    /**\\n     * Retrieves the URL of the plug-in used to view an embedded document.\\n     */\\n    readonly pluginspage: string;\\n    readonly readyState: string;\\n    /**\\n     * Sets or retrieves a URL to be loaded by the object.\\n     */\\n    src: string;\\n    /**\\n     * Sets or retrieves the height and width units of the embed object.\\n     */\\n    units: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLEmbedElement: {\\n    prototype: HTMLEmbedElement;\\n    new(): HTMLEmbedElement;\\n};\\n\\ninterface HTMLFieldSetElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    align: string;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    name: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFieldSetElement: {\\n    prototype: HTMLFieldSetElement;\\n    new(): HTMLFieldSetElement;\\n};\\n\\ninterface HTMLFontElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {\\n    /**\\n     * Sets or retrieves the current typeface family.\\n     */\\n    /** @deprecated */\\n    face: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFontElement: {\\n    prototype: HTMLFontElement;\\n    new(): HTMLFontElement;\\n};\\n\\ninterface HTMLFormControlsCollection extends HTMLCollectionBase {\\n    namedItem(name: string): HTMLCollection | Element | null;\\n}\\n\\ndeclare var HTMLFormControlsCollection: {\\n    prototype: HTMLFormControlsCollection;\\n    new(): HTMLFormControlsCollection;\\n};\\n\\ninterface HTMLFormElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form.\\n     */\\n    acceptCharset: string;\\n    /**\\n     * Sets or retrieves the URL to which the form content is sent for processing.\\n     */\\n    action: string;\\n    /**\\n     * Specifies whether autocomplete is applied to an editable text field.\\n     */\\n    autocomplete: string;\\n    /**\\n     * Retrieves a collection, in source order, of all controls in a given form.\\n     */\\n    readonly elements: HTMLFormControlsCollection;\\n    /**\\n     * Sets or retrieves the MIME encoding for the form.\\n     */\\n    encoding: string;\\n    /**\\n     * Sets or retrieves the encoding type for the form.\\n     */\\n    enctype: string;\\n    /**\\n     * Sets or retrieves the number of objects in a collection.\\n     */\\n    readonly length: number;\\n    /**\\n     * Sets or retrieves how to send the form data to the server.\\n     */\\n    method: string;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    /**\\n     * Designates a form that is not validated when submitted.\\n     */\\n    noValidate: boolean;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    target: string;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Retrieves a form object or an object from an elements collection.\\n     * @param name Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is a Number, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.\\n     * @param index Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.\\n     */\\n    item(name?: any, index?: any): any;\\n    /**\\n     * Retrieves a form object or an object from an elements collection.\\n     */\\n    namedItem(name: string): any;\\n    reportValidity(): boolean;\\n    /**\\n     * Fires when the user resets a form.\\n     */\\n    reset(): void;\\n    /**\\n     * Fires when a FORM is about to be submitted.\\n     */\\n    submit(): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [name: string]: any;\\n}\\n\\ndeclare var HTMLFormElement: {\\n    prototype: HTMLFormElement;\\n    new(): HTMLFormElement;\\n};\\n\\ninterface HTMLFrameElementEventMap extends HTMLElementEventMap {\\n    \\\"load\\\": Event;\\n}\\n\\ninterface HTMLFrameElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Specifies the properties of a border drawn around an object.\\n     */\\n    border: string;\\n    /**\\n     * Sets or retrieves the border color of the object.\\n     */\\n    borderColor: any;\\n    /**\\n     * Retrieves the document object of the page or frame.\\n     */\\n    /** @deprecated */\\n    readonly contentDocument: Document | null;\\n    /**\\n     * Retrieves the object of the specified.\\n     */\\n    /** @deprecated */\\n    readonly contentWindow: Window | null;\\n    /**\\n     * Sets or retrieves whether to display a border for the frame.\\n     */\\n    /** @deprecated */\\n    frameBorder: string;\\n    /**\\n     * Sets or retrieves the amount of additional space between the frames.\\n     */\\n    frameSpacing: any;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string | number;\\n    /**\\n     * Sets or retrieves a URI to a long description of the object.\\n     */\\n    /** @deprecated */\\n    longDesc: string;\\n    /**\\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginHeight: string;\\n    /**\\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginWidth: string;\\n    /**\\n     * Sets or retrieves the frame name.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /**\\n     * Sets or retrieves whether the user can resize the frame.\\n     */\\n    /** @deprecated */\\n    noResize: boolean;\\n    /**\\n     * Sets or retrieves whether the frame can be scrolled.\\n     */\\n    /** @deprecated */\\n    scrolling: string;\\n    /**\\n     * Sets or retrieves a URL to be loaded by the object.\\n     */\\n    /** @deprecated */\\n    src: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string | number;\\n    addEventListener<K extends keyof HTMLFrameElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLFrameElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLFrameElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLFrameElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFrameElement: {\\n    prototype: HTMLFrameElement;\\n    new(): HTMLFrameElement;\\n};\\n\\ninterface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\\n    \\\"blur\\\": FocusEvent;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"load\\\": Event;\\n    \\\"orientationchange\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n}\\n\\ninterface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {\\n    /**\\n     * Sets or retrieves the frame widths of the object.\\n     */\\n    /** @deprecated */\\n    cols: string;\\n    name: string;\\n    onorientationchange: ((this: HTMLFrameSetElement, ev: Event) => any) | null;\\n    onresize: ((this: HTMLFrameSetElement, ev: UIEvent) => any) | null;\\n    /**\\n     * Sets or retrieves the frame heights of the object.\\n     */\\n    /** @deprecated */\\n    rows: string;\\n    addEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLFrameSetElement: {\\n    prototype: HTMLFrameSetElement;\\n    new(): HTMLFrameSetElement;\\n};\\n\\ninterface HTMLHRElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves whether the horizontal rule is drawn with 3-D shading.\\n     */\\n    /** @deprecated */\\n    noShade: boolean;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHRElement: {\\n    prototype: HTMLHRElement;\\n    new(): HTMLHRElement;\\n};\\n\\ninterface HTMLHeadElement extends HTMLElement {\\n    /** @deprecated */\\n    profile: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHeadElement: {\\n    prototype: HTMLHeadElement;\\n    new(): HTMLHeadElement;\\n};\\n\\ninterface HTMLHeadingElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a value that indicates the table alignment.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHeadingElement: {\\n    prototype: HTMLHeadingElement;\\n    new(): HTMLHeadingElement;\\n};\\n\\ninterface HTMLHtmlElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the DTD version that governs the current document.\\n     */\\n    /** @deprecated */\\n    version: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLHtmlElement: {\\n    prototype: HTMLHtmlElement;\\n    new(): HTMLHtmlElement;\\n};\\n\\ninterface HTMLHyperlinkElementUtils {\\n    hash: string;\\n    host: string;\\n    hostname: string;\\n    href: string;\\n    origin: string;\\n    pathname: string;\\n    port: string;\\n    protocol: string;\\n    search: string;\\n    toString(): string;\\n}\\n\\ninterface HTMLIFrameElementEventMap extends HTMLElementEventMap {\\n    \\\"load\\\": Event;\\n}\\n\\ninterface HTMLIFrameElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    allowFullscreen: boolean;\\n    allowPaymentRequest: boolean;\\n    /**\\n     * Retrieves the document object of the page or frame.\\n     */\\n    readonly contentDocument: Document | null;\\n    /**\\n     * Retrieves the object of the specified.\\n     */\\n    readonly contentWindow: Window | null;\\n    /**\\n     * Sets or retrieves whether to display a border for the frame.\\n     */\\n    /** @deprecated */\\n    frameBorder: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string;\\n    /**\\n     * Sets or retrieves a URI to a long description of the object.\\n     */\\n    /** @deprecated */\\n    longDesc: string;\\n    /**\\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginHeight: string;\\n    /**\\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\\n     */\\n    /** @deprecated */\\n    marginWidth: string;\\n    /**\\n     * Sets or retrieves the frame name.\\n     */\\n    name: string;\\n    readonly sandbox: DOMTokenList;\\n    /**\\n     * Sets or retrieves whether the frame can be scrolled.\\n     */\\n    /** @deprecated */\\n    scrolling: string;\\n    /**\\n     * Sets or retrieves a URL to be loaded by the object.\\n     */\\n    src: string;\\n    /**\\n     * Sets or retrives the content of the page that is to contain.\\n     */\\n    srcdoc: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string;\\n    addEventListener<K extends keyof HTMLIFrameElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLIFrameElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLIFrameElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLIFrameElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLIFrameElement: {\\n    prototype: HTMLIFrameElement;\\n    new(): HTMLIFrameElement;\\n};\\n\\ninterface HTMLImageElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    alt: string;\\n    /**\\n     * Specifies the properties of a border drawn around an object.\\n     */\\n    /** @deprecated */\\n    border: string;\\n    /**\\n     * Retrieves whether the object is fully loaded.\\n     */\\n    readonly complete: boolean;\\n    crossOrigin: string | null;\\n    readonly currentSrc: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: number;\\n    /**\\n     * Sets or retrieves the width of the border to draw around the object.\\n     */\\n    /** @deprecated */\\n    hspace: number;\\n    /**\\n     * Sets or retrieves whether the image is a server-side image map.\\n     */\\n    isMap: boolean;\\n    /**\\n     * Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.\\n     */\\n    longDesc: string;\\n    /** @deprecated */\\n    lowsrc: string;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    /** @deprecated */\\n    name: string;\\n    /**\\n     * The original height of the image resource before sizing.\\n     */\\n    readonly naturalHeight: number;\\n    /**\\n     * The original width of the image resource before sizing.\\n     */\\n    readonly naturalWidth: number;\\n    sizes: string;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    srcset: string;\\n    /**\\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\\n     */\\n    useMap: string;\\n    /**\\n     * Sets or retrieves the vertical margin for the object.\\n     */\\n    /** @deprecated */\\n    vspace: number;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: number;\\n    readonly x: number;\\n    readonly y: number;\\n    msGetAsCastingSource(): any;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLImageElement: {\\n    prototype: HTMLImageElement;\\n    new(): HTMLImageElement;\\n};\\n\\ninterface HTMLInputElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a comma-separated list of content types.\\n     */\\n    accept: string;\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a text alternative to the graphic.\\n     */\\n    alt: string;\\n    /**\\n     * Specifies whether autocomplete is applied to an editable text field.\\n     */\\n    autocomplete: string;\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    /**\\n     * Sets or retrieves the state of the check box or radio button.\\n     */\\n    checked: boolean;\\n    /**\\n     * Sets or retrieves the state of the check box or radio button.\\n     */\\n    defaultChecked: boolean;\\n    /**\\n     * Sets or retrieves the initial contents of the object.\\n     */\\n    defaultValue: string;\\n    disabled: boolean;\\n    /**\\n     * Returns a FileList object on a file type input object.\\n     */\\n    readonly files: FileList | null;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Overrides the action attribute (where the data on a form is sent) on the parent form element.\\n     */\\n    formAction: string;\\n    /**\\n     * Used to override the encoding (formEnctype attribute) specified on the form element.\\n     */\\n    formEnctype: string;\\n    /**\\n     * Overrides the submit method attribute previously specified on a form element.\\n     */\\n    formMethod: string;\\n    /**\\n     * Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a \\\"save draft\\\"-type submit option.\\n     */\\n    formNoValidate: boolean;\\n    /**\\n     * Overrides the target attribute on a form element.\\n     */\\n    formTarget: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: number;\\n    indeterminate: boolean;\\n    /**\\n     * Specifies the ID of a pre-defined datalist of options for an input element.\\n     */\\n    readonly list: HTMLElement | null;\\n    /**\\n     * Defines the maximum acceptable value for an input element with type=\\\"number\\\".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field.\\n     */\\n    max: string;\\n    /**\\n     * Sets or retrieves the maximum number of characters that the user can enter in a text control.\\n     */\\n    maxLength: number;\\n    /**\\n     * Defines the minimum acceptable value for an input element with type=\\\"number\\\". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field.\\n     */\\n    min: string;\\n    minLength: number;\\n    /**\\n     * Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\\n     */\\n    multiple: boolean;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    /**\\n     * Gets or sets a string containing a regular expression that the user's input must match.\\n     */\\n    pattern: string;\\n    /**\\n     * Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\\n     */\\n    placeholder: string;\\n    readOnly: boolean;\\n    /**\\n     * When present, marks an element that can't be submitted without a value.\\n     */\\n    required: boolean;\\n    selectionDirection: string | null;\\n    /**\\n     * Gets or sets the end position or offset of a text selection.\\n     */\\n    selectionEnd: number | null;\\n    /**\\n     * Gets or sets the starting position or offset of a text selection.\\n     */\\n    selectionStart: number | null;\\n    size: number;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    /**\\n     * Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field.\\n     */\\n    step: string;\\n    /**\\n     * Returns the content type of the object.\\n     */\\n    type: string;\\n    /**\\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\\n     */\\n    /** @deprecated */\\n    useMap: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Returns the value of the data at the cursor's current position.\\n     */\\n    value: string;\\n    valueAsDate: any;\\n    /**\\n     * Returns the input field value as a number.\\n     */\\n    valueAsNumber: number;\\n    webkitdirectory: boolean;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: number;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Makes the selection equal to the current object.\\n     */\\n    select(): void;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    /**\\n     * Sets the start and end positions of a selection in a text field.\\n     * @param start The offset into the text field for the start of the selection.\\n     * @param end The offset into the text field for the end of the selection.\\n     * @param direction The direction in which the selection is performed.\\n     */\\n    setSelectionRange(start: number, end: number, direction?: \\\"forward\\\" | \\\"backward\\\" | \\\"none\\\"): void;\\n    /**\\n     * Decrements a range input control's value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control's step value multiplied by the parameter's value.\\n     * @param n Value to decrement the value by.\\n     */\\n    stepDown(n?: number): void;\\n    /**\\n     * Increments a range input control's value by the value given by the Step attribute. If the optional parameter is used, will increment the input control's value by that value.\\n     * @param n Value to increment the value by.\\n     */\\n    stepUp(n?: number): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLInputElement: {\\n    prototype: HTMLInputElement;\\n    new(): HTMLInputElement;\\n};\\n\\ninterface HTMLLIElement extends HTMLElement {\\n    /** @deprecated */\\n    type: string;\\n    /**\\n     * Sets or retrieves the value of a list item.\\n     */\\n    value: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLIElement: {\\n    prototype: HTMLLIElement;\\n    new(): HTMLLIElement;\\n};\\n\\ninterface HTMLLabelElement extends HTMLElement {\\n    readonly control: HTMLInputElement | null;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the object to which the given label object is assigned.\\n     */\\n    htmlFor: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLabelElement: {\\n    prototype: HTMLLabelElement;\\n    new(): HTMLLabelElement;\\n};\\n\\ninterface HTMLLegendElement extends HTMLElement {\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLegendElement: {\\n    prototype: HTMLLegendElement;\\n    new(): HTMLLegendElement;\\n};\\n\\ninterface HTMLLinkElement extends HTMLElement, LinkStyle {\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    /** @deprecated */\\n    charset: string;\\n    crossOrigin: string | null;\\n    /** @deprecated */\\n    disabled: boolean;\\n    /**\\n     * Sets or retrieves a destination URL or an anchor point.\\n     */\\n    href: string;\\n    /**\\n     * Sets or retrieves the language code of the object.\\n     */\\n    hreflang: string;\\n    import?: Document;\\n    integrity: string;\\n    /**\\n     * Sets or retrieves the media type.\\n     */\\n    media: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    rel: string;\\n    /**\\n     * Sets or retrieves the relationship between the object and the destination of the link.\\n     */\\n    /** @deprecated */\\n    rev: string;\\n    /**\\n     * Sets or retrieves the window or frame at which to target content.\\n     */\\n    /** @deprecated */\\n    target: string;\\n    /**\\n     * Sets or retrieves the MIME type of the object.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLLinkElement: {\\n    prototype: HTMLLinkElement;\\n    new(): HTMLLinkElement;\\n};\\n\\ninterface HTMLMainElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMainElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMainElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMainElement: {\\n    prototype: HTMLMainElement;\\n    new(): HTMLMainElement;\\n};\\n\\ninterface HTMLMapElement extends HTMLElement {\\n    /**\\n     * Retrieves a collection of the area objects defined for the given map object.\\n     */\\n    readonly areas: HTMLAreasCollection;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMapElement: {\\n    prototype: HTMLMapElement;\\n    new(): HTMLMapElement;\\n};\\n\\ninterface HTMLMarqueeElementEventMap extends HTMLElementEventMap {\\n    \\\"bounce\\\": Event;\\n    \\\"finish\\\": Event;\\n    \\\"start\\\": Event;\\n}\\n\\ninterface HTMLMarqueeElement extends HTMLElement {\\n    /** @deprecated */\\n    behavior: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /** @deprecated */\\n    direction: string;\\n    /** @deprecated */\\n    height: string;\\n    /** @deprecated */\\n    hspace: number;\\n    /** @deprecated */\\n    loop: number;\\n    /** @deprecated */\\n    onbounce: ((this: HTMLMarqueeElement, ev: Event) => any) | null;\\n    /** @deprecated */\\n    onfinish: ((this: HTMLMarqueeElement, ev: Event) => any) | null;\\n    /** @deprecated */\\n    onstart: ((this: HTMLMarqueeElement, ev: Event) => any) | null;\\n    /** @deprecated */\\n    scrollAmount: number;\\n    /** @deprecated */\\n    scrollDelay: number;\\n    /** @deprecated */\\n    trueSpeed: boolean;\\n    /** @deprecated */\\n    vspace: number;\\n    /** @deprecated */\\n    width: string;\\n    /** @deprecated */\\n    start(): void;\\n    /** @deprecated */\\n    stop(): void;\\n    addEventListener<K extends keyof HTMLMarqueeElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLMarqueeElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLMarqueeElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLMarqueeElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMarqueeElement: {\\n    prototype: HTMLMarqueeElement;\\n    new(): HTMLMarqueeElement;\\n};\\n\\ninterface HTMLMediaElementEventMap extends HTMLElementEventMap {\\n    \\\"encrypted\\\": MediaEncryptedEvent;\\n    \\\"msneedkey\\\": Event;\\n}\\n\\ninterface HTMLMediaElement extends HTMLElement {\\n    /**\\n     * Returns an AudioTrackList object with the audio tracks for a given video element.\\n     */\\n    readonly audioTracks: AudioTrackList;\\n    /**\\n     * Gets or sets a value that indicates whether to start playing the media automatically.\\n     */\\n    autoplay: boolean;\\n    /**\\n     * Gets a collection of buffered time ranges.\\n     */\\n    readonly buffered: TimeRanges;\\n    /**\\n     * Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player).\\n     */\\n    controls: boolean;\\n    crossOrigin: string | null;\\n    /**\\n     * Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.\\n     */\\n    readonly currentSrc: string;\\n    /**\\n     * Gets or sets the current playback position, in seconds.\\n     */\\n    currentTime: number;\\n    defaultMuted: boolean;\\n    /**\\n     * Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.\\n     */\\n    defaultPlaybackRate: number;\\n    /**\\n     * Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming.\\n     */\\n    readonly duration: number;\\n    /**\\n     * Gets information about whether the playback has ended or not.\\n     */\\n    readonly ended: boolean;\\n    /**\\n     * Returns an object representing the current error state of the audio or video element.\\n     */\\n    readonly error: MediaError | null;\\n    /**\\n     * Gets or sets a flag to specify whether playback should restart after it completes.\\n     */\\n    loop: boolean;\\n    readonly mediaKeys: MediaKeys | null;\\n    /**\\n     * Specifies the purpose of the audio or video media, such as background audio or alerts.\\n     */\\n    msAudioCategory: string;\\n    /**\\n     * Specifies the output device id that the audio will be sent to.\\n     */\\n    msAudioDeviceType: string;\\n    readonly msGraphicsTrustStatus: MSGraphicsTrust;\\n    /**\\n     * Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element.\\n     */\\n    /** @deprecated */\\n    readonly msKeys: MSMediaKeys;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    /**\\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\\n     */\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Specifies whether or not to enable low-latency playback on the media element.\\n     */\\n    msRealTime: boolean;\\n    /**\\n     * Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.\\n     */\\n    muted: boolean;\\n    /**\\n     * Gets the current network activity for the element.\\n     */\\n    readonly networkState: number;\\n    onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;\\n    /** @deprecated */\\n    onmsneedkey: ((this: HTMLMediaElement, ev: Event) => any) | null;\\n    /**\\n     * Gets a flag that specifies whether playback is paused.\\n     */\\n    readonly paused: boolean;\\n    /**\\n     * Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource.\\n     */\\n    playbackRate: number;\\n    /**\\n     * Gets TimeRanges for the current media resource that has been played.\\n     */\\n    readonly played: TimeRanges;\\n    /**\\n     * Gets or sets the current playback position, in seconds.\\n     */\\n    preload: string;\\n    readonly readyState: number;\\n    /**\\n     * Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.\\n     */\\n    readonly seekable: TimeRanges;\\n    /**\\n     * Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource.\\n     */\\n    readonly seeking: boolean;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    srcObject: MediaStream | MediaSource | Blob | null;\\n    readonly textTracks: TextTrackList;\\n    readonly videoTracks: VideoTrackList;\\n    /**\\n     * Gets or sets the volume level for audio portions of the media element.\\n     */\\n    volume: number;\\n    addTextTrack(kind: TextTrackKind, label?: string, language?: string): TextTrack;\\n    /**\\n     * Returns a string that specifies whether the client can play a given media resource type.\\n     */\\n    canPlayType(type: string): CanPlayTypeResult;\\n    /**\\n     * Resets the audio or video object and loads a new media resource.\\n     */\\n    load(): void;\\n    /**\\n     * Clears all effects from the media pipeline.\\n     */\\n    msClearEffects(): void;\\n    msGetAsCastingSource(): any;\\n    /**\\n     * Inserts the specified audio effect into media pipeline.\\n     */\\n    msInsertAudioEffect(activatableClassId: string, effectRequired: boolean, config?: any): void;\\n    /** @deprecated */\\n    msSetMediaKeys(mediaKeys: MSMediaKeys): void;\\n    /**\\n     * Specifies the media protection manager for a given media pipeline.\\n     */\\n    msSetMediaProtectionManager(mediaProtectionManager?: any): void;\\n    /**\\n     * Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not.\\n     */\\n    pause(): void;\\n    /**\\n     * Loads and starts playback of a media resource.\\n     */\\n    play(): Promise<void>;\\n    setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;\\n    readonly HAVE_CURRENT_DATA: number;\\n    readonly HAVE_ENOUGH_DATA: number;\\n    readonly HAVE_FUTURE_DATA: number;\\n    readonly HAVE_METADATA: number;\\n    readonly HAVE_NOTHING: number;\\n    readonly NETWORK_EMPTY: number;\\n    readonly NETWORK_IDLE: number;\\n    readonly NETWORK_LOADING: number;\\n    readonly NETWORK_NO_SOURCE: number;\\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMediaElement: {\\n    prototype: HTMLMediaElement;\\n    new(): HTMLMediaElement;\\n    readonly HAVE_CURRENT_DATA: number;\\n    readonly HAVE_ENOUGH_DATA: number;\\n    readonly HAVE_FUTURE_DATA: number;\\n    readonly HAVE_METADATA: number;\\n    readonly HAVE_NOTHING: number;\\n    readonly NETWORK_EMPTY: number;\\n    readonly NETWORK_IDLE: number;\\n    readonly NETWORK_LOADING: number;\\n    readonly NETWORK_NO_SOURCE: number;\\n};\\n\\ninterface HTMLMenuElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMenuElement: {\\n    prototype: HTMLMenuElement;\\n    new(): HTMLMenuElement;\\n};\\n\\ninterface HTMLMetaElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    /** @deprecated */\\n    charset: string;\\n    /**\\n     * Gets or sets meta-information to associate with httpEquiv or name.\\n     */\\n    content: string;\\n    /**\\n     * Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header.\\n     */\\n    httpEquiv: string;\\n    /**\\n     * Sets or retrieves the value specified in the content attribute of the meta object.\\n     */\\n    name: string;\\n    /**\\n     * Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.\\n     */\\n    /** @deprecated */\\n    scheme: string;\\n    /**\\n     * Sets or retrieves the URL property that will be loaded after the specified time has elapsed.\\n     */\\n    /** @deprecated */\\n    url: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMetaElement: {\\n    prototype: HTMLMetaElement;\\n    new(): HTMLMetaElement;\\n};\\n\\ninterface HTMLMeterElement extends HTMLElement {\\n    high: number;\\n    low: number;\\n    max: number;\\n    min: number;\\n    optimum: number;\\n    value: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLMeterElement: {\\n    prototype: HTMLMeterElement;\\n    new(): HTMLMeterElement;\\n};\\n\\ninterface HTMLModElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves reference information about the object.\\n     */\\n    cite: string;\\n    /**\\n     * Sets or retrieves the date and time of a modification to the object.\\n     */\\n    dateTime: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLModElement: {\\n    prototype: HTMLModElement;\\n    new(): HTMLModElement;\\n};\\n\\ninterface HTMLOListElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    /**\\n     * The starting number.\\n     */\\n    start: number;\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOListElement: {\\n    prototype: HTMLOListElement;\\n    new(): HTMLOListElement;\\n};\\n\\ninterface HTMLObjectElement extends HTMLElement, GetSVGDocument {\\n    /**\\n     * Retrieves a string of the URL where the object tag can be found. This is often the href of the document that the object is in, or the value set by a base element.\\n     */\\n    readonly BaseHref: string;\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a character string that can be used to implement your own archive functionality for the object.\\n     */\\n    /** @deprecated */\\n    archive: string;\\n    /** @deprecated */\\n    border: string;\\n    /**\\n     * Sets or retrieves the URL of the file containing the compiled Java class.\\n     */\\n    /** @deprecated */\\n    code: string;\\n    /**\\n     * Sets or retrieves the URL of the component.\\n     */\\n    /** @deprecated */\\n    codeBase: string;\\n    /**\\n     * Sets or retrieves the Internet media type for the code associated with the object.\\n     */\\n    /** @deprecated */\\n    codeType: string;\\n    /**\\n     * Retrieves the document object of the page or frame.\\n     */\\n    readonly contentDocument: Document | null;\\n    /**\\n     * Sets or retrieves the URL that references the data of the object.\\n     */\\n    data: string;\\n    /** @deprecated */\\n    declare: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    height: string;\\n    /** @deprecated */\\n    hspace: number;\\n    /**\\n     * Gets or sets whether the DLNA PlayTo device is available.\\n     */\\n    msPlayToDisabled: boolean;\\n    /**\\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\\n     */\\n    msPlayToPreferredSourceUri: string;\\n    /**\\n     * Gets or sets the primary DLNA PlayTo device.\\n     */\\n    msPlayToPrimary: boolean;\\n    /**\\n     * Gets the source associated with the media element for use by the PlayToManager.\\n     */\\n    readonly msPlayToSource: any;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    readonly readyState: number;\\n    /**\\n     * Sets or retrieves a message to be displayed while an object is loading.\\n     */\\n    /** @deprecated */\\n    standby: string;\\n    /**\\n     * Sets or retrieves the MIME type of the object.\\n     */\\n    type: string;\\n    typemustmatch: boolean;\\n    /**\\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\\n     */\\n    useMap: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /** @deprecated */\\n    vspace: number;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    width: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLObjectElement: {\\n    prototype: HTMLObjectElement;\\n    new(): HTMLObjectElement;\\n};\\n\\ninterface HTMLOptGroupElement extends HTMLElement {\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves a value that you can use to implement your own label functionality for the object.\\n     */\\n    label: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOptGroupElement: {\\n    prototype: HTMLOptGroupElement;\\n    new(): HTMLOptGroupElement;\\n};\\n\\ninterface HTMLOptionElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the status of an option.\\n     */\\n    defaultSelected: boolean;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the ordinal position of an option in a list box.\\n     */\\n    readonly index: number;\\n    /**\\n     * Sets or retrieves a value that you can use to implement your own label functionality for the object.\\n     */\\n    label: string;\\n    /**\\n     * Sets or retrieves whether the option in the list box is the default item.\\n     */\\n    selected: boolean;\\n    /**\\n     * Sets or retrieves the text string specified by the option tag.\\n     */\\n    text: string;\\n    /**\\n     * Sets or retrieves the value which is returned to the server when the form control is submitted.\\n     */\\n    value: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOptionElement: {\\n    prototype: HTMLOptionElement;\\n    new(): HTMLOptionElement;\\n};\\n\\ninterface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {\\n    length: number;\\n    selectedIndex: number;\\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\\n    remove(index: number): void;\\n}\\n\\ndeclare var HTMLOptionsCollection: {\\n    prototype: HTMLOptionsCollection;\\n    new(): HTMLOptionsCollection;\\n};\\n\\ninterface HTMLOutputElement extends HTMLElement {\\n    defaultValue: string;\\n    readonly form: HTMLFormElement | null;\\n    readonly htmlFor: DOMTokenList;\\n    name: string;\\n    readonly type: string;\\n    readonly validationMessage: string;\\n    readonly validity: ValidityState;\\n    value: string;\\n    readonly willValidate: boolean;\\n    checkValidity(): boolean;\\n    reportValidity(): boolean;\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLOutputElement: {\\n    prototype: HTMLOutputElement;\\n    new(): HTMLOutputElement;\\n};\\n\\ninterface HTMLParagraphElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    clear: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLParagraphElement: {\\n    prototype: HTMLParagraphElement;\\n    new(): HTMLParagraphElement;\\n};\\n\\ninterface HTMLParamElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the name of an input parameter for an element.\\n     */\\n    name: string;\\n    /**\\n     * Sets or retrieves the content type of the resource designated by the value attribute.\\n     */\\n    /** @deprecated */\\n    type: string;\\n    /**\\n     * Sets or retrieves the value of an input parameter for an element.\\n     */\\n    value: string;\\n    /**\\n     * Sets or retrieves the data type of the value attribute.\\n     */\\n    /** @deprecated */\\n    valueType: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLParamElement: {\\n    prototype: HTMLParamElement;\\n    new(): HTMLParamElement;\\n};\\n\\ninterface HTMLPictureElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLPictureElement: {\\n    prototype: HTMLPictureElement;\\n    new(): HTMLPictureElement;\\n};\\n\\ninterface HTMLPreElement extends HTMLElement {\\n    /**\\n     * Sets or gets a value that you can use to implement your own width functionality for the object.\\n     */\\n    /** @deprecated */\\n    width: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLPreElement: {\\n    prototype: HTMLPreElement;\\n    new(): HTMLPreElement;\\n};\\n\\ninterface HTMLProgressElement extends HTMLElement {\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Defines the maximum, or \\\"done\\\" value for a progress element.\\n     */\\n    max: number;\\n    /**\\n     * Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar).\\n     */\\n    readonly position: number;\\n    /**\\n     * Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value.\\n     */\\n    value: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLProgressElement: {\\n    prototype: HTMLProgressElement;\\n    new(): HTMLProgressElement;\\n};\\n\\ninterface HTMLQuoteElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves reference information about the object.\\n     */\\n    cite: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLQuoteElement: {\\n    prototype: HTMLQuoteElement;\\n    new(): HTMLQuoteElement;\\n};\\n\\ninterface HTMLScriptElement extends HTMLElement {\\n    async: boolean;\\n    /**\\n     * Sets or retrieves the character set used to encode the object.\\n     */\\n    charset: string;\\n    crossOrigin: string | null;\\n    /**\\n     * Sets or retrieves the status of the script.\\n     */\\n    defer: boolean;\\n    /**\\n     * Sets or retrieves the event for which the script is written.\\n     */\\n    /** @deprecated */\\n    event: string;\\n    /**\\n     * Sets or retrieves the object that is bound to the event script.\\n     */\\n    /** @deprecated */\\n    htmlFor: string;\\n    integrity: string;\\n    noModule: boolean;\\n    /**\\n     * Retrieves the URL to an external file that contains the source code or data.\\n     */\\n    src: string;\\n    /**\\n     * Retrieves or sets the text of the object as a string.\\n     */\\n    text: string;\\n    /**\\n     * Sets or retrieves the MIME type for the associated scripting engine.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLScriptElement: {\\n    prototype: HTMLScriptElement;\\n    new(): HTMLScriptElement;\\n};\\n\\ninterface HTMLSelectElement extends HTMLElement {\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the number of objects in a collection.\\n     */\\n    length: number;\\n    /**\\n     * Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list.\\n     */\\n    multiple: boolean;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    readonly options: HTMLOptionsCollection;\\n    /**\\n     * When present, marks an element that can't be submitted without a value.\\n     */\\n    required: boolean;\\n    /**\\n     * Sets or retrieves the index of the selected option in a select object.\\n     */\\n    selectedIndex: number;\\n    readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;\\n    /**\\n     * Sets or retrieves the number of rows in the list box.\\n     */\\n    size: number;\\n    /**\\n     * Retrieves the type of select control based on the value of the MULTIPLE attribute.\\n     */\\n    readonly type: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Sets or retrieves the value which is returned to the server when the form control is submitted.\\n     */\\n    value: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Adds an element to the areas, controlRange, or options collection.\\n     * @param element Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.\\n     * @param before Variant of type Object that specifies an element to insert before, or null to append the object to the collection.\\n     */\\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Retrieves a select object or an object from an options collection.\\n     * @param name Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is an integer, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.\\n     * @param index Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.\\n     */\\n    item(name?: any, index?: any): Element | null;\\n    /**\\n     * Retrieves a select object or an object from an options collection.\\n     * @param namedItem A String that specifies the name or id property of the object to retrieve. A collection is returned if more than one match is made.\\n     */\\n    namedItem(name: string): any;\\n    /**\\n     * Removes an element from the collection.\\n     * @param index Number that specifies the zero-based index of the element to remove from the collection.\\n     */\\n    remove(index?: number): void;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [name: string]: any;\\n}\\n\\ndeclare var HTMLSelectElement: {\\n    prototype: HTMLSelectElement;\\n    new(): HTMLSelectElement;\\n};\\n\\ninterface HTMLSlotElement extends HTMLElement {\\n    name: string;\\n    assignedNodes(options?: AssignedNodesOptions): Node[];\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface HTMLSourceElement extends HTMLElement {\\n    /**\\n     * Gets or sets the intended media type of the media source.\\n     */\\n    media: string;\\n    /** @deprecated */\\n    msKeySystem: string;\\n    sizes: string;\\n    /**\\n     * The address or URL of the a media resource that is to be considered.\\n     */\\n    src: string;\\n    srcset: string;\\n    /**\\n     * Gets or sets the MIME type of a media resource.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLSourceElement: {\\n    prototype: HTMLSourceElement;\\n    new(): HTMLSourceElement;\\n};\\n\\ninterface HTMLSpanElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLSpanElement: {\\n    prototype: HTMLSpanElement;\\n    new(): HTMLSpanElement;\\n};\\n\\ninterface HTMLStyleElement extends HTMLElement, LinkStyle {\\n    /** @deprecated */\\n    disabled: boolean;\\n    /**\\n     * Sets or retrieves the media type.\\n     */\\n    media: string;\\n    /**\\n     * Retrieves the CSS language in which the style sheet is written.\\n     */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLStyleElement: {\\n    prototype: HTMLStyleElement;\\n    new(): HTMLStyleElement;\\n};\\n\\ninterface HTMLSummaryElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSummaryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSummaryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLSummaryElement: {\\n    prototype: HTMLSummaryElement;\\n    new(): HTMLSummaryElement;\\n};\\n\\ninterface HTMLTableCaptionElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the alignment of the caption or legend.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableCaptionElement: {\\n    prototype: HTMLTableCaptionElement;\\n    new(): HTMLTableCaptionElement;\\n};\\n\\ninterface HTMLTableCellElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves abbreviated text for the object.\\n     */\\n    abbr: string;\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /**\\n     * Sets or retrieves a comma-delimited list of conceptual categories associated with the object.\\n     */\\n    /** @deprecated */\\n    axis: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /**\\n     * Retrieves the position of the object in the cells collection of a row.\\n     */\\n    readonly cellIndex: number;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Sets or retrieves the number columns in the table that the object should span.\\n     */\\n    colSpan: number;\\n    /**\\n     * Sets or retrieves a list of header cells that provide information for the object.\\n     */\\n    headers: string;\\n    /**\\n     * Sets or retrieves the height of the object.\\n     */\\n    /** @deprecated */\\n    height: string;\\n    /**\\n     * Sets or retrieves whether the browser automatically performs wordwrap.\\n     */\\n    /** @deprecated */\\n    noWrap: boolean;\\n    /**\\n     * Sets or retrieves how many rows in a table the cell should span.\\n     */\\n    rowSpan: number;\\n    /**\\n     * Sets or retrieves the group of cells in a table to which the object's information applies.\\n     */\\n    scope: string;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableCellElement: {\\n    prototype: HTMLTableCellElement;\\n    new(): HTMLTableCellElement;\\n};\\n\\ninterface HTMLTableColElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves the alignment of the object relative to the display or table.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Sets or retrieves the number of columns in the group.\\n     */\\n    span: number;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableColElement: {\\n    prototype: HTMLTableColElement;\\n    new(): HTMLTableColElement;\\n};\\n\\ninterface HTMLTableDataCellElement extends HTMLTableCellElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableDataCellElement: {\\n    prototype: HTMLTableDataCellElement;\\n    new(): HTMLTableDataCellElement;\\n};\\n\\ninterface HTMLTableElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a value that indicates the table alignment.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /**\\n     * Sets or retrieves the width of the border to draw around the object.\\n     */\\n    /** @deprecated */\\n    border: string;\\n    /**\\n     * Retrieves the caption object of a table.\\n     */\\n    caption: HTMLTableCaptionElement | null;\\n    /**\\n     * Sets or retrieves the amount of space between the border of the cell and the content of the cell.\\n     */\\n    /** @deprecated */\\n    cellPadding: string;\\n    /**\\n     * Sets or retrieves the amount of space between cells in a table.\\n     */\\n    /** @deprecated */\\n    cellSpacing: string;\\n    /**\\n     * Sets or retrieves the way the border frame around the table is displayed.\\n     */\\n    /** @deprecated */\\n    frame: string;\\n    /**\\n     * Sets or retrieves the number of horizontal rows contained in the object.\\n     */\\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\\n    /**\\n     * Sets or retrieves which dividing lines (inner borders) are displayed.\\n     */\\n    /** @deprecated */\\n    rules: string;\\n    /**\\n     * Sets or retrieves a description and/or structure of the object.\\n     */\\n    /** @deprecated */\\n    summary: string;\\n    /**\\n     * Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order.\\n     */\\n    readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;\\n    /**\\n     * Retrieves the tFoot object of the table.\\n     */\\n    tFoot: HTMLTableSectionElement | null;\\n    /**\\n     * Retrieves the tHead object of the table.\\n     */\\n    tHead: HTMLTableSectionElement | null;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    /** @deprecated */\\n    width: string;\\n    /**\\n     * Creates an empty caption element in the table.\\n     */\\n    createCaption(): HTMLTableCaptionElement;\\n    /**\\n     * Creates an empty tBody element in the table.\\n     */\\n    createTBody(): HTMLTableSectionElement;\\n    /**\\n     * Creates an empty tFoot element in the table.\\n     */\\n    createTFoot(): HTMLTableSectionElement;\\n    /**\\n     * Returns the tHead element object if successful, or null otherwise.\\n     */\\n    createTHead(): HTMLTableSectionElement;\\n    /**\\n     * Deletes the caption element and its contents from the table.\\n     */\\n    deleteCaption(): void;\\n    /**\\n     * Removes the specified row (tr) from the element and from the rows collection.\\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\\n     */\\n    deleteRow(index?: number): void;\\n    /**\\n     * Deletes the tFoot element and its contents from the table.\\n     */\\n    deleteTFoot(): void;\\n    /**\\n     * Deletes the tHead element and its contents from the table.\\n     */\\n    deleteTHead(): void;\\n    /**\\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\\n     */\\n    insertRow(index?: number): HTMLTableRowElement;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableElement: {\\n    prototype: HTMLTableElement;\\n    new(): HTMLTableElement;\\n};\\n\\ninterface HTMLTableHeaderCellElement extends HTMLTableCellElement {\\n    scope: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableHeaderCellElement: {\\n    prototype: HTMLTableHeaderCellElement;\\n    new(): HTMLTableHeaderCellElement;\\n};\\n\\ninterface HTMLTableRowElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves how the object is aligned with adjacent text.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    bgColor: string;\\n    /**\\n     * Retrieves a collection of all cells in the table row.\\n     */\\n    readonly cells: HTMLCollectionOf<HTMLTableDataCellElement | HTMLTableHeaderCellElement>;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Retrieves the position of the object in the rows collection for the table.\\n     */\\n    readonly rowIndex: number;\\n    /**\\n     * Retrieves the position of the object in the collection.\\n     */\\n    readonly sectionRowIndex: number;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Removes the specified cell from the table row, as well as from the cells collection.\\n     * @param index Number that specifies the zero-based position of the cell to remove from the table row. If no value is provided, the last cell in the cells collection is deleted.\\n     */\\n    deleteCell(index?: number): void;\\n    /**\\n     * Creates a new cell in the table row, and adds the cell to the cells collection.\\n     * @param index Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.\\n     */\\n    insertCell(index?: number): HTMLTableDataCellElement;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableRowElement: {\\n    prototype: HTMLTableRowElement;\\n    new(): HTMLTableRowElement;\\n};\\n\\ninterface HTMLTableSectionElement extends HTMLElement {\\n    /**\\n     * Sets or retrieves a value that indicates the table alignment.\\n     */\\n    /** @deprecated */\\n    align: string;\\n    /** @deprecated */\\n    ch: string;\\n    /** @deprecated */\\n    chOff: string;\\n    /**\\n     * Sets or retrieves the number of horizontal rows contained in the object.\\n     */\\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\\n    /** @deprecated */\\n    vAlign: string;\\n    /**\\n     * Removes the specified row (tr) from the element and from the rows collection.\\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\\n     */\\n    deleteRow(index?: number): void;\\n    /**\\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\\n     */\\n    insertRow(index?: number): HTMLTableRowElement;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTableSectionElement: {\\n    prototype: HTMLTableSectionElement;\\n    new(): HTMLTableSectionElement;\\n};\\n\\ninterface HTMLTemplateElement extends HTMLElement {\\n    readonly content: DocumentFragment;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTemplateElement: {\\n    prototype: HTMLTemplateElement;\\n    new(): HTMLTemplateElement;\\n};\\n\\ninterface HTMLTextAreaElement extends HTMLElement {\\n    /**\\n     * Provides a way to direct a user to a specific field when a document loads. This can provide both direction and convenience for a user, reducing the need to click or tab to a field when a page opens. This attribute is true when present on an element, and false when missing.\\n     */\\n    autofocus: boolean;\\n    /**\\n     * Sets or retrieves the width of the object.\\n     */\\n    cols: number;\\n    /**\\n     * Sets or retrieves the initial contents of the object.\\n     */\\n    defaultValue: string;\\n    disabled: boolean;\\n    /**\\n     * Retrieves a reference to the form that the object is embedded in.\\n     */\\n    readonly form: HTMLFormElement | null;\\n    /**\\n     * Sets or retrieves the maximum number of characters that the user can enter in a text control.\\n     */\\n    maxLength: number;\\n    minLength: number;\\n    /**\\n     * Sets or retrieves the name of the object.\\n     */\\n    name: string;\\n    /**\\n     * Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field.\\n     */\\n    placeholder: string;\\n    /**\\n     * Sets or retrieves the value indicated whether the content of the object is read-only.\\n     */\\n    readOnly: boolean;\\n    /**\\n     * When present, marks an element that can't be submitted without a value.\\n     */\\n    required: boolean;\\n    /**\\n     * Sets or retrieves the number of horizontal rows contained in the object.\\n     */\\n    rows: number;\\n    /**\\n     * Gets or sets the end position or offset of a text selection.\\n     */\\n    selectionEnd: number;\\n    /**\\n     * Gets or sets the starting position or offset of a text selection.\\n     */\\n    selectionStart: number;\\n    /**\\n     * Retrieves the type of control.\\n     */\\n    readonly type: string;\\n    /**\\n     * Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as \\\"this is a required field\\\". The result is that the user sees validation messages without actually submitting.\\n     */\\n    readonly validationMessage: string;\\n    /**\\n     * Returns a  ValidityState object that represents the validity states of an element.\\n     */\\n    readonly validity: ValidityState;\\n    /**\\n     * Retrieves or sets the text in the entry field of the textArea element.\\n     */\\n    value: string;\\n    /**\\n     * Returns whether an element will successfully validate based on forms validation rules and constraints.\\n     */\\n    readonly willValidate: boolean;\\n    /**\\n     * Sets or retrieves how to handle wordwrapping in the object.\\n     */\\n    wrap: string;\\n    /**\\n     * Returns whether a form will validate when it is submitted, without having to submit it.\\n     */\\n    checkValidity(): boolean;\\n    /**\\n     * Highlights the input area of a form element.\\n     */\\n    select(): void;\\n    /**\\n     * Sets a custom error message that is displayed when a form is submitted.\\n     * @param error Sets a custom error message that is displayed when a form is submitted.\\n     */\\n    setCustomValidity(error: string): void;\\n    /**\\n     * Sets the start and end positions of a selection in a text field.\\n     * @param start The offset into the text field for the start of the selection.\\n     * @param end The offset into the text field for the end of the selection.\\n     * @param direction The direction in which the selection is performed.\\n     */\\n    setSelectionRange(start: number, end: number, direction?: \\\"forward\\\" | \\\"backward\\\" | \\\"none\\\"): void;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTextAreaElement: {\\n    prototype: HTMLTextAreaElement;\\n    new(): HTMLTextAreaElement;\\n};\\n\\ninterface HTMLTimeElement extends HTMLElement {\\n    dateTime: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTimeElement: {\\n    prototype: HTMLTimeElement;\\n    new(): HTMLTimeElement;\\n};\\n\\ninterface HTMLTitleElement extends HTMLElement {\\n    /**\\n     * Retrieves or sets the text of the object as a string.\\n     */\\n    text: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTitleElement: {\\n    prototype: HTMLTitleElement;\\n    new(): HTMLTitleElement;\\n};\\n\\ninterface HTMLTrackElement extends HTMLElement {\\n    default: boolean;\\n    kind: string;\\n    label: string;\\n    readonly readyState: number;\\n    src: string;\\n    srclang: string;\\n    readonly track: TextTrack;\\n    readonly ERROR: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLTrackElement: {\\n    prototype: HTMLTrackElement;\\n    new(): HTMLTrackElement;\\n    readonly ERROR: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n};\\n\\ninterface HTMLUListElement extends HTMLElement {\\n    /** @deprecated */\\n    compact: boolean;\\n    /** @deprecated */\\n    type: string;\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLUListElement: {\\n    prototype: HTMLUListElement;\\n    new(): HTMLUListElement;\\n};\\n\\ninterface HTMLUnknownElement extends HTMLElement {\\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLUnknownElement: {\\n    prototype: HTMLUnknownElement;\\n    new(): HTMLUnknownElement;\\n};\\n\\ninterface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {\\n    \\\"MSVideoFormatChanged\\\": Event;\\n    \\\"MSVideoFrameStepCompleted\\\": Event;\\n    \\\"MSVideoOptimalLayoutChanged\\\": Event;\\n}\\n\\ninterface HTMLVideoElement extends HTMLMediaElement {\\n    /**\\n     * Gets or sets the height of the video element.\\n     */\\n    height: number;\\n    msHorizontalMirror: boolean;\\n    readonly msIsLayoutOptimalForPlayback: boolean;\\n    readonly msIsStereo3D: boolean;\\n    msStereo3DPackingMode: string;\\n    msStereo3DRenderMode: string;\\n    msZoom: boolean;\\n    onMSVideoFormatChanged: ((this: HTMLVideoElement, ev: Event) => any) | null;\\n    onMSVideoFrameStepCompleted: ((this: HTMLVideoElement, ev: Event) => any) | null;\\n    onMSVideoOptimalLayoutChanged: ((this: HTMLVideoElement, ev: Event) => any) | null;\\n    /**\\n     * Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available.\\n     */\\n    poster: string;\\n    /**\\n     * Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known.\\n     */\\n    readonly videoHeight: number;\\n    /**\\n     * Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known.\\n     */\\n    readonly videoWidth: number;\\n    readonly webkitDisplayingFullscreen: boolean;\\n    readonly webkitSupportsFullscreen: boolean;\\n    /**\\n     * Gets or sets the width of the video element.\\n     */\\n    width: number;\\n    getVideoPlaybackQuality(): VideoPlaybackQuality;\\n    msFrameStep(forward: boolean): void;\\n    msInsertVideoEffect(activatableClassId: string, effectRequired: boolean, config?: any): void;\\n    msSetVideoRectangle(left: number, top: number, right: number, bottom: number): void;\\n    webkitEnterFullScreen(): void;\\n    webkitEnterFullscreen(): void;\\n    webkitExitFullScreen(): void;\\n    webkitExitFullscreen(): void;\\n    addEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var HTMLVideoElement: {\\n    prototype: HTMLVideoElement;\\n    new(): HTMLVideoElement;\\n};\\n\\ninterface HTMLegendElement {\\n    readonly form: HTMLFormElement | null;\\n}\\n\\ndeclare var HTMLegendElement: {\\n    prototype: HTMLegendElement;\\n    new(): HTMLegendElement;\\n};\\n\\ninterface HashChangeEvent extends Event {\\n    readonly newURL: string;\\n    readonly oldURL: string;\\n}\\n\\ndeclare var HashChangeEvent: {\\n    prototype: HashChangeEvent;\\n    new(type: string, eventInitDict?: HashChangeEventInit): HashChangeEvent;\\n};\\n\\ninterface Headers {\\n    append(name: string, value: string): void;\\n    delete(name: string): void;\\n    forEach(callback: Function, thisArg?: any): void;\\n    get(name: string): string | null;\\n    has(name: string): boolean;\\n    set(name: string, value: string): void;\\n}\\n\\ndeclare var Headers: {\\n    prototype: Headers;\\n    new(init?: HeadersInit): Headers;\\n};\\n\\ninterface History {\\n    readonly length: number;\\n    scrollRestoration: ScrollRestoration;\\n    readonly state: any;\\n    back(distance?: any): void;\\n    forward(distance?: any): void;\\n    go(delta?: any): void;\\n    pushState(data: any, title?: string, url?: string | null): void;\\n    replaceState(data: any, title?: string, url?: string | null): void;\\n}\\n\\ndeclare var History: {\\n    prototype: History;\\n    new(): History;\\n};\\n\\ninterface HkdfCtrParams extends Algorithm {\\n    context: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;\\n    hash: string | Algorithm;\\n    label: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer;\\n}\\n\\ninterface IDBArrayKey extends Array<number | string | Date | IDBArrayKey> {\\n}\\n\\ninterface IDBCursor {\\n    readonly direction: IDBCursorDirection;\\n    readonly key: IDBKeyRange | number | string | Date | IDBArrayKey;\\n    readonly primaryKey: any;\\n    readonly source: IDBObjectStore | IDBIndex;\\n    advance(count: number): void;\\n    continue(key?: IDBKeyRange | number | string | Date | IDBArrayKey): void;\\n    delete(): IDBRequest;\\n    update(value: any): IDBRequest;\\n    readonly NEXT: string;\\n    readonly NEXT_NO_DUPLICATE: string;\\n    readonly PREV: string;\\n    readonly PREV_NO_DUPLICATE: string;\\n}\\n\\ndeclare var IDBCursor: {\\n    prototype: IDBCursor;\\n    new(): IDBCursor;\\n    readonly NEXT: string;\\n    readonly NEXT_NO_DUPLICATE: string;\\n    readonly PREV: string;\\n    readonly PREV_NO_DUPLICATE: string;\\n};\\n\\ninterface IDBCursorWithValue extends IDBCursor {\\n    readonly value: any;\\n}\\n\\ndeclare var IDBCursorWithValue: {\\n    prototype: IDBCursorWithValue;\\n    new(): IDBCursorWithValue;\\n};\\n\\ninterface IDBDatabaseEventMap {\\n    \\\"abort\\\": Event;\\n    \\\"error\\\": Event;\\n}\\n\\ninterface IDBDatabase extends EventTarget {\\n    readonly name: string;\\n    readonly objectStoreNames: DOMStringList;\\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\\n    onversionchange: ((this: IDBDatabase, ev: Event) => any) | null;\\n    readonly version: number;\\n    close(): void;\\n    createObjectStore(name: string, optionalParameters?: IDBObjectStoreParameters): IDBObjectStore;\\n    deleteObjectStore(name: string): void;\\n    transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction;\\n    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBDatabase: {\\n    prototype: IDBDatabase;\\n    new(): IDBDatabase;\\n};\\n\\ninterface IDBEnvironment {\\n    readonly indexedDB: IDBFactory;\\n}\\n\\ninterface IDBFactory {\\n    cmp(first: any, second: any): number;\\n    deleteDatabase(name: string): IDBOpenDBRequest;\\n    open(name: string, version?: number): IDBOpenDBRequest;\\n}\\n\\ndeclare var IDBFactory: {\\n    prototype: IDBFactory;\\n    new(): IDBFactory;\\n};\\n\\ninterface IDBIndex {\\n    readonly keyPath: string | string[];\\n    multiEntry: boolean;\\n    readonly name: string;\\n    readonly objectStore: IDBObjectStore;\\n    readonly unique: boolean;\\n    count(key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    get(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    getKey(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    openCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;\\n    openKeyCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;\\n}\\n\\ndeclare var IDBIndex: {\\n    prototype: IDBIndex;\\n    new(): IDBIndex;\\n};\\n\\ninterface IDBKeyRange {\\n    readonly lower: any;\\n    readonly lowerOpen: boolean;\\n    readonly upper: any;\\n    readonly upperOpen: boolean;\\n}\\n\\ndeclare var IDBKeyRange: {\\n    prototype: IDBKeyRange;\\n    new(): IDBKeyRange;\\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\\n    only(value: any): IDBKeyRange;\\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\\n};\\n\\ninterface IDBObjectStore {\\n    autoIncrement: boolean;\\n    readonly indexNames: DOMStringList;\\n    readonly keyPath: string | string[] | null;\\n    readonly name: string;\\n    readonly transaction: IDBTransaction;\\n    add(value: any, key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    clear(): IDBRequest;\\n    count(key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    createIndex(name: string, keyPath: string | string[], optionalParameters?: IDBIndexParameters): IDBIndex;\\n    delete(key: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n    deleteIndex(indexName: string): void;\\n    get(key: any): IDBRequest;\\n    index(name: string): IDBIndex;\\n    openCursor(range?: IDBKeyRange | number | string | Date | IDBArrayKey, direction?: IDBCursorDirection): IDBRequest;\\n    put(value: any, key?: IDBKeyRange | number | string | Date | IDBArrayKey): IDBRequest;\\n}\\n\\ndeclare var IDBObjectStore: {\\n    prototype: IDBObjectStore;\\n    new(): IDBObjectStore;\\n};\\n\\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\\n    \\\"blocked\\\": Event;\\n    \\\"upgradeneeded\\\": IDBVersionChangeEvent;\\n}\\n\\ninterface IDBOpenDBRequest extends IDBRequest {\\n    onblocked: ((this: IDBOpenDBRequest, ev: Event) => any) | null;\\n    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBOpenDBRequest: {\\n    prototype: IDBOpenDBRequest;\\n    new(): IDBOpenDBRequest;\\n};\\n\\ninterface IDBRequestEventMap {\\n    \\\"error\\\": Event;\\n    \\\"success\\\": Event;\\n}\\n\\ninterface IDBRequest extends EventTarget {\\n    readonly error: DOMException;\\n    onerror: ((this: IDBRequest, ev: Event) => any) | null;\\n    onsuccess: ((this: IDBRequest, ev: Event) => any) | null;\\n    readonly readyState: IDBRequestReadyState;\\n    readonly result: any;\\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\\n    readonly transaction: IDBTransaction;\\n    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBRequest: {\\n    prototype: IDBRequest;\\n    new(): IDBRequest;\\n};\\n\\ninterface IDBTransactionEventMap {\\n    \\\"abort\\\": Event;\\n    \\\"complete\\\": Event;\\n    \\\"error\\\": Event;\\n}\\n\\ninterface IDBTransaction extends EventTarget {\\n    readonly db: IDBDatabase;\\n    readonly error: DOMException;\\n    readonly mode: IDBTransactionMode;\\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\\n    abort(): void;\\n    objectStore(name: string): IDBObjectStore;\\n    readonly READ_ONLY: string;\\n    readonly READ_WRITE: string;\\n    readonly VERSION_CHANGE: string;\\n    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var IDBTransaction: {\\n    prototype: IDBTransaction;\\n    new(): IDBTransaction;\\n    readonly READ_ONLY: string;\\n    readonly READ_WRITE: string;\\n    readonly VERSION_CHANGE: string;\\n};\\n\\ninterface IDBVersionChangeEvent extends Event {\\n    readonly newVersion: number | null;\\n    readonly oldVersion: number;\\n}\\n\\ndeclare var IDBVersionChangeEvent: {\\n    prototype: IDBVersionChangeEvent;\\n    new(): IDBVersionChangeEvent;\\n};\\n\\ninterface IIRFilterNode extends AudioNode {\\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\\n}\\n\\ndeclare var IIRFilterNode: {\\n    prototype: IIRFilterNode;\\n    new(): IIRFilterNode;\\n};\\n\\ninterface ImageBitmap {\\n    readonly height: number;\\n    readonly width: number;\\n    close(): void;\\n}\\n\\ninterface ImageBitmapOptions {\\n    colorSpaceConversion?: \\\"none\\\" | \\\"default\\\";\\n    imageOrientation?: \\\"none\\\" | \\\"flipY\\\";\\n    premultiplyAlpha?: \\\"none\\\" | \\\"premultiply\\\" | \\\"default\\\";\\n    resizeHeight?: number;\\n    resizeQuality?: \\\"pixelated\\\" | \\\"low\\\" | \\\"medium\\\" | \\\"high\\\";\\n    resizeWidth?: number;\\n}\\n\\ninterface ImageData {\\n    readonly data: Uint8ClampedArray;\\n    readonly height: number;\\n    readonly width: number;\\n}\\n\\ndeclare var ImageData: {\\n    prototype: ImageData;\\n    new(width: number, height: number): ImageData;\\n    new(array: Uint8ClampedArray, width: number, height: number): ImageData;\\n};\\n\\ninterface IntersectionObserver {\\n    readonly root: Element | null;\\n    readonly rootMargin: string;\\n    readonly thresholds: number[];\\n    disconnect(): void;\\n    observe(target: Element): void;\\n    takeRecords(): IntersectionObserverEntry[];\\n    unobserve(target: Element): void;\\n}\\n\\ndeclare var IntersectionObserver: {\\n    prototype: IntersectionObserver;\\n    new(callback: IntersectionObserverCallback, options?: IntersectionObserverInit): IntersectionObserver;\\n};\\n\\ninterface IntersectionObserverEntry {\\n    readonly boundingClientRect: ClientRect | DOMRect;\\n    readonly intersectionRatio: number;\\n    readonly intersectionRect: ClientRect | DOMRect;\\n    readonly isIntersecting: boolean;\\n    readonly rootBounds: ClientRect | DOMRect;\\n    readonly target: Element;\\n    readonly time: number;\\n}\\n\\ndeclare var IntersectionObserverEntry: {\\n    prototype: IntersectionObserverEntry;\\n    new(intersectionObserverEntryInit: IntersectionObserverEntryInit): IntersectionObserverEntry;\\n};\\n\\ninterface KeyboardEvent extends UIEvent {\\n    readonly altKey: boolean;\\n    /** @deprecated */\\n    char: string;\\n    /** @deprecated */\\n    readonly charCode: number;\\n    readonly code: string;\\n    readonly ctrlKey: boolean;\\n    readonly key: string;\\n    /** @deprecated */\\n    readonly keyCode: number;\\n    readonly location: number;\\n    readonly metaKey: boolean;\\n    readonly repeat: boolean;\\n    readonly shiftKey: boolean;\\n    /** @deprecated */\\n    readonly which: number;\\n    getModifierState(keyArg: string): boolean;\\n    /** @deprecated */\\n    initKeyboardEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, keyArg: string, locationArg: number, modifiersListArg: string, repeat: boolean, locale: string): void;\\n    readonly DOM_KEY_LOCATION_JOYSTICK: number;\\n    readonly DOM_KEY_LOCATION_LEFT: number;\\n    readonly DOM_KEY_LOCATION_MOBILE: number;\\n    readonly DOM_KEY_LOCATION_NUMPAD: number;\\n    readonly DOM_KEY_LOCATION_RIGHT: number;\\n    readonly DOM_KEY_LOCATION_STANDARD: number;\\n}\\n\\ndeclare var KeyboardEvent: {\\n    prototype: KeyboardEvent;\\n    new(typeArg: string, eventInitDict?: KeyboardEventInit): KeyboardEvent;\\n    readonly DOM_KEY_LOCATION_JOYSTICK: number;\\n    readonly DOM_KEY_LOCATION_LEFT: number;\\n    readonly DOM_KEY_LOCATION_MOBILE: number;\\n    readonly DOM_KEY_LOCATION_NUMPAD: number;\\n    readonly DOM_KEY_LOCATION_RIGHT: number;\\n    readonly DOM_KEY_LOCATION_STANDARD: number;\\n};\\n\\ninterface LinkStyle {\\n    readonly sheet: StyleSheet | null;\\n}\\n\\ninterface ListeningStateChangedEvent extends Event {\\n    readonly label: string;\\n    readonly state: ListeningState;\\n}\\n\\ndeclare var ListeningStateChangedEvent: {\\n    prototype: ListeningStateChangedEvent;\\n    new(): ListeningStateChangedEvent;\\n};\\n\\ninterface Location {\\n    hash: string;\\n    host: string;\\n    hostname: string;\\n    href: string;\\n    readonly origin: string;\\n    pathname: string;\\n    port: string;\\n    protocol: string;\\n    search: string;\\n    assign(url: string): void;\\n    reload(forcedReload?: boolean): void;\\n    replace(url: string): void;\\n    toString(): string;\\n}\\n\\ndeclare var Location: {\\n    prototype: Location;\\n    new(): Location;\\n};\\n\\ninterface MSAssertion {\\n    readonly id: string;\\n    readonly type: MSCredentialType;\\n}\\n\\ndeclare var MSAssertion: {\\n    prototype: MSAssertion;\\n    new(): MSAssertion;\\n};\\n\\ninterface MSBlobBuilder {\\n    append(data: any, endings?: string): void;\\n    getBlob(contentType?: string): Blob;\\n}\\n\\ndeclare var MSBlobBuilder: {\\n    prototype: MSBlobBuilder;\\n    new(): MSBlobBuilder;\\n};\\n\\ninterface MSCredentials {\\n    getAssertion(challenge: string, filter?: MSCredentialFilter, params?: MSSignatureParameters): Promise<MSAssertion>;\\n    makeCredential(accountInfo: MSAccountInfo, params: MSCredentialParameters[], challenge?: string): Promise<MSAssertion>;\\n}\\n\\ndeclare var MSCredentials: {\\n    prototype: MSCredentials;\\n    new(): MSCredentials;\\n};\\n\\ninterface MSDCCEvent extends Event {\\n    readonly maxFr: number;\\n    readonly maxFs: number;\\n}\\n\\ndeclare var MSDCCEvent: {\\n    prototype: MSDCCEvent;\\n    new(type: string, eventInitDict: MSDCCEventInit): MSDCCEvent;\\n};\\n\\ninterface MSDSHEvent extends Event {\\n    readonly sources: number[];\\n    readonly timestamp: number;\\n}\\n\\ndeclare var MSDSHEvent: {\\n    prototype: MSDSHEvent;\\n    new(type: string, eventInitDict: MSDSHEventInit): MSDSHEvent;\\n};\\n\\ninterface MSFIDOCredentialAssertion extends MSAssertion {\\n    readonly algorithm: string | Algorithm;\\n    readonly attestation: any;\\n    readonly publicKey: string;\\n    readonly transportHints: MSTransportType[];\\n}\\n\\ndeclare var MSFIDOCredentialAssertion: {\\n    prototype: MSFIDOCredentialAssertion;\\n    new(): MSFIDOCredentialAssertion;\\n};\\n\\ninterface MSFIDOSignature {\\n    readonly authnrData: string;\\n    readonly clientData: string;\\n    readonly signature: string;\\n}\\n\\ndeclare var MSFIDOSignature: {\\n    prototype: MSFIDOSignature;\\n    new(): MSFIDOSignature;\\n};\\n\\ninterface MSFIDOSignatureAssertion extends MSAssertion {\\n    readonly signature: MSFIDOSignature;\\n}\\n\\ndeclare var MSFIDOSignatureAssertion: {\\n    prototype: MSFIDOSignatureAssertion;\\n    new(): MSFIDOSignatureAssertion;\\n};\\n\\ninterface MSFileSaver {\\n    msSaveBlob(blob: any, defaultName?: string): boolean;\\n    msSaveOrOpenBlob(blob: any, defaultName?: string): boolean;\\n}\\n\\ninterface MSGesture {\\n    target: Element;\\n    addPointer(pointerId: number): void;\\n    stop(): void;\\n}\\n\\ndeclare var MSGesture: {\\n    prototype: MSGesture;\\n    new(): MSGesture;\\n};\\n\\ninterface MSGestureEvent extends UIEvent {\\n    readonly clientX: number;\\n    readonly clientY: number;\\n    readonly expansion: number;\\n    readonly gestureObject: any;\\n    readonly hwTimestamp: number;\\n    readonly offsetX: number;\\n    readonly offsetY: number;\\n    readonly rotation: number;\\n    readonly scale: number;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly translationX: number;\\n    readonly translationY: number;\\n    readonly velocityAngular: number;\\n    readonly velocityExpansion: number;\\n    readonly velocityX: number;\\n    readonly velocityY: number;\\n    initGestureEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, offsetXArg: number, offsetYArg: number, translationXArg: number, translationYArg: number, scaleArg: number, expansionArg: number, rotationArg: number, velocityXArg: number, velocityYArg: number, velocityExpansionArg: number, velocityAngularArg: number, hwTimestampArg: number): void;\\n    readonly MSGESTURE_FLAG_BEGIN: number;\\n    readonly MSGESTURE_FLAG_CANCEL: number;\\n    readonly MSGESTURE_FLAG_END: number;\\n    readonly MSGESTURE_FLAG_INERTIA: number;\\n    readonly MSGESTURE_FLAG_NONE: number;\\n}\\n\\ndeclare var MSGestureEvent: {\\n    prototype: MSGestureEvent;\\n    new(): MSGestureEvent;\\n    readonly MSGESTURE_FLAG_BEGIN: number;\\n    readonly MSGESTURE_FLAG_CANCEL: number;\\n    readonly MSGESTURE_FLAG_END: number;\\n    readonly MSGESTURE_FLAG_INERTIA: number;\\n    readonly MSGESTURE_FLAG_NONE: number;\\n};\\n\\ninterface MSGraphicsTrust {\\n    readonly constrictionActive: boolean;\\n    readonly status: string;\\n}\\n\\ndeclare var MSGraphicsTrust: {\\n    prototype: MSGraphicsTrust;\\n    new(): MSGraphicsTrust;\\n};\\n\\ninterface MSInputMethodContextEventMap {\\n    \\\"MSCandidateWindowHide\\\": Event;\\n    \\\"MSCandidateWindowShow\\\": Event;\\n    \\\"MSCandidateWindowUpdate\\\": Event;\\n}\\n\\ninterface MSInputMethodContext extends EventTarget {\\n    readonly compositionEndOffset: number;\\n    readonly compositionStartOffset: number;\\n    oncandidatewindowhide: ((this: MSInputMethodContext, ev: Event) => any) | null;\\n    oncandidatewindowshow: ((this: MSInputMethodContext, ev: Event) => any) | null;\\n    oncandidatewindowupdate: ((this: MSInputMethodContext, ev: Event) => any) | null;\\n    readonly target: HTMLElement;\\n    getCandidateWindowClientRect(): ClientRect;\\n    getCompositionAlternatives(): string[];\\n    hasComposition(): boolean;\\n    isCandidateWindowVisible(): boolean;\\n    addEventListener<K extends keyof MSInputMethodContextEventMap>(type: K, listener: (this: MSInputMethodContext, ev: MSInputMethodContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MSInputMethodContextEventMap>(type: K, listener: (this: MSInputMethodContext, ev: MSInputMethodContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MSInputMethodContext: {\\n    prototype: MSInputMethodContext;\\n    new(): MSInputMethodContext;\\n};\\n\\ninterface MSMediaKeyError {\\n    readonly code: number;\\n    readonly systemCode: number;\\n    readonly MS_MEDIA_KEYERR_CLIENT: number;\\n    readonly MS_MEDIA_KEYERR_DOMAIN: number;\\n    readonly MS_MEDIA_KEYERR_HARDWARECHANGE: number;\\n    readonly MS_MEDIA_KEYERR_OUTPUT: number;\\n    readonly MS_MEDIA_KEYERR_SERVICE: number;\\n    readonly MS_MEDIA_KEYERR_UNKNOWN: number;\\n}\\n\\ndeclare var MSMediaKeyError: {\\n    prototype: MSMediaKeyError;\\n    new(): MSMediaKeyError;\\n    readonly MS_MEDIA_KEYERR_CLIENT: number;\\n    readonly MS_MEDIA_KEYERR_DOMAIN: number;\\n    readonly MS_MEDIA_KEYERR_HARDWARECHANGE: number;\\n    readonly MS_MEDIA_KEYERR_OUTPUT: number;\\n    readonly MS_MEDIA_KEYERR_SERVICE: number;\\n    readonly MS_MEDIA_KEYERR_UNKNOWN: number;\\n};\\n\\ninterface MSMediaKeyMessageEvent extends Event {\\n    readonly destinationURL: string | null;\\n    readonly message: Uint8Array;\\n}\\n\\ndeclare var MSMediaKeyMessageEvent: {\\n    prototype: MSMediaKeyMessageEvent;\\n    new(): MSMediaKeyMessageEvent;\\n};\\n\\ninterface MSMediaKeyNeededEvent extends Event {\\n    readonly initData: Uint8Array | null;\\n}\\n\\ndeclare var MSMediaKeyNeededEvent: {\\n    prototype: MSMediaKeyNeededEvent;\\n    new(): MSMediaKeyNeededEvent;\\n};\\n\\ninterface MSMediaKeySession extends EventTarget {\\n    readonly error: MSMediaKeyError | null;\\n    readonly keySystem: string;\\n    readonly sessionId: string;\\n    close(): void;\\n    update(key: Uint8Array): void;\\n}\\n\\ndeclare var MSMediaKeySession: {\\n    prototype: MSMediaKeySession;\\n    new(): MSMediaKeySession;\\n};\\n\\ninterface MSMediaKeys {\\n    readonly keySystem: string;\\n    createSession(type: string, initData: Uint8Array, cdmData?: Uint8Array | null): MSMediaKeySession;\\n}\\n\\ndeclare var MSMediaKeys: {\\n    prototype: MSMediaKeys;\\n    new(keySystem: string): MSMediaKeys;\\n    isTypeSupported(keySystem: string, type?: string | null): boolean;\\n    isTypeSupportedWithFeatures(keySystem: string, type?: string | null): string;\\n};\\n\\ninterface MSNavigatorDoNotTrack {\\n    confirmSiteSpecificTrackingException(args: ConfirmSiteSpecificExceptionsInformation): boolean;\\n    confirmWebWideTrackingException(args: ExceptionInformation): boolean;\\n    removeSiteSpecificTrackingException(args: ExceptionInformation): void;\\n    removeWebWideTrackingException(args: ExceptionInformation): void;\\n    storeSiteSpecificTrackingException(args: StoreSiteSpecificExceptionsInformation): void;\\n    storeWebWideTrackingException(args: StoreExceptionsInformation): void;\\n}\\n\\ninterface MSPointerEvent extends MouseEvent {\\n    readonly currentPoint: any;\\n    readonly height: number;\\n    readonly hwTimestamp: number;\\n    readonly intermediatePoints: any;\\n    readonly isPrimary: boolean;\\n    readonly pointerId: number;\\n    readonly pointerType: any;\\n    readonly pressure: number;\\n    readonly rotation: number;\\n    readonly tiltX: number;\\n    readonly tiltY: number;\\n    readonly width: number;\\n    getCurrentPoint(element: Element): void;\\n    getIntermediatePoints(element: Element): void;\\n    initPointerEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, offsetXArg: number, offsetYArg: number, widthArg: number, heightArg: number, pressure: number, rotation: number, tiltX: number, tiltY: number, pointerIdArg: number, pointerType: any, hwTimestampArg: number, isPrimary: boolean): void;\\n}\\n\\ndeclare var MSPointerEvent: {\\n    prototype: MSPointerEvent;\\n    new(typeArg: string, eventInitDict?: PointerEventInit): MSPointerEvent;\\n};\\n\\ninterface MSStream {\\n    readonly type: string;\\n    msClose(): void;\\n    msDetachStream(): any;\\n}\\n\\ndeclare var MSStream: {\\n    prototype: MSStream;\\n    new(): MSStream;\\n};\\n\\ninterface MSStreamReaderEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadend\\\": ProgressEvent;\\n    \\\"loadstart\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n}\\n\\ninterface MSStreamReader extends EventTarget {\\n    readonly error: DOMError;\\n    onabort: ((this: MSStreamReader, ev: UIEvent) => any) | null;\\n    onerror: ((this: MSStreamReader, ev: ErrorEvent) => any) | null;\\n    onload: ((this: MSStreamReader, ev: Event) => any) | null;\\n    onloadend: ((this: MSStreamReader, ev: ProgressEvent) => any) | null;\\n    onloadstart: ((this: MSStreamReader, ev: Event) => any) | null;\\n    onprogress: ((this: MSStreamReader, ev: ProgressEvent) => any) | null;\\n    readonly readyState: number;\\n    readonly result: any;\\n    abort(): void;\\n    readAsArrayBuffer(stream: MSStream, size?: number): void;\\n    readAsBinaryString(stream: MSStream, size?: number): void;\\n    readAsBlob(stream: MSStream, size?: number): void;\\n    readAsDataURL(stream: MSStream, size?: number): void;\\n    readAsText(stream: MSStream, encoding?: string, size?: number): void;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n    addEventListener<K extends keyof MSStreamReaderEventMap>(type: K, listener: (this: MSStreamReader, ev: MSStreamReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MSStreamReaderEventMap>(type: K, listener: (this: MSStreamReader, ev: MSStreamReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MSStreamReader: {\\n    prototype: MSStreamReader;\\n    new(): MSStreamReader;\\n    readonly DONE: number;\\n    readonly EMPTY: number;\\n    readonly LOADING: number;\\n};\\n\\ninterface MediaDeviceInfo {\\n    readonly deviceId: string;\\n    readonly groupId: string;\\n    readonly kind: MediaDeviceKind;\\n    readonly label: string;\\n}\\n\\ndeclare var MediaDeviceInfo: {\\n    prototype: MediaDeviceInfo;\\n    new(): MediaDeviceInfo;\\n};\\n\\ninterface MediaDevicesEventMap {\\n    \\\"devicechange\\\": Event;\\n}\\n\\ninterface MediaDevices extends EventTarget {\\n    ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;\\n    enumerateDevices(): Promise<MediaDeviceInfo[]>;\\n    getSupportedConstraints(): MediaTrackSupportedConstraints;\\n    getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;\\n    addEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MediaDevices: {\\n    prototype: MediaDevices;\\n    new(): MediaDevices;\\n};\\n\\ninterface MediaElementAudioSourceNode extends AudioNode {\\n}\\n\\ndeclare var MediaElementAudioSourceNode: {\\n    prototype: MediaElementAudioSourceNode;\\n    new(): MediaElementAudioSourceNode;\\n};\\n\\ninterface MediaEncryptedEvent extends Event {\\n    readonly initData: ArrayBuffer | null;\\n    readonly initDataType: string;\\n}\\n\\ndeclare var MediaEncryptedEvent: {\\n    prototype: MediaEncryptedEvent;\\n    new(type: string, eventInitDict?: MediaEncryptedEventInit): MediaEncryptedEvent;\\n};\\n\\ninterface MediaError {\\n    readonly code: number;\\n    readonly msExtendedCode: number;\\n    readonly MEDIA_ERR_ABORTED: number;\\n    readonly MEDIA_ERR_DECODE: number;\\n    readonly MEDIA_ERR_NETWORK: number;\\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;\\n    readonly MS_MEDIA_ERR_ENCRYPTED: number;\\n}\\n\\ndeclare var MediaError: {\\n    prototype: MediaError;\\n    new(): MediaError;\\n    readonly MEDIA_ERR_ABORTED: number;\\n    readonly MEDIA_ERR_DECODE: number;\\n    readonly MEDIA_ERR_NETWORK: number;\\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;\\n    readonly MS_MEDIA_ERR_ENCRYPTED: number;\\n};\\n\\ninterface MediaKeyMessageEvent extends Event {\\n    readonly message: ArrayBuffer;\\n    readonly messageType: MediaKeyMessageType;\\n}\\n\\ndeclare var MediaKeyMessageEvent: {\\n    prototype: MediaKeyMessageEvent;\\n    new(type: string, eventInitDict?: MediaKeyMessageEventInit): MediaKeyMessageEvent;\\n};\\n\\ninterface MediaKeySession extends EventTarget {\\n    readonly closed: Promise<void>;\\n    readonly expiration: number;\\n    readonly keyStatuses: MediaKeyStatusMap;\\n    readonly sessionId: string;\\n    close(): Promise<void>;\\n    generateRequest(initDataType: string, initData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;\\n    load(sessionId: string): Promise<boolean>;\\n    remove(): Promise<void>;\\n    update(response: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;\\n}\\n\\ndeclare var MediaKeySession: {\\n    prototype: MediaKeySession;\\n    new(): MediaKeySession;\\n};\\n\\ninterface MediaKeyStatusMap {\\n    readonly size: number;\\n    forEach(callback: Function, thisArg?: any): void;\\n    get(keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): MediaKeyStatus;\\n    has(keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): boolean;\\n}\\n\\ndeclare var MediaKeyStatusMap: {\\n    prototype: MediaKeyStatusMap;\\n    new(): MediaKeyStatusMap;\\n};\\n\\ninterface MediaKeySystemAccess {\\n    readonly keySystem: string;\\n    createMediaKeys(): Promise<MediaKeys>;\\n    getConfiguration(): MediaKeySystemConfiguration;\\n}\\n\\ndeclare var MediaKeySystemAccess: {\\n    prototype: MediaKeySystemAccess;\\n    new(): MediaKeySystemAccess;\\n};\\n\\ninterface MediaKeys {\\n    createSession(sessionType?: MediaKeySessionType): MediaKeySession;\\n    setServerCertificate(serverCertificate: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): Promise<void>;\\n}\\n\\ndeclare var MediaKeys: {\\n    prototype: MediaKeys;\\n    new(): MediaKeys;\\n};\\n\\ninterface MediaList {\\n    readonly length: number;\\n    mediaText: string;\\n    appendMedium(medium: string): void;\\n    deleteMedium(medium: string): void;\\n    item(index: number): string | null;\\n    toString(): number;\\n    [index: number]: string;\\n}\\n\\ndeclare var MediaList: {\\n    prototype: MediaList;\\n    new(): MediaList;\\n};\\n\\ninterface MediaQueryList {\\n    readonly matches: boolean;\\n    readonly media: string;\\n    addListener(listener: MediaQueryListListener): void;\\n    removeListener(listener: MediaQueryListListener): void;\\n}\\n\\ndeclare var MediaQueryList: {\\n    prototype: MediaQueryList;\\n    new(): MediaQueryList;\\n};\\n\\ninterface MediaSource extends EventTarget {\\n    readonly activeSourceBuffers: SourceBufferList;\\n    duration: number;\\n    readonly readyState: string;\\n    readonly sourceBuffers: SourceBufferList;\\n    addSourceBuffer(type: string): SourceBuffer;\\n    endOfStream(error?: number): void;\\n    removeSourceBuffer(sourceBuffer: SourceBuffer): void;\\n}\\n\\ndeclare var MediaSource: {\\n    prototype: MediaSource;\\n    new(): MediaSource;\\n    isTypeSupported(type: string): boolean;\\n};\\n\\ninterface MediaStreamEventMap {\\n    \\\"active\\\": Event;\\n    \\\"addtrack\\\": MediaStreamTrackEvent;\\n    \\\"inactive\\\": Event;\\n    \\\"removetrack\\\": MediaStreamTrackEvent;\\n}\\n\\ninterface MediaStream extends EventTarget {\\n    readonly active: boolean;\\n    readonly id: string;\\n    onactive: ((this: MediaStream, ev: Event) => any) | null;\\n    onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\\n    oninactive: ((this: MediaStream, ev: Event) => any) | null;\\n    onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\\n    addTrack(track: MediaStreamTrack): void;\\n    clone(): MediaStream;\\n    getAudioTracks(): MediaStreamTrack[];\\n    getTrackById(trackId: string): MediaStreamTrack | null;\\n    getTracks(): MediaStreamTrack[];\\n    getVideoTracks(): MediaStreamTrack[];\\n    removeTrack(track: MediaStreamTrack): void;\\n    stop(): void;\\n    addEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MediaStream: {\\n    prototype: MediaStream;\\n    new(): MediaStream;\\n    new(stream: MediaStream): MediaStream;\\n    new(tracks: MediaStreamTrack[]): MediaStream;\\n};\\n\\ninterface MediaStreamAudioSourceNode extends AudioNode {\\n}\\n\\ndeclare var MediaStreamAudioSourceNode: {\\n    prototype: MediaStreamAudioSourceNode;\\n    new(): MediaStreamAudioSourceNode;\\n};\\n\\ninterface MediaStreamError {\\n    readonly constraintName: string | null;\\n    readonly message: string | null;\\n    readonly name: string;\\n}\\n\\ndeclare var MediaStreamError: {\\n    prototype: MediaStreamError;\\n    new(): MediaStreamError;\\n};\\n\\ninterface MediaStreamErrorEvent extends Event {\\n    readonly error: MediaStreamError | null;\\n}\\n\\ndeclare var MediaStreamErrorEvent: {\\n    prototype: MediaStreamErrorEvent;\\n    new(typeArg: string, eventInitDict?: MediaStreamErrorEventInit): MediaStreamErrorEvent;\\n};\\n\\ninterface MediaStreamEvent extends Event {\\n    readonly stream: MediaStream | null;\\n}\\n\\ndeclare var MediaStreamEvent: {\\n    prototype: MediaStreamEvent;\\n    new(type: string, eventInitDict: MediaStreamEventInit): MediaStreamEvent;\\n};\\n\\ninterface MediaStreamTrackEventMap {\\n    \\\"ended\\\": MediaStreamErrorEvent;\\n    \\\"mute\\\": Event;\\n    \\\"overconstrained\\\": MediaStreamErrorEvent;\\n    \\\"unmute\\\": Event;\\n}\\n\\ninterface MediaStreamTrack extends EventTarget {\\n    enabled: boolean;\\n    readonly id: string;\\n    readonly kind: string;\\n    readonly label: string;\\n    readonly muted: boolean;\\n    onended: ((this: MediaStreamTrack, ev: MediaStreamErrorEvent) => any) | null;\\n    onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\\n    onoverconstrained: ((this: MediaStreamTrack, ev: MediaStreamErrorEvent) => any) | null;\\n    onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\\n    readonly readonly: boolean;\\n    readonly readyState: MediaStreamTrackState;\\n    readonly remote: boolean;\\n    applyConstraints(constraints: MediaTrackConstraints): Promise<void>;\\n    clone(): MediaStreamTrack;\\n    getCapabilities(): MediaTrackCapabilities;\\n    getConstraints(): MediaTrackConstraints;\\n    getSettings(): MediaTrackSettings;\\n    stop(): void;\\n    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MediaStreamTrack: {\\n    prototype: MediaStreamTrack;\\n    new(): MediaStreamTrack;\\n};\\n\\ninterface MediaStreamTrackEvent extends Event {\\n    readonly track: MediaStreamTrack;\\n}\\n\\ndeclare var MediaStreamTrackEvent: {\\n    prototype: MediaStreamTrackEvent;\\n    new(typeArg: string, eventInitDict?: MediaStreamTrackEventInit): MediaStreamTrackEvent;\\n};\\n\\ninterface MessageChannel {\\n    readonly port1: MessagePort;\\n    readonly port2: MessagePort;\\n}\\n\\ndeclare var MessageChannel: {\\n    prototype: MessageChannel;\\n    new(): MessageChannel;\\n};\\n\\ninterface MessageEvent extends Event {\\n    readonly data: any;\\n    readonly origin: string;\\n    readonly ports: ReadonlyArray<MessagePort>;\\n    readonly source: Window | null;\\n    initMessageEvent(type: string, bubbles: boolean, cancelable: boolean, data: any, origin: string, lastEventId: string, source: Window): void;\\n}\\n\\ndeclare var MessageEvent: {\\n    prototype: MessageEvent;\\n    new(type: string, eventInitDict?: MessageEventInit): MessageEvent;\\n};\\n\\ninterface MessagePortEventMap {\\n    \\\"message\\\": MessageEvent;\\n}\\n\\ninterface MessagePort extends EventTarget {\\n    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;\\n    close(): void;\\n    postMessage(message?: any, transfer?: any[]): void;\\n    start(): void;\\n    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var MessagePort: {\\n    prototype: MessagePort;\\n    new(): MessagePort;\\n};\\n\\ninterface MimeType {\\n    readonly description: string;\\n    readonly enabledPlugin: Plugin;\\n    readonly suffixes: string;\\n    readonly type: string;\\n}\\n\\ndeclare var MimeType: {\\n    prototype: MimeType;\\n    new(): MimeType;\\n};\\n\\ninterface MimeTypeArray {\\n    readonly length: number;\\n    item(index: number): Plugin;\\n    namedItem(type: string): Plugin;\\n    [index: number]: Plugin;\\n}\\n\\ndeclare var MimeTypeArray: {\\n    prototype: MimeTypeArray;\\n    new(): MimeTypeArray;\\n};\\n\\ninterface MouseEvent extends UIEvent {\\n    readonly altKey: boolean;\\n    readonly button: number;\\n    readonly buttons: number;\\n    readonly clientX: number;\\n    readonly clientY: number;\\n    readonly ctrlKey: boolean;\\n    /** @deprecated */\\n    readonly fromElement: Element;\\n    readonly layerX: number;\\n    readonly layerY: number;\\n    readonly metaKey: boolean;\\n    readonly movementX: number;\\n    readonly movementY: number;\\n    readonly offsetX: number;\\n    readonly offsetY: number;\\n    readonly pageX: number;\\n    readonly pageY: number;\\n    readonly relatedTarget: EventTarget;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly shiftKey: boolean;\\n    /** @deprecated */\\n    readonly toElement: Element;\\n    /** @deprecated */\\n    readonly which: number;\\n    readonly x: number;\\n    readonly y: number;\\n    getModifierState(keyArg: string): boolean;\\n    initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void;\\n}\\n\\ndeclare var MouseEvent: {\\n    prototype: MouseEvent;\\n    new(typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\\n};\\n\\ninterface MutationEvent extends Event {\\n    readonly attrChange: number;\\n    readonly attrName: string;\\n    readonly newValue: string;\\n    readonly prevValue: string;\\n    readonly relatedNode: Node;\\n    initMutationEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, relatedNodeArg: Node, prevValueArg: string, newValueArg: string, attrNameArg: string, attrChangeArg: number): void;\\n    readonly ADDITION: number;\\n    readonly MODIFICATION: number;\\n    readonly REMOVAL: number;\\n}\\n\\ndeclare var MutationEvent: {\\n    prototype: MutationEvent;\\n    new(): MutationEvent;\\n    readonly ADDITION: number;\\n    readonly MODIFICATION: number;\\n    readonly REMOVAL: number;\\n};\\n\\ninterface MutationObserver {\\n    disconnect(): void;\\n    observe(target: Node, options: MutationObserverInit): void;\\n    takeRecords(): MutationRecord[];\\n}\\n\\ndeclare var MutationObserver: {\\n    prototype: MutationObserver;\\n    new(callback: MutationCallback): MutationObserver;\\n};\\n\\ninterface MutationRecord {\\n    readonly addedNodes: NodeList;\\n    readonly attributeName: string | null;\\n    readonly attributeNamespace: string | null;\\n    readonly nextSibling: Node | null;\\n    readonly oldValue: string | null;\\n    readonly previousSibling: Node | null;\\n    readonly removedNodes: NodeList;\\n    readonly target: Node;\\n    readonly type: MutationRecordType;\\n}\\n\\ndeclare var MutationRecord: {\\n    prototype: MutationRecord;\\n    new(): MutationRecord;\\n};\\n\\ninterface NamedNodeMap {\\n    readonly length: number;\\n    getNamedItem(qualifiedName: string): Attr | null;\\n    getNamedItemNS(namespace: string | null, localName: string): Attr | null;\\n    item(index: number): Attr | null;\\n    removeNamedItem(qualifiedName: string): Attr;\\n    removeNamedItemNS(namespace: string | null, localName: string): Attr;\\n    setNamedItem(attr: Attr): Attr | null;\\n    setNamedItemNS(attr: Attr): Attr | null;\\n    [index: number]: Attr;\\n}\\n\\ndeclare var NamedNodeMap: {\\n    prototype: NamedNodeMap;\\n    new(): NamedNodeMap;\\n};\\n\\ninterface Navigator extends NavigatorID, NavigatorOnLine, NavigatorContentUtils, NavigatorStorageUtils, MSNavigatorDoNotTrack, MSFileSaver, NavigatorBeacon, NavigatorConcurrentHardware, NavigatorUserMedia, NavigatorLanguage {\\n    readonly activeVRDisplays: ReadonlyArray<VRDisplay>;\\n    readonly authentication: WebAuthentication;\\n    readonly cookieEnabled: boolean;\\n    readonly doNotTrack: string | null;\\n    gamepadInputEmulation: GamepadInputEmulationType;\\n    readonly geolocation: Geolocation;\\n    readonly maxTouchPoints: number;\\n    readonly mimeTypes: MimeTypeArray;\\n    readonly msManipulationViewsEnabled: boolean;\\n    readonly msMaxTouchPoints: number;\\n    readonly msPointerEnabled: boolean;\\n    readonly plugins: PluginArray;\\n    readonly pointerEnabled: boolean;\\n    readonly serviceWorker: ServiceWorkerContainer;\\n    readonly webdriver: boolean;\\n    getGamepads(): (Gamepad | null)[];\\n    getVRDisplays(): Promise<VRDisplay[]>;\\n    javaEnabled(): boolean;\\n    msLaunchUri(uri: string, successCallback?: MSLaunchUriCallback, noHandlerCallback?: MSLaunchUriCallback): void;\\n    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: MediaKeySystemConfiguration[]): Promise<MediaKeySystemAccess>;\\n    vibrate(pattern: number | number[]): boolean;\\n}\\n\\ndeclare var Navigator: {\\n    prototype: Navigator;\\n    new(): Navigator;\\n};\\n\\ninterface NavigatorBeacon {\\n    sendBeacon(url: string, data?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null): boolean;\\n}\\n\\ninterface NavigatorConcurrentHardware {\\n    readonly hardwareConcurrency: number;\\n}\\n\\ninterface NavigatorContentUtils {\\n}\\n\\ninterface NavigatorID {\\n    readonly appCodeName: string;\\n    readonly appName: string;\\n    readonly appVersion: string;\\n    readonly platform: string;\\n    readonly product: string;\\n    readonly productSub: string;\\n    readonly userAgent: string;\\n    readonly vendor: string;\\n    readonly vendorSub: string;\\n}\\n\\ninterface NavigatorLanguage {\\n    readonly language: string;\\n    readonly languages: ReadonlyArray<string>;\\n}\\n\\ninterface NavigatorOnLine {\\n    readonly onLine: boolean;\\n}\\n\\ninterface NavigatorStorageUtils {\\n}\\n\\ninterface NavigatorUserMedia {\\n    readonly mediaDevices: MediaDevices;\\n    getDisplayMedia(constraints: MediaStreamConstraints): Promise<MediaStream>;\\n    getUserMedia(constraints: MediaStreamConstraints, successCallback: NavigatorUserMediaSuccessCallback, errorCallback: NavigatorUserMediaErrorCallback): void;\\n}\\n\\ninterface Node extends EventTarget {\\n    readonly baseURI: string | null;\\n    readonly childNodes: NodeListOf<Node & ChildNode>;\\n    readonly firstChild: Node | null;\\n    readonly lastChild: Node | null;\\n    readonly localName: string | null;\\n    readonly namespaceURI: string | null;\\n    readonly nextSibling: Node | null;\\n    readonly nodeName: string;\\n    readonly nodeType: number;\\n    nodeValue: string | null;\\n    readonly ownerDocument: Document;\\n    readonly parentElement: HTMLElement | null;\\n    readonly parentNode: Node | null;\\n    readonly previousSibling: Node | null;\\n    textContent: string | null;\\n    appendChild<T extends Node>(newChild: T): T;\\n    cloneNode(deep?: boolean): Node;\\n    compareDocumentPosition(other: Node): number;\\n    contains(child: Node): boolean;\\n    hasChildNodes(): boolean;\\n    insertBefore<T extends Node>(newChild: T, refChild: Node | null): T;\\n    isDefaultNamespace(namespaceURI: string | null): boolean;\\n    isEqualNode(arg: Node): boolean;\\n    isSameNode(other: Node): boolean;\\n    lookupNamespaceURI(prefix: string | null): string | null;\\n    lookupPrefix(namespaceURI: string | null): string | null;\\n    normalize(): void;\\n    removeChild<T extends Node>(oldChild: T): T;\\n    replaceChild<T extends Node>(newChild: Node, oldChild: T): T;\\n    readonly ATTRIBUTE_NODE: number;\\n    readonly CDATA_SECTION_NODE: number;\\n    readonly COMMENT_NODE: number;\\n    readonly DOCUMENT_FRAGMENT_NODE: number;\\n    readonly DOCUMENT_NODE: number;\\n    readonly DOCUMENT_POSITION_CONTAINED_BY: number;\\n    readonly DOCUMENT_POSITION_CONTAINS: number;\\n    readonly DOCUMENT_POSITION_DISCONNECTED: number;\\n    readonly DOCUMENT_POSITION_FOLLOWING: number;\\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\\n    readonly DOCUMENT_POSITION_PRECEDING: number;\\n    readonly DOCUMENT_TYPE_NODE: number;\\n    readonly ELEMENT_NODE: number;\\n    readonly ENTITY_NODE: number;\\n    readonly ENTITY_REFERENCE_NODE: number;\\n    readonly NOTATION_NODE: number;\\n    readonly PROCESSING_INSTRUCTION_NODE: number;\\n    readonly TEXT_NODE: number;\\n}\\n\\ndeclare var Node: {\\n    prototype: Node;\\n    new(): Node;\\n    readonly ATTRIBUTE_NODE: number;\\n    readonly CDATA_SECTION_NODE: number;\\n    readonly COMMENT_NODE: number;\\n    readonly DOCUMENT_FRAGMENT_NODE: number;\\n    readonly DOCUMENT_NODE: number;\\n    readonly DOCUMENT_POSITION_CONTAINED_BY: number;\\n    readonly DOCUMENT_POSITION_CONTAINS: number;\\n    readonly DOCUMENT_POSITION_DISCONNECTED: number;\\n    readonly DOCUMENT_POSITION_FOLLOWING: number;\\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\\n    readonly DOCUMENT_POSITION_PRECEDING: number;\\n    readonly DOCUMENT_TYPE_NODE: number;\\n    readonly ELEMENT_NODE: number;\\n    readonly ENTITY_NODE: number;\\n    readonly ENTITY_REFERENCE_NODE: number;\\n    readonly NOTATION_NODE: number;\\n    readonly PROCESSING_INSTRUCTION_NODE: number;\\n    readonly TEXT_NODE: number;\\n};\\n\\ninterface NodeFilter {\\n    acceptNode(node: Node): number;\\n}\\n\\ndeclare var NodeFilter: {\\n    readonly FILTER_ACCEPT: number;\\n    readonly FILTER_REJECT: number;\\n    readonly FILTER_SKIP: number;\\n    readonly SHOW_ALL: number;\\n    readonly SHOW_ATTRIBUTE: number;\\n    readonly SHOW_CDATA_SECTION: number;\\n    readonly SHOW_COMMENT: number;\\n    readonly SHOW_DOCUMENT: number;\\n    readonly SHOW_DOCUMENT_FRAGMENT: number;\\n    readonly SHOW_DOCUMENT_TYPE: number;\\n    readonly SHOW_ELEMENT: number;\\n    readonly SHOW_ENTITY: number;\\n    readonly SHOW_ENTITY_REFERENCE: number;\\n    readonly SHOW_NOTATION: number;\\n    readonly SHOW_PROCESSING_INSTRUCTION: number;\\n    readonly SHOW_TEXT: number;\\n};\\n\\ninterface NodeIterator {\\n    /** @deprecated */\\n    readonly expandEntityReferences: boolean;\\n    readonly filter: NodeFilter | null;\\n    readonly root: Node;\\n    readonly whatToShow: number;\\n    detach(): void;\\n    nextNode(): Node | null;\\n    previousNode(): Node | null;\\n}\\n\\ndeclare var NodeIterator: {\\n    prototype: NodeIterator;\\n    new(): NodeIterator;\\n};\\n\\ninterface NodeList {\\n    readonly length: number;\\n    item(index: number): Node;\\n    [index: number]: Node;\\n}\\n\\ndeclare var NodeList: {\\n    prototype: NodeList;\\n    new(): NodeList;\\n};\\n\\ninterface NodeListOf<TNode extends Node> extends NodeList {\\n    length: number;\\n    item(index: number): TNode;\\n    [index: number]: TNode;\\n}\\n\\ninterface NodeSelector {\\n    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\\n    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\\n    querySelector<E extends Element = Element>(selectors: string): E | null;\\n    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\\n}\\n\\ninterface NotificationEventMap {\\n    \\\"click\\\": Event;\\n    \\\"close\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"show\\\": Event;\\n}\\n\\ninterface Notification extends EventTarget {\\n    readonly body: string | null;\\n    readonly data: any;\\n    readonly dir: NotificationDirection;\\n    readonly icon: string | null;\\n    readonly lang: string | null;\\n    onclick: ((this: Notification, ev: Event) => any) | null;\\n    onclose: ((this: Notification, ev: Event) => any) | null;\\n    onerror: ((this: Notification, ev: Event) => any) | null;\\n    onshow: ((this: Notification, ev: Event) => any) | null;\\n    readonly permission: NotificationPermission;\\n    readonly tag: string | null;\\n    readonly title: string;\\n    close(): void;\\n    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Notification: {\\n    prototype: Notification;\\n    new(title: string, options?: NotificationOptions): Notification;\\n    requestPermission(callback?: NotificationPermissionCallback): Promise<NotificationPermission>;\\n};\\n\\ninterface OES_element_index_uint {\\n}\\n\\ndeclare var OES_element_index_uint: {\\n    prototype: OES_element_index_uint;\\n    new(): OES_element_index_uint;\\n};\\n\\ninterface OES_standard_derivatives {\\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: number;\\n}\\n\\ndeclare var OES_standard_derivatives: {\\n    prototype: OES_standard_derivatives;\\n    new(): OES_standard_derivatives;\\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: number;\\n};\\n\\ninterface OES_texture_float {\\n}\\n\\ndeclare var OES_texture_float: {\\n    prototype: OES_texture_float;\\n    new(): OES_texture_float;\\n};\\n\\ninterface OES_texture_float_linear {\\n}\\n\\ndeclare var OES_texture_float_linear: {\\n    prototype: OES_texture_float_linear;\\n    new(): OES_texture_float_linear;\\n};\\n\\ninterface OES_texture_half_float {\\n    readonly HALF_FLOAT_OES: number;\\n}\\n\\ndeclare var OES_texture_half_float: {\\n    prototype: OES_texture_half_float;\\n    new(): OES_texture_half_float;\\n    readonly HALF_FLOAT_OES: number;\\n};\\n\\ninterface OES_texture_half_float_linear {\\n}\\n\\ndeclare var OES_texture_half_float_linear: {\\n    prototype: OES_texture_half_float_linear;\\n    new(): OES_texture_half_float_linear;\\n};\\n\\ninterface OES_vertex_array_object {\\n    readonly VERTEX_ARRAY_BINDING_OES: number;\\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): void;\\n    createVertexArrayOES(): WebGLVertexArrayObjectOES;\\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): void;\\n    isVertexArrayOES(value: any): value is WebGLVertexArrayObjectOES;\\n}\\n\\ninterface OfflineAudioCompletionEvent extends Event {\\n    readonly renderedBuffer: AudioBuffer;\\n}\\n\\ndeclare var OfflineAudioCompletionEvent: {\\n    prototype: OfflineAudioCompletionEvent;\\n    new(): OfflineAudioCompletionEvent;\\n};\\n\\ninterface OfflineAudioContextEventMap extends AudioContextEventMap {\\n    \\\"complete\\\": OfflineAudioCompletionEvent;\\n}\\n\\ninterface OfflineAudioContext extends AudioContextBase {\\n    readonly length: number;\\n    oncomplete: ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any) | null;\\n    startRendering(): Promise<AudioBuffer>;\\n    suspend(suspendTime: number): Promise<void>;\\n    addEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var OfflineAudioContext: {\\n    prototype: OfflineAudioContext;\\n    new(numberOfChannels: number, length: number, sampleRate: number): OfflineAudioContext;\\n};\\n\\ninterface OscillatorNodeEventMap {\\n    \\\"ended\\\": Event;\\n}\\n\\ninterface OscillatorNode extends AudioNode {\\n    readonly detune: AudioParam;\\n    readonly frequency: AudioParam;\\n    onended: ((this: OscillatorNode, ev: Event) => any) | null;\\n    type: OscillatorType;\\n    setPeriodicWave(periodicWave: PeriodicWave): void;\\n    start(when?: number): void;\\n    stop(when?: number): void;\\n    addEventListener<K extends keyof OscillatorNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: OscillatorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof OscillatorNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: OscillatorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var OscillatorNode: {\\n    prototype: OscillatorNode;\\n    new(): OscillatorNode;\\n};\\n\\ninterface OverflowEvent extends UIEvent {\\n    readonly horizontalOverflow: boolean;\\n    readonly orient: number;\\n    readonly verticalOverflow: boolean;\\n    readonly BOTH: number;\\n    readonly HORIZONTAL: number;\\n    readonly VERTICAL: number;\\n}\\n\\ndeclare var OverflowEvent: {\\n    prototype: OverflowEvent;\\n    new(): OverflowEvent;\\n    readonly BOTH: number;\\n    readonly HORIZONTAL: number;\\n    readonly VERTICAL: number;\\n};\\n\\ninterface PageTransitionEvent extends Event {\\n    readonly persisted: boolean;\\n}\\n\\ndeclare var PageTransitionEvent: {\\n    prototype: PageTransitionEvent;\\n    new(): PageTransitionEvent;\\n};\\n\\ninterface PannerNode extends AudioNode {\\n    coneInnerAngle: number;\\n    coneOuterAngle: number;\\n    coneOuterGain: number;\\n    distanceModel: DistanceModelType;\\n    maxDistance: number;\\n    panningModel: PanningModelType;\\n    refDistance: number;\\n    rolloffFactor: number;\\n    /** @deprecated */\\n    setOrientation(x: number, y: number, z: number): void;\\n    /** @deprecated */\\n    setPosition(x: number, y: number, z: number): void;\\n    /** @deprecated */\\n    setVelocity(x: number, y: number, z: number): void;\\n}\\n\\ndeclare var PannerNode: {\\n    prototype: PannerNode;\\n    new(): PannerNode;\\n};\\n\\ninterface ParentNode {\\n    readonly children: HTMLCollection;\\n    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\\n    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\\n    querySelector<E extends Element = Element>(selectors: string): E | null;\\n    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\\n    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\\n    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\\n}\\n\\ninterface ParentNode {\\n    readonly childElementCount: number;\\n    readonly firstElementChild: Element | null;\\n    readonly lastElementChild: Element | null;\\n}\\n\\ninterface Path2D extends CanvasPathMethods {\\n}\\n\\ndeclare var Path2D: {\\n    prototype: Path2D;\\n    new(d?: Path2D | string): Path2D;\\n};\\n\\ninterface PaymentAddress {\\n    readonly addressLine: string[];\\n    readonly city: string;\\n    readonly country: string;\\n    readonly dependentLocality: string;\\n    readonly languageCode: string;\\n    readonly organization: string;\\n    readonly phone: string;\\n    readonly postalCode: string;\\n    readonly recipient: string;\\n    readonly region: string;\\n    readonly sortingCode: string;\\n    toJSON(): any;\\n}\\n\\ndeclare var PaymentAddress: {\\n    prototype: PaymentAddress;\\n    new(): PaymentAddress;\\n};\\n\\ninterface PaymentRequestEventMap {\\n    \\\"shippingaddresschange\\\": Event;\\n    \\\"shippingoptionchange\\\": Event;\\n}\\n\\ninterface PaymentRequest extends EventTarget {\\n    readonly id: string;\\n    onshippingaddresschange: ((this: PaymentRequest, ev: Event) => any) | null;\\n    onshippingoptionchange: ((this: PaymentRequest, ev: Event) => any) | null;\\n    readonly shippingAddress: PaymentAddress | null;\\n    readonly shippingOption: string | null;\\n    readonly shippingType: PaymentShippingType | null;\\n    abort(): Promise<void>;\\n    canMakePayment(): Promise<boolean>;\\n    show(): Promise<PaymentResponse>;\\n    addEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var PaymentRequest: {\\n    prototype: PaymentRequest;\\n    new(methodData: PaymentMethodData[], details: PaymentDetailsInit, options?: PaymentOptions): PaymentRequest;\\n};\\n\\ninterface PaymentRequestUpdateEvent extends Event {\\n    updateWith(detailsPromise: Promise<PaymentDetailsUpdate>): void;\\n}\\n\\ndeclare var PaymentRequestUpdateEvent: {\\n    prototype: PaymentRequestUpdateEvent;\\n    new(type: string, eventInitDict?: PaymentRequestUpdateEventInit): PaymentRequestUpdateEvent;\\n};\\n\\ninterface PaymentResponse {\\n    readonly details: any;\\n    readonly methodName: string;\\n    readonly payerEmail: string | null;\\n    readonly payerName: string | null;\\n    readonly payerPhone: string | null;\\n    readonly requestId: string;\\n    readonly shippingAddress: PaymentAddress | null;\\n    readonly shippingOption: string | null;\\n    complete(result?: PaymentComplete): Promise<void>;\\n    toJSON(): any;\\n}\\n\\ndeclare var PaymentResponse: {\\n    prototype: PaymentResponse;\\n    new(): PaymentResponse;\\n};\\n\\ninterface PerfWidgetExternal {\\n    readonly activeNetworkRequestCount: number;\\n    readonly averageFrameTime: number;\\n    readonly averagePaintTime: number;\\n    readonly extraInformationEnabled: boolean;\\n    readonly independentRenderingEnabled: boolean;\\n    readonly irDisablingContentString: string;\\n    readonly irStatusAvailable: boolean;\\n    readonly maxCpuSpeed: number;\\n    readonly paintRequestsPerSecond: number;\\n    readonly performanceCounter: number;\\n    readonly performanceCounterFrequency: number;\\n    addEventListener(eventType: string, callback: Function): void;\\n    getMemoryUsage(): number;\\n    getProcessCpuUsage(): number;\\n    getRecentCpuUsage(last: number | null): any;\\n    getRecentFrames(last: number | null): any;\\n    getRecentMemoryUsage(last: number | null): any;\\n    getRecentPaintRequests(last: number | null): any;\\n    removeEventListener(eventType: string, callback: Function): void;\\n    repositionWindow(x: number, y: number): void;\\n    resizeWindow(width: number, height: number): void;\\n}\\n\\ndeclare var PerfWidgetExternal: {\\n    prototype: PerfWidgetExternal;\\n    new(): PerfWidgetExternal;\\n};\\n\\ninterface Performance {\\n    /** @deprecated */\\n    readonly navigation: PerformanceNavigation;\\n    readonly timeOrigin: number;\\n    /** @deprecated */\\n    readonly timing: PerformanceTiming;\\n    clearMarks(markName?: string): void;\\n    clearMeasures(measureName?: string): void;\\n    clearResourceTimings(): void;\\n    getEntries(): any;\\n    getEntriesByName(name: string, type?: string): any;\\n    getEntriesByType(type: string): any;\\n    /** @deprecated */\\n    getMarks(markName?: string): any;\\n    /** @deprecated */\\n    getMeasures(measureName?: string): any;\\n    mark(markName: string): void;\\n    measure(measureName: string, startMarkName?: string, endMarkName?: string): void;\\n    now(): number;\\n    setResourceTimingBufferSize(maxSize: number): void;\\n    toJSON(): any;\\n}\\n\\ndeclare var Performance: {\\n    prototype: Performance;\\n    new(): Performance;\\n};\\n\\ninterface PerformanceEntry {\\n    readonly duration: number;\\n    readonly entryType: string;\\n    readonly name: string;\\n    readonly startTime: number;\\n    toJSON(): any;\\n}\\n\\ndeclare var PerformanceEntry: {\\n    prototype: PerformanceEntry;\\n    new(): PerformanceEntry;\\n};\\n\\ninterface PerformanceMark extends PerformanceEntry {\\n}\\n\\ndeclare var PerformanceMark: {\\n    prototype: PerformanceMark;\\n    new(): PerformanceMark;\\n};\\n\\ninterface PerformanceMeasure extends PerformanceEntry {\\n}\\n\\ndeclare var PerformanceMeasure: {\\n    prototype: PerformanceMeasure;\\n    new(): PerformanceMeasure;\\n};\\n\\ninterface PerformanceNavigation {\\n    readonly redirectCount: number;\\n    readonly type: number;\\n    toJSON(): any;\\n    readonly TYPE_BACK_FORWARD: number;\\n    readonly TYPE_NAVIGATE: number;\\n    readonly TYPE_RELOAD: number;\\n    readonly TYPE_RESERVED: number;\\n}\\n\\ndeclare var PerformanceNavigation: {\\n    prototype: PerformanceNavigation;\\n    new(): PerformanceNavigation;\\n    readonly TYPE_BACK_FORWARD: number;\\n    readonly TYPE_NAVIGATE: number;\\n    readonly TYPE_RELOAD: number;\\n    readonly TYPE_RESERVED: number;\\n};\\n\\ninterface PerformanceNavigationTiming extends PerformanceEntry {\\n    /** @deprecated */\\n    readonly connectEnd: number;\\n    /** @deprecated */\\n    readonly connectStart: number;\\n    readonly domComplete: number;\\n    readonly domContentLoadedEventEnd: number;\\n    readonly domContentLoadedEventStart: number;\\n    readonly domInteractive: number;\\n    /** @deprecated */\\n    readonly domLoading: number;\\n    /** @deprecated */\\n    readonly domainLookupEnd: number;\\n    /** @deprecated */\\n    readonly domainLookupStart: number;\\n    /** @deprecated */\\n    readonly fetchStart: number;\\n    readonly loadEventEnd: number;\\n    readonly loadEventStart: number;\\n    /** @deprecated */\\n    readonly navigationStart: number;\\n    readonly redirectCount: number;\\n    /** @deprecated */\\n    readonly redirectEnd: number;\\n    /** @deprecated */\\n    readonly redirectStart: number;\\n    /** @deprecated */\\n    readonly requestStart: number;\\n    /** @deprecated */\\n    readonly responseEnd: number;\\n    /** @deprecated */\\n    readonly responseStart: number;\\n    readonly type: NavigationType;\\n    readonly unloadEventEnd: number;\\n    readonly unloadEventStart: number;\\n    readonly workerStart: number;\\n}\\n\\ndeclare var PerformanceNavigationTiming: {\\n    prototype: PerformanceNavigationTiming;\\n    new(): PerformanceNavigationTiming;\\n};\\n\\ninterface PerformanceResourceTiming extends PerformanceEntry {\\n    readonly connectEnd: number;\\n    readonly connectStart: number;\\n    readonly domainLookupEnd: number;\\n    readonly domainLookupStart: number;\\n    readonly fetchStart: number;\\n    readonly initiatorType: string;\\n    readonly redirectEnd: number;\\n    readonly redirectStart: number;\\n    readonly requestStart: number;\\n    readonly responseEnd: number;\\n    readonly responseStart: number;\\n    readonly workerStart: number;\\n}\\n\\ndeclare var PerformanceResourceTiming: {\\n    prototype: PerformanceResourceTiming;\\n    new(): PerformanceResourceTiming;\\n};\\n\\ninterface PerformanceTiming {\\n    readonly connectEnd: number;\\n    readonly connectStart: number;\\n    readonly domComplete: number;\\n    readonly domContentLoadedEventEnd: number;\\n    readonly domContentLoadedEventStart: number;\\n    readonly domInteractive: number;\\n    readonly domLoading: number;\\n    readonly domainLookupEnd: number;\\n    readonly domainLookupStart: number;\\n    readonly fetchStart: number;\\n    readonly loadEventEnd: number;\\n    readonly loadEventStart: number;\\n    readonly msFirstPaint: number;\\n    readonly navigationStart: number;\\n    readonly redirectEnd: number;\\n    readonly redirectStart: number;\\n    readonly requestStart: number;\\n    readonly responseEnd: number;\\n    readonly responseStart: number;\\n    readonly secureConnectionStart: number;\\n    readonly unloadEventEnd: number;\\n    readonly unloadEventStart: number;\\n    toJSON(): any;\\n}\\n\\ndeclare var PerformanceTiming: {\\n    prototype: PerformanceTiming;\\n    new(): PerformanceTiming;\\n};\\n\\ninterface PeriodicWave {\\n}\\n\\ndeclare var PeriodicWave: {\\n    prototype: PeriodicWave;\\n    new(): PeriodicWave;\\n};\\n\\ninterface PermissionRequest extends DeferredPermissionRequest {\\n    readonly state: MSWebViewPermissionState;\\n    defer(): void;\\n}\\n\\ndeclare var PermissionRequest: {\\n    prototype: PermissionRequest;\\n    new(): PermissionRequest;\\n};\\n\\ninterface PermissionRequestedEvent extends Event {\\n    readonly permissionRequest: PermissionRequest;\\n}\\n\\ndeclare var PermissionRequestedEvent: {\\n    prototype: PermissionRequestedEvent;\\n    new(): PermissionRequestedEvent;\\n};\\n\\ninterface Plugin {\\n    readonly description: string;\\n    readonly filename: string;\\n    readonly length: number;\\n    readonly name: string;\\n    readonly version: string;\\n    item(index: number): MimeType;\\n    namedItem(type: string): MimeType;\\n    [index: number]: MimeType;\\n}\\n\\ndeclare var Plugin: {\\n    prototype: Plugin;\\n    new(): Plugin;\\n};\\n\\ninterface PluginArray {\\n    readonly length: number;\\n    item(index: number): Plugin;\\n    namedItem(name: string): Plugin;\\n    refresh(reload?: boolean): void;\\n    [index: number]: Plugin;\\n}\\n\\ndeclare var PluginArray: {\\n    prototype: PluginArray;\\n    new(): PluginArray;\\n};\\n\\ninterface PointerEvent extends MouseEvent {\\n    readonly currentPoint: any;\\n    readonly height: number;\\n    readonly hwTimestamp: number;\\n    readonly intermediatePoints: any;\\n    readonly isPrimary: boolean;\\n    readonly pointerId: number;\\n    readonly pointerType: any;\\n    readonly pressure: number;\\n    readonly rotation: number;\\n    readonly tiltX: number;\\n    readonly tiltY: number;\\n    readonly width: number;\\n    getCurrentPoint(element: Element): void;\\n    getIntermediatePoints(element: Element): void;\\n    initPointerEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, offsetXArg: number, offsetYArg: number, widthArg: number, heightArg: number, pressure: number, rotation: number, tiltX: number, tiltY: number, pointerIdArg: number, pointerType: any, hwTimestampArg: number, isPrimary: boolean): void;\\n}\\n\\ndeclare var PointerEvent: {\\n    prototype: PointerEvent;\\n    new(typeArg: string, eventInitDict?: PointerEventInit): PointerEvent;\\n};\\n\\ninterface PopStateEvent extends Event {\\n    readonly state: any;\\n}\\n\\ndeclare var PopStateEvent: {\\n    prototype: PopStateEvent;\\n    new(type: string, eventInitDict?: PopStateEventInit): PopStateEvent;\\n};\\n\\ninterface Position {\\n    readonly coords: Coordinates;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var Position: {\\n    prototype: Position;\\n    new(): Position;\\n};\\n\\ninterface PositionError {\\n    readonly code: number;\\n    readonly message: string;\\n    toString(): string;\\n    readonly PERMISSION_DENIED: number;\\n    readonly POSITION_UNAVAILABLE: number;\\n    readonly TIMEOUT: number;\\n}\\n\\ndeclare var PositionError: {\\n    prototype: PositionError;\\n    new(): PositionError;\\n    readonly PERMISSION_DENIED: number;\\n    readonly POSITION_UNAVAILABLE: number;\\n    readonly TIMEOUT: number;\\n};\\n\\ninterface ProcessingInstruction extends CharacterData {\\n    readonly target: string;\\n}\\n\\ndeclare var ProcessingInstruction: {\\n    prototype: ProcessingInstruction;\\n    new(): ProcessingInstruction;\\n};\\n\\ninterface ProgressEvent extends Event {\\n    readonly lengthComputable: boolean;\\n    readonly loaded: number;\\n    readonly total: number;\\n    initProgressEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, lengthComputableArg: boolean, loadedArg: number, totalArg: number): void;\\n}\\n\\ndeclare var ProgressEvent: {\\n    prototype: ProgressEvent;\\n    new(typeArg: string, eventInitDict?: ProgressEventInit): ProgressEvent;\\n};\\n\\ninterface PromiseRejectionEvent extends Event {\\n    readonly promise: PromiseLike<any>;\\n    readonly reason: any;\\n}\\n\\ninterface PromiseRejectionEventInit extends EventInit {\\n    promise: PromiseLike<any>;\\n    reason?: any;\\n}\\n\\ninterface PushManager {\\n    readonly supportedContentEncodings: ReadonlyArray<string>;\\n    getSubscription(): Promise<PushSubscription | null>;\\n    permissionState(options?: PushSubscriptionOptionsInit): Promise<PushPermissionState>;\\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\\n}\\n\\ndeclare var PushManager: {\\n    prototype: PushManager;\\n    new(): PushManager;\\n};\\n\\ninterface PushSubscription {\\n    readonly endpoint: string;\\n    readonly expirationTime: number | null;\\n    readonly options: PushSubscriptionOptions;\\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\\n    toJSON(): any;\\n    unsubscribe(): Promise<boolean>;\\n}\\n\\ndeclare var PushSubscription: {\\n    prototype: PushSubscription;\\n    new(): PushSubscription;\\n};\\n\\ninterface PushSubscriptionOptions {\\n    readonly applicationServerKey: ArrayBuffer | null;\\n    readonly userVisibleOnly: boolean;\\n}\\n\\ndeclare var PushSubscriptionOptions: {\\n    prototype: PushSubscriptionOptions;\\n    new(): PushSubscriptionOptions;\\n};\\n\\ninterface RTCDTMFToneChangeEvent extends Event {\\n    readonly tone: string;\\n}\\n\\ndeclare var RTCDTMFToneChangeEvent: {\\n    prototype: RTCDTMFToneChangeEvent;\\n    new(typeArg: string, eventInitDict: RTCDTMFToneChangeEventInit): RTCDTMFToneChangeEvent;\\n};\\n\\ninterface RTCDtlsTransportEventMap {\\n    \\\"dtlsstatechange\\\": RTCDtlsTransportStateChangedEvent;\\n    \\\"error\\\": Event;\\n}\\n\\ninterface RTCDtlsTransport extends RTCStatsProvider {\\n    ondtlsstatechange: ((this: RTCDtlsTransport, ev: RTCDtlsTransportStateChangedEvent) => any) | null;\\n    onerror: ((this: RTCDtlsTransport, ev: Event) => any) | null;\\n    readonly state: RTCDtlsTransportState;\\n    readonly transport: RTCIceTransport;\\n    getLocalParameters(): RTCDtlsParameters;\\n    getRemoteCertificates(): ArrayBuffer[];\\n    getRemoteParameters(): RTCDtlsParameters | null;\\n    start(remoteParameters: RTCDtlsParameters): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCDtlsTransport: {\\n    prototype: RTCDtlsTransport;\\n    new(transport: RTCIceTransport): RTCDtlsTransport;\\n};\\n\\ninterface RTCDtlsTransportStateChangedEvent extends Event {\\n    readonly state: RTCDtlsTransportState;\\n}\\n\\ndeclare var RTCDtlsTransportStateChangedEvent: {\\n    prototype: RTCDtlsTransportStateChangedEvent;\\n    new(): RTCDtlsTransportStateChangedEvent;\\n};\\n\\ninterface RTCDtmfSenderEventMap {\\n    \\\"tonechange\\\": RTCDTMFToneChangeEvent;\\n}\\n\\ninterface RTCDtmfSender extends EventTarget {\\n    readonly canInsertDTMF: boolean;\\n    readonly duration: number;\\n    readonly interToneGap: number;\\n    ontonechange: ((this: RTCDtmfSender, ev: RTCDTMFToneChangeEvent) => any) | null;\\n    readonly sender: RTCRtpSender;\\n    readonly toneBuffer: string;\\n    insertDTMF(tones: string, duration?: number, interToneGap?: number): void;\\n    addEventListener<K extends keyof RTCDtmfSenderEventMap>(type: K, listener: (this: RTCDtmfSender, ev: RTCDtmfSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCDtmfSenderEventMap>(type: K, listener: (this: RTCDtmfSender, ev: RTCDtmfSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCDtmfSender: {\\n    prototype: RTCDtmfSender;\\n    new(sender: RTCRtpSender): RTCDtmfSender;\\n};\\n\\ninterface RTCIceCandidate {\\n    candidate: string | null;\\n    sdpMLineIndex: number | null;\\n    sdpMid: string | null;\\n    toJSON(): any;\\n}\\n\\ndeclare var RTCIceCandidate: {\\n    prototype: RTCIceCandidate;\\n    new(candidateInitDict?: RTCIceCandidateInit): RTCIceCandidate;\\n};\\n\\ninterface RTCIceCandidatePairChangedEvent extends Event {\\n    readonly pair: RTCIceCandidatePair;\\n}\\n\\ndeclare var RTCIceCandidatePairChangedEvent: {\\n    prototype: RTCIceCandidatePairChangedEvent;\\n    new(): RTCIceCandidatePairChangedEvent;\\n};\\n\\ninterface RTCIceGathererEventMap {\\n    \\\"error\\\": Event;\\n    \\\"localcandidate\\\": RTCIceGathererEvent;\\n}\\n\\ninterface RTCIceGatherer extends RTCStatsProvider {\\n    readonly component: RTCIceComponent;\\n    onerror: ((this: RTCIceGatherer, ev: Event) => any) | null;\\n    onlocalcandidate: ((this: RTCIceGatherer, ev: RTCIceGathererEvent) => any) | null;\\n    createAssociatedGatherer(): RTCIceGatherer;\\n    getLocalCandidates(): RTCIceCandidateDictionary[];\\n    getLocalParameters(): RTCIceParameters;\\n    addEventListener<K extends keyof RTCIceGathererEventMap>(type: K, listener: (this: RTCIceGatherer, ev: RTCIceGathererEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCIceGathererEventMap>(type: K, listener: (this: RTCIceGatherer, ev: RTCIceGathererEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCIceGatherer: {\\n    prototype: RTCIceGatherer;\\n    new(options: RTCIceGatherOptions): RTCIceGatherer;\\n};\\n\\ninterface RTCIceGathererEvent extends Event {\\n    readonly candidate: RTCIceCandidateDictionary | RTCIceCandidateComplete;\\n}\\n\\ndeclare var RTCIceGathererEvent: {\\n    prototype: RTCIceGathererEvent;\\n    new(): RTCIceGathererEvent;\\n};\\n\\ninterface RTCIceTransportEventMap {\\n    \\\"candidatepairchange\\\": RTCIceCandidatePairChangedEvent;\\n    \\\"icestatechange\\\": RTCIceTransportStateChangedEvent;\\n}\\n\\ninterface RTCIceTransport extends RTCStatsProvider {\\n    readonly component: RTCIceComponent;\\n    readonly iceGatherer: RTCIceGatherer | null;\\n    oncandidatepairchange: ((this: RTCIceTransport, ev: RTCIceCandidatePairChangedEvent) => any) | null;\\n    onicestatechange: ((this: RTCIceTransport, ev: RTCIceTransportStateChangedEvent) => any) | null;\\n    readonly role: RTCIceRole;\\n    readonly state: RTCIceTransportState;\\n    addRemoteCandidate(remoteCandidate: RTCIceCandidateDictionary | RTCIceCandidateComplete): void;\\n    createAssociatedTransport(): RTCIceTransport;\\n    getNominatedCandidatePair(): RTCIceCandidatePair | null;\\n    getRemoteCandidates(): RTCIceCandidateDictionary[];\\n    getRemoteParameters(): RTCIceParameters | null;\\n    setRemoteCandidates(remoteCandidates: RTCIceCandidateDictionary[]): void;\\n    start(gatherer: RTCIceGatherer, remoteParameters: RTCIceParameters, role?: RTCIceRole): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCIceTransportEventMap>(type: K, listener: (this: RTCIceTransport, ev: RTCIceTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCIceTransport: {\\n    prototype: RTCIceTransport;\\n    new(): RTCIceTransport;\\n};\\n\\ninterface RTCIceTransportStateChangedEvent extends Event {\\n    readonly state: RTCIceTransportState;\\n}\\n\\ndeclare var RTCIceTransportStateChangedEvent: {\\n    prototype: RTCIceTransportStateChangedEvent;\\n    new(): RTCIceTransportStateChangedEvent;\\n};\\n\\ninterface RTCPeerConnectionEventMap {\\n    \\\"addstream\\\": MediaStreamEvent;\\n    \\\"icecandidate\\\": RTCPeerConnectionIceEvent;\\n    \\\"iceconnectionstatechange\\\": Event;\\n    \\\"icegatheringstatechange\\\": Event;\\n    \\\"negotiationneeded\\\": Event;\\n    \\\"removestream\\\": MediaStreamEvent;\\n    \\\"signalingstatechange\\\": Event;\\n}\\n\\ninterface RTCPeerConnection extends EventTarget {\\n    readonly canTrickleIceCandidates: boolean | null;\\n    readonly iceConnectionState: RTCIceConnectionState;\\n    readonly iceGatheringState: RTCIceGatheringState;\\n    readonly localDescription: RTCSessionDescription | null;\\n    onaddstream: ((this: RTCPeerConnection, ev: MediaStreamEvent) => any) | null;\\n    onicecandidate: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any) | null;\\n    oniceconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    onicegatheringstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    onremovestream: ((this: RTCPeerConnection, ev: MediaStreamEvent) => any) | null;\\n    onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\\n    readonly remoteDescription: RTCSessionDescription | null;\\n    readonly signalingState: RTCSignalingState;\\n    addIceCandidate(candidate: RTCIceCandidateInit | RTCIceCandidate): Promise<void>;\\n    addStream(stream: MediaStream): void;\\n    close(): void;\\n    createAnswer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;\\n    createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;\\n    getConfiguration(): RTCConfiguration;\\n    getLocalStreams(): MediaStream[];\\n    getRemoteStreams(): MediaStream[];\\n    getStats(selector: MediaStreamTrack | null, successCallback?: RTCStatsCallback, failureCallback?: RTCPeerConnectionErrorCallback): Promise<RTCStatsReport>;\\n    getStreamById(streamId: string): MediaStream | null;\\n    removeStream(stream: MediaStream): void;\\n    setLocalDescription(description: RTCSessionDescriptionInit): Promise<void>;\\n    setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;\\n    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCPeerConnection: {\\n    prototype: RTCPeerConnection;\\n    new(configuration: RTCConfiguration): RTCPeerConnection;\\n};\\n\\ninterface RTCPeerConnectionIceEvent extends Event {\\n    readonly candidate: RTCIceCandidate;\\n}\\n\\ndeclare var RTCPeerConnectionIceEvent: {\\n    prototype: RTCPeerConnectionIceEvent;\\n    new(type: string, eventInitDict: RTCPeerConnectionIceEventInit): RTCPeerConnectionIceEvent;\\n};\\n\\ninterface RTCRtpReceiverEventMap {\\n    \\\"error\\\": Event;\\n    \\\"msdecodercapacitychange\\\": Event;\\n    \\\"msdsh\\\": Event;\\n}\\n\\ninterface RTCRtpReceiver extends RTCStatsProvider {\\n    onerror: ((this: RTCRtpReceiver, ev: Event) => any) | null;\\n    onmsdecodercapacitychange: ((this: RTCRtpReceiver, ev: Event) => any) | null;\\n    onmsdsh: ((this: RTCRtpReceiver, ev: Event) => any) | null;\\n    readonly rtcpTransport: RTCDtlsTransport;\\n    readonly track: MediaStreamTrack | null;\\n    readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;\\n    getContributingSources(): RTCRtpContributingSource[];\\n    receive(parameters: RTCRtpParameters): void;\\n    requestSendCSRC(csrc: number): void;\\n    setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCRtpReceiverEventMap>(type: K, listener: (this: RTCRtpReceiver, ev: RTCRtpReceiverEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCRtpReceiverEventMap>(type: K, listener: (this: RTCRtpReceiver, ev: RTCRtpReceiverEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCRtpReceiver: {\\n    prototype: RTCRtpReceiver;\\n    new(transport: RTCDtlsTransport | RTCSrtpSdesTransport, kind: string, rtcpTransport?: RTCDtlsTransport): RTCRtpReceiver;\\n    getCapabilities(kind?: string): RTCRtpCapabilities;\\n};\\n\\ninterface RTCRtpSenderEventMap {\\n    \\\"error\\\": Event;\\n    \\\"ssrcconflict\\\": RTCSsrcConflictEvent;\\n}\\n\\ninterface RTCRtpSender extends RTCStatsProvider {\\n    onerror: ((this: RTCRtpSender, ev: Event) => any) | null;\\n    onssrcconflict: ((this: RTCRtpSender, ev: RTCSsrcConflictEvent) => any) | null;\\n    readonly rtcpTransport: RTCDtlsTransport;\\n    readonly track: MediaStreamTrack;\\n    readonly transport: RTCDtlsTransport | RTCSrtpSdesTransport;\\n    send(parameters: RTCRtpParameters): void;\\n    setTrack(track: MediaStreamTrack): void;\\n    setTransport(transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): void;\\n    stop(): void;\\n    addEventListener<K extends keyof RTCRtpSenderEventMap>(type: K, listener: (this: RTCRtpSender, ev: RTCRtpSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCRtpSenderEventMap>(type: K, listener: (this: RTCRtpSender, ev: RTCRtpSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCRtpSender: {\\n    prototype: RTCRtpSender;\\n    new(track: MediaStreamTrack, transport: RTCDtlsTransport | RTCSrtpSdesTransport, rtcpTransport?: RTCDtlsTransport): RTCRtpSender;\\n    getCapabilities(kind?: string): RTCRtpCapabilities;\\n};\\n\\ninterface RTCSessionDescription {\\n    sdp: string | null;\\n    type: RTCSdpType | null;\\n    toJSON(): any;\\n}\\n\\ndeclare var RTCSessionDescription: {\\n    prototype: RTCSessionDescription;\\n    new(descriptionInitDict?: RTCSessionDescriptionInit): RTCSessionDescription;\\n};\\n\\ninterface RTCSrtpSdesTransportEventMap {\\n    \\\"error\\\": Event;\\n}\\n\\ninterface RTCSrtpSdesTransport extends EventTarget {\\n    onerror: ((this: RTCSrtpSdesTransport, ev: Event) => any) | null;\\n    readonly transport: RTCIceTransport;\\n    addEventListener<K extends keyof RTCSrtpSdesTransportEventMap>(type: K, listener: (this: RTCSrtpSdesTransport, ev: RTCSrtpSdesTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCSrtpSdesTransportEventMap>(type: K, listener: (this: RTCSrtpSdesTransport, ev: RTCSrtpSdesTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var RTCSrtpSdesTransport: {\\n    prototype: RTCSrtpSdesTransport;\\n    new(transport: RTCIceTransport, encryptParameters: RTCSrtpSdesParameters, decryptParameters: RTCSrtpSdesParameters): RTCSrtpSdesTransport;\\n    getLocalParameters(): RTCSrtpSdesParameters[];\\n};\\n\\ninterface RTCSsrcConflictEvent extends Event {\\n    readonly ssrc: number;\\n}\\n\\ndeclare var RTCSsrcConflictEvent: {\\n    prototype: RTCSsrcConflictEvent;\\n    new(): RTCSsrcConflictEvent;\\n};\\n\\ninterface RTCStatsProvider extends EventTarget {\\n    getStats(): Promise<RTCStatsReport>;\\n    msGetStats(): Promise<RTCStatsReport>;\\n}\\n\\ndeclare var RTCStatsProvider: {\\n    prototype: RTCStatsProvider;\\n    new(): RTCStatsProvider;\\n};\\n\\ninterface RandomSource {\\n    getRandomValues<T extends Int8Array | Uint8ClampedArray | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array>(array: T): T;\\n}\\n\\ndeclare var RandomSource: {\\n    prototype: RandomSource;\\n    new(): RandomSource;\\n};\\n\\ninterface Range {\\n    readonly collapsed: boolean;\\n    readonly commonAncestorContainer: Node;\\n    readonly endContainer: Node;\\n    readonly endOffset: number;\\n    readonly startContainer: Node;\\n    readonly startOffset: number;\\n    cloneContents(): DocumentFragment;\\n    cloneRange(): Range;\\n    collapse(toStart?: boolean): void;\\n    compareBoundaryPoints(how: number, sourceRange: Range): number;\\n    createContextualFragment(fragment: string): DocumentFragment;\\n    deleteContents(): void;\\n    detach(): void;\\n    expand(Unit: ExpandGranularity): boolean;\\n    extractContents(): DocumentFragment;\\n    getBoundingClientRect(): ClientRect | DOMRect;\\n    getClientRects(): ClientRectList | DOMRectList;\\n    insertNode(node: Node): void;\\n    isPointInRange(node: Node, offset: number): boolean;\\n    selectNode(node: Node): void;\\n    selectNodeContents(node: Node): void;\\n    setEnd(node: Node, offset: number): void;\\n    setEndAfter(node: Node): void;\\n    setEndBefore(node: Node): void;\\n    setStart(node: Node, offset: number): void;\\n    setStartAfter(node: Node): void;\\n    setStartBefore(node: Node): void;\\n    surroundContents(newParent: Node): void;\\n    toString(): string;\\n    readonly END_TO_END: number;\\n    readonly END_TO_START: number;\\n    readonly START_TO_END: number;\\n    readonly START_TO_START: number;\\n}\\n\\ndeclare var Range: {\\n    prototype: Range;\\n    new(): Range;\\n    readonly END_TO_END: number;\\n    readonly END_TO_START: number;\\n    readonly START_TO_END: number;\\n    readonly START_TO_START: number;\\n};\\n\\ninterface ReadableStream {\\n    readonly locked: boolean;\\n    cancel(): Promise<void>;\\n    getReader(): ReadableStreamReader;\\n}\\n\\ndeclare var ReadableStream: {\\n    prototype: ReadableStream;\\n    new(): ReadableStream;\\n};\\n\\ninterface ReadableStreamReader {\\n    cancel(): Promise<void>;\\n    read(): Promise<any>;\\n    releaseLock(): void;\\n}\\n\\ndeclare var ReadableStreamReader: {\\n    prototype: ReadableStreamReader;\\n    new(): ReadableStreamReader;\\n};\\n\\ninterface Request extends Body {\\n    readonly cache: RequestCache;\\n    readonly credentials: RequestCredentials;\\n    readonly destination: RequestDestination;\\n    readonly headers: Headers;\\n    readonly integrity: string;\\n    readonly keepalive: boolean;\\n    readonly method: string;\\n    readonly mode: RequestMode;\\n    readonly redirect: RequestRedirect;\\n    readonly referrer: string;\\n    readonly referrerPolicy: ReferrerPolicy;\\n    readonly signal: AbortSignal | null;\\n    readonly type: RequestType;\\n    readonly url: string;\\n    clone(): Request;\\n}\\n\\ndeclare var Request: {\\n    prototype: Request;\\n    new(input: Request | string, init?: RequestInit): Request;\\n};\\n\\ninterface Response extends Body {\\n    readonly body: ReadableStream | null;\\n    readonly headers: Headers;\\n    readonly ok: boolean;\\n    readonly redirected: boolean;\\n    readonly status: number;\\n    readonly statusText: string;\\n    readonly type: ResponseType;\\n    readonly url: string;\\n    clone(): Response;\\n}\\n\\ndeclare var Response: {\\n    prototype: Response;\\n    new(body?: Blob | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | FormData | string | null, init?: ResponseInit): Response;\\n    error(): Response;\\n    redirect(url: string, status?: number): Response;\\n};\\n\\ninterface SVGAElement extends SVGGraphicsElement, SVGURIReference {\\n    readonly target: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGAElement: {\\n    prototype: SVGAElement;\\n    new(): SVGAElement;\\n};\\n\\ninterface SVGAngle {\\n    readonly unitType: number;\\n    value: number;\\n    valueAsString: string;\\n    valueInSpecifiedUnits: number;\\n    convertToSpecifiedUnits(unitType: number): void;\\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\\n    readonly SVG_ANGLETYPE_DEG: number;\\n    readonly SVG_ANGLETYPE_GRAD: number;\\n    readonly SVG_ANGLETYPE_RAD: number;\\n    readonly SVG_ANGLETYPE_UNKNOWN: number;\\n    readonly SVG_ANGLETYPE_UNSPECIFIED: number;\\n}\\n\\ndeclare var SVGAngle: {\\n    prototype: SVGAngle;\\n    new(): SVGAngle;\\n    readonly SVG_ANGLETYPE_DEG: number;\\n    readonly SVG_ANGLETYPE_GRAD: number;\\n    readonly SVG_ANGLETYPE_RAD: number;\\n    readonly SVG_ANGLETYPE_UNKNOWN: number;\\n    readonly SVG_ANGLETYPE_UNSPECIFIED: number;\\n};\\n\\ninterface SVGAnimatedAngle {\\n    readonly animVal: SVGAngle;\\n    readonly baseVal: SVGAngle;\\n}\\n\\ndeclare var SVGAnimatedAngle: {\\n    prototype: SVGAnimatedAngle;\\n    new(): SVGAnimatedAngle;\\n};\\n\\ninterface SVGAnimatedBoolean {\\n    readonly animVal: boolean;\\n    baseVal: boolean;\\n}\\n\\ndeclare var SVGAnimatedBoolean: {\\n    prototype: SVGAnimatedBoolean;\\n    new(): SVGAnimatedBoolean;\\n};\\n\\ninterface SVGAnimatedEnumeration {\\n    readonly animVal: number;\\n    baseVal: number;\\n}\\n\\ndeclare var SVGAnimatedEnumeration: {\\n    prototype: SVGAnimatedEnumeration;\\n    new(): SVGAnimatedEnumeration;\\n};\\n\\ninterface SVGAnimatedInteger {\\n    readonly animVal: number;\\n    baseVal: number;\\n}\\n\\ndeclare var SVGAnimatedInteger: {\\n    prototype: SVGAnimatedInteger;\\n    new(): SVGAnimatedInteger;\\n};\\n\\ninterface SVGAnimatedLength {\\n    readonly animVal: SVGLength;\\n    readonly baseVal: SVGLength;\\n}\\n\\ndeclare var SVGAnimatedLength: {\\n    prototype: SVGAnimatedLength;\\n    new(): SVGAnimatedLength;\\n};\\n\\ninterface SVGAnimatedLengthList {\\n    readonly animVal: SVGLengthList;\\n    readonly baseVal: SVGLengthList;\\n}\\n\\ndeclare var SVGAnimatedLengthList: {\\n    prototype: SVGAnimatedLengthList;\\n    new(): SVGAnimatedLengthList;\\n};\\n\\ninterface SVGAnimatedNumber {\\n    readonly animVal: number;\\n    baseVal: number;\\n}\\n\\ndeclare var SVGAnimatedNumber: {\\n    prototype: SVGAnimatedNumber;\\n    new(): SVGAnimatedNumber;\\n};\\n\\ninterface SVGAnimatedNumberList {\\n    readonly animVal: SVGNumberList;\\n    readonly baseVal: SVGNumberList;\\n}\\n\\ndeclare var SVGAnimatedNumberList: {\\n    prototype: SVGAnimatedNumberList;\\n    new(): SVGAnimatedNumberList;\\n};\\n\\ninterface SVGAnimatedPoints {\\n    readonly animatedPoints: SVGPointList;\\n    readonly points: SVGPointList;\\n}\\n\\ninterface SVGAnimatedPreserveAspectRatio {\\n    readonly animVal: SVGPreserveAspectRatio;\\n    readonly baseVal: SVGPreserveAspectRatio;\\n}\\n\\ndeclare var SVGAnimatedPreserveAspectRatio: {\\n    prototype: SVGAnimatedPreserveAspectRatio;\\n    new(): SVGAnimatedPreserveAspectRatio;\\n};\\n\\ninterface SVGAnimatedRect {\\n    readonly animVal: SVGRect;\\n    readonly baseVal: SVGRect;\\n}\\n\\ndeclare var SVGAnimatedRect: {\\n    prototype: SVGAnimatedRect;\\n    new(): SVGAnimatedRect;\\n};\\n\\ninterface SVGAnimatedString {\\n    readonly animVal: string;\\n    baseVal: string;\\n}\\n\\ndeclare var SVGAnimatedString: {\\n    prototype: SVGAnimatedString;\\n    new(): SVGAnimatedString;\\n};\\n\\ninterface SVGAnimatedTransformList {\\n    readonly animVal: SVGTransformList;\\n    readonly baseVal: SVGTransformList;\\n}\\n\\ndeclare var SVGAnimatedTransformList: {\\n    prototype: SVGAnimatedTransformList;\\n    new(): SVGAnimatedTransformList;\\n};\\n\\ninterface SVGCircleElement extends SVGGraphicsElement {\\n    readonly cx: SVGAnimatedLength;\\n    readonly cy: SVGAnimatedLength;\\n    readonly r: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGCircleElement: {\\n    prototype: SVGCircleElement;\\n    new(): SVGCircleElement;\\n};\\n\\ninterface SVGClipPathElement extends SVGGraphicsElement, SVGUnitTypes {\\n    readonly clipPathUnits: SVGAnimatedEnumeration;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGClipPathElement: {\\n    prototype: SVGClipPathElement;\\n    new(): SVGClipPathElement;\\n};\\n\\ninterface SVGComponentTransferFunctionElement extends SVGElement {\\n    readonly amplitude: SVGAnimatedNumber;\\n    readonly exponent: SVGAnimatedNumber;\\n    readonly intercept: SVGAnimatedNumber;\\n    readonly offset: SVGAnimatedNumber;\\n    readonly slope: SVGAnimatedNumber;\\n    readonly tableValues: SVGAnimatedNumberList;\\n    readonly type: SVGAnimatedEnumeration;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGComponentTransferFunctionElement: {\\n    prototype: SVGComponentTransferFunctionElement;\\n    new(): SVGComponentTransferFunctionElement;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGDefsElement extends SVGGraphicsElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGDefsElement: {\\n    prototype: SVGDefsElement;\\n    new(): SVGDefsElement;\\n};\\n\\ninterface SVGDescElement extends SVGElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGDescElement: {\\n    prototype: SVGDescElement;\\n    new(): SVGDescElement;\\n};\\n\\ninterface SVGElementEventMap extends ElementEventMap {\\n    \\\"click\\\": MouseEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"focusin\\\": FocusEvent;\\n    \\\"focusout\\\": FocusEvent;\\n    \\\"load\\\": Event;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n}\\n\\ninterface SVGElement extends Element, ElementCSSInlineStyle {\\n    readonly className: any;\\n    onclick: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    ondblclick: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onfocusin: ((this: SVGElement, ev: FocusEvent) => any) | null;\\n    onfocusout: ((this: SVGElement, ev: FocusEvent) => any) | null;\\n    onload: ((this: SVGElement, ev: Event) => any) | null;\\n    onmousedown: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmousemove: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmouseout: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmouseover: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    onmouseup: ((this: SVGElement, ev: MouseEvent) => any) | null;\\n    readonly ownerSVGElement: SVGSVGElement | null;\\n    readonly viewportElement: SVGElement | null;\\n    /** @deprecated */\\n    xmlbase: string;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGElement: {\\n    prototype: SVGElement;\\n    new(): SVGElement;\\n};\\n\\ninterface SVGElementInstance extends EventTarget {\\n    readonly childNodes: SVGElementInstanceList;\\n    readonly correspondingElement: SVGElement;\\n    readonly correspondingUseElement: SVGUseElement;\\n    readonly firstChild: SVGElementInstance;\\n    readonly lastChild: SVGElementInstance;\\n    readonly nextSibling: SVGElementInstance;\\n    readonly parentNode: SVGElementInstance;\\n    readonly previousSibling: SVGElementInstance;\\n}\\n\\ndeclare var SVGElementInstance: {\\n    prototype: SVGElementInstance;\\n    new(): SVGElementInstance;\\n};\\n\\ninterface SVGElementInstanceList {\\n    /** @deprecated */\\n    readonly length: number;\\n    /** @deprecated */\\n    item(index: number): SVGElementInstance;\\n}\\n\\ndeclare var SVGElementInstanceList: {\\n    prototype: SVGElementInstanceList;\\n    new(): SVGElementInstanceList;\\n};\\n\\ninterface SVGEllipseElement extends SVGGraphicsElement {\\n    readonly cx: SVGAnimatedLength;\\n    readonly cy: SVGAnimatedLength;\\n    readonly rx: SVGAnimatedLength;\\n    readonly ry: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGEllipseElement: {\\n    prototype: SVGEllipseElement;\\n    new(): SVGEllipseElement;\\n};\\n\\ninterface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly in2: SVGAnimatedString;\\n    readonly mode: SVGAnimatedEnumeration;\\n    readonly SVG_FEBLEND_MODE_COLOR: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;\\n    readonly SVG_FEBLEND_MODE_DARKEN: number;\\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;\\n    readonly SVG_FEBLEND_MODE_EXCLUSION: number;\\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_HUE: number;\\n    readonly SVG_FEBLEND_MODE_LIGHTEN: number;\\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;\\n    readonly SVG_FEBLEND_MODE_MULTIPLY: number;\\n    readonly SVG_FEBLEND_MODE_NORMAL: number;\\n    readonly SVG_FEBLEND_MODE_OVERLAY: number;\\n    readonly SVG_FEBLEND_MODE_SATURATION: number;\\n    readonly SVG_FEBLEND_MODE_SCREEN: number;\\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEBlendElement: {\\n    prototype: SVGFEBlendElement;\\n    new(): SVGFEBlendElement;\\n    readonly SVG_FEBLEND_MODE_COLOR: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;\\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;\\n    readonly SVG_FEBLEND_MODE_DARKEN: number;\\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;\\n    readonly SVG_FEBLEND_MODE_EXCLUSION: number;\\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_HUE: number;\\n    readonly SVG_FEBLEND_MODE_LIGHTEN: number;\\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;\\n    readonly SVG_FEBLEND_MODE_MULTIPLY: number;\\n    readonly SVG_FEBLEND_MODE_NORMAL: number;\\n    readonly SVG_FEBLEND_MODE_OVERLAY: number;\\n    readonly SVG_FEBLEND_MODE_SATURATION: number;\\n    readonly SVG_FEBLEND_MODE_SCREEN: number;\\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;\\n    readonly SVG_FEBLEND_MODE_UNKNOWN: number;\\n};\\n\\ninterface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly type: SVGAnimatedEnumeration;\\n    readonly values: SVGAnimatedNumberList;\\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEColorMatrixElement: {\\n    prototype: SVGFEColorMatrixElement;\\n    new(): SVGFEColorMatrixElement;\\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;\\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEComponentTransferElement: {\\n    prototype: SVGFEComponentTransferElement;\\n    new(): SVGFEComponentTransferElement;\\n};\\n\\ninterface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly in2: SVGAnimatedString;\\n    readonly k1: SVGAnimatedNumber;\\n    readonly k2: SVGAnimatedNumber;\\n    readonly k3: SVGAnimatedNumber;\\n    readonly k4: SVGAnimatedNumber;\\n    readonly operator: SVGAnimatedEnumeration;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFECompositeElement: {\\n    prototype: SVGFECompositeElement;\\n    new(): SVGFECompositeElement;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;\\n};\\n\\ninterface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly bias: SVGAnimatedNumber;\\n    readonly divisor: SVGAnimatedNumber;\\n    readonly edgeMode: SVGAnimatedEnumeration;\\n    readonly in1: SVGAnimatedString;\\n    readonly kernelMatrix: SVGAnimatedNumberList;\\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\\n    readonly orderX: SVGAnimatedInteger;\\n    readonly orderY: SVGAnimatedInteger;\\n    readonly preserveAlpha: SVGAnimatedBoolean;\\n    readonly targetX: SVGAnimatedInteger;\\n    readonly targetY: SVGAnimatedInteger;\\n    readonly SVG_EDGEMODE_DUPLICATE: number;\\n    readonly SVG_EDGEMODE_NONE: number;\\n    readonly SVG_EDGEMODE_UNKNOWN: number;\\n    readonly SVG_EDGEMODE_WRAP: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEConvolveMatrixElement: {\\n    prototype: SVGFEConvolveMatrixElement;\\n    new(): SVGFEConvolveMatrixElement;\\n    readonly SVG_EDGEMODE_DUPLICATE: number;\\n    readonly SVG_EDGEMODE_NONE: number;\\n    readonly SVG_EDGEMODE_UNKNOWN: number;\\n    readonly SVG_EDGEMODE_WRAP: number;\\n};\\n\\ninterface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly diffuseConstant: SVGAnimatedNumber;\\n    readonly in1: SVGAnimatedString;\\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\\n    readonly surfaceScale: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEDiffuseLightingElement: {\\n    prototype: SVGFEDiffuseLightingElement;\\n    new(): SVGFEDiffuseLightingElement;\\n};\\n\\ninterface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly in2: SVGAnimatedString;\\n    readonly scale: SVGAnimatedNumber;\\n    readonly xChannelSelector: SVGAnimatedEnumeration;\\n    readonly yChannelSelector: SVGAnimatedEnumeration;\\n    readonly SVG_CHANNEL_A: number;\\n    readonly SVG_CHANNEL_B: number;\\n    readonly SVG_CHANNEL_G: number;\\n    readonly SVG_CHANNEL_R: number;\\n    readonly SVG_CHANNEL_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEDisplacementMapElement: {\\n    prototype: SVGFEDisplacementMapElement;\\n    new(): SVGFEDisplacementMapElement;\\n    readonly SVG_CHANNEL_A: number;\\n    readonly SVG_CHANNEL_B: number;\\n    readonly SVG_CHANNEL_G: number;\\n    readonly SVG_CHANNEL_R: number;\\n    readonly SVG_CHANNEL_UNKNOWN: number;\\n};\\n\\ninterface SVGFEDistantLightElement extends SVGElement {\\n    readonly azimuth: SVGAnimatedNumber;\\n    readonly elevation: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEDistantLightElement: {\\n    prototype: SVGFEDistantLightElement;\\n    new(): SVGFEDistantLightElement;\\n};\\n\\ninterface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFloodElement: {\\n    prototype: SVGFEFloodElement;\\n    new(): SVGFEFloodElement;\\n};\\n\\ninterface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncAElement: {\\n    prototype: SVGFEFuncAElement;\\n    new(): SVGFEFuncAElement;\\n};\\n\\ninterface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncBElement: {\\n    prototype: SVGFEFuncBElement;\\n    new(): SVGFEFuncBElement;\\n};\\n\\ninterface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncGElement: {\\n    prototype: SVGFEFuncGElement;\\n    new(): SVGFEFuncGElement;\\n};\\n\\ninterface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEFuncRElement: {\\n    prototype: SVGFEFuncRElement;\\n    new(): SVGFEFuncRElement;\\n};\\n\\ninterface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly stdDeviationX: SVGAnimatedNumber;\\n    readonly stdDeviationY: SVGAnimatedNumber;\\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEGaussianBlurElement: {\\n    prototype: SVGFEGaussianBlurElement;\\n    new(): SVGFEGaussianBlurElement;\\n};\\n\\ninterface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {\\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEImageElement: {\\n    prototype: SVGFEImageElement;\\n    new(): SVGFEImageElement;\\n};\\n\\ninterface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEMergeElement: {\\n    prototype: SVGFEMergeElement;\\n    new(): SVGFEMergeElement;\\n};\\n\\ninterface SVGFEMergeNodeElement extends SVGElement {\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEMergeNodeElement: {\\n    prototype: SVGFEMergeNodeElement;\\n    new(): SVGFEMergeNodeElement;\\n};\\n\\ninterface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly operator: SVGAnimatedEnumeration;\\n    readonly radiusX: SVGAnimatedNumber;\\n    readonly radiusY: SVGAnimatedNumber;\\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEMorphologyElement: {\\n    prototype: SVGFEMorphologyElement;\\n    new(): SVGFEMorphologyElement;\\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;\\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\\n};\\n\\ninterface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly dx: SVGAnimatedNumber;\\n    readonly dy: SVGAnimatedNumber;\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEOffsetElement: {\\n    prototype: SVGFEOffsetElement;\\n    new(): SVGFEOffsetElement;\\n};\\n\\ninterface SVGFEPointLightElement extends SVGElement {\\n    readonly x: SVGAnimatedNumber;\\n    readonly y: SVGAnimatedNumber;\\n    readonly z: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFEPointLightElement: {\\n    prototype: SVGFEPointLightElement;\\n    new(): SVGFEPointLightElement;\\n};\\n\\ninterface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\\n    readonly specularConstant: SVGAnimatedNumber;\\n    readonly specularExponent: SVGAnimatedNumber;\\n    readonly surfaceScale: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFESpecularLightingElement: {\\n    prototype: SVGFESpecularLightingElement;\\n    new(): SVGFESpecularLightingElement;\\n};\\n\\ninterface SVGFESpotLightElement extends SVGElement {\\n    readonly limitingConeAngle: SVGAnimatedNumber;\\n    readonly pointsAtX: SVGAnimatedNumber;\\n    readonly pointsAtY: SVGAnimatedNumber;\\n    readonly pointsAtZ: SVGAnimatedNumber;\\n    readonly specularExponent: SVGAnimatedNumber;\\n    readonly x: SVGAnimatedNumber;\\n    readonly y: SVGAnimatedNumber;\\n    readonly z: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFESpotLightElement: {\\n    prototype: SVGFESpotLightElement;\\n    new(): SVGFESpotLightElement;\\n};\\n\\ninterface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly in1: SVGAnimatedString;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFETileElement: {\\n    prototype: SVGFETileElement;\\n    new(): SVGFETileElement;\\n};\\n\\ninterface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\\n    readonly baseFrequencyX: SVGAnimatedNumber;\\n    readonly baseFrequencyY: SVGAnimatedNumber;\\n    readonly numOctaves: SVGAnimatedInteger;\\n    readonly seed: SVGAnimatedNumber;\\n    readonly stitchTiles: SVGAnimatedEnumeration;\\n    readonly type: SVGAnimatedEnumeration;\\n    readonly SVG_STITCHTYPE_NOSTITCH: number;\\n    readonly SVG_STITCHTYPE_STITCH: number;\\n    readonly SVG_STITCHTYPE_UNKNOWN: number;\\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;\\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFETurbulenceElement: {\\n    prototype: SVGFETurbulenceElement;\\n    new(): SVGFETurbulenceElement;\\n    readonly SVG_STITCHTYPE_NOSTITCH: number;\\n    readonly SVG_STITCHTYPE_STITCH: number;\\n    readonly SVG_STITCHTYPE_UNKNOWN: number;\\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;\\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGFilterElement extends SVGElement, SVGUnitTypes, SVGURIReference {\\n    /** @deprecated */\\n    readonly filterResX: SVGAnimatedInteger;\\n    /** @deprecated */\\n    readonly filterResY: SVGAnimatedInteger;\\n    readonly filterUnits: SVGAnimatedEnumeration;\\n    readonly height: SVGAnimatedLength;\\n    readonly primitiveUnits: SVGAnimatedEnumeration;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    /** @deprecated */\\n    setFilterRes(filterResX: number, filterResY: number): void;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGFilterElement: {\\n    prototype: SVGFilterElement;\\n    new(): SVGFilterElement;\\n};\\n\\ninterface SVGFilterPrimitiveStandardAttributes {\\n    readonly height: SVGAnimatedLength;\\n    readonly result: SVGAnimatedString;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n}\\n\\ninterface SVGFitToViewBox {\\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\\n    readonly viewBox: SVGAnimatedRect;\\n}\\n\\ninterface SVGForeignObjectElement extends SVGGraphicsElement {\\n    readonly height: SVGAnimatedLength;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGForeignObjectElement: {\\n    prototype: SVGForeignObjectElement;\\n    new(): SVGForeignObjectElement;\\n};\\n\\ninterface SVGGElement extends SVGGraphicsElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGGElement: {\\n    prototype: SVGGElement;\\n    new(): SVGGElement;\\n};\\n\\ninterface SVGGradientElement extends SVGElement, SVGUnitTypes, SVGURIReference {\\n    readonly gradientTransform: SVGAnimatedTransformList;\\n    readonly gradientUnits: SVGAnimatedEnumeration;\\n    readonly spreadMethod: SVGAnimatedEnumeration;\\n    readonly SVG_SPREADMETHOD_PAD: number;\\n    readonly SVG_SPREADMETHOD_REFLECT: number;\\n    readonly SVG_SPREADMETHOD_REPEAT: number;\\n    readonly SVG_SPREADMETHOD_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGGradientElement: {\\n    prototype: SVGGradientElement;\\n    new(): SVGGradientElement;\\n    readonly SVG_SPREADMETHOD_PAD: number;\\n    readonly SVG_SPREADMETHOD_REFLECT: number;\\n    readonly SVG_SPREADMETHOD_REPEAT: number;\\n    readonly SVG_SPREADMETHOD_UNKNOWN: number;\\n};\\n\\ninterface SVGGraphicsElement extends SVGElement, SVGTests {\\n    /** @deprecated */\\n    readonly farthestViewportElement: SVGElement | null;\\n    /** @deprecated */\\n    readonly nearestViewportElement: SVGElement | null;\\n    readonly transform: SVGAnimatedTransformList;\\n    getBBox(): SVGRect;\\n    getCTM(): SVGMatrix | null;\\n    getScreenCTM(): SVGMatrix | null;\\n    /** @deprecated */\\n    getTransformToElement(element: SVGElement): SVGMatrix;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGGraphicsElement: {\\n    prototype: SVGGraphicsElement;\\n    new(): SVGGraphicsElement;\\n};\\n\\ninterface SVGImageElement extends SVGGraphicsElement, SVGURIReference {\\n    readonly height: SVGAnimatedLength;\\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGImageElement: {\\n    prototype: SVGImageElement;\\n    new(): SVGImageElement;\\n};\\n\\ninterface SVGLength {\\n    readonly unitType: number;\\n    value: number;\\n    valueAsString: string;\\n    valueInSpecifiedUnits: number;\\n    convertToSpecifiedUnits(unitType: number): void;\\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\\n    readonly SVG_LENGTHTYPE_CM: number;\\n    readonly SVG_LENGTHTYPE_EMS: number;\\n    readonly SVG_LENGTHTYPE_EXS: number;\\n    readonly SVG_LENGTHTYPE_IN: number;\\n    readonly SVG_LENGTHTYPE_MM: number;\\n    readonly SVG_LENGTHTYPE_NUMBER: number;\\n    readonly SVG_LENGTHTYPE_PC: number;\\n    readonly SVG_LENGTHTYPE_PERCENTAGE: number;\\n    readonly SVG_LENGTHTYPE_PT: number;\\n    readonly SVG_LENGTHTYPE_PX: number;\\n    readonly SVG_LENGTHTYPE_UNKNOWN: number;\\n}\\n\\ndeclare var SVGLength: {\\n    prototype: SVGLength;\\n    new(): SVGLength;\\n    readonly SVG_LENGTHTYPE_CM: number;\\n    readonly SVG_LENGTHTYPE_EMS: number;\\n    readonly SVG_LENGTHTYPE_EXS: number;\\n    readonly SVG_LENGTHTYPE_IN: number;\\n    readonly SVG_LENGTHTYPE_MM: number;\\n    readonly SVG_LENGTHTYPE_NUMBER: number;\\n    readonly SVG_LENGTHTYPE_PC: number;\\n    readonly SVG_LENGTHTYPE_PERCENTAGE: number;\\n    readonly SVG_LENGTHTYPE_PT: number;\\n    readonly SVG_LENGTHTYPE_PX: number;\\n    readonly SVG_LENGTHTYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGLengthList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGLength): SVGLength;\\n    clear(): void;\\n    getItem(index: number): SVGLength;\\n    initialize(newItem: SVGLength): SVGLength;\\n    insertItemBefore(newItem: SVGLength, index: number): SVGLength;\\n    removeItem(index: number): SVGLength;\\n    replaceItem(newItem: SVGLength, index: number): SVGLength;\\n}\\n\\ndeclare var SVGLengthList: {\\n    prototype: SVGLengthList;\\n    new(): SVGLengthList;\\n};\\n\\ninterface SVGLineElement extends SVGGraphicsElement {\\n    readonly x1: SVGAnimatedLength;\\n    readonly x2: SVGAnimatedLength;\\n    readonly y1: SVGAnimatedLength;\\n    readonly y2: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGLineElement: {\\n    prototype: SVGLineElement;\\n    new(): SVGLineElement;\\n};\\n\\ninterface SVGLinearGradientElement extends SVGGradientElement {\\n    readonly x1: SVGAnimatedLength;\\n    readonly x2: SVGAnimatedLength;\\n    readonly y1: SVGAnimatedLength;\\n    readonly y2: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGLinearGradientElement: {\\n    prototype: SVGLinearGradientElement;\\n    new(): SVGLinearGradientElement;\\n};\\n\\ninterface SVGMarkerElement extends SVGElement, SVGFitToViewBox {\\n    readonly markerHeight: SVGAnimatedLength;\\n    readonly markerUnits: SVGAnimatedEnumeration;\\n    readonly markerWidth: SVGAnimatedLength;\\n    readonly orientAngle: SVGAnimatedAngle;\\n    readonly orientType: SVGAnimatedEnumeration;\\n    readonly refX: SVGAnimatedLength;\\n    readonly refY: SVGAnimatedLength;\\n    setOrientToAngle(angle: SVGAngle): void;\\n    setOrientToAuto(): void;\\n    readonly SVG_MARKERUNITS_STROKEWIDTH: number;\\n    readonly SVG_MARKERUNITS_UNKNOWN: number;\\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;\\n    readonly SVG_MARKER_ORIENT_ANGLE: number;\\n    readonly SVG_MARKER_ORIENT_AUTO: number;\\n    readonly SVG_MARKER_ORIENT_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGMarkerElement: {\\n    prototype: SVGMarkerElement;\\n    new(): SVGMarkerElement;\\n    readonly SVG_MARKERUNITS_STROKEWIDTH: number;\\n    readonly SVG_MARKERUNITS_UNKNOWN: number;\\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;\\n    readonly SVG_MARKER_ORIENT_ANGLE: number;\\n    readonly SVG_MARKER_ORIENT_AUTO: number;\\n    readonly SVG_MARKER_ORIENT_UNKNOWN: number;\\n};\\n\\ninterface SVGMaskElement extends SVGElement, SVGTests, SVGUnitTypes {\\n    readonly height: SVGAnimatedLength;\\n    readonly maskContentUnits: SVGAnimatedEnumeration;\\n    readonly maskUnits: SVGAnimatedEnumeration;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGMaskElement: {\\n    prototype: SVGMaskElement;\\n    new(): SVGMaskElement;\\n};\\n\\ninterface SVGMatrix {\\n    a: number;\\n    b: number;\\n    c: number;\\n    d: number;\\n    e: number;\\n    f: number;\\n    flipX(): SVGMatrix;\\n    flipY(): SVGMatrix;\\n    inverse(): SVGMatrix;\\n    multiply(secondMatrix: SVGMatrix): SVGMatrix;\\n    rotate(angle: number): SVGMatrix;\\n    rotateFromVector(x: number, y: number): SVGMatrix;\\n    scale(scaleFactor: number): SVGMatrix;\\n    scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\\n    skewX(angle: number): SVGMatrix;\\n    skewY(angle: number): SVGMatrix;\\n    translate(x: number, y: number): SVGMatrix;\\n}\\n\\ndeclare var SVGMatrix: {\\n    prototype: SVGMatrix;\\n    new(): SVGMatrix;\\n};\\n\\ninterface SVGMetadataElement extends SVGElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGMetadataElement: {\\n    prototype: SVGMetadataElement;\\n    new(): SVGMetadataElement;\\n};\\n\\ninterface SVGNumber {\\n    value: number;\\n}\\n\\ndeclare var SVGNumber: {\\n    prototype: SVGNumber;\\n    new(): SVGNumber;\\n};\\n\\ninterface SVGNumberList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGNumber): SVGNumber;\\n    clear(): void;\\n    getItem(index: number): SVGNumber;\\n    initialize(newItem: SVGNumber): SVGNumber;\\n    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;\\n    removeItem(index: number): SVGNumber;\\n    replaceItem(newItem: SVGNumber, index: number): SVGNumber;\\n}\\n\\ndeclare var SVGNumberList: {\\n    prototype: SVGNumberList;\\n    new(): SVGNumberList;\\n};\\n\\ninterface SVGPathElement extends SVGGraphicsElement {\\n    /** @deprecated */\\n    readonly pathSegList: SVGPathSegList;\\n    /** @deprecated */\\n    createSVGPathSegArcAbs(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: boolean, sweepFlag: boolean): SVGPathSegArcAbs;\\n    /** @deprecated */\\n    createSVGPathSegArcRel(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: boolean, sweepFlag: boolean): SVGPathSegArcRel;\\n    /** @deprecated */\\n    createSVGPathSegClosePath(): SVGPathSegClosePath;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicAbs(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicRel(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicRel;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicSmoothAbs(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoCubicSmoothRel(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothRel;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticAbs(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticRel(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticRel;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticSmoothAbs(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothAbs;\\n    /** @deprecated */\\n    createSVGPathSegCurvetoQuadraticSmoothRel(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothRel;\\n    /** @deprecated */\\n    createSVGPathSegLinetoAbs(x: number, y: number): SVGPathSegLinetoAbs;\\n    /** @deprecated */\\n    createSVGPathSegLinetoHorizontalAbs(x: number): SVGPathSegLinetoHorizontalAbs;\\n    /** @deprecated */\\n    createSVGPathSegLinetoHorizontalRel(x: number): SVGPathSegLinetoHorizontalRel;\\n    /** @deprecated */\\n    createSVGPathSegLinetoRel(x: number, y: number): SVGPathSegLinetoRel;\\n    /** @deprecated */\\n    createSVGPathSegLinetoVerticalAbs(y: number): SVGPathSegLinetoVerticalAbs;\\n    /** @deprecated */\\n    createSVGPathSegLinetoVerticalRel(y: number): SVGPathSegLinetoVerticalRel;\\n    /** @deprecated */\\n    createSVGPathSegMovetoAbs(x: number, y: number): SVGPathSegMovetoAbs;\\n    /** @deprecated */\\n    createSVGPathSegMovetoRel(x: number, y: number): SVGPathSegMovetoRel;\\n    /** @deprecated */\\n    getPathSegAtLength(distance: number): number;\\n    getPointAtLength(distance: number): SVGPoint;\\n    getTotalLength(): number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPathElement: {\\n    prototype: SVGPathElement;\\n    new(): SVGPathElement;\\n};\\n\\ninterface SVGPathSeg {\\n    readonly pathSegType: number;\\n    readonly pathSegTypeAsLetter: string;\\n    readonly PATHSEG_ARC_ABS: number;\\n    readonly PATHSEG_ARC_REL: number;\\n    readonly PATHSEG_CLOSEPATH: number;\\n    readonly PATHSEG_CURVETO_CUBIC_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_REL: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\\n    readonly PATHSEG_LINETO_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_REL: number;\\n    readonly PATHSEG_LINETO_REL: number;\\n    readonly PATHSEG_LINETO_VERTICAL_ABS: number;\\n    readonly PATHSEG_LINETO_VERTICAL_REL: number;\\n    readonly PATHSEG_MOVETO_ABS: number;\\n    readonly PATHSEG_MOVETO_REL: number;\\n    readonly PATHSEG_UNKNOWN: number;\\n}\\n\\ndeclare var SVGPathSeg: {\\n    prototype: SVGPathSeg;\\n    new(): SVGPathSeg;\\n    readonly PATHSEG_ARC_ABS: number;\\n    readonly PATHSEG_ARC_REL: number;\\n    readonly PATHSEG_CLOSEPATH: number;\\n    readonly PATHSEG_CURVETO_CUBIC_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_REL: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_REL: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\\n    readonly PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\\n    readonly PATHSEG_LINETO_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_ABS: number;\\n    readonly PATHSEG_LINETO_HORIZONTAL_REL: number;\\n    readonly PATHSEG_LINETO_REL: number;\\n    readonly PATHSEG_LINETO_VERTICAL_ABS: number;\\n    readonly PATHSEG_LINETO_VERTICAL_REL: number;\\n    readonly PATHSEG_MOVETO_ABS: number;\\n    readonly PATHSEG_MOVETO_REL: number;\\n    readonly PATHSEG_UNKNOWN: number;\\n};\\n\\ninterface SVGPathSegArcAbs extends SVGPathSeg {\\n    angle: number;\\n    largeArcFlag: boolean;\\n    r1: number;\\n    r2: number;\\n    sweepFlag: boolean;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegArcAbs: {\\n    prototype: SVGPathSegArcAbs;\\n    new(): SVGPathSegArcAbs;\\n};\\n\\ninterface SVGPathSegArcRel extends SVGPathSeg {\\n    angle: number;\\n    largeArcFlag: boolean;\\n    r1: number;\\n    r2: number;\\n    sweepFlag: boolean;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegArcRel: {\\n    prototype: SVGPathSegArcRel;\\n    new(): SVGPathSegArcRel;\\n};\\n\\ninterface SVGPathSegClosePath extends SVGPathSeg {\\n}\\n\\ndeclare var SVGPathSegClosePath: {\\n    prototype: SVGPathSegClosePath;\\n    new(): SVGPathSegClosePath;\\n};\\n\\ninterface SVGPathSegCurvetoCubicAbs extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    x2: number;\\n    y: number;\\n    y1: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicAbs: {\\n    prototype: SVGPathSegCurvetoCubicAbs;\\n    new(): SVGPathSegCurvetoCubicAbs;\\n};\\n\\ninterface SVGPathSegCurvetoCubicRel extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    x2: number;\\n    y: number;\\n    y1: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicRel: {\\n    prototype: SVGPathSegCurvetoCubicRel;\\n    new(): SVGPathSegCurvetoCubicRel;\\n};\\n\\ninterface SVGPathSegCurvetoCubicSmoothAbs extends SVGPathSeg {\\n    x: number;\\n    x2: number;\\n    y: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicSmoothAbs: {\\n    prototype: SVGPathSegCurvetoCubicSmoothAbs;\\n    new(): SVGPathSegCurvetoCubicSmoothAbs;\\n};\\n\\ninterface SVGPathSegCurvetoCubicSmoothRel extends SVGPathSeg {\\n    x: number;\\n    x2: number;\\n    y: number;\\n    y2: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoCubicSmoothRel: {\\n    prototype: SVGPathSegCurvetoCubicSmoothRel;\\n    new(): SVGPathSegCurvetoCubicSmoothRel;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticAbs extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    y: number;\\n    y1: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticAbs: {\\n    prototype: SVGPathSegCurvetoQuadraticAbs;\\n    new(): SVGPathSegCurvetoQuadraticAbs;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticRel extends SVGPathSeg {\\n    x: number;\\n    x1: number;\\n    y: number;\\n    y1: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticRel: {\\n    prototype: SVGPathSegCurvetoQuadraticRel;\\n    new(): SVGPathSegCurvetoQuadraticRel;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticSmoothAbs extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticSmoothAbs: {\\n    prototype: SVGPathSegCurvetoQuadraticSmoothAbs;\\n    new(): SVGPathSegCurvetoQuadraticSmoothAbs;\\n};\\n\\ninterface SVGPathSegCurvetoQuadraticSmoothRel extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegCurvetoQuadraticSmoothRel: {\\n    prototype: SVGPathSegCurvetoQuadraticSmoothRel;\\n    new(): SVGPathSegCurvetoQuadraticSmoothRel;\\n};\\n\\ninterface SVGPathSegLinetoAbs extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoAbs: {\\n    prototype: SVGPathSegLinetoAbs;\\n    new(): SVGPathSegLinetoAbs;\\n};\\n\\ninterface SVGPathSegLinetoHorizontalAbs extends SVGPathSeg {\\n    x: number;\\n}\\n\\ndeclare var SVGPathSegLinetoHorizontalAbs: {\\n    prototype: SVGPathSegLinetoHorizontalAbs;\\n    new(): SVGPathSegLinetoHorizontalAbs;\\n};\\n\\ninterface SVGPathSegLinetoHorizontalRel extends SVGPathSeg {\\n    x: number;\\n}\\n\\ndeclare var SVGPathSegLinetoHorizontalRel: {\\n    prototype: SVGPathSegLinetoHorizontalRel;\\n    new(): SVGPathSegLinetoHorizontalRel;\\n};\\n\\ninterface SVGPathSegLinetoRel extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoRel: {\\n    prototype: SVGPathSegLinetoRel;\\n    new(): SVGPathSegLinetoRel;\\n};\\n\\ninterface SVGPathSegLinetoVerticalAbs extends SVGPathSeg {\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoVerticalAbs: {\\n    prototype: SVGPathSegLinetoVerticalAbs;\\n    new(): SVGPathSegLinetoVerticalAbs;\\n};\\n\\ninterface SVGPathSegLinetoVerticalRel extends SVGPathSeg {\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegLinetoVerticalRel: {\\n    prototype: SVGPathSegLinetoVerticalRel;\\n    new(): SVGPathSegLinetoVerticalRel;\\n};\\n\\ninterface SVGPathSegList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGPathSeg): SVGPathSeg;\\n    clear(): void;\\n    getItem(index: number): SVGPathSeg;\\n    initialize(newItem: SVGPathSeg): SVGPathSeg;\\n    insertItemBefore(newItem: SVGPathSeg, index: number): SVGPathSeg;\\n    removeItem(index: number): SVGPathSeg;\\n    replaceItem(newItem: SVGPathSeg, index: number): SVGPathSeg;\\n}\\n\\ndeclare var SVGPathSegList: {\\n    prototype: SVGPathSegList;\\n    new(): SVGPathSegList;\\n};\\n\\ninterface SVGPathSegMovetoAbs extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegMovetoAbs: {\\n    prototype: SVGPathSegMovetoAbs;\\n    new(): SVGPathSegMovetoAbs;\\n};\\n\\ninterface SVGPathSegMovetoRel extends SVGPathSeg {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGPathSegMovetoRel: {\\n    prototype: SVGPathSegMovetoRel;\\n    new(): SVGPathSegMovetoRel;\\n};\\n\\ninterface SVGPatternElement extends SVGElement, SVGTests, SVGUnitTypes, SVGFitToViewBox, SVGURIReference {\\n    readonly height: SVGAnimatedLength;\\n    readonly patternContentUnits: SVGAnimatedEnumeration;\\n    readonly patternTransform: SVGAnimatedTransformList;\\n    readonly patternUnits: SVGAnimatedEnumeration;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPatternElement: {\\n    prototype: SVGPatternElement;\\n    new(): SVGPatternElement;\\n};\\n\\ninterface SVGPoint {\\n    x: number;\\n    y: number;\\n    matrixTransform(matrix: SVGMatrix): SVGPoint;\\n}\\n\\ndeclare var SVGPoint: {\\n    prototype: SVGPoint;\\n    new(): SVGPoint;\\n};\\n\\ninterface SVGPointList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGPoint): SVGPoint;\\n    clear(): void;\\n    getItem(index: number): SVGPoint;\\n    initialize(newItem: SVGPoint): SVGPoint;\\n    insertItemBefore(newItem: SVGPoint, index: number): SVGPoint;\\n    removeItem(index: number): SVGPoint;\\n    replaceItem(newItem: SVGPoint, index: number): SVGPoint;\\n}\\n\\ndeclare var SVGPointList: {\\n    prototype: SVGPointList;\\n    new(): SVGPointList;\\n};\\n\\ninterface SVGPolygonElement extends SVGGraphicsElement, SVGAnimatedPoints {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPolygonElement: {\\n    prototype: SVGPolygonElement;\\n    new(): SVGPolygonElement;\\n};\\n\\ninterface SVGPolylineElement extends SVGGraphicsElement, SVGAnimatedPoints {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGPolylineElement: {\\n    prototype: SVGPolylineElement;\\n    new(): SVGPolylineElement;\\n};\\n\\ninterface SVGPreserveAspectRatio {\\n    align: number;\\n    meetOrSlice: number;\\n    readonly SVG_MEETORSLICE_MEET: number;\\n    readonly SVG_MEETORSLICE_SLICE: number;\\n    readonly SVG_MEETORSLICE_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_NONE: number;\\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\\n}\\n\\ndeclare var SVGPreserveAspectRatio: {\\n    prototype: SVGPreserveAspectRatio;\\n    new(): SVGPreserveAspectRatio;\\n    readonly SVG_MEETORSLICE_MEET: number;\\n    readonly SVG_MEETORSLICE_SLICE: number;\\n    readonly SVG_MEETORSLICE_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_NONE: number;\\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;\\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\\n};\\n\\ninterface SVGRadialGradientElement extends SVGGradientElement {\\n    readonly cx: SVGAnimatedLength;\\n    readonly cy: SVGAnimatedLength;\\n    readonly fx: SVGAnimatedLength;\\n    readonly fy: SVGAnimatedLength;\\n    readonly r: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGRadialGradientElement: {\\n    prototype: SVGRadialGradientElement;\\n    new(): SVGRadialGradientElement;\\n};\\n\\ninterface SVGRect {\\n    height: number;\\n    width: number;\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var SVGRect: {\\n    prototype: SVGRect;\\n    new(): SVGRect;\\n};\\n\\ninterface SVGRectElement extends SVGGraphicsElement {\\n    readonly height: SVGAnimatedLength;\\n    readonly rx: SVGAnimatedLength;\\n    readonly ry: SVGAnimatedLength;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGRectElement: {\\n    prototype: SVGRectElement;\\n    new(): SVGRectElement;\\n};\\n\\ninterface SVGSVGElementEventMap extends SVGElementEventMap {\\n    \\\"SVGAbort\\\": Event;\\n    \\\"SVGError\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"SVGUnload\\\": Event;\\n    \\\"SVGZoom\\\": SVGZoomEvent;\\n}\\n\\ninterface SVGSVGElement extends SVGGraphicsElement, DocumentEvent, SVGFitToViewBox, SVGZoomAndPan {\\n    /** @deprecated */\\n    contentScriptType: string;\\n    /** @deprecated */\\n    contentStyleType: string;\\n    currentScale: number;\\n    readonly currentTranslate: SVGPoint;\\n    readonly height: SVGAnimatedLength;\\n    onabort: ((this: SVGSVGElement, ev: Event) => any) | null;\\n    onerror: ((this: SVGSVGElement, ev: Event) => any) | null;\\n    onresize: ((this: SVGSVGElement, ev: UIEvent) => any) | null;\\n    onscroll: ((this: SVGSVGElement, ev: UIEvent) => any) | null;\\n    onunload: ((this: SVGSVGElement, ev: Event) => any) | null;\\n    onzoom: ((this: SVGSVGElement, ev: SVGZoomEvent) => any) | null;\\n    /** @deprecated */\\n    readonly pixelUnitToMillimeterX: number;\\n    /** @deprecated */\\n    readonly pixelUnitToMillimeterY: number;\\n    /** @deprecated */\\n    readonly screenPixelToMillimeterX: number;\\n    /** @deprecated */\\n    readonly screenPixelToMillimeterY: number;\\n    /** @deprecated */\\n    readonly viewport: SVGRect;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    checkEnclosure(element: SVGElement, rect: SVGRect): boolean;\\n    checkIntersection(element: SVGElement, rect: SVGRect): boolean;\\n    createSVGAngle(): SVGAngle;\\n    createSVGLength(): SVGLength;\\n    createSVGMatrix(): SVGMatrix;\\n    createSVGNumber(): SVGNumber;\\n    createSVGPoint(): SVGPoint;\\n    createSVGRect(): SVGRect;\\n    createSVGTransform(): SVGTransform;\\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\\n    deselectAll(): void;\\n    /** @deprecated */\\n    forceRedraw(): void;\\n    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\\n    /** @deprecated */\\n    getCurrentTime(): number;\\n    getElementById(elementId: string): Element;\\n    getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\\n    getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\\n    /** @deprecated */\\n    pauseAnimations(): void;\\n    /** @deprecated */\\n    setCurrentTime(seconds: number): void;\\n    /** @deprecated */\\n    suspendRedraw(maxWaitMilliseconds: number): number;\\n    /** @deprecated */\\n    unpauseAnimations(): void;\\n    /** @deprecated */\\n    unsuspendRedraw(suspendHandleID: number): void;\\n    /** @deprecated */\\n    unsuspendRedrawAll(): void;\\n    addEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGSVGElement: {\\n    prototype: SVGSVGElement;\\n    new(): SVGSVGElement;\\n};\\n\\ninterface SVGScriptElement extends SVGElement, SVGURIReference {\\n    type: string;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGScriptElement: {\\n    prototype: SVGScriptElement;\\n    new(): SVGScriptElement;\\n};\\n\\ninterface SVGStopElement extends SVGElement {\\n    readonly offset: SVGAnimatedNumber;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGStopElement: {\\n    prototype: SVGStopElement;\\n    new(): SVGStopElement;\\n};\\n\\ninterface SVGStringList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: string): string;\\n    clear(): void;\\n    getItem(index: number): string;\\n    initialize(newItem: string): string;\\n    insertItemBefore(newItem: string, index: number): string;\\n    removeItem(index: number): string;\\n    replaceItem(newItem: string, index: number): string;\\n}\\n\\ndeclare var SVGStringList: {\\n    prototype: SVGStringList;\\n    new(): SVGStringList;\\n};\\n\\ninterface SVGStylable {\\n    className: any;\\n}\\n\\ndeclare var SVGStylable: {\\n    prototype: SVGStylable;\\n    new(): SVGStylable;\\n};\\n\\ninterface SVGStyleElement extends SVGElement {\\n    disabled: boolean;\\n    media: string;\\n    title: string;\\n    type: string;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGStyleElement: {\\n    prototype: SVGStyleElement;\\n    new(): SVGStyleElement;\\n};\\n\\ninterface SVGSwitchElement extends SVGGraphicsElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGSwitchElement: {\\n    prototype: SVGSwitchElement;\\n    new(): SVGSwitchElement;\\n};\\n\\ninterface SVGSymbolElement extends SVGElement, SVGFitToViewBox {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGSymbolElement: {\\n    prototype: SVGSymbolElement;\\n    new(): SVGSymbolElement;\\n};\\n\\ninterface SVGTSpanElement extends SVGTextPositioningElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTSpanElement: {\\n    prototype: SVGTSpanElement;\\n    new(): SVGTSpanElement;\\n};\\n\\ninterface SVGTests {\\n    readonly requiredExtensions: SVGStringList;\\n    /** @deprecated */\\n    readonly requiredFeatures: SVGStringList;\\n    readonly systemLanguage: SVGStringList;\\n    /** @deprecated */\\n    hasExtension(extension: string): boolean;\\n}\\n\\ninterface SVGTextContentElement extends SVGGraphicsElement {\\n    readonly lengthAdjust: SVGAnimatedEnumeration;\\n    readonly textLength: SVGAnimatedLength;\\n    getCharNumAtPosition(point: SVGPoint): number;\\n    getComputedTextLength(): number;\\n    getEndPositionOfChar(charnum: number): SVGPoint;\\n    getExtentOfChar(charnum: number): SVGRect;\\n    getNumberOfChars(): number;\\n    getRotationOfChar(charnum: number): number;\\n    getStartPositionOfChar(charnum: number): SVGPoint;\\n    getSubStringLength(charnum: number, nchars: number): number;\\n    selectSubString(charnum: number, nchars: number): void;\\n    readonly LENGTHADJUST_SPACING: number;\\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;\\n    readonly LENGTHADJUST_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextContentElement: {\\n    prototype: SVGTextContentElement;\\n    new(): SVGTextContentElement;\\n    readonly LENGTHADJUST_SPACING: number;\\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;\\n    readonly LENGTHADJUST_UNKNOWN: number;\\n};\\n\\ninterface SVGTextElement extends SVGTextPositioningElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextElement: {\\n    prototype: SVGTextElement;\\n    new(): SVGTextElement;\\n};\\n\\ninterface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {\\n    readonly method: SVGAnimatedEnumeration;\\n    readonly spacing: SVGAnimatedEnumeration;\\n    readonly startOffset: SVGAnimatedLength;\\n    readonly TEXTPATH_METHODTYPE_ALIGN: number;\\n    readonly TEXTPATH_METHODTYPE_STRETCH: number;\\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;\\n    readonly TEXTPATH_SPACINGTYPE_AUTO: number;\\n    readonly TEXTPATH_SPACINGTYPE_EXACT: number;\\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextPathElement: {\\n    prototype: SVGTextPathElement;\\n    new(): SVGTextPathElement;\\n    readonly TEXTPATH_METHODTYPE_ALIGN: number;\\n    readonly TEXTPATH_METHODTYPE_STRETCH: number;\\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;\\n    readonly TEXTPATH_SPACINGTYPE_AUTO: number;\\n    readonly TEXTPATH_SPACINGTYPE_EXACT: number;\\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;\\n};\\n\\ninterface SVGTextPositioningElement extends SVGTextContentElement {\\n    readonly dx: SVGAnimatedLengthList;\\n    readonly dy: SVGAnimatedLengthList;\\n    readonly rotate: SVGAnimatedNumberList;\\n    readonly x: SVGAnimatedLengthList;\\n    readonly y: SVGAnimatedLengthList;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTextPositioningElement: {\\n    prototype: SVGTextPositioningElement;\\n    new(): SVGTextPositioningElement;\\n};\\n\\ninterface SVGTitleElement extends SVGElement {\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGTitleElement: {\\n    prototype: SVGTitleElement;\\n    new(): SVGTitleElement;\\n};\\n\\ninterface SVGTransform {\\n    readonly angle: number;\\n    readonly matrix: SVGMatrix;\\n    readonly type: number;\\n    setMatrix(matrix: SVGMatrix): void;\\n    setRotate(angle: number, cx: number, cy: number): void;\\n    setScale(sx: number, sy: number): void;\\n    setSkewX(angle: number): void;\\n    setSkewY(angle: number): void;\\n    setTranslate(tx: number, ty: number): void;\\n    readonly SVG_TRANSFORM_MATRIX: number;\\n    readonly SVG_TRANSFORM_ROTATE: number;\\n    readonly SVG_TRANSFORM_SCALE: number;\\n    readonly SVG_TRANSFORM_SKEWX: number;\\n    readonly SVG_TRANSFORM_SKEWY: number;\\n    readonly SVG_TRANSFORM_TRANSLATE: number;\\n    readonly SVG_TRANSFORM_UNKNOWN: number;\\n}\\n\\ndeclare var SVGTransform: {\\n    prototype: SVGTransform;\\n    new(): SVGTransform;\\n    readonly SVG_TRANSFORM_MATRIX: number;\\n    readonly SVG_TRANSFORM_ROTATE: number;\\n    readonly SVG_TRANSFORM_SCALE: number;\\n    readonly SVG_TRANSFORM_SKEWX: number;\\n    readonly SVG_TRANSFORM_SKEWY: number;\\n    readonly SVG_TRANSFORM_TRANSLATE: number;\\n    readonly SVG_TRANSFORM_UNKNOWN: number;\\n};\\n\\ninterface SVGTransformList {\\n    readonly numberOfItems: number;\\n    appendItem(newItem: SVGTransform): SVGTransform;\\n    clear(): void;\\n    consolidate(): SVGTransform;\\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\\n    getItem(index: number): SVGTransform;\\n    initialize(newItem: SVGTransform): SVGTransform;\\n    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;\\n    removeItem(index: number): SVGTransform;\\n    replaceItem(newItem: SVGTransform, index: number): SVGTransform;\\n}\\n\\ndeclare var SVGTransformList: {\\n    prototype: SVGTransformList;\\n    new(): SVGTransformList;\\n};\\n\\ninterface SVGURIReference {\\n    readonly href: SVGAnimatedString;\\n}\\n\\ninterface SVGUnitTypes {\\n    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\\n    readonly SVG_UNIT_TYPE_UNKNOWN: number;\\n    readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;\\n}\\ndeclare var SVGUnitTypes: SVGUnitTypes;\\n\\ninterface SVGUseElement extends SVGGraphicsElement, SVGURIReference {\\n    readonly animatedInstanceRoot: SVGElementInstance | null;\\n    readonly height: SVGAnimatedLength;\\n    readonly instanceRoot: SVGElementInstance | null;\\n    readonly width: SVGAnimatedLength;\\n    readonly x: SVGAnimatedLength;\\n    readonly y: SVGAnimatedLength;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGUseElement: {\\n    prototype: SVGUseElement;\\n    new(): SVGUseElement;\\n};\\n\\ninterface SVGViewElement extends SVGElement, SVGFitToViewBox, SVGZoomAndPan {\\n    /** @deprecated */\\n    readonly viewTarget: SVGStringList;\\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SVGViewElement: {\\n    prototype: SVGViewElement;\\n    new(): SVGViewElement;\\n};\\n\\ninterface SVGZoomAndPan {\\n    readonly zoomAndPan: number;\\n}\\n\\ndeclare var SVGZoomAndPan: {\\n    readonly SVG_ZOOMANDPAN_DISABLE: number;\\n    readonly SVG_ZOOMANDPAN_MAGNIFY: number;\\n    readonly SVG_ZOOMANDPAN_UNKNOWN: number;\\n};\\n\\ninterface SVGZoomEvent extends UIEvent {\\n    readonly newScale: number;\\n    readonly newTranslate: SVGPoint;\\n    readonly previousScale: number;\\n    readonly previousTranslate: SVGPoint;\\n    readonly zoomRectScreen: SVGRect;\\n}\\n\\ndeclare var SVGZoomEvent: {\\n    prototype: SVGZoomEvent;\\n    new(): SVGZoomEvent;\\n};\\n\\ninterface ScopedCredential {\\n    readonly id: ArrayBuffer;\\n    readonly type: ScopedCredentialType;\\n}\\n\\ndeclare var ScopedCredential: {\\n    prototype: ScopedCredential;\\n    new(): ScopedCredential;\\n};\\n\\ninterface ScopedCredentialInfo {\\n    readonly credential: ScopedCredential;\\n    readonly publicKey: CryptoKey;\\n}\\n\\ndeclare var ScopedCredentialInfo: {\\n    prototype: ScopedCredentialInfo;\\n    new(): ScopedCredentialInfo;\\n};\\n\\ninterface ScreenEventMap {\\n    \\\"MSOrientationChange\\\": Event;\\n}\\n\\ninterface Screen extends EventTarget {\\n    readonly availHeight: number;\\n    readonly availWidth: number;\\n    /** @deprecated */\\n    bufferDepth: number;\\n    readonly colorDepth: number;\\n    readonly deviceXDPI: number;\\n    readonly deviceYDPI: number;\\n    readonly fontSmoothingEnabled: boolean;\\n    readonly height: number;\\n    readonly logicalXDPI: number;\\n    readonly logicalYDPI: number;\\n    readonly msOrientation: string;\\n    onmsorientationchange: ((this: Screen, ev: Event) => any) | null;\\n    readonly pixelDepth: number;\\n    readonly systemXDPI: number;\\n    readonly systemYDPI: number;\\n    readonly width: number;\\n    lockOrientation(orientations: OrientationLockType | OrientationLockType[]): boolean;\\n    msLockOrientation(orientations: string | string[]): boolean;\\n    msUnlockOrientation(): void;\\n    unlockOrientation(): void;\\n    addEventListener<K extends keyof ScreenEventMap>(type: K, listener: (this: Screen, ev: ScreenEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ScreenEventMap>(type: K, listener: (this: Screen, ev: ScreenEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Screen: {\\n    prototype: Screen;\\n    new(): Screen;\\n};\\n\\ninterface ScriptProcessorNodeEventMap {\\n    \\\"audioprocess\\\": AudioProcessingEvent;\\n}\\n\\ninterface ScriptProcessorNode extends AudioNode {\\n    /** @deprecated */\\n    readonly bufferSize: number;\\n    /** @deprecated */\\n    onaudioprocess: ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any) | null;\\n    addEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ScriptProcessorNode: {\\n    prototype: ScriptProcessorNode;\\n    new(): ScriptProcessorNode;\\n};\\n\\ninterface ScrollIntoViewOptions extends ScrollOptions {\\n    block?: ScrollLogicalPosition;\\n    inline?: ScrollLogicalPosition;\\n}\\n\\ninterface ScrollOptions {\\n    behavior?: ScrollBehavior;\\n}\\n\\ninterface ScrollToOptions extends ScrollOptions {\\n    left?: number;\\n    top?: number;\\n}\\n\\ninterface SecurityPolicyViolationEvent extends Event {\\n    readonly blockedURI: string;\\n    readonly columnNumber: number;\\n    readonly documentURI: string;\\n    readonly effectiveDirective: string;\\n    readonly lineNumber: number;\\n    readonly originalPolicy: string;\\n    readonly referrer: string;\\n    readonly sourceFile: string;\\n    readonly statusCode: number;\\n    readonly violatedDirective: string;\\n}\\n\\ndeclare var SecurityPolicyViolationEvent: {\\n    prototype: SecurityPolicyViolationEvent;\\n    new(type: string, eventInitDict?: SecurityPolicyViolationEventInit): SecurityPolicyViolationEvent;\\n};\\n\\ninterface Selection {\\n    readonly anchorNode: Node;\\n    readonly anchorOffset: number;\\n    readonly baseNode: Node;\\n    readonly baseOffset: number;\\n    readonly extentNode: Node;\\n    readonly extentOffset: number;\\n    readonly focusNode: Node;\\n    readonly focusOffset: number;\\n    readonly isCollapsed: boolean;\\n    readonly rangeCount: number;\\n    readonly type: string;\\n    addRange(range: Range): void;\\n    collapse(parentNode: Node, offset: number): void;\\n    collapseToEnd(): void;\\n    collapseToStart(): void;\\n    containsNode(node: Node, partlyContained: boolean): boolean;\\n    deleteFromDocument(): void;\\n    empty(): void;\\n    extend(newNode: Node, offset: number): void;\\n    getRangeAt(index: number): Range;\\n    removeAllRanges(): void;\\n    removeRange(range: Range): void;\\n    selectAllChildren(parentNode: Node): void;\\n    setBaseAndExtent(baseNode: Node, baseOffset: number, extentNode: Node, extentOffset: number): void;\\n    setPosition(parentNode: Node, offset: number): void;\\n    toString(): string;\\n}\\n\\ndeclare var Selection: {\\n    prototype: Selection;\\n    new(): Selection;\\n};\\n\\ninterface ServiceUIFrameContext {\\n    getCachedFrameMessage(key: string): string;\\n    postFrameMessage(key: string, data: string): void;\\n}\\ndeclare var ServiceUIFrameContext: ServiceUIFrameContext;\\n\\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\\n    \\\"statechange\\\": Event;\\n}\\n\\ninterface ServiceWorker extends EventTarget, AbstractWorker {\\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\\n    readonly scriptURL: string;\\n    readonly state: ServiceWorkerState;\\n    postMessage(message: any, transfer?: any[]): void;\\n    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ServiceWorker: {\\n    prototype: ServiceWorker;\\n    new(): ServiceWorker;\\n};\\n\\ninterface ServiceWorkerContainerEventMap {\\n    \\\"controllerchange\\\": Event;\\n    \\\"message\\\": ServiceWorkerMessageEvent;\\n    \\\"messageerror\\\": MessageEvent;\\n}\\n\\ninterface ServiceWorkerContainer extends EventTarget {\\n    readonly controller: ServiceWorker | null;\\n    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;\\n    onmessage: ((this: ServiceWorkerContainer, ev: ServiceWorkerMessageEvent) => any) | null;\\n    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\\n    readonly ready: Promise<ServiceWorkerRegistration>;\\n    getRegistration(clientURL?: string): Promise<ServiceWorkerRegistration | undefined>;\\n    getRegistrations(): Promise<ServiceWorkerRegistration[]>;\\n    register(scriptURL: string, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;\\n    startMessages(): void;\\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ServiceWorkerContainer: {\\n    prototype: ServiceWorkerContainer;\\n    new(): ServiceWorkerContainer;\\n};\\n\\ninterface ServiceWorkerMessageEvent extends Event {\\n    readonly data: any;\\n    readonly lastEventId: string;\\n    readonly origin: string;\\n    readonly ports: ReadonlyArray<MessagePort> | null;\\n    readonly source: ServiceWorker | MessagePort | null;\\n}\\n\\ndeclare var ServiceWorkerMessageEvent: {\\n    prototype: ServiceWorkerMessageEvent;\\n    new(type: string, eventInitDict?: ServiceWorkerMessageEventInit): ServiceWorkerMessageEvent;\\n};\\n\\ninterface ServiceWorkerRegistrationEventMap {\\n    \\\"updatefound\\\": Event;\\n}\\n\\ninterface ServiceWorkerRegistration extends EventTarget {\\n    readonly active: ServiceWorker | null;\\n    readonly installing: ServiceWorker | null;\\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\\n    readonly pushManager: PushManager;\\n    readonly scope: string;\\n    readonly sync: SyncManager;\\n    readonly waiting: ServiceWorker | null;\\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\\n    showNotification(title: string, options?: NotificationOptions): Promise<void>;\\n    unregister(): Promise<boolean>;\\n    update(): Promise<void>;\\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var ServiceWorkerRegistration: {\\n    prototype: ServiceWorkerRegistration;\\n    new(): ServiceWorkerRegistration;\\n};\\n\\ninterface ShadowRoot extends DocumentOrShadowRoot, DocumentFragment {\\n    readonly host: Element;\\n    innerHTML: string;\\n}\\n\\ninterface ShadowRootInit {\\n    delegatesFocus?: boolean;\\n    mode: \\\"open\\\" | \\\"closed\\\";\\n}\\n\\ninterface SourceBuffer extends EventTarget {\\n    appendWindowEnd: number;\\n    appendWindowStart: number;\\n    readonly audioTracks: AudioTrackList;\\n    readonly buffered: TimeRanges;\\n    mode: AppendMode;\\n    timestampOffset: number;\\n    readonly updating: boolean;\\n    readonly videoTracks: VideoTrackList;\\n    abort(): void;\\n    appendBuffer(data: ArrayBuffer | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    appendStream(stream: MSStream, maxSize?: number): void;\\n    remove(start: number, end: number): void;\\n}\\n\\ndeclare var SourceBuffer: {\\n    prototype: SourceBuffer;\\n    new(): SourceBuffer;\\n};\\n\\ninterface SourceBufferList extends EventTarget {\\n    readonly length: number;\\n    item(index: number): SourceBuffer;\\n    [index: number]: SourceBuffer;\\n}\\n\\ndeclare var SourceBufferList: {\\n    prototype: SourceBufferList;\\n    new(): SourceBufferList;\\n};\\n\\ninterface SpeechSynthesisEventMap {\\n    \\\"voiceschanged\\\": Event;\\n}\\n\\ninterface SpeechSynthesis extends EventTarget {\\n    onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;\\n    readonly paused: boolean;\\n    readonly pending: boolean;\\n    readonly speaking: boolean;\\n    cancel(): void;\\n    getVoices(): SpeechSynthesisVoice[];\\n    pause(): void;\\n    resume(): void;\\n    speak(utterance: SpeechSynthesisUtterance): void;\\n    addEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SpeechSynthesis: {\\n    prototype: SpeechSynthesis;\\n    new(): SpeechSynthesis;\\n};\\n\\ninterface SpeechSynthesisEvent extends Event {\\n    readonly charIndex: number;\\n    readonly charLength: number;\\n    readonly elapsedTime: number;\\n    readonly name: string;\\n    readonly utterance: SpeechSynthesisUtterance;\\n}\\n\\ndeclare var SpeechSynthesisEvent: {\\n    prototype: SpeechSynthesisEvent;\\n    new(type: string, eventInitDict?: SpeechSynthesisEventInit): SpeechSynthesisEvent;\\n};\\n\\ninterface SpeechSynthesisUtteranceEventMap {\\n    \\\"boundary\\\": Event;\\n    \\\"end\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"mark\\\": Event;\\n    \\\"pause\\\": Event;\\n    \\\"resume\\\": Event;\\n    \\\"start\\\": Event;\\n}\\n\\ninterface SpeechSynthesisUtterance extends EventTarget {\\n    lang: string;\\n    onboundary: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onend: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onerror: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onmark: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onpause: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onresume: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    onstart: ((this: SpeechSynthesisUtterance, ev: Event) => any) | null;\\n    pitch: number;\\n    rate: number;\\n    text: string;\\n    voice: SpeechSynthesisVoice;\\n    volume: number;\\n    addEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var SpeechSynthesisUtterance: {\\n    prototype: SpeechSynthesisUtterance;\\n    new(): SpeechSynthesisUtterance;\\n    new(text: string): SpeechSynthesisUtterance;\\n};\\n\\ninterface SpeechSynthesisVoice {\\n    readonly default: boolean;\\n    readonly lang: string;\\n    readonly localService: boolean;\\n    readonly name: string;\\n    readonly voiceURI: string;\\n}\\n\\ndeclare var SpeechSynthesisVoice: {\\n    prototype: SpeechSynthesisVoice;\\n    new(): SpeechSynthesisVoice;\\n};\\n\\ninterface StereoPannerNode extends AudioNode {\\n    readonly pan: AudioParam;\\n}\\n\\ndeclare var StereoPannerNode: {\\n    prototype: StereoPannerNode;\\n    new(): StereoPannerNode;\\n};\\n\\ninterface Storage {\\n    readonly length: number;\\n    clear(): void;\\n    getItem(key: string): string | null;\\n    key(index: number): string | null;\\n    removeItem(key: string): void;\\n    setItem(key: string, value: string): void;\\n    [key: string]: any;\\n}\\n\\ndeclare var Storage: {\\n    prototype: Storage;\\n    new(): Storage;\\n};\\n\\ninterface StorageEvent extends Event {\\n    readonly key: string | null;\\n    readonly newValue: string | null;\\n    readonly oldValue: string | null;\\n    readonly storageArea: Storage | null;\\n    readonly url: string;\\n}\\n\\ndeclare var StorageEvent: {\\n    prototype: StorageEvent;\\n    new (type: string, eventInitDict?: StorageEventInit): StorageEvent;\\n};\\n\\ninterface StorageEventInit extends EventInit {\\n    key?: string;\\n    newValue?: string;\\n    oldValue?: string;\\n    storageArea?: Storage;\\n    url: string;\\n}\\n\\ninterface StyleMedia {\\n    readonly type: string;\\n    matchMedium(mediaquery: string): boolean;\\n}\\n\\ndeclare var StyleMedia: {\\n    prototype: StyleMedia;\\n    new(): StyleMedia;\\n};\\n\\ninterface StyleSheet {\\n    disabled: boolean;\\n    readonly href: string | null;\\n    readonly media: MediaList;\\n    readonly ownerNode: Node;\\n    readonly parentStyleSheet: StyleSheet | null;\\n    readonly title: string | null;\\n    readonly type: string;\\n}\\n\\ndeclare var StyleSheet: {\\n    prototype: StyleSheet;\\n    new(): StyleSheet;\\n};\\n\\ninterface StyleSheetList {\\n    readonly length: number;\\n    item(index: number): StyleSheet | null;\\n    [index: number]: StyleSheet;\\n}\\n\\ndeclare var StyleSheetList: {\\n    prototype: StyleSheetList;\\n    new(): StyleSheetList;\\n};\\n\\ninterface SubtleCrypto {\\n    decrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    deriveBits(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, length: number): PromiseLike<ArrayBuffer>;\\n    deriveKey(algorithm: string | EcdhKeyDeriveParams | DhKeyDeriveParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: string | AesDerivedKeyParams | HmacImportParams | ConcatParams | HkdfCtrParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    digest(algorithm: string | Algorithm, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    encrypt(algorithm: string | RsaOaepParams | AesCtrParams | AesCbcParams | AesCmacParams | AesGcmParams | AesCfbParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    exportKey(format: \\\"jwk\\\", key: CryptoKey): PromiseLike<JsonWebKey>;\\n    exportKey(format: \\\"raw\\\" | \\\"pkcs8\\\" | \\\"spki\\\", key: CryptoKey): PromiseLike<ArrayBuffer>;\\n    exportKey(format: string, key: CryptoKey): PromiseLike<JsonWebKey | ArrayBuffer>;\\n    generateKey(algorithm: string, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair | CryptoKey>;\\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKeyPair>;\\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    importKey(format: \\\"jwk\\\", keyData: JsonWebKey, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    importKey(format: \\\"raw\\\" | \\\"pkcs8\\\" | \\\"spki\\\", keyData: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    importKey(format: string, keyData: JsonWebKey | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, algorithm: string | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | DhImportKeyParams, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    sign(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<ArrayBuffer>;\\n    unwrapKey(format: string, wrappedKey: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: string | Algorithm, unwrappedKeyAlgorithm: string | Algorithm, extractable: boolean, keyUsages: string[]): PromiseLike<CryptoKey>;\\n    verify(algorithm: string | RsaPssParams | EcdsaParams | AesCmacParams, key: CryptoKey, signature: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer): PromiseLike<boolean>;\\n    wrapKey(format: string, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: string | Algorithm): PromiseLike<ArrayBuffer>;\\n}\\n\\ndeclare var SubtleCrypto: {\\n    prototype: SubtleCrypto;\\n    new(): SubtleCrypto;\\n};\\n\\ninterface SyncManager {\\n    getTags(): Promise<string[]>;\\n    register(tag: string): Promise<void>;\\n}\\n\\ndeclare var SyncManager: {\\n    prototype: SyncManager;\\n    new(): SyncManager;\\n};\\n\\ninterface Text extends CharacterData {\\n    readonly assignedSlot: HTMLSlotElement | null;\\n    readonly wholeText: string;\\n    splitText(offset: number): Text;\\n}\\n\\ndeclare var Text: {\\n    prototype: Text;\\n    new(data?: string): Text;\\n};\\n\\ninterface TextDecoder {\\n    readonly encoding: string;\\n    readonly fatal: boolean;\\n    readonly ignoreBOM: boolean;\\n    decode(input?: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: TextDecodeOptions): string;\\n}\\n\\ndeclare var TextDecoder: {\\n    prototype: TextDecoder;\\n    new(label?: string, options?: TextDecoderOptions): TextDecoder;\\n};\\n\\ninterface TextEncoder {\\n    readonly encoding: string;\\n    encode(input?: string): Uint8Array;\\n}\\n\\ndeclare var TextEncoder: {\\n    prototype: TextEncoder;\\n    new(): TextEncoder;\\n};\\n\\ninterface TextEvent extends UIEvent {\\n    readonly data: string;\\n    initTextEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, inputMethod: number, locale: string): void;\\n    readonly DOM_INPUT_METHOD_DROP: number;\\n    readonly DOM_INPUT_METHOD_HANDWRITING: number;\\n    readonly DOM_INPUT_METHOD_IME: number;\\n    readonly DOM_INPUT_METHOD_KEYBOARD: number;\\n    readonly DOM_INPUT_METHOD_MULTIMODAL: number;\\n    readonly DOM_INPUT_METHOD_OPTION: number;\\n    readonly DOM_INPUT_METHOD_PASTE: number;\\n    readonly DOM_INPUT_METHOD_SCRIPT: number;\\n    readonly DOM_INPUT_METHOD_UNKNOWN: number;\\n    readonly DOM_INPUT_METHOD_VOICE: number;\\n}\\n\\ndeclare var TextEvent: {\\n    prototype: TextEvent;\\n    new(): TextEvent;\\n    readonly DOM_INPUT_METHOD_DROP: number;\\n    readonly DOM_INPUT_METHOD_HANDWRITING: number;\\n    readonly DOM_INPUT_METHOD_IME: number;\\n    readonly DOM_INPUT_METHOD_KEYBOARD: number;\\n    readonly DOM_INPUT_METHOD_MULTIMODAL: number;\\n    readonly DOM_INPUT_METHOD_OPTION: number;\\n    readonly DOM_INPUT_METHOD_PASTE: number;\\n    readonly DOM_INPUT_METHOD_SCRIPT: number;\\n    readonly DOM_INPUT_METHOD_UNKNOWN: number;\\n    readonly DOM_INPUT_METHOD_VOICE: number;\\n};\\n\\ninterface TextMetrics {\\n    readonly width: number;\\n}\\n\\ndeclare var TextMetrics: {\\n    prototype: TextMetrics;\\n    new(): TextMetrics;\\n};\\n\\ninterface TextTrackEventMap {\\n    \\\"cuechange\\\": Event;\\n    \\\"error\\\": Event;\\n    \\\"load\\\": Event;\\n}\\n\\ninterface TextTrack extends EventTarget {\\n    readonly activeCues: TextTrackCueList;\\n    readonly cues: TextTrackCueList;\\n    readonly inBandMetadataTrackDispatchType: string;\\n    readonly kind: string;\\n    readonly label: string;\\n    readonly language: string;\\n    mode: TextTrackMode | number;\\n    oncuechange: ((this: TextTrack, ev: Event) => any) | null;\\n    onerror: ((this: TextTrack, ev: Event) => any) | null;\\n    onload: ((this: TextTrack, ev: Event) => any) | null;\\n    readonly readyState: number;\\n    addCue(cue: TextTrackCue): void;\\n    removeCue(cue: TextTrackCue): void;\\n    readonly DISABLED: number;\\n    readonly ERROR: number;\\n    readonly HIDDEN: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n    readonly SHOWING: number;\\n    addEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var TextTrack: {\\n    prototype: TextTrack;\\n    new(): TextTrack;\\n    readonly DISABLED: number;\\n    readonly ERROR: number;\\n    readonly HIDDEN: number;\\n    readonly LOADED: number;\\n    readonly LOADING: number;\\n    readonly NONE: number;\\n    readonly SHOWING: number;\\n};\\n\\ninterface TextTrackCueEventMap {\\n    \\\"enter\\\": Event;\\n    \\\"exit\\\": Event;\\n}\\n\\ninterface TextTrackCue extends EventTarget {\\n    endTime: number;\\n    id: string;\\n    onenter: ((this: TextTrackCue, ev: Event) => any) | null;\\n    onexit: ((this: TextTrackCue, ev: Event) => any) | null;\\n    pauseOnExit: boolean;\\n    startTime: number;\\n    text: string;\\n    readonly track: TextTrack;\\n    getCueAsHTML(): DocumentFragment;\\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var TextTrackCue: {\\n    prototype: TextTrackCue;\\n    new(startTime: number, endTime: number, text: string): TextTrackCue;\\n};\\n\\ninterface TextTrackCueList {\\n    readonly length: number;\\n    getCueById(id: string): TextTrackCue;\\n    item(index: number): TextTrackCue;\\n    [index: number]: TextTrackCue;\\n}\\n\\ndeclare var TextTrackCueList: {\\n    prototype: TextTrackCueList;\\n    new(): TextTrackCueList;\\n};\\n\\ninterface TextTrackListEventMap {\\n    \\\"addtrack\\\": TrackEvent;\\n}\\n\\ninterface TextTrackList extends EventTarget {\\n    readonly length: number;\\n    onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;\\n    item(index: number): TextTrack;\\n    addEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [index: number]: TextTrack;\\n}\\n\\ndeclare var TextTrackList: {\\n    prototype: TextTrackList;\\n    new(): TextTrackList;\\n};\\n\\ninterface TimeRanges {\\n    readonly length: number;\\n    end(index: number): number;\\n    start(index: number): number;\\n}\\n\\ndeclare var TimeRanges: {\\n    prototype: TimeRanges;\\n    new(): TimeRanges;\\n};\\n\\ninterface Touch {\\n    readonly clientX: number;\\n    readonly clientY: number;\\n    readonly identifier: number;\\n    readonly pageX: number;\\n    readonly pageY: number;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly target: EventTarget;\\n}\\n\\ndeclare var Touch: {\\n    prototype: Touch;\\n    new(): Touch;\\n};\\n\\ninterface TouchEvent extends UIEvent {\\n    readonly altKey: boolean;\\n    readonly changedTouches: TouchList;\\n    readonly charCode: number;\\n    readonly ctrlKey: boolean;\\n    readonly keyCode: number;\\n    readonly metaKey: boolean;\\n    readonly shiftKey: boolean;\\n    readonly targetTouches: TouchList;\\n    readonly touches: TouchList;\\n    /** @deprecated */\\n    readonly which: number;\\n}\\n\\ndeclare var TouchEvent: {\\n    prototype: TouchEvent;\\n    new(type: string, touchEventInit?: TouchEventInit): TouchEvent;\\n};\\n\\ninterface TouchEventInit extends EventModifierInit {\\n    changedTouches?: Touch[];\\n    targetTouches?: Touch[];\\n    touches?: Touch[];\\n}\\n\\ninterface TouchList {\\n    readonly length: number;\\n    item(index: number): Touch | null;\\n    [index: number]: Touch;\\n}\\n\\ndeclare var TouchList: {\\n    prototype: TouchList;\\n    new(): TouchList;\\n};\\n\\ninterface TrackEvent extends Event {\\n    readonly track: VideoTrack | AudioTrack | TextTrack | null;\\n}\\n\\ndeclare var TrackEvent: {\\n    prototype: TrackEvent;\\n    new(typeArg: string, eventInitDict?: TrackEventInit): TrackEvent;\\n};\\n\\ninterface TransitionEvent extends Event {\\n    readonly elapsedTime: number;\\n    readonly propertyName: string;\\n    initTransitionEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, propertyNameArg: string, elapsedTimeArg: number): void;\\n}\\n\\ndeclare var TransitionEvent: {\\n    prototype: TransitionEvent;\\n    new(typeArg: string, eventInitDict?: TransitionEventInit): TransitionEvent;\\n};\\n\\ninterface TreeWalker {\\n    currentNode: Node;\\n    /** @deprecated */\\n    readonly expandEntityReferences: boolean;\\n    readonly filter: NodeFilter | null;\\n    readonly root: Node;\\n    readonly whatToShow: number;\\n    firstChild(): Node | null;\\n    lastChild(): Node | null;\\n    nextNode(): Node | null;\\n    nextSibling(): Node | null;\\n    parentNode(): Node | null;\\n    previousNode(): Node | null;\\n    previousSibling(): Node | null;\\n}\\n\\ndeclare var TreeWalker: {\\n    prototype: TreeWalker;\\n    new(): TreeWalker;\\n};\\n\\ninterface UIEvent extends Event {\\n    readonly detail: number;\\n    readonly view: Window;\\n    initUIEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number): void;\\n}\\n\\ndeclare var UIEvent: {\\n    prototype: UIEvent;\\n    new(typeArg: string, eventInitDict?: UIEventInit): UIEvent;\\n};\\n\\ninterface URL {\\n    hash: string;\\n    host: string;\\n    hostname: string;\\n    href: string;\\n    readonly origin: string;\\n    password: string;\\n    pathname: string;\\n    port: string;\\n    protocol: string;\\n    search: string;\\n    readonly searchParams: URLSearchParams;\\n    username: string;\\n    toString(): string;\\n}\\n\\ndeclare var URL: {\\n    prototype: URL;\\n    new(url: string, base?: string | URL): URL;\\n    createObjectURL(object: any, options?: ObjectURLOptions): string;\\n    revokeObjectURL(url: string): void;\\n};\\n\\ninterface URLSearchParams {\\n    /**\\n     * Appends a specified key/value pair as a new search parameter.\\n     */\\n    append(name: string, value: string): void;\\n    /**\\n     * Deletes the given search parameter, and its associated value, from the list of all search parameters.\\n     */\\n    delete(name: string): void;\\n    /**\\n     * Returns the first value associated to the given search parameter.\\n     */\\n    get(name: string): string | null;\\n    /**\\n     * Returns all the values association with a given search parameter.\\n     */\\n    getAll(name: string): string[];\\n    /**\\n     * Returns a Boolean indicating if such a search parameter exists.\\n     */\\n    has(name: string): boolean;\\n    /**\\n     * Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\\n     */\\n    set(name: string, value: string): void;\\n}\\n\\ndeclare var URLSearchParams: {\\n    prototype: URLSearchParams;\\n    new (init?: string | URLSearchParams): URLSearchParams;\\n};\\n\\ninterface VRDisplay extends EventTarget {\\n    readonly capabilities: VRDisplayCapabilities;\\n    depthFar: number;\\n    depthNear: number;\\n    readonly displayId: number;\\n    readonly displayName: string;\\n    readonly isConnected: boolean;\\n    readonly isPresenting: boolean;\\n    readonly stageParameters: VRStageParameters | null;\\n    cancelAnimationFrame(handle: number): void;\\n    exitPresent(): Promise<void>;\\n    getEyeParameters(whichEye: string): VREyeParameters;\\n    getFrameData(frameData: VRFrameData): boolean;\\n    getLayers(): VRLayer[];\\n    /** @deprecated */\\n    getPose(): VRPose;\\n    requestAnimationFrame(callback: FrameRequestCallback): number;\\n    requestPresent(layers: VRLayer[]): Promise<void>;\\n    resetPose(): void;\\n    submitFrame(pose?: VRPose): void;\\n}\\n\\ndeclare var VRDisplay: {\\n    prototype: VRDisplay;\\n    new(): VRDisplay;\\n};\\n\\ninterface VRDisplayCapabilities {\\n    readonly canPresent: boolean;\\n    readonly hasExternalDisplay: boolean;\\n    readonly hasOrientation: boolean;\\n    readonly hasPosition: boolean;\\n    readonly maxLayers: number;\\n}\\n\\ndeclare var VRDisplayCapabilities: {\\n    prototype: VRDisplayCapabilities;\\n    new(): VRDisplayCapabilities;\\n};\\n\\ninterface VRDisplayEvent extends Event {\\n    readonly display: VRDisplay;\\n    readonly reason: VRDisplayEventReason | null;\\n}\\n\\ndeclare var VRDisplayEvent: {\\n    prototype: VRDisplayEvent;\\n    new(type: string, eventInitDict: VRDisplayEventInit): VRDisplayEvent;\\n};\\n\\ninterface VREyeParameters {\\n    /** @deprecated */\\n    readonly fieldOfView: VRFieldOfView;\\n    readonly offset: Float32Array;\\n    readonly renderHeight: number;\\n    readonly renderWidth: number;\\n}\\n\\ndeclare var VREyeParameters: {\\n    prototype: VREyeParameters;\\n    new(): VREyeParameters;\\n};\\n\\ninterface VRFieldOfView {\\n    readonly downDegrees: number;\\n    readonly leftDegrees: number;\\n    readonly rightDegrees: number;\\n    readonly upDegrees: number;\\n}\\n\\ndeclare var VRFieldOfView: {\\n    prototype: VRFieldOfView;\\n    new(): VRFieldOfView;\\n};\\n\\ninterface VRFrameData {\\n    readonly leftProjectionMatrix: Float32Array;\\n    readonly leftViewMatrix: Float32Array;\\n    readonly pose: VRPose;\\n    readonly rightProjectionMatrix: Float32Array;\\n    readonly rightViewMatrix: Float32Array;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var VRFrameData: {\\n    prototype: VRFrameData;\\n    new(): VRFrameData;\\n};\\n\\ninterface VRPose {\\n    readonly angularAcceleration: Float32Array | null;\\n    readonly angularVelocity: Float32Array | null;\\n    readonly linearAcceleration: Float32Array | null;\\n    readonly linearVelocity: Float32Array | null;\\n    readonly orientation: Float32Array | null;\\n    readonly position: Float32Array | null;\\n    readonly timestamp: number;\\n}\\n\\ndeclare var VRPose: {\\n    prototype: VRPose;\\n    new(): VRPose;\\n};\\n\\ninterface ValidityState {\\n    readonly badInput: boolean;\\n    readonly customError: boolean;\\n    readonly patternMismatch: boolean;\\n    readonly rangeOverflow: boolean;\\n    readonly rangeUnderflow: boolean;\\n    readonly stepMismatch: boolean;\\n    readonly tooLong: boolean;\\n    readonly tooShort: boolean;\\n    readonly typeMismatch: boolean;\\n    readonly valid: boolean;\\n    readonly valueMissing: boolean;\\n}\\n\\ndeclare var ValidityState: {\\n    prototype: ValidityState;\\n    new(): ValidityState;\\n};\\n\\ninterface VideoPlaybackQuality {\\n    readonly corruptedVideoFrames: number;\\n    readonly creationTime: number;\\n    readonly droppedVideoFrames: number;\\n    readonly totalFrameDelay: number;\\n    readonly totalVideoFrames: number;\\n}\\n\\ndeclare var VideoPlaybackQuality: {\\n    prototype: VideoPlaybackQuality;\\n    new(): VideoPlaybackQuality;\\n};\\n\\ninterface VideoTrack {\\n    readonly id: string;\\n    kind: string;\\n    readonly label: string;\\n    language: string;\\n    selected: boolean;\\n    readonly sourceBuffer: SourceBuffer;\\n}\\n\\ndeclare var VideoTrack: {\\n    prototype: VideoTrack;\\n    new(): VideoTrack;\\n};\\n\\ninterface VideoTrackListEventMap {\\n    \\\"addtrack\\\": TrackEvent;\\n    \\\"change\\\": Event;\\n    \\\"removetrack\\\": TrackEvent;\\n}\\n\\ninterface VideoTrackList extends EventTarget {\\n    readonly length: number;\\n    onaddtrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;\\n    onchange: ((this: VideoTrackList, ev: Event) => any) | null;\\n    onremovetrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;\\n    readonly selectedIndex: number;\\n    getTrackById(id: string): VideoTrack | null;\\n    item(index: number): VideoTrack;\\n    addEventListener<K extends keyof VideoTrackListEventMap>(type: K, listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof VideoTrackListEventMap>(type: K, listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n    [index: number]: VideoTrack;\\n}\\n\\ndeclare var VideoTrackList: {\\n    prototype: VideoTrackList;\\n    new(): VideoTrackList;\\n};\\n\\ninterface WEBGL_color_buffer_float {\\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: number;\\n    readonly RGB32F_EXT: number;\\n    readonly RGBA32F_EXT: number;\\n    readonly UNSIGNED_NORMALIZED_EXT: number;\\n}\\n\\ninterface WEBGL_compressed_texture_astc {\\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: number;\\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: number;\\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: number;\\n    getSupportedProfiles(): string[];\\n}\\n\\ninterface WEBGL_compressed_texture_s3tc {\\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: number;\\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: number;\\n}\\n\\ndeclare var WEBGL_compressed_texture_s3tc: {\\n    prototype: WEBGL_compressed_texture_s3tc;\\n    new(): WEBGL_compressed_texture_s3tc;\\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: number;\\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: number;\\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: number;\\n};\\n\\ninterface WEBGL_compressed_texture_s3tc_srgb {\\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: number;\\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: number;\\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: number;\\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: number;\\n}\\n\\ninterface WEBGL_debug_renderer_info {\\n    readonly UNMASKED_RENDERER_WEBGL: number;\\n    readonly UNMASKED_VENDOR_WEBGL: number;\\n}\\n\\ndeclare var WEBGL_debug_renderer_info: {\\n    prototype: WEBGL_debug_renderer_info;\\n    new(): WEBGL_debug_renderer_info;\\n    readonly UNMASKED_RENDERER_WEBGL: number;\\n    readonly UNMASKED_VENDOR_WEBGL: number;\\n};\\n\\ninterface WEBGL_debug_shaders {\\n    getTranslatedShaderSource(shader: WebGLShader): string;\\n}\\n\\ninterface WEBGL_depth_texture {\\n    readonly UNSIGNED_INT_24_8_WEBGL: number;\\n}\\n\\ndeclare var WEBGL_depth_texture: {\\n    prototype: WEBGL_depth_texture;\\n    new(): WEBGL_depth_texture;\\n    readonly UNSIGNED_INT_24_8_WEBGL: number;\\n};\\n\\ninterface WEBGL_draw_buffers {\\n    readonly COLOR_ATTACHMENT0_WEBGL: number;\\n    readonly COLOR_ATTACHMENT10_WEBGL: number;\\n    readonly COLOR_ATTACHMENT11_WEBGL: number;\\n    readonly COLOR_ATTACHMENT12_WEBGL: number;\\n    readonly COLOR_ATTACHMENT13_WEBGL: number;\\n    readonly COLOR_ATTACHMENT14_WEBGL: number;\\n    readonly COLOR_ATTACHMENT15_WEBGL: number;\\n    readonly COLOR_ATTACHMENT1_WEBGL: number;\\n    readonly COLOR_ATTACHMENT2_WEBGL: number;\\n    readonly COLOR_ATTACHMENT3_WEBGL: number;\\n    readonly COLOR_ATTACHMENT4_WEBGL: number;\\n    readonly COLOR_ATTACHMENT5_WEBGL: number;\\n    readonly COLOR_ATTACHMENT6_WEBGL: number;\\n    readonly COLOR_ATTACHMENT7_WEBGL: number;\\n    readonly COLOR_ATTACHMENT8_WEBGL: number;\\n    readonly COLOR_ATTACHMENT9_WEBGL: number;\\n    readonly DRAW_BUFFER0_WEBGL: number;\\n    readonly DRAW_BUFFER10_WEBGL: number;\\n    readonly DRAW_BUFFER11_WEBGL: number;\\n    readonly DRAW_BUFFER12_WEBGL: number;\\n    readonly DRAW_BUFFER13_WEBGL: number;\\n    readonly DRAW_BUFFER14_WEBGL: number;\\n    readonly DRAW_BUFFER15_WEBGL: number;\\n    readonly DRAW_BUFFER1_WEBGL: number;\\n    readonly DRAW_BUFFER2_WEBGL: number;\\n    readonly DRAW_BUFFER3_WEBGL: number;\\n    readonly DRAW_BUFFER4_WEBGL: number;\\n    readonly DRAW_BUFFER5_WEBGL: number;\\n    readonly DRAW_BUFFER6_WEBGL: number;\\n    readonly DRAW_BUFFER7_WEBGL: number;\\n    readonly DRAW_BUFFER8_WEBGL: number;\\n    readonly DRAW_BUFFER9_WEBGL: number;\\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: number;\\n    readonly MAX_DRAW_BUFFERS_WEBGL: number;\\n    drawBuffersWEBGL(buffers: number[]): void;\\n}\\n\\ninterface WEBGL_lose_context {\\n    loseContext(): void;\\n    restoreContext(): void;\\n}\\n\\ninterface WaveShaperNode extends AudioNode {\\n    curve: Float32Array | null;\\n    oversample: OverSampleType;\\n}\\n\\ndeclare var WaveShaperNode: {\\n    prototype: WaveShaperNode;\\n    new(): WaveShaperNode;\\n};\\n\\ninterface WebAuthentication {\\n    getAssertion(assertionChallenge: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: AssertionOptions): Promise<WebAuthnAssertion>;\\n    makeCredential(accountInformation: Account, cryptoParameters: ScopedCredentialParameters[], attestationChallenge: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, options?: ScopedCredentialOptions): Promise<ScopedCredentialInfo>;\\n}\\n\\ndeclare var WebAuthentication: {\\n    prototype: WebAuthentication;\\n    new(): WebAuthentication;\\n};\\n\\ninterface WebAuthnAssertion {\\n    readonly authenticatorData: ArrayBuffer;\\n    readonly clientData: ArrayBuffer;\\n    readonly credential: ScopedCredential;\\n    readonly signature: ArrayBuffer;\\n}\\n\\ndeclare var WebAuthnAssertion: {\\n    prototype: WebAuthnAssertion;\\n    new(): WebAuthnAssertion;\\n};\\n\\ninterface WebGLActiveInfo {\\n    readonly name: string;\\n    readonly size: number;\\n    readonly type: number;\\n}\\n\\ndeclare var WebGLActiveInfo: {\\n    prototype: WebGLActiveInfo;\\n    new(): WebGLActiveInfo;\\n};\\n\\ninterface WebGLBuffer extends WebGLObject {\\n}\\n\\ndeclare var WebGLBuffer: {\\n    prototype: WebGLBuffer;\\n    new(): WebGLBuffer;\\n};\\n\\ninterface WebGLContextEvent extends Event {\\n    readonly statusMessage: string;\\n}\\n\\ndeclare var WebGLContextEvent: {\\n    prototype: WebGLContextEvent;\\n    new(typeArg: string, eventInitDict?: WebGLContextEventInit): WebGLContextEvent;\\n};\\n\\ninterface WebGLFramebuffer extends WebGLObject {\\n}\\n\\ndeclare var WebGLFramebuffer: {\\n    prototype: WebGLFramebuffer;\\n    new(): WebGLFramebuffer;\\n};\\n\\ninterface WebGLObject {\\n}\\n\\ndeclare var WebGLObject: {\\n    prototype: WebGLObject;\\n    new(): WebGLObject;\\n};\\n\\ninterface WebGLProgram extends WebGLObject {\\n}\\n\\ndeclare var WebGLProgram: {\\n    prototype: WebGLProgram;\\n    new(): WebGLProgram;\\n};\\n\\ninterface WebGLRenderbuffer extends WebGLObject {\\n}\\n\\ndeclare var WebGLRenderbuffer: {\\n    prototype: WebGLRenderbuffer;\\n    new(): WebGLRenderbuffer;\\n};\\n\\ninterface WebGLRenderingContext {\\n    readonly canvas: HTMLCanvasElement;\\n    readonly drawingBufferHeight: number;\\n    readonly drawingBufferWidth: number;\\n    activeTexture(texture: number): void;\\n    attachShader(program: WebGLProgram | null, shader: WebGLShader | null): void;\\n    bindAttribLocation(program: WebGLProgram | null, index: number, name: string): void;\\n    bindBuffer(target: number, buffer: WebGLBuffer | null): void;\\n    bindFramebuffer(target: number, framebuffer: WebGLFramebuffer | null): void;\\n    bindRenderbuffer(target: number, renderbuffer: WebGLRenderbuffer | null): void;\\n    bindTexture(target: number, texture: WebGLTexture | null): void;\\n    blendColor(red: number, green: number, blue: number, alpha: number): void;\\n    blendEquation(mode: number): void;\\n    blendEquationSeparate(modeRGB: number, modeAlpha: number): void;\\n    blendFunc(sfactor: number, dfactor: number): void;\\n    blendFuncSeparate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void;\\n    bufferData(target: number, size: number | Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, usage: number): void;\\n    bufferSubData(target: number, offset: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null): void;\\n    checkFramebufferStatus(target: number): number;\\n    clear(mask: number): void;\\n    clearColor(red: number, green: number, blue: number, alpha: number): void;\\n    clearDepth(depth: number): void;\\n    clearStencil(s: number): void;\\n    colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean): void;\\n    compileShader(shader: WebGLShader | null): void;\\n    compressedTexImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    compressedTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, data: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    copyTexImage2D(target: number, level: number, internalformat: number, x: number, y: number, width: number, height: number, border: number): void;\\n    copyTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number): void;\\n    createBuffer(): WebGLBuffer | null;\\n    createFramebuffer(): WebGLFramebuffer | null;\\n    createProgram(): WebGLProgram | null;\\n    createRenderbuffer(): WebGLRenderbuffer | null;\\n    createShader(type: number): WebGLShader | null;\\n    createTexture(): WebGLTexture | null;\\n    cullFace(mode: number): void;\\n    deleteBuffer(buffer: WebGLBuffer | null): void;\\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\\n    deleteProgram(program: WebGLProgram | null): void;\\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\\n    deleteShader(shader: WebGLShader | null): void;\\n    deleteTexture(texture: WebGLTexture | null): void;\\n    depthFunc(func: number): void;\\n    depthMask(flag: boolean): void;\\n    depthRange(zNear: number, zFar: number): void;\\n    detachShader(program: WebGLProgram | null, shader: WebGLShader | null): void;\\n    disable(cap: number): void;\\n    disableVertexAttribArray(index: number): void;\\n    drawArrays(mode: number, first: number, count: number): void;\\n    drawElements(mode: number, count: number, type: number, offset: number): void;\\n    enable(cap: number): void;\\n    enableVertexAttribArray(index: number): void;\\n    finish(): void;\\n    flush(): void;\\n    framebufferRenderbuffer(target: number, attachment: number, renderbuffertarget: number, renderbuffer: WebGLRenderbuffer | null): void;\\n    framebufferTexture2D(target: number, attachment: number, textarget: number, texture: WebGLTexture | null, level: number): void;\\n    frontFace(mode: number): void;\\n    generateMipmap(target: number): void;\\n    getActiveAttrib(program: WebGLProgram | null, index: number): WebGLActiveInfo | null;\\n    getActiveUniform(program: WebGLProgram | null, index: number): WebGLActiveInfo | null;\\n    getAttachedShaders(program: WebGLProgram | null): WebGLShader[] | null;\\n    getAttribLocation(program: WebGLProgram | null, name: string): number;\\n    getBufferParameter(target: number, pname: number): any;\\n    getContextAttributes(): WebGLContextAttributes;\\n    getError(): number;\\n    getExtension(extensionName: \\\"EXT_blend_minmax\\\"): EXT_blend_minmax | null;\\n    getExtension(extensionName: \\\"EXT_texture_filter_anisotropic\\\"): EXT_texture_filter_anisotropic | null;\\n    getExtension(extensionName: \\\"EXT_frag_depth\\\"): EXT_frag_depth | null;\\n    getExtension(extensionName: \\\"EXT_shader_texture_lod\\\"): EXT_shader_texture_lod | null;\\n    getExtension(extensionName: \\\"EXT_sRGB\\\"): EXT_sRGB | null;\\n    getExtension(extensionName: \\\"OES_vertex_array_object\\\"): OES_vertex_array_object | null;\\n    getExtension(extensionName: \\\"WEBGL_color_buffer_float\\\"): WEBGL_color_buffer_float | null;\\n    getExtension(extensionName: \\\"WEBGL_compressed_texture_astc\\\"): WEBGL_compressed_texture_astc | null;\\n    getExtension(extensionName: \\\"WEBGL_compressed_texture_s3tc_srgb\\\"): WEBGL_compressed_texture_s3tc_srgb | null;\\n    getExtension(extensionName: \\\"WEBGL_debug_shaders\\\"): WEBGL_debug_shaders | null;\\n    getExtension(extensionName: \\\"WEBGL_draw_buffers\\\"): WEBGL_draw_buffers | null;\\n    getExtension(extensionName: \\\"WEBGL_lose_context\\\"): WEBGL_lose_context | null;\\n    getExtension(extensionName: \\\"WEBGL_depth_texture\\\"): WEBGL_depth_texture | null;\\n    getExtension(extensionName: \\\"WEBGL_debug_renderer_info\\\"): WEBGL_debug_renderer_info | null;\\n    getExtension(extensionName: \\\"WEBGL_compressed_texture_s3tc\\\"): WEBGL_compressed_texture_s3tc | null;\\n    getExtension(extensionName: \\\"OES_texture_half_float_linear\\\"): OES_texture_half_float_linear | null;\\n    getExtension(extensionName: \\\"OES_texture_half_float\\\"): OES_texture_half_float | null;\\n    getExtension(extensionName: \\\"OES_texture_float_linear\\\"): OES_texture_float_linear | null;\\n    getExtension(extensionName: \\\"OES_texture_float\\\"): OES_texture_float | null;\\n    getExtension(extensionName: \\\"OES_standard_derivatives\\\"): OES_standard_derivatives | null;\\n    getExtension(extensionName: \\\"OES_element_index_uint\\\"): OES_element_index_uint | null;\\n    getExtension(extensionName: \\\"ANGLE_instanced_arrays\\\"): ANGLE_instanced_arrays | null;\\n    getExtension(extensionName: string): any;\\n    getFramebufferAttachmentParameter(target: number, attachment: number, pname: number): any;\\n    getParameter(pname: number): any;\\n    getProgramInfoLog(program: WebGLProgram | null): string | null;\\n    getProgramParameter(program: WebGLProgram | null, pname: number): any;\\n    getRenderbufferParameter(target: number, pname: number): any;\\n    getShaderInfoLog(shader: WebGLShader | null): string | null;\\n    getShaderParameter(shader: WebGLShader | null, pname: number): any;\\n    getShaderPrecisionFormat(shadertype: number, precisiontype: number): WebGLShaderPrecisionFormat | null;\\n    getShaderSource(shader: WebGLShader | null): string | null;\\n    getSupportedExtensions(): string[] | null;\\n    getTexParameter(target: number, pname: number): any;\\n    getUniform(program: WebGLProgram | null, location: WebGLUniformLocation | null): any;\\n    getUniformLocation(program: WebGLProgram | null, name: string): WebGLUniformLocation | null;\\n    getVertexAttrib(index: number, pname: number): any;\\n    getVertexAttribOffset(index: number, pname: number): number;\\n    hint(target: number, mode: number): void;\\n    isBuffer(buffer: WebGLBuffer | null): boolean;\\n    isContextLost(): boolean;\\n    isEnabled(cap: number): boolean;\\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): boolean;\\n    isProgram(program: WebGLProgram | null): boolean;\\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): boolean;\\n    isShader(shader: WebGLShader | null): boolean;\\n    isTexture(texture: WebGLTexture | null): boolean;\\n    lineWidth(width: number): void;\\n    linkProgram(program: WebGLProgram | null): void;\\n    pixelStorei(pname: number, param: number | boolean): void;\\n    polygonOffset(factor: number, units: number): void;\\n    readPixels(x: number, y: number, width: number, height: number, format: number, type: number, pixels: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | null): void;\\n    renderbufferStorage(target: number, internalformat: number, width: number, height: number): void;\\n    sampleCoverage(value: number, invert: boolean): void;\\n    scissor(x: number, y: number, width: number, height: number): void;\\n    shaderSource(shader: WebGLShader | null, source: string): void;\\n    stencilFunc(func: number, ref: number, mask: number): void;\\n    stencilFuncSeparate(face: number, func: number, ref: number, mask: number): void;\\n    stencilMask(mask: number): void;\\n    stencilMaskSeparate(face: number, mask: number): void;\\n    stencilOp(fail: number, zfail: number, zpass: number): void;\\n    stencilOpSeparate(face: number, fail: number, zfail: number, zpass: number): void;\\n    texImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, format: number, type: number, pixels: ArrayBufferView | null): void;\\n    texImage2D(target: number, level: number, internalformat: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void;\\n    texParameterf(target: number, pname: number, param: number): void;\\n    texParameteri(target: number, pname: number, param: number): void;\\n    texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView | null): void;\\n    texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, pixels: ImageBitmap | ImageData | HTMLVideoElement | HTMLImageElement | HTMLCanvasElement): void;\\n    uniform1f(location: WebGLUniformLocation | null, x: number): void;\\n    uniform1fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform1i(location: WebGLUniformLocation | null, x: number): void;\\n    uniform1iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniform2f(location: WebGLUniformLocation | null, x: number, y: number): void;\\n    uniform2fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform2i(location: WebGLUniformLocation | null, x: number, y: number): void;\\n    uniform2iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniform3f(location: WebGLUniformLocation | null, x: number, y: number, z: number): void;\\n    uniform3fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform3i(location: WebGLUniformLocation | null, x: number, y: number, z: number): void;\\n    uniform3iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniform4f(location: WebGLUniformLocation | null, x: number, y: number, z: number, w: number): void;\\n    uniform4fv(location: WebGLUniformLocation, v: Float32Array | ArrayLike<number>): void;\\n    uniform4i(location: WebGLUniformLocation | null, x: number, y: number, z: number, w: number): void;\\n    uniform4iv(location: WebGLUniformLocation, v: Int32Array | ArrayLike<number>): void;\\n    uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void;\\n    uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void;\\n    uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array | ArrayLike<number>): void;\\n    useProgram(program: WebGLProgram | null): void;\\n    validateProgram(program: WebGLProgram | null): void;\\n    vertexAttrib1f(indx: number, x: number): void;\\n    vertexAttrib1fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttrib2f(indx: number, x: number, y: number): void;\\n    vertexAttrib2fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttrib3f(indx: number, x: number, y: number, z: number): void;\\n    vertexAttrib3fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttrib4f(indx: number, x: number, y: number, z: number, w: number): void;\\n    vertexAttrib4fv(indx: number, values: Float32Array | number[]): void;\\n    vertexAttribPointer(indx: number, size: number, type: number, normalized: boolean, stride: number, offset: number): void;\\n    viewport(x: number, y: number, width: number, height: number): void;\\n    readonly ACTIVE_ATTRIBUTES: number;\\n    readonly ACTIVE_TEXTURE: number;\\n    readonly ACTIVE_UNIFORMS: number;\\n    readonly ALIASED_LINE_WIDTH_RANGE: number;\\n    readonly ALIASED_POINT_SIZE_RANGE: number;\\n    readonly ALPHA: number;\\n    readonly ALPHA_BITS: number;\\n    readonly ALWAYS: number;\\n    readonly ARRAY_BUFFER: number;\\n    readonly ARRAY_BUFFER_BINDING: number;\\n    readonly ATTACHED_SHADERS: number;\\n    readonly BACK: number;\\n    readonly BLEND: number;\\n    readonly BLEND_COLOR: number;\\n    readonly BLEND_DST_ALPHA: number;\\n    readonly BLEND_DST_RGB: number;\\n    readonly BLEND_EQUATION: number;\\n    readonly BLEND_EQUATION_ALPHA: number;\\n    readonly BLEND_EQUATION_RGB: number;\\n    readonly BLEND_SRC_ALPHA: number;\\n    readonly BLEND_SRC_RGB: number;\\n    readonly BLUE_BITS: number;\\n    readonly BOOL: number;\\n    readonly BOOL_VEC2: number;\\n    readonly BOOL_VEC3: number;\\n    readonly BOOL_VEC4: number;\\n    readonly BROWSER_DEFAULT_WEBGL: number;\\n    readonly BUFFER_SIZE: number;\\n    readonly BUFFER_USAGE: number;\\n    readonly BYTE: number;\\n    readonly CCW: number;\\n    readonly CLAMP_TO_EDGE: number;\\n    readonly COLOR_ATTACHMENT0: number;\\n    readonly COLOR_BUFFER_BIT: number;\\n    readonly COLOR_CLEAR_VALUE: number;\\n    readonly COLOR_WRITEMASK: number;\\n    readonly COMPILE_STATUS: number;\\n    readonly COMPRESSED_TEXTURE_FORMATS: number;\\n    readonly CONSTANT_ALPHA: number;\\n    readonly CONSTANT_COLOR: number;\\n    readonly CONTEXT_LOST_WEBGL: number;\\n    readonly CULL_FACE: number;\\n    readonly CULL_FACE_MODE: number;\\n    readonly CURRENT_PROGRAM: number;\\n    readonly CURRENT_VERTEX_ATTRIB: number;\\n    readonly CW: number;\\n    readonly DECR: number;\\n    readonly DECR_WRAP: number;\\n    readonly DELETE_STATUS: number;\\n    readonly DEPTH_ATTACHMENT: number;\\n    readonly DEPTH_BITS: number;\\n    readonly DEPTH_BUFFER_BIT: number;\\n    readonly DEPTH_CLEAR_VALUE: number;\\n    readonly DEPTH_COMPONENT: number;\\n    readonly DEPTH_COMPONENT16: number;\\n    readonly DEPTH_FUNC: number;\\n    readonly DEPTH_RANGE: number;\\n    readonly DEPTH_STENCIL: number;\\n    readonly DEPTH_STENCIL_ATTACHMENT: number;\\n    readonly DEPTH_TEST: number;\\n    readonly DEPTH_WRITEMASK: number;\\n    readonly DITHER: number;\\n    readonly DONT_CARE: number;\\n    readonly DST_ALPHA: number;\\n    readonly DST_COLOR: number;\\n    readonly DYNAMIC_DRAW: number;\\n    readonly ELEMENT_ARRAY_BUFFER: number;\\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: number;\\n    readonly EQUAL: number;\\n    readonly FASTEST: number;\\n    readonly FLOAT: number;\\n    readonly FLOAT_MAT2: number;\\n    readonly FLOAT_MAT3: number;\\n    readonly FLOAT_MAT4: number;\\n    readonly FLOAT_VEC2: number;\\n    readonly FLOAT_VEC3: number;\\n    readonly FLOAT_VEC4: number;\\n    readonly FRAGMENT_SHADER: number;\\n    readonly FRAMEBUFFER: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;\\n    readonly FRAMEBUFFER_BINDING: number;\\n    readonly FRAMEBUFFER_COMPLETE: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_UNSUPPORTED: number;\\n    readonly FRONT: number;\\n    readonly FRONT_AND_BACK: number;\\n    readonly FRONT_FACE: number;\\n    readonly FUNC_ADD: number;\\n    readonly FUNC_REVERSE_SUBTRACT: number;\\n    readonly FUNC_SUBTRACT: number;\\n    readonly GENERATE_MIPMAP_HINT: number;\\n    readonly GEQUAL: number;\\n    readonly GREATER: number;\\n    readonly GREEN_BITS: number;\\n    readonly HIGH_FLOAT: number;\\n    readonly HIGH_INT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: number;\\n    readonly INCR: number;\\n    readonly INCR_WRAP: number;\\n    readonly INT: number;\\n    readonly INT_VEC2: number;\\n    readonly INT_VEC3: number;\\n    readonly INT_VEC4: number;\\n    readonly INVALID_ENUM: number;\\n    readonly INVALID_FRAMEBUFFER_OPERATION: number;\\n    readonly INVALID_OPERATION: number;\\n    readonly INVALID_VALUE: number;\\n    readonly INVERT: number;\\n    readonly KEEP: number;\\n    readonly LEQUAL: number;\\n    readonly LESS: number;\\n    readonly LINEAR: number;\\n    readonly LINEAR_MIPMAP_LINEAR: number;\\n    readonly LINEAR_MIPMAP_NEAREST: number;\\n    readonly LINES: number;\\n    readonly LINE_LOOP: number;\\n    readonly LINE_STRIP: number;\\n    readonly LINE_WIDTH: number;\\n    readonly LINK_STATUS: number;\\n    readonly LOW_FLOAT: number;\\n    readonly LOW_INT: number;\\n    readonly LUMINANCE: number;\\n    readonly LUMINANCE_ALPHA: number;\\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: number;\\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: number;\\n    readonly MAX_RENDERBUFFER_SIZE: number;\\n    readonly MAX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_TEXTURE_SIZE: number;\\n    readonly MAX_VARYING_VECTORS: number;\\n    readonly MAX_VERTEX_ATTRIBS: number;\\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_VERTEX_UNIFORM_VECTORS: number;\\n    readonly MAX_VIEWPORT_DIMS: number;\\n    readonly MEDIUM_FLOAT: number;\\n    readonly MEDIUM_INT: number;\\n    readonly MIRRORED_REPEAT: number;\\n    readonly NEAREST: number;\\n    readonly NEAREST_MIPMAP_LINEAR: number;\\n    readonly NEAREST_MIPMAP_NEAREST: number;\\n    readonly NEVER: number;\\n    readonly NICEST: number;\\n    readonly NONE: number;\\n    readonly NOTEQUAL: number;\\n    readonly NO_ERROR: number;\\n    readonly ONE: number;\\n    readonly ONE_MINUS_CONSTANT_ALPHA: number;\\n    readonly ONE_MINUS_CONSTANT_COLOR: number;\\n    readonly ONE_MINUS_DST_ALPHA: number;\\n    readonly ONE_MINUS_DST_COLOR: number;\\n    readonly ONE_MINUS_SRC_ALPHA: number;\\n    readonly ONE_MINUS_SRC_COLOR: number;\\n    readonly OUT_OF_MEMORY: number;\\n    readonly PACK_ALIGNMENT: number;\\n    readonly POINTS: number;\\n    readonly POLYGON_OFFSET_FACTOR: number;\\n    readonly POLYGON_OFFSET_FILL: number;\\n    readonly POLYGON_OFFSET_UNITS: number;\\n    readonly RED_BITS: number;\\n    readonly RENDERBUFFER: number;\\n    readonly RENDERBUFFER_ALPHA_SIZE: number;\\n    readonly RENDERBUFFER_BINDING: number;\\n    readonly RENDERBUFFER_BLUE_SIZE: number;\\n    readonly RENDERBUFFER_DEPTH_SIZE: number;\\n    readonly RENDERBUFFER_GREEN_SIZE: number;\\n    readonly RENDERBUFFER_HEIGHT: number;\\n    readonly RENDERBUFFER_INTERNAL_FORMAT: number;\\n    readonly RENDERBUFFER_RED_SIZE: number;\\n    readonly RENDERBUFFER_STENCIL_SIZE: number;\\n    readonly RENDERBUFFER_WIDTH: number;\\n    readonly RENDERER: number;\\n    readonly REPEAT: number;\\n    readonly REPLACE: number;\\n    readonly RGB: number;\\n    readonly RGB565: number;\\n    readonly RGB5_A1: number;\\n    readonly RGBA: number;\\n    readonly RGBA4: number;\\n    readonly SAMPLER_2D: number;\\n    readonly SAMPLER_CUBE: number;\\n    readonly SAMPLES: number;\\n    readonly SAMPLE_ALPHA_TO_COVERAGE: number;\\n    readonly SAMPLE_BUFFERS: number;\\n    readonly SAMPLE_COVERAGE: number;\\n    readonly SAMPLE_COVERAGE_INVERT: number;\\n    readonly SAMPLE_COVERAGE_VALUE: number;\\n    readonly SCISSOR_BOX: number;\\n    readonly SCISSOR_TEST: number;\\n    readonly SHADER_TYPE: number;\\n    readonly SHADING_LANGUAGE_VERSION: number;\\n    readonly SHORT: number;\\n    readonly SRC_ALPHA: number;\\n    readonly SRC_ALPHA_SATURATE: number;\\n    readonly SRC_COLOR: number;\\n    readonly STATIC_DRAW: number;\\n    readonly STENCIL_ATTACHMENT: number;\\n    readonly STENCIL_BACK_FAIL: number;\\n    readonly STENCIL_BACK_FUNC: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_BACK_REF: number;\\n    readonly STENCIL_BACK_VALUE_MASK: number;\\n    readonly STENCIL_BACK_WRITEMASK: number;\\n    readonly STENCIL_BITS: number;\\n    readonly STENCIL_BUFFER_BIT: number;\\n    readonly STENCIL_CLEAR_VALUE: number;\\n    readonly STENCIL_FAIL: number;\\n    readonly STENCIL_FUNC: number;\\n    readonly STENCIL_INDEX: number;\\n    readonly STENCIL_INDEX8: number;\\n    readonly STENCIL_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_REF: number;\\n    readonly STENCIL_TEST: number;\\n    readonly STENCIL_VALUE_MASK: number;\\n    readonly STENCIL_WRITEMASK: number;\\n    readonly STREAM_DRAW: number;\\n    readonly SUBPIXEL_BITS: number;\\n    readonly TEXTURE: number;\\n    readonly TEXTURE0: number;\\n    readonly TEXTURE1: number;\\n    readonly TEXTURE10: number;\\n    readonly TEXTURE11: number;\\n    readonly TEXTURE12: number;\\n    readonly TEXTURE13: number;\\n    readonly TEXTURE14: number;\\n    readonly TEXTURE15: number;\\n    readonly TEXTURE16: number;\\n    readonly TEXTURE17: number;\\n    readonly TEXTURE18: number;\\n    readonly TEXTURE19: number;\\n    readonly TEXTURE2: number;\\n    readonly TEXTURE20: number;\\n    readonly TEXTURE21: number;\\n    readonly TEXTURE22: number;\\n    readonly TEXTURE23: number;\\n    readonly TEXTURE24: number;\\n    readonly TEXTURE25: number;\\n    readonly TEXTURE26: number;\\n    readonly TEXTURE27: number;\\n    readonly TEXTURE28: number;\\n    readonly TEXTURE29: number;\\n    readonly TEXTURE3: number;\\n    readonly TEXTURE30: number;\\n    readonly TEXTURE31: number;\\n    readonly TEXTURE4: number;\\n    readonly TEXTURE5: number;\\n    readonly TEXTURE6: number;\\n    readonly TEXTURE7: number;\\n    readonly TEXTURE8: number;\\n    readonly TEXTURE9: number;\\n    readonly TEXTURE_2D: number;\\n    readonly TEXTURE_BINDING_2D: number;\\n    readonly TEXTURE_BINDING_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: number;\\n    readonly TEXTURE_MAG_FILTER: number;\\n    readonly TEXTURE_MIN_FILTER: number;\\n    readonly TEXTURE_WRAP_S: number;\\n    readonly TEXTURE_WRAP_T: number;\\n    readonly TRIANGLES: number;\\n    readonly TRIANGLE_FAN: number;\\n    readonly TRIANGLE_STRIP: number;\\n    readonly UNPACK_ALIGNMENT: number;\\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: number;\\n    readonly UNPACK_FLIP_Y_WEBGL: number;\\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;\\n    readonly UNSIGNED_BYTE: number;\\n    readonly UNSIGNED_INT: number;\\n    readonly UNSIGNED_SHORT: number;\\n    readonly UNSIGNED_SHORT_4_4_4_4: number;\\n    readonly UNSIGNED_SHORT_5_5_5_1: number;\\n    readonly UNSIGNED_SHORT_5_6_5: number;\\n    readonly VALIDATE_STATUS: number;\\n    readonly VENDOR: number;\\n    readonly VERSION: number;\\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;\\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: number;\\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: number;\\n    readonly VERTEX_SHADER: number;\\n    readonly VIEWPORT: number;\\n    readonly ZERO: number;\\n}\\n\\ndeclare var WebGLRenderingContext: {\\n    prototype: WebGLRenderingContext;\\n    new(): WebGLRenderingContext;\\n    readonly ACTIVE_ATTRIBUTES: number;\\n    readonly ACTIVE_TEXTURE: number;\\n    readonly ACTIVE_UNIFORMS: number;\\n    readonly ALIASED_LINE_WIDTH_RANGE: number;\\n    readonly ALIASED_POINT_SIZE_RANGE: number;\\n    readonly ALPHA: number;\\n    readonly ALPHA_BITS: number;\\n    readonly ALWAYS: number;\\n    readonly ARRAY_BUFFER: number;\\n    readonly ARRAY_BUFFER_BINDING: number;\\n    readonly ATTACHED_SHADERS: number;\\n    readonly BACK: number;\\n    readonly BLEND: number;\\n    readonly BLEND_COLOR: number;\\n    readonly BLEND_DST_ALPHA: number;\\n    readonly BLEND_DST_RGB: number;\\n    readonly BLEND_EQUATION: number;\\n    readonly BLEND_EQUATION_ALPHA: number;\\n    readonly BLEND_EQUATION_RGB: number;\\n    readonly BLEND_SRC_ALPHA: number;\\n    readonly BLEND_SRC_RGB: number;\\n    readonly BLUE_BITS: number;\\n    readonly BOOL: number;\\n    readonly BOOL_VEC2: number;\\n    readonly BOOL_VEC3: number;\\n    readonly BOOL_VEC4: number;\\n    readonly BROWSER_DEFAULT_WEBGL: number;\\n    readonly BUFFER_SIZE: number;\\n    readonly BUFFER_USAGE: number;\\n    readonly BYTE: number;\\n    readonly CCW: number;\\n    readonly CLAMP_TO_EDGE: number;\\n    readonly COLOR_ATTACHMENT0: number;\\n    readonly COLOR_BUFFER_BIT: number;\\n    readonly COLOR_CLEAR_VALUE: number;\\n    readonly COLOR_WRITEMASK: number;\\n    readonly COMPILE_STATUS: number;\\n    readonly COMPRESSED_TEXTURE_FORMATS: number;\\n    readonly CONSTANT_ALPHA: number;\\n    readonly CONSTANT_COLOR: number;\\n    readonly CONTEXT_LOST_WEBGL: number;\\n    readonly CULL_FACE: number;\\n    readonly CULL_FACE_MODE: number;\\n    readonly CURRENT_PROGRAM: number;\\n    readonly CURRENT_VERTEX_ATTRIB: number;\\n    readonly CW: number;\\n    readonly DECR: number;\\n    readonly DECR_WRAP: number;\\n    readonly DELETE_STATUS: number;\\n    readonly DEPTH_ATTACHMENT: number;\\n    readonly DEPTH_BITS: number;\\n    readonly DEPTH_BUFFER_BIT: number;\\n    readonly DEPTH_CLEAR_VALUE: number;\\n    readonly DEPTH_COMPONENT: number;\\n    readonly DEPTH_COMPONENT16: number;\\n    readonly DEPTH_FUNC: number;\\n    readonly DEPTH_RANGE: number;\\n    readonly DEPTH_STENCIL: number;\\n    readonly DEPTH_STENCIL_ATTACHMENT: number;\\n    readonly DEPTH_TEST: number;\\n    readonly DEPTH_WRITEMASK: number;\\n    readonly DITHER: number;\\n    readonly DONT_CARE: number;\\n    readonly DST_ALPHA: number;\\n    readonly DST_COLOR: number;\\n    readonly DYNAMIC_DRAW: number;\\n    readonly ELEMENT_ARRAY_BUFFER: number;\\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: number;\\n    readonly EQUAL: number;\\n    readonly FASTEST: number;\\n    readonly FLOAT: number;\\n    readonly FLOAT_MAT2: number;\\n    readonly FLOAT_MAT3: number;\\n    readonly FLOAT_MAT4: number;\\n    readonly FLOAT_VEC2: number;\\n    readonly FLOAT_VEC3: number;\\n    readonly FLOAT_VEC4: number;\\n    readonly FRAGMENT_SHADER: number;\\n    readonly FRAMEBUFFER: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;\\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;\\n    readonly FRAMEBUFFER_BINDING: number;\\n    readonly FRAMEBUFFER_COMPLETE: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;\\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;\\n    readonly FRAMEBUFFER_UNSUPPORTED: number;\\n    readonly FRONT: number;\\n    readonly FRONT_AND_BACK: number;\\n    readonly FRONT_FACE: number;\\n    readonly FUNC_ADD: number;\\n    readonly FUNC_REVERSE_SUBTRACT: number;\\n    readonly FUNC_SUBTRACT: number;\\n    readonly GENERATE_MIPMAP_HINT: number;\\n    readonly GEQUAL: number;\\n    readonly GREATER: number;\\n    readonly GREEN_BITS: number;\\n    readonly HIGH_FLOAT: number;\\n    readonly HIGH_INT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: number;\\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: number;\\n    readonly INCR: number;\\n    readonly INCR_WRAP: number;\\n    readonly INT: number;\\n    readonly INT_VEC2: number;\\n    readonly INT_VEC3: number;\\n    readonly INT_VEC4: number;\\n    readonly INVALID_ENUM: number;\\n    readonly INVALID_FRAMEBUFFER_OPERATION: number;\\n    readonly INVALID_OPERATION: number;\\n    readonly INVALID_VALUE: number;\\n    readonly INVERT: number;\\n    readonly KEEP: number;\\n    readonly LEQUAL: number;\\n    readonly LESS: number;\\n    readonly LINEAR: number;\\n    readonly LINEAR_MIPMAP_LINEAR: number;\\n    readonly LINEAR_MIPMAP_NEAREST: number;\\n    readonly LINES: number;\\n    readonly LINE_LOOP: number;\\n    readonly LINE_STRIP: number;\\n    readonly LINE_WIDTH: number;\\n    readonly LINK_STATUS: number;\\n    readonly LOW_FLOAT: number;\\n    readonly LOW_INT: number;\\n    readonly LUMINANCE: number;\\n    readonly LUMINANCE_ALPHA: number;\\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: number;\\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: number;\\n    readonly MAX_RENDERBUFFER_SIZE: number;\\n    readonly MAX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_TEXTURE_SIZE: number;\\n    readonly MAX_VARYING_VECTORS: number;\\n    readonly MAX_VERTEX_ATTRIBS: number;\\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;\\n    readonly MAX_VERTEX_UNIFORM_VECTORS: number;\\n    readonly MAX_VIEWPORT_DIMS: number;\\n    readonly MEDIUM_FLOAT: number;\\n    readonly MEDIUM_INT: number;\\n    readonly MIRRORED_REPEAT: number;\\n    readonly NEAREST: number;\\n    readonly NEAREST_MIPMAP_LINEAR: number;\\n    readonly NEAREST_MIPMAP_NEAREST: number;\\n    readonly NEVER: number;\\n    readonly NICEST: number;\\n    readonly NONE: number;\\n    readonly NOTEQUAL: number;\\n    readonly NO_ERROR: number;\\n    readonly ONE: number;\\n    readonly ONE_MINUS_CONSTANT_ALPHA: number;\\n    readonly ONE_MINUS_CONSTANT_COLOR: number;\\n    readonly ONE_MINUS_DST_ALPHA: number;\\n    readonly ONE_MINUS_DST_COLOR: number;\\n    readonly ONE_MINUS_SRC_ALPHA: number;\\n    readonly ONE_MINUS_SRC_COLOR: number;\\n    readonly OUT_OF_MEMORY: number;\\n    readonly PACK_ALIGNMENT: number;\\n    readonly POINTS: number;\\n    readonly POLYGON_OFFSET_FACTOR: number;\\n    readonly POLYGON_OFFSET_FILL: number;\\n    readonly POLYGON_OFFSET_UNITS: number;\\n    readonly RED_BITS: number;\\n    readonly RENDERBUFFER: number;\\n    readonly RENDERBUFFER_ALPHA_SIZE: number;\\n    readonly RENDERBUFFER_BINDING: number;\\n    readonly RENDERBUFFER_BLUE_SIZE: number;\\n    readonly RENDERBUFFER_DEPTH_SIZE: number;\\n    readonly RENDERBUFFER_GREEN_SIZE: number;\\n    readonly RENDERBUFFER_HEIGHT: number;\\n    readonly RENDERBUFFER_INTERNAL_FORMAT: number;\\n    readonly RENDERBUFFER_RED_SIZE: number;\\n    readonly RENDERBUFFER_STENCIL_SIZE: number;\\n    readonly RENDERBUFFER_WIDTH: number;\\n    readonly RENDERER: number;\\n    readonly REPEAT: number;\\n    readonly REPLACE: number;\\n    readonly RGB: number;\\n    readonly RGB565: number;\\n    readonly RGB5_A1: number;\\n    readonly RGBA: number;\\n    readonly RGBA4: number;\\n    readonly SAMPLER_2D: number;\\n    readonly SAMPLER_CUBE: number;\\n    readonly SAMPLES: number;\\n    readonly SAMPLE_ALPHA_TO_COVERAGE: number;\\n    readonly SAMPLE_BUFFERS: number;\\n    readonly SAMPLE_COVERAGE: number;\\n    readonly SAMPLE_COVERAGE_INVERT: number;\\n    readonly SAMPLE_COVERAGE_VALUE: number;\\n    readonly SCISSOR_BOX: number;\\n    readonly SCISSOR_TEST: number;\\n    readonly SHADER_TYPE: number;\\n    readonly SHADING_LANGUAGE_VERSION: number;\\n    readonly SHORT: number;\\n    readonly SRC_ALPHA: number;\\n    readonly SRC_ALPHA_SATURATE: number;\\n    readonly SRC_COLOR: number;\\n    readonly STATIC_DRAW: number;\\n    readonly STENCIL_ATTACHMENT: number;\\n    readonly STENCIL_BACK_FAIL: number;\\n    readonly STENCIL_BACK_FUNC: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_BACK_REF: number;\\n    readonly STENCIL_BACK_VALUE_MASK: number;\\n    readonly STENCIL_BACK_WRITEMASK: number;\\n    readonly STENCIL_BITS: number;\\n    readonly STENCIL_BUFFER_BIT: number;\\n    readonly STENCIL_CLEAR_VALUE: number;\\n    readonly STENCIL_FAIL: number;\\n    readonly STENCIL_FUNC: number;\\n    readonly STENCIL_INDEX: number;\\n    readonly STENCIL_INDEX8: number;\\n    readonly STENCIL_PASS_DEPTH_FAIL: number;\\n    readonly STENCIL_PASS_DEPTH_PASS: number;\\n    readonly STENCIL_REF: number;\\n    readonly STENCIL_TEST: number;\\n    readonly STENCIL_VALUE_MASK: number;\\n    readonly STENCIL_WRITEMASK: number;\\n    readonly STREAM_DRAW: number;\\n    readonly SUBPIXEL_BITS: number;\\n    readonly TEXTURE: number;\\n    readonly TEXTURE0: number;\\n    readonly TEXTURE1: number;\\n    readonly TEXTURE10: number;\\n    readonly TEXTURE11: number;\\n    readonly TEXTURE12: number;\\n    readonly TEXTURE13: number;\\n    readonly TEXTURE14: number;\\n    readonly TEXTURE15: number;\\n    readonly TEXTURE16: number;\\n    readonly TEXTURE17: number;\\n    readonly TEXTURE18: number;\\n    readonly TEXTURE19: number;\\n    readonly TEXTURE2: number;\\n    readonly TEXTURE20: number;\\n    readonly TEXTURE21: number;\\n    readonly TEXTURE22: number;\\n    readonly TEXTURE23: number;\\n    readonly TEXTURE24: number;\\n    readonly TEXTURE25: number;\\n    readonly TEXTURE26: number;\\n    readonly TEXTURE27: number;\\n    readonly TEXTURE28: number;\\n    readonly TEXTURE29: number;\\n    readonly TEXTURE3: number;\\n    readonly TEXTURE30: number;\\n    readonly TEXTURE31: number;\\n    readonly TEXTURE4: number;\\n    readonly TEXTURE5: number;\\n    readonly TEXTURE6: number;\\n    readonly TEXTURE7: number;\\n    readonly TEXTURE8: number;\\n    readonly TEXTURE9: number;\\n    readonly TEXTURE_2D: number;\\n    readonly TEXTURE_BINDING_2D: number;\\n    readonly TEXTURE_BINDING_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: number;\\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: number;\\n    readonly TEXTURE_MAG_FILTER: number;\\n    readonly TEXTURE_MIN_FILTER: number;\\n    readonly TEXTURE_WRAP_S: number;\\n    readonly TEXTURE_WRAP_T: number;\\n    readonly TRIANGLES: number;\\n    readonly TRIANGLE_FAN: number;\\n    readonly TRIANGLE_STRIP: number;\\n    readonly UNPACK_ALIGNMENT: number;\\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: number;\\n    readonly UNPACK_FLIP_Y_WEBGL: number;\\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;\\n    readonly UNSIGNED_BYTE: number;\\n    readonly UNSIGNED_INT: number;\\n    readonly UNSIGNED_SHORT: number;\\n    readonly UNSIGNED_SHORT_4_4_4_4: number;\\n    readonly UNSIGNED_SHORT_5_5_5_1: number;\\n    readonly UNSIGNED_SHORT_5_6_5: number;\\n    readonly VALIDATE_STATUS: number;\\n    readonly VENDOR: number;\\n    readonly VERSION: number;\\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;\\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: number;\\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: number;\\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: number;\\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: number;\\n    readonly VERTEX_SHADER: number;\\n    readonly VIEWPORT: number;\\n    readonly ZERO: number;\\n};\\n\\ninterface WebGLShader extends WebGLObject {\\n}\\n\\ndeclare var WebGLShader: {\\n    prototype: WebGLShader;\\n    new(): WebGLShader;\\n};\\n\\ninterface WebGLShaderPrecisionFormat {\\n    readonly precision: number;\\n    readonly rangeMax: number;\\n    readonly rangeMin: number;\\n}\\n\\ndeclare var WebGLShaderPrecisionFormat: {\\n    prototype: WebGLShaderPrecisionFormat;\\n    new(): WebGLShaderPrecisionFormat;\\n};\\n\\ninterface WebGLTexture extends WebGLObject {\\n}\\n\\ndeclare var WebGLTexture: {\\n    prototype: WebGLTexture;\\n    new(): WebGLTexture;\\n};\\n\\ninterface WebGLUniformLocation {\\n}\\n\\ndeclare var WebGLUniformLocation: {\\n    prototype: WebGLUniformLocation;\\n    new(): WebGLUniformLocation;\\n};\\n\\ninterface WebGLVertexArrayObjectOES {\\n}\\n\\ninterface WebKitCSSMatrix {\\n    a: number;\\n    b: number;\\n    c: number;\\n    d: number;\\n    e: number;\\n    f: number;\\n    m11: number;\\n    m12: number;\\n    m13: number;\\n    m14: number;\\n    m21: number;\\n    m22: number;\\n    m23: number;\\n    m24: number;\\n    m31: number;\\n    m32: number;\\n    m33: number;\\n    m34: number;\\n    m41: number;\\n    m42: number;\\n    m43: number;\\n    m44: number;\\n    inverse(): WebKitCSSMatrix;\\n    multiply(secondMatrix: WebKitCSSMatrix): WebKitCSSMatrix;\\n    rotate(angleX: number, angleY?: number, angleZ?: number): WebKitCSSMatrix;\\n    rotateAxisAngle(x: number, y: number, z: number, angle: number): WebKitCSSMatrix;\\n    scale(scaleX: number, scaleY?: number, scaleZ?: number): WebKitCSSMatrix;\\n    setMatrixValue(value: string): void;\\n    skewX(angle: number): WebKitCSSMatrix;\\n    skewY(angle: number): WebKitCSSMatrix;\\n    toString(): string;\\n    translate(x: number, y: number, z?: number): WebKitCSSMatrix;\\n}\\n\\ndeclare var WebKitCSSMatrix: {\\n    prototype: WebKitCSSMatrix;\\n    new(text?: string): WebKitCSSMatrix;\\n};\\n\\ninterface WebKitDirectoryEntry extends WebKitEntry {\\n    createReader(): WebKitDirectoryReader;\\n}\\n\\ndeclare var WebKitDirectoryEntry: {\\n    prototype: WebKitDirectoryEntry;\\n    new(): WebKitDirectoryEntry;\\n};\\n\\ninterface WebKitDirectoryReader {\\n    readEntries(successCallback: WebKitEntriesCallback, errorCallback?: WebKitErrorCallback): void;\\n}\\n\\ndeclare var WebKitDirectoryReader: {\\n    prototype: WebKitDirectoryReader;\\n    new(): WebKitDirectoryReader;\\n};\\n\\ninterface WebKitEntry {\\n    readonly filesystem: WebKitFileSystem;\\n    readonly fullPath: string;\\n    readonly isDirectory: boolean;\\n    readonly isFile: boolean;\\n    readonly name: string;\\n}\\n\\ndeclare var WebKitEntry: {\\n    prototype: WebKitEntry;\\n    new(): WebKitEntry;\\n};\\n\\ninterface WebKitFileEntry extends WebKitEntry {\\n    file(successCallback: WebKitFileCallback, errorCallback?: WebKitErrorCallback): void;\\n}\\n\\ndeclare var WebKitFileEntry: {\\n    prototype: WebKitFileEntry;\\n    new(): WebKitFileEntry;\\n};\\n\\ninterface WebKitFileSystem {\\n    readonly name: string;\\n    readonly root: WebKitDirectoryEntry;\\n}\\n\\ndeclare var WebKitFileSystem: {\\n    prototype: WebKitFileSystem;\\n    new(): WebKitFileSystem;\\n};\\n\\ninterface WebKitPoint {\\n    x: number;\\n    y: number;\\n}\\n\\ndeclare var WebKitPoint: {\\n    prototype: WebKitPoint;\\n    new(x?: number, y?: number): WebKitPoint;\\n};\\n\\ninterface WebSocketEventMap {\\n    \\\"close\\\": CloseEvent;\\n    \\\"error\\\": Event;\\n    \\\"message\\\": MessageEvent;\\n    \\\"open\\\": Event;\\n}\\n\\ninterface WebSocket extends EventTarget {\\n    binaryType: BinaryType;\\n    readonly bufferedAmount: number;\\n    readonly extensions: string;\\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\\n    readonly protocol: string;\\n    readonly readyState: number;\\n    readonly url: string;\\n    close(code?: number, reason?: string): void;\\n    send(data: string | ArrayBuffer | Blob | ArrayBufferView): void;\\n    readonly CLOSED: number;\\n    readonly CLOSING: number;\\n    readonly CONNECTING: number;\\n    readonly OPEN: number;\\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var WebSocket: {\\n    prototype: WebSocket;\\n    new(url: string, protocols?: string | string[]): WebSocket;\\n    readonly CLOSED: number;\\n    readonly CLOSING: number;\\n    readonly CONNECTING: number;\\n    readonly OPEN: number;\\n};\\n\\ninterface WheelEvent extends MouseEvent {\\n    readonly deltaMode: number;\\n    readonly deltaX: number;\\n    readonly deltaY: number;\\n    readonly deltaZ: number;\\n    readonly wheelDelta: number;\\n    readonly wheelDeltaX: number;\\n    readonly wheelDeltaY: number;\\n    getCurrentPoint(element: Element): void;\\n    initWheelEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, deltaXArg: number, deltaYArg: number, deltaZArg: number, deltaMode: number): void;\\n    readonly DOM_DELTA_LINE: number;\\n    readonly DOM_DELTA_PAGE: number;\\n    readonly DOM_DELTA_PIXEL: number;\\n}\\n\\ndeclare var WheelEvent: {\\n    prototype: WheelEvent;\\n    new(typeArg: string, eventInitDict?: WheelEventInit): WheelEvent;\\n    readonly DOM_DELTA_LINE: number;\\n    readonly DOM_DELTA_PAGE: number;\\n    readonly DOM_DELTA_PIXEL: number;\\n};\\n\\ninterface WindowEventMap extends GlobalEventHandlersEventMap {\\n    \\\"abort\\\": UIEvent;\\n    \\\"beforeunload\\\": BeforeUnloadEvent;\\n    \\\"blur\\\": FocusEvent;\\n    \\\"canplay\\\": Event;\\n    \\\"canplaythrough\\\": Event;\\n    \\\"change\\\": Event;\\n    \\\"click\\\": MouseEvent;\\n    \\\"compassneedscalibration\\\": Event;\\n    \\\"contextmenu\\\": PointerEvent;\\n    \\\"dblclick\\\": MouseEvent;\\n    \\\"devicelight\\\": DeviceLightEvent;\\n    \\\"devicemotion\\\": DeviceMotionEvent;\\n    \\\"deviceorientation\\\": DeviceOrientationEvent;\\n    \\\"drag\\\": DragEvent;\\n    \\\"dragend\\\": DragEvent;\\n    \\\"dragenter\\\": DragEvent;\\n    \\\"dragleave\\\": DragEvent;\\n    \\\"dragover\\\": DragEvent;\\n    \\\"dragstart\\\": DragEvent;\\n    \\\"drop\\\": DragEvent;\\n    \\\"durationchange\\\": Event;\\n    \\\"emptied\\\": Event;\\n    \\\"ended\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"focus\\\": FocusEvent;\\n    \\\"hashchange\\\": HashChangeEvent;\\n    \\\"input\\\": Event;\\n    \\\"invalid\\\": Event;\\n    \\\"keydown\\\": KeyboardEvent;\\n    \\\"keypress\\\": KeyboardEvent;\\n    \\\"keyup\\\": KeyboardEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadeddata\\\": Event;\\n    \\\"loadedmetadata\\\": Event;\\n    \\\"loadstart\\\": Event;\\n    \\\"message\\\": MessageEvent;\\n    \\\"mousedown\\\": MouseEvent;\\n    \\\"mouseenter\\\": MouseEvent;\\n    \\\"mouseleave\\\": MouseEvent;\\n    \\\"mousemove\\\": MouseEvent;\\n    \\\"mouseout\\\": MouseEvent;\\n    \\\"mouseover\\\": MouseEvent;\\n    \\\"mouseup\\\": MouseEvent;\\n    \\\"mousewheel\\\": WheelEvent;\\n    \\\"MSGestureChange\\\": Event;\\n    \\\"MSGestureDoubleTap\\\": Event;\\n    \\\"MSGestureEnd\\\": Event;\\n    \\\"MSGestureHold\\\": Event;\\n    \\\"MSGestureStart\\\": Event;\\n    \\\"MSGestureTap\\\": Event;\\n    \\\"MSInertiaStart\\\": Event;\\n    \\\"MSPointerCancel\\\": Event;\\n    \\\"MSPointerDown\\\": Event;\\n    \\\"MSPointerEnter\\\": Event;\\n    \\\"MSPointerLeave\\\": Event;\\n    \\\"MSPointerMove\\\": Event;\\n    \\\"MSPointerOut\\\": Event;\\n    \\\"MSPointerOver\\\": Event;\\n    \\\"MSPointerUp\\\": Event;\\n    \\\"offline\\\": Event;\\n    \\\"online\\\": Event;\\n    \\\"orientationchange\\\": Event;\\n    \\\"pagehide\\\": PageTransitionEvent;\\n    \\\"pageshow\\\": PageTransitionEvent;\\n    \\\"pause\\\": Event;\\n    \\\"play\\\": Event;\\n    \\\"playing\\\": Event;\\n    \\\"popstate\\\": PopStateEvent;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"ratechange\\\": Event;\\n    \\\"readystatechange\\\": ProgressEvent;\\n    \\\"reset\\\": Event;\\n    \\\"resize\\\": UIEvent;\\n    \\\"scroll\\\": UIEvent;\\n    \\\"seeked\\\": Event;\\n    \\\"seeking\\\": Event;\\n    \\\"select\\\": UIEvent;\\n    \\\"stalled\\\": Event;\\n    \\\"storage\\\": StorageEvent;\\n    \\\"submit\\\": Event;\\n    \\\"suspend\\\": Event;\\n    \\\"timeupdate\\\": Event;\\n    \\\"touchcancel\\\": Event;\\n    \\\"touchend\\\": Event;\\n    \\\"touchmove\\\": Event;\\n    \\\"touchstart\\\": Event;\\n    \\\"unload\\\": Event;\\n    \\\"volumechange\\\": Event;\\n    \\\"vrdisplayactivate\\\": Event;\\n    \\\"vrdisplayblur\\\": Event;\\n    \\\"vrdisplayconnect\\\": Event;\\n    \\\"vrdisplaydeactivate\\\": Event;\\n    \\\"vrdisplaydisconnect\\\": Event;\\n    \\\"vrdisplayfocus\\\": Event;\\n    \\\"vrdisplaypointerrestricted\\\": Event;\\n    \\\"vrdisplaypointerunrestricted\\\": Event;\\n    \\\"vrdisplaypresentchange\\\": Event;\\n    \\\"waiting\\\": Event;\\n}\\n\\ninterface Window extends EventTarget, WindowTimers, WindowSessionStorage, WindowLocalStorage, WindowConsole, GlobalEventHandlers, IDBEnvironment, WindowBase64, GlobalFetch {\\n    Blob: typeof Blob;\\n    URL: typeof URL;\\n    URLSearchParams: typeof URLSearchParams;\\n    readonly applicationCache: ApplicationCache;\\n    readonly caches: CacheStorage;\\n    readonly clientInformation: Navigator;\\n    readonly closed: boolean;\\n    readonly crypto: Crypto;\\n    customElements: CustomElementRegistry;\\n    defaultStatus: string;\\n    readonly devicePixelRatio: number;\\n    readonly doNotTrack: string;\\n    readonly document: Document;\\n    event: Event | undefined;\\n    readonly external: External;\\n    readonly frameElement: Element;\\n    readonly frames: Window;\\n    readonly history: History;\\n    readonly innerHeight: number;\\n    readonly innerWidth: number;\\n    readonly isSecureContext: boolean;\\n    readonly length: number;\\n    location: Location;\\n    readonly locationbar: BarProp;\\n    readonly menubar: BarProp;\\n    readonly msContentScript: ExtensionScriptApis;\\n    readonly msCredentials: MSCredentials;\\n    name: string;\\n    readonly navigator: Navigator;\\n    offscreenBuffering: string | boolean;\\n    onabort: ((this: Window, ev: UIEvent) => any) | null;\\n    onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;\\n    onblur: ((this: Window, ev: FocusEvent) => any) | null;\\n    oncanplay: ((this: Window, ev: Event) => any) | null;\\n    oncanplaythrough: ((this: Window, ev: Event) => any) | null;\\n    onchange: ((this: Window, ev: Event) => any) | null;\\n    onclick: ((this: Window, ev: MouseEvent) => any) | null;\\n    oncompassneedscalibration: ((this: Window, ev: Event) => any) | null;\\n    oncontextmenu: ((this: Window, ev: PointerEvent) => any) | null;\\n    ondblclick: ((this: Window, ev: MouseEvent) => any) | null;\\n    ondevicelight: ((this: Window, ev: DeviceLightEvent) => any) | null;\\n    ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\\n    ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\\n    ondrag: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragend: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragenter: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragleave: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragover: ((this: Window, ev: DragEvent) => any) | null;\\n    ondragstart: ((this: Window, ev: DragEvent) => any) | null;\\n    ondrop: ((this: Window, ev: DragEvent) => any) | null;\\n    ondurationchange: ((this: Window, ev: Event) => any) | null;\\n    onemptied: ((this: Window, ev: Event) => any) | null;\\n    onended: ((this: Window, ev: Event) => any) | null;\\n    onerror: ErrorEventHandler;\\n    onfocus: ((this: Window, ev: FocusEvent) => any) | null;\\n    onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;\\n    oninput: ((this: Window, ev: Event) => any) | null;\\n    oninvalid: ((this: Window, ev: Event) => any) | null;\\n    onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;\\n    onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;\\n    onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;\\n    onload: ((this: Window, ev: Event) => any) | null;\\n    onloadeddata: ((this: Window, ev: Event) => any) | null;\\n    onloadedmetadata: ((this: Window, ev: Event) => any) | null;\\n    onloadstart: ((this: Window, ev: Event) => any) | null;\\n    onmessage: ((this: Window, ev: MessageEvent) => any) | null;\\n    onmousedown: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmousemove: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseout: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseover: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmouseup: ((this: Window, ev: MouseEvent) => any) | null;\\n    onmousewheel: ((this: Window, ev: WheelEvent) => any) | null;\\n    onmsgesturechange: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturedoubletap: ((this: Window, ev: Event) => any) | null;\\n    onmsgestureend: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturehold: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturestart: ((this: Window, ev: Event) => any) | null;\\n    onmsgesturetap: ((this: Window, ev: Event) => any) | null;\\n    onmsinertiastart: ((this: Window, ev: Event) => any) | null;\\n    onmspointercancel: ((this: Window, ev: Event) => any) | null;\\n    onmspointerdown: ((this: Window, ev: Event) => any) | null;\\n    onmspointerenter: ((this: Window, ev: Event) => any) | null;\\n    onmspointerleave: ((this: Window, ev: Event) => any) | null;\\n    onmspointermove: ((this: Window, ev: Event) => any) | null;\\n    onmspointerout: ((this: Window, ev: Event) => any) | null;\\n    onmspointerover: ((this: Window, ev: Event) => any) | null;\\n    onmspointerup: ((this: Window, ev: Event) => any) | null;\\n    onoffline: ((this: Window, ev: Event) => any) | null;\\n    ononline: ((this: Window, ev: Event) => any) | null;\\n    onorientationchange: ((this: Window, ev: Event) => any) | null;\\n    onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;\\n    onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;\\n    onpause: ((this: Window, ev: Event) => any) | null;\\n    onplay: ((this: Window, ev: Event) => any) | null;\\n    onplaying: ((this: Window, ev: Event) => any) | null;\\n    onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;\\n    onprogress: ((this: Window, ev: ProgressEvent) => any) | null;\\n    onratechange: ((this: Window, ev: Event) => any) | null;\\n    onreadystatechange: ((this: Window, ev: ProgressEvent) => any) | null;\\n    onreset: ((this: Window, ev: Event) => any) | null;\\n    onresize: ((this: Window, ev: UIEvent) => any) | null;\\n    onscroll: ((this: Window, ev: UIEvent) => any) | null;\\n    onseeked: ((this: Window, ev: Event) => any) | null;\\n    onseeking: ((this: Window, ev: Event) => any) | null;\\n    onselect: ((this: Window, ev: UIEvent) => any) | null;\\n    onstalled: ((this: Window, ev: Event) => any) | null;\\n    onstorage: ((this: Window, ev: StorageEvent) => any) | null;\\n    onsubmit: ((this: Window, ev: Event) => any) | null;\\n    onsuspend: ((this: Window, ev: Event) => any) | null;\\n    ontimeupdate: ((this: Window, ev: Event) => any) | null;\\n    ontouchcancel: (ev: TouchEvent) => any;\\n    ontouchend: (ev: TouchEvent) => any;\\n    ontouchmove: (ev: TouchEvent) => any;\\n    ontouchstart: (ev: TouchEvent) => any;\\n    onunload: ((this: Window, ev: Event) => any) | null;\\n    onvolumechange: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayactivate: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayblur: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayconnect: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaydeactivate: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaydisconnect: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplayfocus: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaypointerrestricted: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaypointerunrestricted: ((this: Window, ev: Event) => any) | null;\\n    onvrdisplaypresentchange: ((this: Window, ev: Event) => any) | null;\\n    onwaiting: ((this: Window, ev: Event) => any) | null;\\n    readonly opener: any;\\n    readonly orientation: string | number;\\n    readonly outerHeight: number;\\n    readonly outerWidth: number;\\n    readonly pageXOffset: number;\\n    readonly pageYOffset: number;\\n    readonly parent: Window;\\n    readonly performance: Performance;\\n    readonly personalbar: BarProp;\\n    readonly screen: Screen;\\n    readonly screenLeft: number;\\n    readonly screenTop: number;\\n    readonly screenX: number;\\n    readonly screenY: number;\\n    readonly scrollX: number;\\n    readonly scrollY: number;\\n    readonly scrollbars: BarProp;\\n    readonly self: Window;\\n    readonly speechSynthesis: SpeechSynthesis;\\n    status: string;\\n    readonly statusbar: BarProp;\\n    readonly styleMedia: StyleMedia;\\n    readonly toolbar: BarProp;\\n    readonly top: Window;\\n    readonly window: Window;\\n    alert(message?: any): void;\\n    blur(): void;\\n    cancelAnimationFrame(handle: number): void;\\n    captureEvents(): void;\\n    close(): void;\\n    confirm(message?: string): boolean;\\n    createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\n    createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\n    departFocus(navigationReason: NavigationReason, origin: FocusNavigationOrigin): void;\\n    focus(): void;\\n    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\\n    getMatchedCSSRules(elt: Element, pseudoElt?: string | null): CSSRuleList;\\n    getSelection(): Selection;\\n    matchMedia(mediaQuery: string): MediaQueryList;\\n    moveBy(x?: number, y?: number): void;\\n    moveTo(x?: number, y?: number): void;\\n    msWriteProfilerMark(profilerMarkName: string): void;\\n    open(url?: string, target?: string, features?: string, replace?: boolean): Window | null;\\n    postMessage(message: any, targetOrigin: string, transfer?: any[]): void;\\n    prompt(message?: string, _default?: string): string | null;\\n    releaseEvents(): void;\\n    requestAnimationFrame(callback: FrameRequestCallback): number;\\n    resizeBy(x?: number, y?: number): void;\\n    resizeTo(x?: number, y?: number): void;\\n    scroll(options?: ScrollToOptions): void;\\n    scroll(x?: number, y?: number): void;\\n    scrollBy(options?: ScrollToOptions): void;\\n    scrollBy(x?: number, y?: number): void;\\n    scrollTo(options?: ScrollToOptions): void;\\n    scrollTo(x?: number, y?: number): void;\\n    stop(): void;\\n    webkitCancelAnimationFrame(handle: number): void;\\n    webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;\\n    webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;\\n    webkitRequestAnimationFrame(callback: FrameRequestCallback): number;\\n    addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Window: {\\n    prototype: Window;\\n    new(): Window;\\n};\\n\\ninterface WindowBase64 {\\n    atob(encodedString: string): string;\\n    btoa(rawString: string): string;\\n}\\n\\ninterface WindowConsole {\\n    readonly console: Console;\\n}\\n\\ninterface WindowEventHandlersEventMap {\\n    \\\"afterprint\\\": Event;\\n    \\\"beforeprint\\\": Event;\\n    \\\"beforeunload\\\": BeforeUnloadEvent;\\n    \\\"hashchange\\\": HashChangeEvent;\\n    \\\"message\\\": MessageEvent;\\n    \\\"offline\\\": Event;\\n    \\\"online\\\": Event;\\n    \\\"pagehide\\\": PageTransitionEvent;\\n    \\\"pageshow\\\": PageTransitionEvent;\\n    \\\"popstate\\\": PopStateEvent;\\n    \\\"storage\\\": StorageEvent;\\n    \\\"unload\\\": Event;\\n}\\n\\ninterface WindowEventHandlers {\\n    onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    onbeforeunload: ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any) | null;\\n    onhashchange: ((this: WindowEventHandlers, ev: HashChangeEvent) => any) | null;\\n    onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;\\n    onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    onpagehide: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\\n    onpageshow: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\\n    onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;\\n    onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;\\n    onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;\\n    addEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface WindowLocalStorage {\\n    readonly localStorage: Storage;\\n}\\n\\ninterface WindowSessionStorage {\\n    readonly sessionStorage: Storage;\\n}\\n\\ninterface WindowTimers extends WindowTimersExtension {\\n    clearInterval(handle?: number): void;\\n    clearTimeout(handle?: number): void;\\n    setInterval(handler: (...args: any[]) => void, timeout: number): number;\\n    setInterval(handler: any, timeout?: any, ...args: any[]): number;\\n    setTimeout(handler: (...args: any[]) => void, timeout: number): number;\\n    setTimeout(handler: any, timeout?: any, ...args: any[]): number;\\n}\\n\\ninterface WindowTimersExtension {\\n    clearImmediate(handle: number): void;\\n    setImmediate(handler: (...args: any[]) => void): number;\\n    setImmediate(handler: any, ...args: any[]): number;\\n}\\n\\ninterface WorkerEventMap extends AbstractWorkerEventMap {\\n    \\\"message\\\": MessageEvent;\\n}\\n\\ninterface Worker extends EventTarget, AbstractWorker {\\n    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;\\n    /** @deprecated */\\n    postMessage(message: any, transfer?: any[]): void;\\n    terminate(): void;\\n    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var Worker: {\\n    prototype: Worker;\\n    new(stringUrl: string): Worker;\\n};\\n\\ninterface WritableStream {\\n    readonly locked: boolean;\\n    abort(reason?: any): Promise<void>;\\n    getWriter(): WritableStreamDefaultWriter;\\n}\\n\\ndeclare var WritableStream: {\\n    prototype: WritableStream;\\n    new(underlyingSink?: UnderlyingSink, strategy?: QueuingStrategy): WritableStream;\\n};\\n\\ninterface WritableStreamDefaultController {\\n    error(error?: any): void;\\n}\\n\\ndeclare var WritableStreamDefaultController: {\\n    prototype: WritableStreamDefaultController;\\n    new(): WritableStreamDefaultController;\\n};\\n\\ninterface WritableStreamDefaultWriter {\\n    readonly closed: Promise<void>;\\n    readonly desiredSize: number;\\n    readonly ready: Promise<void>;\\n    abort(reason?: any): Promise<void>;\\n    close(): Promise<void>;\\n    releaseLock(): void;\\n    write(chunk?: any): Promise<any>;\\n}\\n\\ndeclare var WritableStreamDefaultWriter: {\\n    prototype: WritableStreamDefaultWriter;\\n    new(): WritableStreamDefaultWriter;\\n};\\n\\ninterface XMLDocument extends Document {\\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var XMLDocument: {\\n    prototype: XMLDocument;\\n    new(): XMLDocument;\\n};\\n\\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\\n    \\\"readystatechange\\\": Event;\\n}\\n\\ninterface XMLHttpRequest extends EventTarget, XMLHttpRequestEventTarget {\\n    msCaching: string;\\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    readonly readyState: number;\\n    readonly response: any;\\n    readonly responseText: string;\\n    responseType: XMLHttpRequestResponseType;\\n    readonly responseURL: string;\\n    readonly responseXML: Document | null;\\n    readonly status: number;\\n    readonly statusText: string;\\n    timeout: number;\\n    readonly upload: XMLHttpRequestUpload;\\n    withCredentials: boolean;\\n    abort(): void;\\n    getAllResponseHeaders(): string;\\n    getResponseHeader(header: string): string | null;\\n    msCachingEnabled(): boolean;\\n    open(method: string, url: string, async?: boolean, user?: string | null, password?: string | null): void;\\n    overrideMimeType(mime: string): void;\\n    send(data?: any): void;\\n    setRequestHeader(header: string, value: string): void;\\n    readonly DONE: number;\\n    readonly HEADERS_RECEIVED: number;\\n    readonly LOADING: number;\\n    readonly OPENED: number;\\n    readonly UNSENT: number;\\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var XMLHttpRequest: {\\n    prototype: XMLHttpRequest;\\n    new(): XMLHttpRequest;\\n    readonly DONE: number;\\n    readonly HEADERS_RECEIVED: number;\\n    readonly LOADING: number;\\n    readonly OPENED: number;\\n    readonly UNSENT: number;\\n};\\n\\ninterface XMLHttpRequestEventTargetEventMap {\\n    \\\"abort\\\": Event;\\n    \\\"error\\\": ErrorEvent;\\n    \\\"load\\\": Event;\\n    \\\"loadend\\\": ProgressEvent;\\n    \\\"loadstart\\\": Event;\\n    \\\"progress\\\": ProgressEvent;\\n    \\\"timeout\\\": ProgressEvent;\\n}\\n\\ninterface XMLHttpRequestEventTarget {\\n    onabort: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    onerror: ((this: XMLHttpRequest, ev: ErrorEvent) => any) | null;\\n    onload: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\\n    onloadstart: ((this: XMLHttpRequest, ev: Event) => any) | null;\\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ninterface XMLHttpRequestUpload extends EventTarget, XMLHttpRequestEventTarget {\\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var XMLHttpRequestUpload: {\\n    prototype: XMLHttpRequestUpload;\\n    new(): XMLHttpRequestUpload;\\n};\\n\\ninterface XMLSerializer {\\n    serializeToString(target: Node): string;\\n}\\n\\ndeclare var XMLSerializer: {\\n    prototype: XMLSerializer;\\n    new(): XMLSerializer;\\n};\\n\\ninterface XPathEvaluator {\\n    createExpression(expression: string, resolver: XPathNSResolver): XPathExpression;\\n    createNSResolver(nodeResolver?: Node): XPathNSResolver;\\n    evaluate(expression: string, contextNode: Node, resolver: XPathNSResolver | null, type: number, result: XPathResult | null): XPathResult;\\n}\\n\\ndeclare var XPathEvaluator: {\\n    prototype: XPathEvaluator;\\n    new(): XPathEvaluator;\\n};\\n\\ninterface XPathExpression {\\n    evaluate(contextNode: Node, type: number, result: XPathResult | null): XPathResult;\\n}\\n\\ndeclare var XPathExpression: {\\n    prototype: XPathExpression;\\n    new(): XPathExpression;\\n};\\n\\ninterface XPathNSResolver {\\n    lookupNamespaceURI(prefix: string): string;\\n}\\n\\ndeclare var XPathNSResolver: {\\n    prototype: XPathNSResolver;\\n    new(): XPathNSResolver;\\n};\\n\\ninterface XPathResult {\\n    readonly booleanValue: boolean;\\n    readonly invalidIteratorState: boolean;\\n    readonly numberValue: number;\\n    readonly resultType: number;\\n    readonly singleNodeValue: Node;\\n    readonly snapshotLength: number;\\n    readonly stringValue: string;\\n    iterateNext(): Node;\\n    snapshotItem(index: number): Node;\\n    readonly ANY_TYPE: number;\\n    readonly ANY_UNORDERED_NODE_TYPE: number;\\n    readonly BOOLEAN_TYPE: number;\\n    readonly FIRST_ORDERED_NODE_TYPE: number;\\n    readonly NUMBER_TYPE: number;\\n    readonly ORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;\\n    readonly STRING_TYPE: number;\\n    readonly UNORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;\\n}\\n\\ndeclare var XPathResult: {\\n    prototype: XPathResult;\\n    new(): XPathResult;\\n    readonly ANY_TYPE: number;\\n    readonly ANY_UNORDERED_NODE_TYPE: number;\\n    readonly BOOLEAN_TYPE: number;\\n    readonly FIRST_ORDERED_NODE_TYPE: number;\\n    readonly NUMBER_TYPE: number;\\n    readonly ORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;\\n    readonly STRING_TYPE: number;\\n    readonly UNORDERED_NODE_ITERATOR_TYPE: number;\\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;\\n};\\n\\ninterface XSLTProcessor {\\n    clearParameters(): void;\\n    getParameter(namespaceURI: string, localName: string): any;\\n    importStylesheet(style: Node): void;\\n    removeParameter(namespaceURI: string, localName: string): void;\\n    reset(): void;\\n    setParameter(namespaceURI: string, localName: string, value: any): void;\\n    transformToDocument(source: Node): Document;\\n    transformToFragment(source: Node, document: Document): DocumentFragment;\\n}\\n\\ndeclare var XSLTProcessor: {\\n    prototype: XSLTProcessor;\\n    new(): XSLTProcessor;\\n};\\n\\ninterface webkitRTCPeerConnection extends RTCPeerConnection {\\n    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: webkitRTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\n    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: webkitRTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\n}\\n\\ndeclare var webkitRTCPeerConnection: {\\n    prototype: webkitRTCPeerConnection;\\n    new(configuration: RTCConfiguration): webkitRTCPeerConnection;\\n};\\n\\ndeclare type EventListenerOrEventListenerObject = EventListener | EventListenerObject;\\n\\ninterface DecodeErrorCallback {\\n    (error: DOMException): void;\\n}\\n\\ninterface DecodeSuccessCallback {\\n    (decodedData: AudioBuffer): void;\\n}\\n\\ninterface ErrorEventHandler {\\n    (event: Event | string, source?: string, fileno?: number, columnNumber?: number, error?: Error): void;\\n}\\n\\ninterface EventHandlerNonNull {\\n    (event: Event): any;\\n}\\n\\ninterface ForEachCallback {\\n    (keyId: Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array | DataView | ArrayBuffer | null, status: MediaKeyStatus): void;\\n}\\n\\ninterface FrameRequestCallback {\\n    (time: number): void;\\n}\\n\\ninterface FunctionStringCallback {\\n    (data: string): void;\\n}\\n\\ninterface IntersectionObserverCallback {\\n    (entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;\\n}\\n\\ninterface MSLaunchUriCallback {\\n    (): void;\\n}\\n\\ninterface MediaQueryListListener {\\n    (mql: MediaQueryList): void;\\n}\\n\\ninterface MutationCallback {\\n    (mutations: MutationRecord[], observer: MutationObserver): void;\\n}\\n\\ninterface NavigatorUserMediaErrorCallback {\\n    (error: MediaStreamError): void;\\n}\\n\\ninterface NavigatorUserMediaSuccessCallback {\\n    (stream: MediaStream): void;\\n}\\n\\ninterface NotificationPermissionCallback {\\n    (permission: NotificationPermission): void;\\n}\\n\\ninterface PositionCallback {\\n    (position: Position): void;\\n}\\n\\ninterface PositionErrorCallback {\\n    (error: PositionError): void;\\n}\\n\\ninterface RTCPeerConnectionErrorCallback {\\n    (error: DOMError): void;\\n}\\n\\ninterface RTCSessionDescriptionCallback {\\n    (sdp: RTCSessionDescription): void;\\n}\\n\\ninterface RTCStatsCallback {\\n    (report: RTCStatsReport): void;\\n}\\n\\ninterface VoidFunction {\\n    (): void;\\n}\\n\\ninterface WritableStreamChunkCallback {\\n    (chunk: any, controller: WritableStreamDefaultController): void;\\n}\\n\\ninterface WritableStreamDefaultControllerCallback {\\n    (controller: WritableStreamDefaultController): void;\\n}\\n\\ninterface WritableStreamErrorCallback {\\n    (reason: string): void;\\n}\\n\\ninterface HTMLElementTagNameMap {\\n    \\\"a\\\": HTMLAnchorElement;\\n    \\\"abbr\\\": HTMLElement;\\n    \\\"acronym\\\": HTMLElement;\\n    \\\"address\\\": HTMLElement;\\n    \\\"applet\\\": HTMLAppletElement;\\n    \\\"area\\\": HTMLAreaElement;\\n    \\\"article\\\": HTMLElement;\\n    \\\"aside\\\": HTMLElement;\\n    \\\"audio\\\": HTMLAudioElement;\\n    \\\"b\\\": HTMLElement;\\n    \\\"base\\\": HTMLBaseElement;\\n    \\\"basefont\\\": HTMLBaseFontElement;\\n    \\\"bdo\\\": HTMLElement;\\n    \\\"big\\\": HTMLElement;\\n    \\\"blockquote\\\": HTMLQuoteElement;\\n    \\\"body\\\": HTMLBodyElement;\\n    \\\"br\\\": HTMLBRElement;\\n    \\\"button\\\": HTMLButtonElement;\\n    \\\"canvas\\\": HTMLCanvasElement;\\n    \\\"caption\\\": HTMLTableCaptionElement;\\n    \\\"center\\\": HTMLElement;\\n    \\\"cite\\\": HTMLElement;\\n    \\\"code\\\": HTMLElement;\\n    \\\"col\\\": HTMLTableColElement;\\n    \\\"colgroup\\\": HTMLTableColElement;\\n    \\\"data\\\": HTMLDataElement;\\n    \\\"datalist\\\": HTMLDataListElement;\\n    \\\"dd\\\": HTMLElement;\\n    \\\"del\\\": HTMLModElement;\\n    \\\"dfn\\\": HTMLElement;\\n    \\\"dir\\\": HTMLDirectoryElement;\\n    \\\"div\\\": HTMLDivElement;\\n    \\\"dl\\\": HTMLDListElement;\\n    \\\"dt\\\": HTMLElement;\\n    \\\"em\\\": HTMLElement;\\n    \\\"embed\\\": HTMLEmbedElement;\\n    \\\"fieldset\\\": HTMLFieldSetElement;\\n    \\\"figcaption\\\": HTMLElement;\\n    \\\"figure\\\": HTMLElement;\\n    \\\"font\\\": HTMLFontElement;\\n    \\\"footer\\\": HTMLElement;\\n    \\\"form\\\": HTMLFormElement;\\n    \\\"frame\\\": HTMLFrameElement;\\n    \\\"frameset\\\": HTMLFrameSetElement;\\n    \\\"h1\\\": HTMLHeadingElement;\\n    \\\"h2\\\": HTMLHeadingElement;\\n    \\\"h3\\\": HTMLHeadingElement;\\n    \\\"h4\\\": HTMLHeadingElement;\\n    \\\"h5\\\": HTMLHeadingElement;\\n    \\\"h6\\\": HTMLHeadingElement;\\n    \\\"head\\\": HTMLHeadElement;\\n    \\\"header\\\": HTMLElement;\\n    \\\"hgroup\\\": HTMLElement;\\n    \\\"hr\\\": HTMLHRElement;\\n    \\\"html\\\": HTMLHtmlElement;\\n    \\\"i\\\": HTMLElement;\\n    \\\"iframe\\\": HTMLIFrameElement;\\n    \\\"img\\\": HTMLImageElement;\\n    \\\"input\\\": HTMLInputElement;\\n    \\\"ins\\\": HTMLModElement;\\n    \\\"isindex\\\": HTMLUnknownElement;\\n    \\\"kbd\\\": HTMLElement;\\n    \\\"keygen\\\": HTMLElement;\\n    \\\"label\\\": HTMLLabelElement;\\n    \\\"legend\\\": HTMLLegendElement;\\n    \\\"li\\\": HTMLLIElement;\\n    \\\"link\\\": HTMLLinkElement;\\n    \\\"listing\\\": HTMLPreElement;\\n    \\\"map\\\": HTMLMapElement;\\n    \\\"mark\\\": HTMLElement;\\n    \\\"marquee\\\": HTMLMarqueeElement;\\n    \\\"menu\\\": HTMLMenuElement;\\n    \\\"meta\\\": HTMLMetaElement;\\n    \\\"meter\\\": HTMLMeterElement;\\n    \\\"nav\\\": HTMLElement;\\n    \\\"nextid\\\": HTMLUnknownElement;\\n    \\\"nobr\\\": HTMLElement;\\n    \\\"noframes\\\": HTMLElement;\\n    \\\"noscript\\\": HTMLElement;\\n    \\\"object\\\": HTMLObjectElement;\\n    \\\"ol\\\": HTMLOListElement;\\n    \\\"optgroup\\\": HTMLOptGroupElement;\\n    \\\"option\\\": HTMLOptionElement;\\n    \\\"output\\\": HTMLOutputElement;\\n    \\\"p\\\": HTMLParagraphElement;\\n    \\\"param\\\": HTMLParamElement;\\n    \\\"picture\\\": HTMLPictureElement;\\n    \\\"plaintext\\\": HTMLElement;\\n    \\\"pre\\\": HTMLPreElement;\\n    \\\"progress\\\": HTMLProgressElement;\\n    \\\"q\\\": HTMLQuoteElement;\\n    \\\"rt\\\": HTMLElement;\\n    \\\"ruby\\\": HTMLElement;\\n    \\\"s\\\": HTMLElement;\\n    \\\"samp\\\": HTMLElement;\\n    \\\"script\\\": HTMLScriptElement;\\n    \\\"section\\\": HTMLElement;\\n    \\\"select\\\": HTMLSelectElement;\\n    \\\"slot\\\": HTMLSlotElement;\\n    \\\"small\\\": HTMLElement;\\n    \\\"source\\\": HTMLSourceElement;\\n    \\\"span\\\": HTMLSpanElement;\\n    \\\"strike\\\": HTMLElement;\\n    \\\"strong\\\": HTMLElement;\\n    \\\"style\\\": HTMLStyleElement;\\n    \\\"sub\\\": HTMLElement;\\n    \\\"sup\\\": HTMLElement;\\n    \\\"table\\\": HTMLTableElement;\\n    \\\"tbody\\\": HTMLTableSectionElement;\\n    \\\"td\\\": HTMLTableDataCellElement;\\n    \\\"template\\\": HTMLTemplateElement;\\n    \\\"textarea\\\": HTMLTextAreaElement;\\n    \\\"tfoot\\\": HTMLTableSectionElement;\\n    \\\"th\\\": HTMLTableHeaderCellElement;\\n    \\\"thead\\\": HTMLTableSectionElement;\\n    \\\"time\\\": HTMLTimeElement;\\n    \\\"title\\\": HTMLTitleElement;\\n    \\\"tr\\\": HTMLTableRowElement;\\n    \\\"track\\\": HTMLTrackElement;\\n    \\\"tt\\\": HTMLElement;\\n    \\\"u\\\": HTMLElement;\\n    \\\"ul\\\": HTMLUListElement;\\n    \\\"var\\\": HTMLElement;\\n    \\\"video\\\": HTMLVideoElement;\\n    \\\"wbr\\\": HTMLElement;\\n    \\\"xmp\\\": HTMLPreElement;\\n}\\n\\ninterface SVGElementTagNameMap {\\n    \\\"circle\\\": SVGCircleElement;\\n    \\\"clippath\\\": SVGClipPathElement;\\n    \\\"defs\\\": SVGDefsElement;\\n    \\\"desc\\\": SVGDescElement;\\n    \\\"ellipse\\\": SVGEllipseElement;\\n    \\\"feblend\\\": SVGFEBlendElement;\\n    \\\"fecolormatrix\\\": SVGFEColorMatrixElement;\\n    \\\"fecomponenttransfer\\\": SVGFEComponentTransferElement;\\n    \\\"fecomposite\\\": SVGFECompositeElement;\\n    \\\"feconvolvematrix\\\": SVGFEConvolveMatrixElement;\\n    \\\"fediffuselighting\\\": SVGFEDiffuseLightingElement;\\n    \\\"fedisplacementmap\\\": SVGFEDisplacementMapElement;\\n    \\\"fedistantlight\\\": SVGFEDistantLightElement;\\n    \\\"feflood\\\": SVGFEFloodElement;\\n    \\\"fefunca\\\": SVGFEFuncAElement;\\n    \\\"fefuncb\\\": SVGFEFuncBElement;\\n    \\\"fefuncg\\\": SVGFEFuncGElement;\\n    \\\"fefuncr\\\": SVGFEFuncRElement;\\n    \\\"fegaussianblur\\\": SVGFEGaussianBlurElement;\\n    \\\"feimage\\\": SVGFEImageElement;\\n    \\\"femerge\\\": SVGFEMergeElement;\\n    \\\"femergenode\\\": SVGFEMergeNodeElement;\\n    \\\"femorphology\\\": SVGFEMorphologyElement;\\n    \\\"feoffset\\\": SVGFEOffsetElement;\\n    \\\"fepointlight\\\": SVGFEPointLightElement;\\n    \\\"fespecularlighting\\\": SVGFESpecularLightingElement;\\n    \\\"fespotlight\\\": SVGFESpotLightElement;\\n    \\\"fetile\\\": SVGFETileElement;\\n    \\\"feturbulence\\\": SVGFETurbulenceElement;\\n    \\\"filter\\\": SVGFilterElement;\\n    \\\"foreignobject\\\": SVGForeignObjectElement;\\n    \\\"g\\\": SVGGElement;\\n    \\\"image\\\": SVGImageElement;\\n    \\\"line\\\": SVGLineElement;\\n    \\\"lineargradient\\\": SVGLinearGradientElement;\\n    \\\"marker\\\": SVGMarkerElement;\\n    \\\"mask\\\": SVGMaskElement;\\n    \\\"metadata\\\": SVGMetadataElement;\\n    \\\"path\\\": SVGPathElement;\\n    \\\"pattern\\\": SVGPatternElement;\\n    \\\"polygon\\\": SVGPolygonElement;\\n    \\\"polyline\\\": SVGPolylineElement;\\n    \\\"radialgradient\\\": SVGRadialGradientElement;\\n    \\\"rect\\\": SVGRectElement;\\n    \\\"stop\\\": SVGStopElement;\\n    \\\"svg\\\": SVGSVGElement;\\n    \\\"switch\\\": SVGSwitchElement;\\n    \\\"symbol\\\": SVGSymbolElement;\\n    \\\"text\\\": SVGTextElement;\\n    \\\"textpath\\\": SVGTextPathElement;\\n    \\\"tspan\\\": SVGTSpanElement;\\n    \\\"use\\\": SVGUseElement;\\n    \\\"view\\\": SVGViewElement;\\n}\\n\\n/** @deprecated Directly use HTMLElementTagNameMap or SVGElementTagNameMap as appropriate, instead. */\\ninterface ElementTagNameMap extends HTMLElementTagNameMap, SVGElementTagNameMap { }\\n\\ndeclare var Audio: {\\n    new(src?: string): HTMLAudioElement;\\n};\\ndeclare var Image: {\\n    new(width?: number, height?: number): HTMLImageElement;\\n};\\ndeclare var Option: {\\n    new(text?: string, value?: string, defaultSelected?: boolean, selected?: boolean): HTMLOptionElement;\\n};\\ndeclare var Blob: typeof Blob;\\ndeclare var URL: typeof URL;\\ndeclare var URLSearchParams: typeof URLSearchParams;\\ndeclare var applicationCache: ApplicationCache;\\ndeclare var caches: CacheStorage;\\ndeclare var clientInformation: Navigator;\\ndeclare var closed: boolean;\\ndeclare var crypto: Crypto;\\ndeclare var customElements: CustomElementRegistry;\\ndeclare var defaultStatus: string;\\ndeclare var devicePixelRatio: number;\\ndeclare var doNotTrack: string;\\ndeclare var document: Document;\\ndeclare var event: Event | undefined;\\ndeclare var external: External;\\ndeclare var frameElement: Element;\\ndeclare var frames: Window;\\ndeclare var history: History;\\ndeclare var innerHeight: number;\\ndeclare var innerWidth: number;\\ndeclare var isSecureContext: boolean;\\ndeclare var length: number;\\ndeclare var location: Location;\\ndeclare var locationbar: BarProp;\\ndeclare var menubar: BarProp;\\ndeclare var msContentScript: ExtensionScriptApis;\\ndeclare var msCredentials: MSCredentials;\\ndeclare const name: never;\\ndeclare var navigator: Navigator;\\ndeclare var offscreenBuffering: string | boolean;\\ndeclare var onabort: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;\\ndeclare var onblur: ((this: Window, ev: FocusEvent) => any) | null;\\ndeclare var oncanplay: ((this: Window, ev: Event) => any) | null;\\ndeclare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;\\ndeclare var onchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onclick: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var oncompassneedscalibration: ((this: Window, ev: Event) => any) | null;\\ndeclare var oncontextmenu: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var ondevicelight: ((this: Window, ev: DeviceLightEvent) => any) | null;\\ndeclare var ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\\ndeclare var ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\\ndeclare var ondrag: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragend: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragover: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondrop: ((this: Window, ev: DragEvent) => any) | null;\\ndeclare var ondurationchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onemptied: ((this: Window, ev: Event) => any) | null;\\ndeclare var onended: ((this: Window, ev: Event) => any) | null;\\ndeclare var onerror: ErrorEventHandler;\\ndeclare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;\\ndeclare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;\\ndeclare var oninput: ((this: Window, ev: Event) => any) | null;\\ndeclare var oninvalid: ((this: Window, ev: Event) => any) | null;\\ndeclare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;\\ndeclare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;\\ndeclare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;\\ndeclare var onload: ((this: Window, ev: Event) => any) | null;\\ndeclare var onloadeddata: ((this: Window, ev: Event) => any) | null;\\ndeclare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;\\ndeclare var onloadstart: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;\\ndeclare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;\\ndeclare var onmousewheel: ((this: Window, ev: WheelEvent) => any) | null;\\ndeclare var onmsgesturechange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturedoubletap: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgestureend: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturehold: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturestart: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsgesturetap: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmsinertiastart: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointercancel: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerdown: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerenter: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerleave: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointermove: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerout: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerover: ((this: Window, ev: Event) => any) | null;\\ndeclare var onmspointerup: ((this: Window, ev: Event) => any) | null;\\ndeclare var onoffline: ((this: Window, ev: Event) => any) | null;\\ndeclare var ononline: ((this: Window, ev: Event) => any) | null;\\ndeclare var onorientationchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;\\ndeclare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;\\ndeclare var onpause: ((this: Window, ev: Event) => any) | null;\\ndeclare var onplay: ((this: Window, ev: Event) => any) | null;\\ndeclare var onplaying: ((this: Window, ev: Event) => any) | null;\\ndeclare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;\\ndeclare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;\\ndeclare var onratechange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onreadystatechange: ((this: Window, ev: ProgressEvent) => any) | null;\\ndeclare var onreset: ((this: Window, ev: Event) => any) | null;\\ndeclare var onresize: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onscroll: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onseeked: ((this: Window, ev: Event) => any) | null;\\ndeclare var onseeking: ((this: Window, ev: Event) => any) | null;\\ndeclare var onselect: ((this: Window, ev: UIEvent) => any) | null;\\ndeclare var onstalled: ((this: Window, ev: Event) => any) | null;\\ndeclare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;\\ndeclare var onsubmit: ((this: Window, ev: Event) => any) | null;\\ndeclare var onsuspend: ((this: Window, ev: Event) => any) | null;\\ndeclare var ontimeupdate: ((this: Window, ev: Event) => any) | null;\\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\\ndeclare var ontouchend: (ev: TouchEvent) => any;\\ndeclare var ontouchmove: (ev: TouchEvent) => any;\\ndeclare var ontouchstart: (ev: TouchEvent) => any;\\ndeclare var onunload: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvolumechange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayactivate: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayblur: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayconnect: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaydeactivate: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaydisconnect: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplayfocus: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaypointerrestricted: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaypointerunrestricted: ((this: Window, ev: Event) => any) | null;\\ndeclare var onvrdisplaypresentchange: ((this: Window, ev: Event) => any) | null;\\ndeclare var onwaiting: ((this: Window, ev: Event) => any) | null;\\ndeclare var opener: any;\\ndeclare var orientation: string | number;\\ndeclare var outerHeight: number;\\ndeclare var outerWidth: number;\\ndeclare var pageXOffset: number;\\ndeclare var pageYOffset: number;\\ndeclare var parent: Window;\\ndeclare var performance: Performance;\\ndeclare var personalbar: BarProp;\\ndeclare var screen: Screen;\\ndeclare var screenLeft: number;\\ndeclare var screenTop: number;\\ndeclare var screenX: number;\\ndeclare var screenY: number;\\ndeclare var scrollX: number;\\ndeclare var scrollY: number;\\ndeclare var scrollbars: BarProp;\\ndeclare var self: Window;\\ndeclare var speechSynthesis: SpeechSynthesis;\\ndeclare var status: string;\\ndeclare var statusbar: BarProp;\\ndeclare var styleMedia: StyleMedia;\\ndeclare var toolbar: BarProp;\\ndeclare var top: Window;\\ndeclare var window: Window;\\ndeclare function alert(message?: any): void;\\ndeclare function blur(): void;\\ndeclare function cancelAnimationFrame(handle: number): void;\\ndeclare function captureEvents(): void;\\ndeclare function close(): void;\\ndeclare function confirm(message?: string): boolean;\\ndeclare function createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\ndeclare function createImageBitmap(image: HTMLImageElement | SVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap | ImageData | Blob, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\\ndeclare function departFocus(navigationReason: NavigationReason, origin: FocusNavigationOrigin): void;\\ndeclare function focus(): void;\\ndeclare function getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\\ndeclare function getMatchedCSSRules(elt: Element, pseudoElt?: string | null): CSSRuleList;\\ndeclare function getSelection(): Selection;\\ndeclare function matchMedia(mediaQuery: string): MediaQueryList;\\ndeclare function moveBy(x?: number, y?: number): void;\\ndeclare function moveTo(x?: number, y?: number): void;\\ndeclare function msWriteProfilerMark(profilerMarkName: string): void;\\ndeclare function open(url?: string, target?: string, features?: string, replace?: boolean): Window | null;\\ndeclare function postMessage(message: any, targetOrigin: string, transfer?: any[]): void;\\ndeclare function prompt(message?: string, _default?: string): string | null;\\ndeclare function releaseEvents(): void;\\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\\ndeclare function resizeBy(x?: number, y?: number): void;\\ndeclare function resizeTo(x?: number, y?: number): void;\\ndeclare function scroll(options?: ScrollToOptions): void;\\ndeclare function scroll(x?: number, y?: number): void;\\ndeclare function scrollBy(options?: ScrollToOptions): void;\\ndeclare function scrollBy(x?: number, y?: number): void;\\ndeclare function scrollTo(options?: ScrollToOptions): void;\\ndeclare function scrollTo(x?: number, y?: number): void;\\ndeclare function stop(): void;\\ndeclare function webkitCancelAnimationFrame(handle: number): void;\\ndeclare function webkitConvertPointFromNodeToPage(node: Node, pt: WebKitPoint): WebKitPoint;\\ndeclare function webkitConvertPointFromPageToNode(node: Node, pt: WebKitPoint): WebKitPoint;\\ndeclare function webkitRequestAnimationFrame(callback: FrameRequestCallback): number;\\ndeclare function toString(): string;\\ndeclare function dispatchEvent(evt: Event): boolean;\\ndeclare function clearInterval(handle?: number): void;\\ndeclare function clearTimeout(handle?: number): void;\\ndeclare function setInterval(handler: (...args: any[]) => void, timeout: number): number;\\ndeclare function setInterval(handler: any, timeout?: any, ...args: any[]): number;\\ndeclare function setTimeout(handler: (...args: any[]) => void, timeout: number): number;\\ndeclare function setTimeout(handler: any, timeout?: any, ...args: any[]): number;\\ndeclare function clearImmediate(handle: number): void;\\ndeclare function setImmediate(handler: (...args: any[]) => void): number;\\ndeclare function setImmediate(handler: any, ...args: any[]): number;\\ndeclare var sessionStorage: Storage;\\ndeclare var localStorage: Storage;\\ndeclare var console: Console;\\ndeclare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;\\ndeclare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;\\ndeclare var indexedDB: IDBFactory;\\ndeclare function atob(encodedString: string): string;\\ndeclare function btoa(rawString: string): string;\\ndeclare function fetch(input?: Request | string, init?: RequestInit): Promise<Response>;\\ndeclare function addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\\ndeclare function removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\\ntype ScrollBehavior = \\\"auto\\\" | \\\"instant\\\" | \\\"smooth\\\";\\ntype ScrollLogicalPosition = \\\"start\\\" | \\\"center\\\" | \\\"end\\\" | \\\"nearest\\\";\\ntype MouseWheelEvent = WheelEvent;\\ntype ScrollRestoration = \\\"auto\\\" | \\\"manual\\\";\\ntype FormDataEntryValue = string | File;\\ntype InsertPosition = \\\"beforebegin\\\" | \\\"afterbegin\\\" | \\\"beforeend\\\" | \\\"afterend\\\";\\ntype HeadersInit = Headers | string[][] | { [key: string]: string };\\ntype OrientationLockType = \\\"any\\\" | \\\"natural\\\" | \\\"portrait\\\" | \\\"landscape\\\" | \\\"portrait-primary\\\" | \\\"portrait-secondary\\\" | \\\"landscape-primary\\\"| \\\"landscape-secondary\\\";\\ntype IDBValidKey = number | string | Date | IDBArrayKey;\\ntype AlgorithmIdentifier = string | Algorithm;\\ntype MutationRecordType = \\\"attributes\\\" | \\\"characterData\\\" | \\\"childList\\\";\\ntype AAGUID = string;\\ntype BodyInit = any;\\ntype ByteString = string;\\ntype ConstrainBoolean = boolean | ConstrainBooleanParameters;\\ntype ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;\\ntype ConstrainDouble = number | ConstrainDoubleRange;\\ntype ConstrainLong = number | ConstrainLongRange;\\ntype CryptoOperationData = ArrayBufferView;\\ntype GLbitfield = number;\\ntype GLboolean = boolean;\\ntype GLbyte = number;\\ntype GLclampf = number;\\ntype GLenum = number;\\ntype GLfloat = number;\\ntype GLint = number;\\ntype GLintptr = number;\\ntype GLshort = number;\\ntype GLsizei = number;\\ntype GLsizeiptr = number;\\ntype GLubyte = number;\\ntype GLuint = number;\\ntype GLushort = number;\\ntype IDBKeyPath = string;\\ntype MSInboundPayload = MSVideoRecvPayload | MSAudioRecvPayload;\\ntype MSLocalClientEvent = MSLocalClientEventBase | MSAudioLocalClientEvent;\\ntype MSOutboundPayload = MSVideoSendPayload | MSAudioSendPayload;\\ntype RTCIceGatherCandidate = RTCIceCandidateDictionary | RTCIceCandidateComplete;\\ntype RTCTransport = RTCDtlsTransport | RTCSrtpSdesTransport;\\ntype RequestInfo = Request | string;\\ntype USVString = string;\\ntype payloadtype = number;\\ntype BufferSource = ArrayBuffer | ArrayBufferView;\\ntype ClientTypes = \\\"window\\\" | \\\"worker\\\" | \\\"sharedworker\\\" | \\\"all\\\";\\ntype AppendMode = \\\"segments\\\" | \\\"sequence\\\";\\ntype AudioContextLatencyCategory = \\\"balanced\\\" | \\\"interactive\\\" | \\\"playback\\\";\\ntype AudioContextState = \\\"suspended\\\" | \\\"running\\\" | \\\"closed\\\";\\ntype BinaryType = \\\"blob\\\" | \\\"arraybuffer\\\";\\ntype BiquadFilterType = \\\"lowpass\\\" | \\\"highpass\\\" | \\\"bandpass\\\" | \\\"lowshelf\\\" | \\\"highshelf\\\" | \\\"peaking\\\" | \\\"notch\\\" | \\\"allpass\\\";\\ntype CanPlayTypeResult = \\\"\\\" | \\\"maybe\\\" | \\\"probably\\\";\\ntype CanvasFillRule = \\\"nonzero\\\" | \\\"evenodd\\\";\\ntype ChannelCountMode = \\\"max\\\" | \\\"clamped-max\\\" | \\\"explicit\\\";\\ntype ChannelInterpretation = \\\"speakers\\\" | \\\"discrete\\\";\\ntype DisplayCaptureSurfaceType = \\\"monitor\\\" | \\\"window\\\" | \\\"application\\\" | \\\"browser\\\";\\ntype DistanceModelType = \\\"linear\\\" | \\\"inverse\\\" | \\\"exponential\\\";\\ntype EndOfStreamError = \\\"network\\\" | \\\"decode\\\";\\ntype ExpandGranularity = \\\"character\\\" | \\\"word\\\" | \\\"sentence\\\" | \\\"textedit\\\";\\ntype GamepadHand = \\\"\\\" | \\\"left\\\" | \\\"right\\\";\\ntype GamepadHapticActuatorType = \\\"vibration\\\";\\ntype GamepadInputEmulationType = \\\"mouse\\\" | \\\"keyboard\\\" | \\\"gamepad\\\";\\ntype GamepadMappingType = \\\"\\\" | \\\"standard\\\";\\ntype IDBCursorDirection = \\\"next\\\" | \\\"nextunique\\\" | \\\"prev\\\" | \\\"prevunique\\\";\\ntype IDBRequestReadyState = \\\"pending\\\" | \\\"done\\\";\\ntype IDBTransactionMode = \\\"readonly\\\" | \\\"readwrite\\\" | \\\"versionchange\\\";\\ntype KeyFormat = \\\"raw\\\" | \\\"spki\\\" | \\\"pkcs8\\\" | \\\"jwk\\\";\\ntype KeyType = \\\"public\\\" | \\\"private\\\" | \\\"secret\\\";\\ntype KeyUsage = \\\"encrypt\\\" | \\\"decrypt\\\" | \\\"sign\\\" | \\\"verify\\\" | \\\"deriveKey\\\" | \\\"deriveBits\\\" | \\\"wrapKey\\\" | \\\"unwrapKey\\\";\\ntype ListeningState = \\\"inactive\\\" | \\\"active\\\" | \\\"disambiguation\\\";\\ntype MSCredentialType = \\\"FIDO_2_0\\\";\\ntype MSIceAddrType = \\\"os\\\" | \\\"stun\\\" | \\\"turn\\\" | \\\"peer-derived\\\";\\ntype MSIceType = \\\"failed\\\" | \\\"direct\\\" | \\\"relay\\\";\\ntype MSStatsType = \\\"description\\\" | \\\"localclientevent\\\" | \\\"inbound-network\\\" | \\\"outbound-network\\\" | \\\"inbound-payload\\\" | \\\"outbound-payload\\\" | \\\"transportdiagnostics\\\";\\ntype MSTransportType = \\\"Embedded\\\" | \\\"USB\\\" | \\\"NFC\\\" | \\\"BT\\\";\\ntype MSWebViewPermissionState = \\\"unknown\\\" | \\\"defer\\\" | \\\"allow\\\" | \\\"deny\\\";\\ntype MSWebViewPermissionType = \\\"geolocation\\\" | \\\"unlimitedIndexedDBQuota\\\" | \\\"media\\\" | \\\"pointerlock\\\" | \\\"webnotifications\\\";\\ntype MediaDeviceKind = \\\"audioinput\\\" | \\\"audiooutput\\\" | \\\"videoinput\\\";\\ntype MediaKeyMessageType = \\\"license-request\\\" | \\\"license-renewal\\\" | \\\"license-release\\\" | \\\"individualization-request\\\";\\ntype MediaKeySessionType = \\\"temporary\\\" | \\\"persistent-license\\\" | \\\"persistent-release-message\\\";\\ntype MediaKeyStatus = \\\"usable\\\" | \\\"expired\\\" | \\\"output-downscaled\\\" | \\\"output-not-allowed\\\" | \\\"status-pending\\\" | \\\"internal-error\\\";\\ntype MediaKeysRequirement = \\\"required\\\" | \\\"optional\\\" | \\\"not-allowed\\\";\\ntype MediaStreamTrackState = \\\"live\\\" | \\\"ended\\\";\\ntype NavigationReason = \\\"up\\\" | \\\"down\\\" | \\\"left\\\" | \\\"right\\\";\\ntype NavigationType = \\\"navigate\\\" | \\\"reload\\\" | \\\"back_forward\\\" | \\\"prerender\\\";\\ntype NotificationDirection = \\\"auto\\\" | \\\"ltr\\\" | \\\"rtl\\\";\\ntype NotificationPermission = \\\"default\\\" | \\\"denied\\\" | \\\"granted\\\";\\ntype OscillatorType = \\\"sine\\\" | \\\"square\\\" | \\\"sawtooth\\\" | \\\"triangle\\\" | \\\"custom\\\";\\ntype OverSampleType = \\\"none\\\" | \\\"2x\\\" | \\\"4x\\\";\\ntype PanningModelType = \\\"equalpower\\\" | \\\"HRTF\\\";\\ntype PaymentComplete = \\\"success\\\" | \\\"fail\\\" | \\\"unknown\\\";\\ntype PaymentShippingType = \\\"shipping\\\" | \\\"delivery\\\" | \\\"pickup\\\";\\ntype PushEncryptionKeyName = \\\"p256dh\\\" | \\\"auth\\\";\\ntype PushPermissionState = \\\"granted\\\" | \\\"denied\\\" | \\\"prompt\\\";\\ntype RTCBundlePolicy = \\\"balanced\\\" | \\\"max-compat\\\" | \\\"max-bundle\\\";\\ntype RTCDegradationPreference = \\\"maintain-framerate\\\" | \\\"maintain-resolution\\\" | \\\"balanced\\\";\\ntype RTCDtlsRole = \\\"auto\\\" | \\\"client\\\" | \\\"server\\\";\\ntype RTCDtlsTransportState = \\\"new\\\" | \\\"connecting\\\" | \\\"connected\\\" | \\\"closed\\\";\\ntype RTCIceCandidateType = \\\"host\\\" | \\\"srflx\\\" | \\\"prflx\\\" | \\\"relay\\\";\\ntype RTCIceComponent = \\\"RTP\\\" | \\\"RTCP\\\";\\ntype RTCIceConnectionState = \\\"new\\\" | \\\"checking\\\" | \\\"connected\\\" | \\\"completed\\\" | \\\"failed\\\" | \\\"disconnected\\\" | \\\"closed\\\";\\ntype RTCIceGatherPolicy = \\\"all\\\" | \\\"nohost\\\" | \\\"relay\\\";\\ntype RTCIceGathererState = \\\"new\\\" | \\\"gathering\\\" | \\\"complete\\\";\\ntype RTCIceGatheringState = \\\"new\\\" | \\\"gathering\\\" | \\\"complete\\\";\\ntype RTCIceProtocol = \\\"udp\\\" | \\\"tcp\\\";\\ntype RTCIceRole = \\\"controlling\\\" | \\\"controlled\\\";\\ntype RTCIceTcpCandidateType = \\\"active\\\" | \\\"passive\\\" | \\\"so\\\";\\ntype RTCIceTransportPolicy = \\\"none\\\" | \\\"relay\\\" | \\\"all\\\";\\ntype RTCIceTransportState = \\\"new\\\" | \\\"checking\\\" | \\\"connected\\\" | \\\"completed\\\" | \\\"disconnected\\\" | \\\"closed\\\";\\ntype RTCSdpType = \\\"offer\\\" | \\\"pranswer\\\" | \\\"answer\\\";\\ntype RTCSignalingState = \\\"stable\\\" | \\\"have-local-offer\\\" | \\\"have-remote-offer\\\" | \\\"have-local-pranswer\\\" | \\\"have-remote-pranswer\\\" | \\\"closed\\\";\\ntype RTCStatsIceCandidatePairState = \\\"frozen\\\" | \\\"waiting\\\" | \\\"inprogress\\\" | \\\"failed\\\" | \\\"succeeded\\\" | \\\"cancelled\\\";\\ntype RTCStatsIceCandidateType = \\\"host\\\" | \\\"serverreflexive\\\" | \\\"peerreflexive\\\" | \\\"relayed\\\";\\ntype RTCStatsType = \\\"inboundrtp\\\" | \\\"outboundrtp\\\" | \\\"session\\\" | \\\"datachannel\\\" | \\\"track\\\" | \\\"transport\\\" | \\\"candidatepair\\\" | \\\"localcandidate\\\" | \\\"remotecandidate\\\";\\ntype ReadyState = \\\"closed\\\" | \\\"open\\\" | \\\"ended\\\";\\ntype ReferrerPolicy = \\\"\\\" | \\\"no-referrer\\\" | \\\"no-referrer-when-downgrade\\\" | \\\"origin-only\\\" | \\\"origin-when-cross-origin\\\" | \\\"unsafe-url\\\";\\ntype RequestCache = \\\"default\\\" | \\\"no-store\\\" | \\\"reload\\\" | \\\"no-cache\\\" | \\\"force-cache\\\";\\ntype RequestCredentials = \\\"omit\\\" | \\\"same-origin\\\" | \\\"include\\\";\\ntype RequestDestination = \\\"\\\" | \\\"document\\\" | \\\"sharedworker\\\" | \\\"subresource\\\" | \\\"unknown\\\" | \\\"worker\\\";\\ntype RequestMode = \\\"navigate\\\" | \\\"same-origin\\\" | \\\"no-cors\\\" | \\\"cors\\\";\\ntype RequestRedirect = \\\"follow\\\" | \\\"error\\\" | \\\"manual\\\";\\ntype RequestType = \\\"\\\" | \\\"audio\\\" | \\\"font\\\" | \\\"image\\\" | \\\"script\\\" | \\\"style\\\" | \\\"track\\\" | \\\"video\\\";\\ntype ResponseType = \\\"basic\\\" | \\\"cors\\\" | \\\"default\\\" | \\\"error\\\" | \\\"opaque\\\" | \\\"opaqueredirect\\\";\\ntype ScopedCredentialType = \\\"ScopedCred\\\";\\ntype ServiceWorkerState = \\\"installing\\\" | \\\"installed\\\" | \\\"activating\\\" | \\\"activated\\\" | \\\"redundant\\\";\\ntype TextTrackKind = \\\"subtitles\\\" | \\\"captions\\\" | \\\"descriptions\\\" | \\\"chapters\\\" | \\\"metadata\\\";\\ntype TextTrackMode = \\\"disabled\\\" | \\\"hidden\\\" | \\\"showing\\\";\\ntype Transport = \\\"usb\\\" | \\\"nfc\\\" | \\\"ble\\\";\\ntype VRDisplayEventReason = \\\"mounted\\\" | \\\"navigation\\\" | \\\"requested\\\" | \\\"unmounted\\\";\\ntype VREye = \\\"left\\\" | \\\"right\\\";\\ntype VideoFacingModeEnum = \\\"user\\\" | \\\"environment\\\" | \\\"left\\\" | \\\"right\\\";\\ntype VisibilityState = \\\"hidden\\\" | \\\"visible\\\" | \\\"prerender\\\" | \\\"unloaded\\\";\\ntype XMLHttpRequestResponseType = \\\"\\\" | \\\"arraybuffer\\\" | \\\"blob\\\" | \\\"document\\\" | \\\"json\\\" | \\\"text\\\";\\n\\n\\n/////////////////////////////\\n/// WorkerGlobalScope APIs\\n/////////////////////////////\\n// These are only available in a Web Worker\\ndeclare function importScripts(...urls: string[]): void;\\n\\n\\n\\n\\n/////////////////////////////\\n/// Windows Script Host APIS\\n/////////////////////////////\\n\\n\\ninterface ActiveXObject {\\n    new (s: string): any;\\n}\\ndeclare var ActiveXObject: ActiveXObject;\\n\\ninterface ITextWriter {\\n    Write(s: string): void;\\n    WriteLine(s: string): void;\\n    Close(): void;\\n}\\n\\ninterface TextStreamBase {\\n    /**\\n     * The column number of the current character position in an input stream.\\n     */\\n    Column: number;\\n\\n    /**\\n     * The current line number in an input stream.\\n     */\\n    Line: number;\\n\\n    /**\\n     * Closes a text stream.\\n     * It is not necessary to close standard streams; they close automatically when the process ends. If\\n     * you close a standard stream, be aware that any other pointers to that standard stream become invalid.\\n     */\\n    Close(): void;\\n}\\n\\ninterface TextStreamWriter extends TextStreamBase {\\n    /**\\n     * Sends a string to an output stream.\\n     */\\n    Write(s: string): void;\\n\\n    /**\\n     * Sends a specified number of blank lines (newline characters) to an output stream.\\n     */\\n    WriteBlankLines(intLines: number): void;\\n\\n    /**\\n     * Sends a string followed by a newline character to an output stream.\\n     */\\n    WriteLine(s: string): void;\\n}\\n\\ninterface TextStreamReader extends TextStreamBase {\\n    /**\\n     * Returns a specified number of characters from an input stream, starting at the current pointer position.\\n     * Does not return until the ENTER key is pressed.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     */\\n    Read(characters: number): string;\\n\\n    /**\\n     * Returns all characters from an input stream.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     */\\n    ReadAll(): string;\\n\\n    /**\\n     * Returns an entire line from an input stream.\\n     * Although this method extracts the newline character, it does not add it to the returned string.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     */\\n    ReadLine(): string;\\n\\n    /**\\n     * Skips a specified number of characters when reading from an input text stream.\\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\\n     * @param characters Positive number of characters to skip forward. (Backward skipping is not supported.)\\n     */\\n    Skip(characters: number): void;\\n\\n    /**\\n     * Skips the next line when reading from an input text stream.\\n     * Can only be used on a stream in reading mode, not writing or appending mode.\\n     */\\n    SkipLine(): void;\\n\\n    /**\\n     * Indicates whether the stream pointer position is at the end of a line.\\n     */\\n    AtEndOfLine: boolean;\\n\\n    /**\\n     * Indicates whether the stream pointer position is at the end of a stream.\\n     */\\n    AtEndOfStream: boolean;\\n}\\n\\ndeclare var WScript: {\\n    /**\\n     * Outputs text to either a message box (under WScript.exe) or the command console window followed by\\n     * a newline (under CScript.exe).\\n     */\\n    Echo(s: any): void;\\n\\n    /**\\n     * Exposes the write-only error output stream for the current script.\\n     * Can be accessed only while using CScript.exe.\\n     */\\n    StdErr: TextStreamWriter;\\n\\n    /**\\n     * Exposes the write-only output stream for the current script.\\n     * Can be accessed only while using CScript.exe.\\n     */\\n    StdOut: TextStreamWriter;\\n    Arguments: { length: number; Item(n: number): string; };\\n\\n    /**\\n     *  The full path of the currently running script.\\n     */\\n    ScriptFullName: string;\\n\\n    /**\\n     * Forces the script to stop immediately, with an optional exit code.\\n     */\\n    Quit(exitCode?: number): number;\\n\\n    /**\\n     * The Windows Script Host build version number.\\n     */\\n    BuildVersion: number;\\n\\n    /**\\n     * Fully qualified path of the host executable.\\n     */\\n    FullName: string;\\n\\n    /**\\n     * Gets/sets the script mode - interactive(true) or batch(false).\\n     */\\n    Interactive: boolean;\\n\\n    /**\\n     * The name of the host executable (WScript.exe or CScript.exe).\\n     */\\n    Name: string;\\n\\n    /**\\n     * Path of the directory containing the host executable.\\n     */\\n    Path: string;\\n\\n    /**\\n     * The filename of the currently running script.\\n     */\\n    ScriptName: string;\\n\\n    /**\\n     * Exposes the read-only input stream for the current script.\\n     * Can be accessed only while using CScript.exe.\\n     */\\n    StdIn: TextStreamReader;\\n\\n    /**\\n     * Windows Script Host version\\n     */\\n    Version: string;\\n\\n    /**\\n     * Connects a COM object's event sources to functions named with a given prefix, in the form prefix_event.\\n     */\\n    ConnectObject(objEventSource: any, strPrefix: string): void;\\n\\n    /**\\n     * Creates a COM object.\\n     * @param strProgiID\\n     * @param strPrefix Function names in the form prefix_event will be bound to this object's COM events.\\n     */\\n    CreateObject(strProgID: string, strPrefix?: string): any;\\n\\n    /**\\n     * Disconnects a COM object from its event sources.\\n     */\\n    DisconnectObject(obj: any): void;\\n\\n    /**\\n     * Retrieves an existing object with the specified ProgID from memory, or creates a new one from a file.\\n     * @param strPathname Fully qualified path to the file containing the object persisted to disk.\\n     *                       For objects in memory, pass a zero-length string.\\n     * @param strProgID\\n     * @param strPrefix Function names in the form prefix_event will be bound to this object's COM events.\\n     */\\n    GetObject(strPathname: string, strProgID?: string, strPrefix?: string): any;\\n\\n    /**\\n     * Suspends script execution for a specified length of time, then continues execution.\\n     * @param intTime Interval (in milliseconds) to suspend script execution.\\n     */\\n    Sleep(intTime: number): void;\\n};\\n\\n/**\\n * Represents an Automation SAFEARRAY\\n */\\ndeclare class SafeArray<T = any> {\\n    private constructor();\\n    private SafeArray_typekey: SafeArray<T>;\\n}\\n\\n/**\\n * Allows enumerating over a COM collection, which may not have indexed item access.\\n */\\ninterface Enumerator<T = any> {\\n    /**\\n     * Returns true if the current item is the last one in the collection, or the collection is empty,\\n     * or the current item is undefined.\\n     */\\n    atEnd(): boolean;\\n\\n    /**\\n     * Returns the current item in the collection\\n     */\\n    item(): T;\\n\\n    /**\\n     * Resets the current item in the collection to the first item. If there are no items in the collection,\\n     * the current item is set to undefined.\\n     */\\n    moveFirst(): void;\\n\\n    /**\\n     * Moves the current item to the next item in the collection. If the enumerator is at the end of\\n     * the collection or the collection is empty, the current item is set to undefined.\\n     */\\n    moveNext(): void;\\n}\\n\\ninterface EnumeratorConstructor {\\n    new <T = any>(safearray: SafeArray<T>): Enumerator<T>;\\n    new <T = any>(collection: { Item(index: any): T }): Enumerator<T>;\\n    new <T = any>(collection: any): Enumerator<T>;\\n}\\n\\ndeclare var Enumerator: EnumeratorConstructor;\\n\\n/**\\n * Enables reading from a COM safe array, which might have an alternate lower bound, or multiple dimensions.\\n */\\ninterface VBArray<T = any> {\\n    /**\\n     * Returns the number of dimensions (1-based).\\n     */\\n    dimensions(): number;\\n\\n    /**\\n     * Takes an index for each dimension in the array, and returns the item at the corresponding location.\\n     */\\n    getItem(dimension1Index: number, ...dimensionNIndexes: number[]): T;\\n\\n    /**\\n     * Returns the smallest available index for a given dimension.\\n     * @param dimension 1-based dimension (defaults to 1)\\n     */\\n    lbound(dimension?: number): number;\\n\\n    /**\\n     * Returns the largest available index for a given dimension.\\n     * @param dimension 1-based dimension (defaults to 1)\\n     */\\n    ubound(dimension?: number): number;\\n\\n    /**\\n     * Returns a Javascript array with all the elements in the VBArray. If there are multiple dimensions,\\n     * each successive dimension is appended to the end of the array.\\n     * Example: [[1,2,3],[4,5,6]] becomes [1,2,3,4,5,6]\\n     */\\n    toArray(): T[];\\n}\\n\\ninterface VBArrayConstructor {\\n    new <T = any>(safeArray: SafeArray<T>): VBArray<T>;\\n}\\n\\ndeclare var VBArray: VBArrayConstructor;\\n\\n/**\\n * Automation date (VT_DATE)\\n */\\ndeclare class VarDate {\\n    private constructor();\\n    private VarDate_typekey: VarDate;\\n}\\n\\ninterface DateConstructor {\\n    new (vd: VarDate): Date;\\n}\\n\\ninterface Date {\\n    getVarDate: () => VarDate;\\n}\\n\";\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-ts.js?");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/typescript/tsWorker.js":
/*!***************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/typescript/tsWorker.js ***!
  \***************************************************************************/
/*! exports provided: TypeScriptWorker, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeScriptWorker\", function() { return TypeScriptWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/typescriptServices.js */ \"./node_modules/monaco-editor/esm/vs/language/typescript/lib/typescriptServices.js\");\n/* harmony import */ var _lib_lib_ts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/lib-ts.js */ \"./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-ts.js\");\n/* harmony import */ var _lib_lib_es6_ts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/lib-es6-ts.js */ \"./node_modules/monaco-editor/esm/vs/language/typescript/lib/lib-es6-ts.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar Promise = monaco.Promise;\nvar DEFAULT_LIB = {\n    NAME: 'defaultLib:lib.d.ts',\n    CONTENTS: _lib_lib_ts_js__WEBPACK_IMPORTED_MODULE_1__[\"contents\"]\n};\nvar ES6_LIB = {\n    NAME: 'defaultLib:lib.es6.d.ts',\n    CONTENTS: _lib_lib_es6_ts_js__WEBPACK_IMPORTED_MODULE_2__[\"contents\"]\n};\nvar TypeScriptWorker = /** @class */ (function () {\n    function TypeScriptWorker(ctx, createData) {\n        this._extraLibs = Object.create(null);\n        this._languageService = _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"createLanguageService\"](this);\n        this._ctx = ctx;\n        this._compilerOptions = createData.compilerOptions;\n        this._extraLibs = createData.extraLibs;\n    }\n    // --- language service host ---------------\n    TypeScriptWorker.prototype.getCompilationSettings = function () {\n        return this._compilerOptions;\n    };\n    TypeScriptWorker.prototype.getScriptFileNames = function () {\n        var models = this._ctx.getMirrorModels().map(function (model) { return model.uri.toString(); });\n        return models.concat(Object.keys(this._extraLibs));\n    };\n    TypeScriptWorker.prototype._getModel = function (fileName) {\n        var models = this._ctx.getMirrorModels();\n        for (var i = 0; i < models.length; i++) {\n            if (models[i].uri.toString() === fileName) {\n                return models[i];\n            }\n        }\n        return null;\n    };\n    TypeScriptWorker.prototype.getScriptVersion = function (fileName) {\n        var model = this._getModel(fileName);\n        if (model) {\n            return model.version.toString();\n        }\n        else if (this.isDefaultLibFileName(fileName) || fileName in this._extraLibs) {\n            // extra lib and default lib are static\n            return '1';\n        }\n    };\n    TypeScriptWorker.prototype.getScriptSnapshot = function (fileName) {\n        var text;\n        var model = this._getModel(fileName);\n        if (model) {\n            // a true editor model\n            text = model.getValue();\n        }\n        else if (fileName in this._extraLibs) {\n            // static extra lib\n            text = this._extraLibs[fileName];\n        }\n        else if (fileName === DEFAULT_LIB.NAME) {\n            text = DEFAULT_LIB.CONTENTS;\n        }\n        else if (fileName === ES6_LIB.NAME) {\n            text = ES6_LIB.CONTENTS;\n        }\n        else {\n            return;\n        }\n        return {\n            getText: function (start, end) { return text.substring(start, end); },\n            getLength: function () { return text.length; },\n            getChangeRange: function () { return undefined; }\n        };\n    };\n    TypeScriptWorker.prototype.getScriptKind = function (fileName) {\n        var suffix = fileName.substr(fileName.lastIndexOf('.') + 1);\n        switch (suffix) {\n            case 'ts': return _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptKind\"].TS;\n            case 'tsx': return _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptKind\"].TSX;\n            case 'js': return _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptKind\"].JS;\n            case 'jsx': return _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptKind\"].JSX;\n            default: return this.getCompilationSettings().allowJs\n                ? _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptKind\"].JS\n                : _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptKind\"].TS;\n        }\n    };\n    TypeScriptWorker.prototype.getCurrentDirectory = function () {\n        return '';\n    };\n    TypeScriptWorker.prototype.getDefaultLibFileName = function (options) {\n        // TODO@joh support lib.es7.d.ts\n        return options.target <= _lib_typescriptServices_js__WEBPACK_IMPORTED_MODULE_0__[\"ScriptTarget\"].ES5 ? DEFAULT_LIB.NAME : ES6_LIB.NAME;\n    };\n    TypeScriptWorker.prototype.isDefaultLibFileName = function (fileName) {\n        return fileName === this.getDefaultLibFileName(this._compilerOptions);\n    };\n    // --- language features\n    TypeScriptWorker.prototype.getSyntacticDiagnostics = function (fileName) {\n        var diagnostics = this._languageService.getSyntacticDiagnostics(fileName);\n        diagnostics.forEach(function (diag) { return diag.file = undefined; }); // diag.file cannot be JSON'yfied\n        return Promise.as(diagnostics);\n    };\n    TypeScriptWorker.prototype.getSemanticDiagnostics = function (fileName) {\n        var diagnostics = this._languageService.getSemanticDiagnostics(fileName);\n        diagnostics.forEach(function (diag) { return diag.file = undefined; }); // diag.file cannot be JSON'yfied\n        return Promise.as(diagnostics);\n    };\n    TypeScriptWorker.prototype.getCompilerOptionsDiagnostics = function (fileName) {\n        var diagnostics = this._languageService.getCompilerOptionsDiagnostics();\n        diagnostics.forEach(function (diag) { return diag.file = undefined; }); // diag.file cannot be JSON'yfied\n        return Promise.as(diagnostics);\n    };\n    TypeScriptWorker.prototype.getCompletionsAtPosition = function (fileName, position) {\n        return Promise.as(this._languageService.getCompletionsAtPosition(fileName, position, undefined));\n    };\n    TypeScriptWorker.prototype.getCompletionEntryDetails = function (fileName, position, entry) {\n        return Promise.as(this._languageService.getCompletionEntryDetails(fileName, position, entry, undefined, undefined));\n    };\n    TypeScriptWorker.prototype.getSignatureHelpItems = function (fileName, position) {\n        return Promise.as(this._languageService.getSignatureHelpItems(fileName, position));\n    };\n    TypeScriptWorker.prototype.getQuickInfoAtPosition = function (fileName, position) {\n        return Promise.as(this._languageService.getQuickInfoAtPosition(fileName, position));\n    };\n    TypeScriptWorker.prototype.getOccurrencesAtPosition = function (fileName, position) {\n        return Promise.as(this._languageService.getOccurrencesAtPosition(fileName, position));\n    };\n    TypeScriptWorker.prototype.getDefinitionAtPosition = function (fileName, position) {\n        return Promise.as(this._languageService.getDefinitionAtPosition(fileName, position));\n    };\n    TypeScriptWorker.prototype.getReferencesAtPosition = function (fileName, position) {\n        return Promise.as(this._languageService.getReferencesAtPosition(fileName, position));\n    };\n    TypeScriptWorker.prototype.getNavigationBarItems = function (fileName) {\n        return Promise.as(this._languageService.getNavigationBarItems(fileName));\n    };\n    TypeScriptWorker.prototype.getFormattingEditsForDocument = function (fileName, options) {\n        return Promise.as(this._languageService.getFormattingEditsForDocument(fileName, options));\n    };\n    TypeScriptWorker.prototype.getFormattingEditsForRange = function (fileName, start, end, options) {\n        return Promise.as(this._languageService.getFormattingEditsForRange(fileName, start, end, options));\n    };\n    TypeScriptWorker.prototype.getFormattingEditsAfterKeystroke = function (fileName, postion, ch, options) {\n        return Promise.as(this._languageService.getFormattingEditsAfterKeystroke(fileName, postion, ch, options));\n    };\n    TypeScriptWorker.prototype.getEmitOutput = function (fileName) {\n        return Promise.as(this._languageService.getEmitOutput(fileName));\n    };\n    return TypeScriptWorker;\n}());\n\nfunction create(ctx, createData) {\n    return new TypeScriptWorker(ctx, createData);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/tsWorker.js?");

/***/ })

}]);